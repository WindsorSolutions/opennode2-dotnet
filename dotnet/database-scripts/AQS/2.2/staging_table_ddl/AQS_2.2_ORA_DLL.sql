/******************************************************************************************************************************
 ** ObjectName: AQS_2.1_ORA_DLL.sql
 **
 ** Author: Windsor Solutions, Inc.
 **
 ** Company Name: Windsor Solutions, Inc
 **
 ** Description:  This procedure will write an audit record when called.
 **
 ** Notes:  Run drops statements only if schema already exists, Otherwise, just run the create statements.
 **
 **
 ** Revision History:      
 ** ----------------------------------------------------------------------------------------------------------------------------
 **  Date         Name        Description
 ** ----------------------------------------------------------------------------------------------------------------------------
 ** 01/01/2010  Windsor       Original
 ** 07/07/2010  KJames        Added the drop statements
 ** 07/07/2010  KJames        Added facility data elements
 ** 07/07/2010  KJames        Added monitoring data elements
 ** 07/09/2010  KJames        Added the following tables:
 **                              1.  AQS_MONITOR_SAMPLE_PRD
 **                              2.  AQS_MONITOR_OBJ_INFO
 **                              3.  AQS_MONITOR_SAMPLE_SCHD
 ** 07/30/2010  KJames        Removed Nevada specific columns on the AQS_RAW_RES table.
 ** 08/25/2010  KJames        Added ACTION_CD to the following tables:
 **                              1. AQS_MONITOR_ID
 **                              2.  AQS_SITE_ID
 **                              3.  AQS_MONITOR_OBJ_INFO
 **                              4.  AQS_MONITOR_SAMPLE_SCHD
 ** 08/25/2010  KJames       Modified column name APPLICABLE_HAAQS_IND to APPLICABLE_NAAQS_IND
 ** 08/25/2010  KJames       Modified all DATE fields to VARCHAR2(10) for 'YYYY-MM-DD' formatting.
 ** 08/25/2010  KJames       Added column MONITOR_OBJ_ID to AQS_MONITOR table.
 ** 08/27/2010  KJames       Modified columns URBAN_AREA_CODE, AQCR_CD, HORIZ_COL_MTHD,
 **                          ACTUAL_MTHD_CD, INDICATED_METHOD_CODE from integer to VARCHAR. 
 ** 09/01/2010  KJames       New Hampshire deployment versions.                        
 ** 
 ******************************************************************************************************************************/

/*  DROP STATEMENTS
    DROP STATEMENTS
    DROP STATEMENTS

ALTER TABLE AQS_TRANS_PROTOCOL
 DROP CONSTRAINT FK_MONITOR_ID
/

ALTER TABLE AQS_RES_QUAL_CD
 DROP CONSTRAINT FK_RAW_RES
/

ALTER TABLE AQS_RAW_RES
 DROP CONSTRAINT FK_TRANS_PROTOCOL
/

ALTER TABLE AQS_RAW_PREC_INFO
 DROP CONSTRAINT FK_TRANS_PROTOCOL_PREC_INFO
/

ALTER TABLE AQS_RAW_COMP_INFO
 DROP CONSTRAINT FK_TRANS_PROTOCOL_COMP_INFO
/

ALTER TABLE AQS_RAW_ACCU_INFO
 DROP CONSTRAINT FK_TRANS_PROTOCOL_ACCU_INFO
/

ALTER TABLE AQS_MONITOR_SAMPLE_SCHD
 DROP CONSTRAINT FK_MONITOR_SAMPLE_SCHD
/

ALTER TABLE AQS_MONITOR_SAMPLE_PRD
 DROP CONSTRAINT FK_MONITOR_SAMPLE_ID
/

ALTER TABLE AQS_MONITOR_OBJ_INFO
 DROP CONSTRAINT FK_MONITOR_OBJ_INFO_ID
/

ALTER TABLE AQS_MONITOR_ID
 DROP CONSTRAINT FK_SITE_ID
/

ALTER TABLE AQS_COMP_RES_QUAL_CD
 DROP CONSTRAINT FK_COMP_INFO
/

ALTER TABLE AQS_BLANK_RES_QUAL_CD
 DROP CONSTRAINT FK_BLANK_INFO
/

ALTER TABLE AQS_BLANK_INFO
 DROP CONSTRAINT FK_TRANS_PROTOCOL_BLANK_INFO
/

ALTER TABLE AQS_ANNUAL_SUM_INFO
 DROP CONSTRAINT FK_TRANS_PROTOCOL_ANNUAL_SUM
/

ALTER TABLE AQS_TRANS_PROTOCOL
 DROP CONSTRAINT PK_TRANS_PROTOCOL
/

ALTER TABLE AQS_SITE_ID
 DROP CONSTRAINT PK_SITE_ID
/

ALTER TABLE AQS_RES_QUAL_CD
 DROP CONSTRAINT PK_RES_QUAL_CD
/

ALTER TABLE AQS_RAW_RES
 DROP CONSTRAINT PK_RAW_RES
/

ALTER TABLE AQS_RAW_PREC_INFO
 DROP CONSTRAINT PK_RAW_PREC_INFO
/

ALTER TABLE AQS_RAW_COMP_INFO
 DROP CONSTRAINT PK_RAW_COMP_INFO
/

ALTER TABLE AQS_RAW_ACCU_INFO
 DROP CONSTRAINT PK_RAW_ACCU_INFO
/

ALTER TABLE AQS_MONITOR_SAMPLE_SCHD
 DROP CONSTRAINT PK_MONITOR_SAMPLE_SCHD
/

ALTER TABLE AQS_MONITOR_SAMPLE_PRD
 DROP CONSTRAINT PK_MONITOR_SAMPLE_PRD
/

ALTER TABLE AQS_MONITOR_OBJ_INFO
 DROP CONSTRAINT PK_MONITOR_OBJ_INFO
/

ALTER TABLE AQS_MONITOR_ID
 DROP CONSTRAINT PK_MONITOR_ID
/

ALTER TABLE AQS_METADATA
 DROP CONSTRAINT PK_METADATA
/

ALTER TABLE AQS_COMP_RES_QUAL_CD
 DROP CONSTRAINT PK_COMP_RES_QUAL_CD
/

ALTER TABLE AQS_BLANK_RES_QUAL_CD
 DROP CONSTRAINT PK_BLANK_RES_QUAL_CD
/

ALTER TABLE AQS_BLANK_INFO
 DROP CONSTRAINT PK_BLANK_INFO
/

ALTER TABLE AQS_ANNUAL_SUM_INFO
 DROP CONSTRAINT PK_ANNUAL_SUM_INFO
/

DROP TABLE AQS_TRANS_PROTOCOL
/

DROP TABLE AQS_SITE_ID
/

DROP TABLE AQS_RES_QUAL_CD
/

DROP TABLE AQS_RAW_RES
/

DROP TABLE AQS_RAW_PREC_INFO
/

DROP TABLE AQS_RAW_COMP_INFO
/

DROP TABLE AQS_RAW_ACCU_INFO
/

DROP TABLE AQS_MONITOR_SAMPLE_SCHD
/

DROP TABLE AQS_MONITOR_SAMPLE_PRD
/

DROP TABLE AQS_MONITOR_OBJ_INFO
/

DROP TABLE AQS_MONITOR_ID
/

DROP TABLE AQS_METADATA
/

DROP TABLE AQS_COMP_RES_QUAL_CD
/

DROP TABLE AQS_BLANK_RES_QUAL_CD
/

DROP TABLE AQS_BLANK_INFO
/

DROP TABLE AQS_ANNUAL_SUM_INFO
/

DROP SEQUENCE NEXT_ID
/

*/

CREATE TABLE AQS_METADATA ( 
 AQS_SITE_ID_PK        NUMBER NOT NULL,
 AQS_MONITOR_ID_PK     NUMBER NOT NULL,
 AQS_TRANS_PROTOCOL_PK NUMBER NOT NULL,
 AQS_RAW_RES_PK        NUMBER NOT NULL,
 FACILITY_SITE_ID      VARCHAR2(4) NOT NULL,
 ACTION_CD             VARCHAR2(1) NOT NULL,
 SMPL_COLL_START_DATE  VARCHAR2(10) NOT NULL,
 COUNTY_CD             VARCHAR2(3) NULL 
 )
/

CREATE TABLE AQS_MONITOR_ID ( 
 AQS_MONITOR_ID_PK    NUMBER NOT NULL,
 AQS_SITE_ID_FK       NUMBER NOT NULL,
 ACTION_CD            VARCHAR2(1) NULL,         
 SUBST_ID             VARCHAR2(5) NOT NULL,
 SUBST_OCCURENCE_CD   NUMBER(2,0) NOT NULL,
 PROJECT_CLASS_CD     VARCHAR2(02) NULL,
 DOMINANT_SCR_TXT     VARCHAR2(06) NULL,
 MEASUREMENT_SCALE_ID VARCHAR2(20) NULL,
 OPEN_PATH_ID         NUMBER NULL,
 PROBE_LOC_CODE       VARCHAR2(20) NULL,
 PROBE_HEIGHT_MSR     NUMBER(10,5) NULL,
 HORIZ_DIST_MSR       NUMBER(10,5) NULL,
 VERT_DIST_MSR        NUMBER(10,5) NULL,
 SURROGATE_IND        VARCHAR2(01) NULL,
 UNRESTR_AIR_FLOW_IND VARCHAR2(01) NULL,
 SAMPLE_RESID_TIME    NUMBER(10,2) NULL,
 WORST_SITE_TYPE_CD   NUMBER NULL, 
 APPLICABLE_NAAQS_IND VARCHAR2(01) NULL,
 SPACIAL_AVG_IND      VARCHAR2(01) NULL,
 SCHED_EXEMPT_IND     VARCHAR2(01) NULL,
 CMNTY_MONITOR_ZONE   NUMBER(04) NULL,
 MONITOR_CLOSE_DATE   VARCHAR2(10) NULL)
/

CREATE TABLE AQS_RAW_RES ( 
 AQS_RAW_RES_PK        NUMBER NOT NULL,
 AQS_TRANS_PROTOCOL_FK NUMBER NOT NULL,
 ACTION_CD             VARCHAR2(1) NOT NULL,
 SMPL_COLL_START_DATE  VARCHAR2(10) NOT NULL,
 SMPL_COLL_START_TIME  VARCHAR2(8) NOT NULL,
 UNCERTAINTY_VALUE     NUMBER(11,5) NULL,
 NULL_DATA_CD          VARCHAR2(2) NULL,
 DATA_VALIDITY_CD      VARCHAR2(1) NULL,
 DATA_APPROVAL_IND     VARCHAR2(1) NULL,
 --NV_DEP_WIND_SPEED     NUMBER(10,5) NULL,
 --NV_DEP_WIND_DIRECTION NUMBER(10,5) NULL,
 MEASURE_VALUE         NUMBER(11,5) NULL 
 )
/

CREATE TABLE AQS_RES_QUAL_CD ( 
 AQS_RES_QUAL_CD_PK NUMBER NOT NULL,
 AQS_RAW_RES_FK     NUMBER NOT NULL,
 RES_QUAL_CD        VARCHAR2(2) NULL 
 )
/

CREATE TABLE AQS_SITE_ID ( 
 AQS_SITE_ID_PK   NUMBER NOT NULL,
 ACTION_CD        VARCHAR2(1) NULL,
 FACILITY_SITE_ID VARCHAR2(4) NOT NULL,
 STATE_CD         VARCHAR2(2) NULL,
 NON_STATE_CD     VARCHAR2(2) NULL,
 COUNTY_CD        VARCHAR2(3) NULL,
 TRIBAL_CD        VARCHAR2(3) NULL,
 -- Basic Site Information
   -- Facility Site Details
 SUPPORT_AGENCY_CD VARCHAR2(04) NULL,
 LOC_ADDR_TEXT VARCHAR2(100) NULL,
 CITY_CD VARCHAR2(10) NULL,
 POSTAL_CODE VARCHAR2(10) NULL,
 LOCAL_ID VARCHAR2(40) NULL,
 LOCAL_NAME VARCHAR2(70) NULL,
 LOCAL_REGION_CD VARCHAR2(08) NULL,
 URBAN_AREA_CD VARCHAR2(04) NULL,
 AQCR_CD VARCHAR2(03) NULL,
 LAND_USE_ID VARCHAR2(25) NULL,
 LOC_SETTING_ID  VARCHAR2(25) NULL,
 SITE_EST_DATE VARCHAR2(10) NULL,
 SITE_TERM_DATE  VARCHAR2(10) NULL,
 CONG_DIST_CODE NUMBER(02) NULL,
 CENSUS_BLOCK_CD  NUMBER(04) NULL,
 CENSUS_BLOCK_GRP_CD  NUMBER(01) NULL,
 CENSUS_TRACT_CD  NUMBER(06) NULL,
 CLASS_AREA_CD  NUMBER(06) NULL,
 HQ_EVAL_DATE VARCHAR2(10)  NULL,
 REG_EVAL_DATE VARCHAR2(10)  NULL,
 DIR_FROM_CITY_CD VARCHAR2(03) NULL,
 DIST_FROM_CITY_MSR NUMBER(10,5) NULL,
 MET_SITE_ID VARCHAR2(09) NULL,
 MET_SITE_TYPE_CD VARCHAR2(25) NULL,
 DIST_TO_MET_SITE_MSR NUMBER(10,5) NULL,
 DIR_TO_MET_SITE_CODE VARCHAR2(03) NULL,
   --  Geographic Monitoring
 LATITUDE NUMBER(11,5) NULL,
 LONGITUDE NUMBER(11,5) NULL, 
 UTM_ZONE_CD NUMBER(02) NULL,
 UTM_EASTING NUMBER(10,2) NULL,
 UTM_NORTHING NUMBER(10,2) NULL,
 HORIZ_COL_MTHD VARCHAR2(03) NULL,
 HORIZ_REF_DATUM VARCHAR2(120) NULL,
 SRC_MAP_SCALE_NBR NUMBER NULL,
 HORIZONTAL_ACCURACY NUMBER(10,5) NULL,
 VERTICAL_MEASURE  NUMBER(10,5) NULL,
 VERTICAL_MTHD_CD VARCHAR2(03) NULL,
 VERTICAL_DATUM_ID  VARCHAR2(60) NULL,
 VERTICAL_ACCR_MSR NUMBER(10,5) NULL,
 TIME_ZONE_NAME VARCHAR2(25) NULL ) 
/

CREATE TABLE AQS_TRANS_PROTOCOL ( 
 AQS_TRANS_PROTOCOL_PK NUMBER NOT NULL,
 AQS_MONITOR_ID_FK     NUMBER NOT NULL,
 COMPOSITE_TYPE_ID     VARCHAR2(9) NULL,
 DURATION_CD           VARCHAR2(1) NULL,
 FREQUENCY_CD          VARCHAR2(2) NULL,
 METHOD_ID_CD          VARCHAR2(3) NULL,
 MEASURE_UNIT_CD       VARCHAR2(3) NULL,
 ALTERNATE_MDL_VALUE   NUMBER(10,5) NULL 
 )
/

CREATE TABLE AQS_MONITOR_SAMPLE_PRD ( 
 AQS_MONITOR_SAMPLE_PRD_PK NUMBER NOT NULL,
 AQS_MONITOR_ID_FK         NUMBER NOT NULL,
 SAMPLING_BEGIN_DATE       VARCHAR2(10) NOT NULL,
 SAMPLING_END_DATE         VARCHAR2(10) NULL
 )
/

CREATE TABLE AQS_MONITOR_OBJ_INFO ( 
 AQS_MONITOR_OBJ_INFO_PK NUMBER NOT NULL,
 AQS_MONITOR_ID_FK       NUMBER NOT NULL,
 MONITOR_OBJ_ID          VARCHAR2(50) NOT NULL,
 ACTION_CD               VARCHAR2(01) NULL,
 URBAN_AREA_REP_CD       VARCHAR2(04) NULL,
 METRO_SA_REP_CD         VARCHAR2(04) NULL,
 COVE_BS_REP_CD          VARCHAR2(04) NULL,
 COMBINED_SA_REP_CD      VARCHAR2(04) NULL
 )
/

CREATE TABLE AQS_MONITOR_SAMPLE_SCHD ( 
 AQS_MONITOR_SAMPLE_SCHD_PK NUMBER NOT NULL,
 AQS_MONITOR_ID_FK          NUMBER NOT NULL,
 ACTION_CD                  VARCHAR2(1),
 FREQUENCY_CD               VARCHAR2(02) NULL,
 RCF_BEGIN_DATE             VARCHAR2(10) NOT NULL,
 RCF_END_DATE               VARCHAR2(10) NULL,
 RCF_JAN_CD                 VARCHAR2(01) NULL,
 RCF_FEB_CD                 VARCHAR2(01) NULL,
 RCF_MAR_CD                 VARCHAR2(01) NULL,
 RCF_APR_CD                 VARCHAR2(01) NULL,
 RCR_MAY_CD                 VARCHAR2(01) NULL,
 RCR_JUN_CD                 VARCHAR2(01) NULL,
 RCR_JUL_CD                 VARCHAR2(01) NULL,
 RCR_AUG_CD                 VARCHAR2(01) NULL,
 RCR_SEP_CD                 VARCHAR2(01) NULL,
 RCR_OCT_CD                 VARCHAR2(01) NULL,
 RCR_NOV_CD                 VARCHAR2(01) NULL,
 RCR_DEC_CD                 VARCHAR2(01) NULL
 )
/

CREATE UNIQUE INDEX PK_METADATA
 ON AQS_METADATA(AQS_TRANS_PROTOCOL_PK, AQS_SITE_ID_PK, SMPL_COLL_START_DATE, AQS_MONITOR_ID_PK, AQS_RAW_RES_PK, ACTION_CD)
/

CREATE UNIQUE INDEX PK_MONITOR_ID
 ON AQS_MONITOR_ID(AQS_MONITOR_ID_PK)
/

CREATE UNIQUE INDEX PK_RAW_RES
 ON AQS_RAW_RES(AQS_RAW_RES_PK)
/

CREATE UNIQUE INDEX PK_RES_QUAL_CD
 ON AQS_RES_QUAL_CD(AQS_RES_QUAL_CD_PK)
/

CREATE UNIQUE INDEX PK_SITE_ID
 ON AQS_SITE_ID(AQS_SITE_ID_PK)
/

CREATE UNIQUE INDEX PK_TRANS_PROTOCOL
 ON AQS_TRANS_PROTOCOL(AQS_TRANS_PROTOCOL_PK)
/

CREATE UNIQUE INDEX PK_MONITOR_SAMPLE_PRD
 ON AQS_MONITOR_SAMPLE_PRD(AQS_MONITOR_SAMPLE_PRD_PK)
/

CREATE UNIQUE INDEX PK_MONITOR_OBJ_INFO
 ON AQS_MONITOR_OBJ_INFO(AQS_MONITOR_OBJ_INFO_PK)
/

CREATE UNIQUE INDEX PK_MONITOR_SAMPLE_SCHD
 ON AQS_MONITOR_SAMPLE_SCHD(AQS_MONITOR_SAMPLE_SCHD_PK)
/

ALTER TABLE AQS_MONITOR_SAMPLE_PRD
 ADD ( CONSTRAINT PK_MONITOR_SAMPLE_PRD
 PRIMARY KEY (AQS_MONITOR_SAMPLE_PRD_PK)
 NOT DEFERRABLE INITIALLY IMMEDIATE )
/

ALTER TABLE AQS_MONITOR_OBJ_INFO
 ADD ( CONSTRAINT PK_MONITOR_OBJ_INFO
 PRIMARY KEY (AQS_MONITOR_OBJ_INFO_PK)
 NOT DEFERRABLE INITIALLY IMMEDIATE )
/

ALTER TABLE AQS_MONITOR_SAMPLE_SCHD
 ADD ( CONSTRAINT PK_MONITOR_SAMPLE_SCHD
 PRIMARY KEY (AQS_MONITOR_SAMPLE_SCHD_PK)
 NOT DEFERRABLE INITIALLY IMMEDIATE )
/

ALTER TABLE AQS_METADATA
 ADD ( CONSTRAINT PK_METADATA
 PRIMARY KEY (AQS_TRANS_PROTOCOL_PK, AQS_SITE_ID_PK, SMPL_COLL_START_DATE, AQS_MONITOR_ID_PK, AQS_RAW_RES_PK, ACTION_CD)
 NOT DEFERRABLE INITIALLY IMMEDIATE )
/

ALTER TABLE AQS_MONITOR_ID
 ADD ( CONSTRAINT PK_MONITOR_ID
 PRIMARY KEY (AQS_MONITOR_ID_PK)
 NOT DEFERRABLE INITIALLY IMMEDIATE )
/

ALTER TABLE AQS_RAW_RES
 ADD ( CONSTRAINT PK_RAW_RES
 PRIMARY KEY (AQS_RAW_RES_PK)
 NOT DEFERRABLE INITIALLY IMMEDIATE )
/

ALTER TABLE AQS_RES_QUAL_CD
 ADD ( CONSTRAINT PK_RES_QUAL_CD
 PRIMARY KEY (AQS_RES_QUAL_CD_PK)
 NOT DEFERRABLE INITIALLY IMMEDIATE )
/

ALTER TABLE AQS_SITE_ID
 ADD ( CONSTRAINT PK_SITE_ID
 PRIMARY KEY (AQS_SITE_ID_PK)
 NOT DEFERRABLE INITIALLY IMMEDIATE )
/

ALTER TABLE AQS_TRANS_PROTOCOL
 ADD ( CONSTRAINT PK_TRANS_PROTOCOL
 PRIMARY KEY (AQS_TRANS_PROTOCOL_PK)
 NOT DEFERRABLE INITIALLY IMMEDIATE )
/

ALTER TABLE AQS_MONITOR_ID
 ADD ( CONSTRAINT FK_SITE_ID
 FOREIGN KEY(AQS_SITE_ID_FK)
 REFERENCES AQS_SITE_ID(AQS_SITE_ID_PK)
 ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/

ALTER TABLE AQS_RAW_RES
 ADD ( CONSTRAINT FK_TRANS_PROTOCOL
 FOREIGN KEY(AQS_TRANS_PROTOCOL_FK)
 REFERENCES AQS_TRANS_PROTOCOL(AQS_TRANS_PROTOCOL_PK)
 ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/

ALTER TABLE AQS_RES_QUAL_CD
 ADD ( CONSTRAINT FK_RAW_RES
 FOREIGN KEY(AQS_RAW_RES_FK)
 REFERENCES AQS_RAW_RES(AQS_RAW_RES_PK)
 ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/

ALTER TABLE AQS_TRANS_PROTOCOL
 ADD ( CONSTRAINT FK_MONITOR_ID
 FOREIGN KEY(AQS_MONITOR_ID_FK)
 REFERENCES AQS_MONITOR_ID(AQS_MONITOR_ID_PK)
 ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/

ALTER TABLE AQS_MONITOR_SAMPLE_PRD
 ADD ( CONSTRAINT FK_MONITOR_SAMPLE_ID
 FOREIGN KEY(AQS_MONITOR_ID_FK)
 REFERENCES AQS_MONITOR_ID(AQS_MONITOR_ID_PK)
 ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/

ALTER TABLE AQS_MONITOR_OBJ_INFO
 ADD ( CONSTRAINT FK_MONITOR_OBJ_INFO_ID
 FOREIGN KEY(AQS_MONITOR_ID_FK)
 REFERENCES AQS_MONITOR_ID(AQS_MONITOR_ID_PK)
 ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/

ALTER TABLE AQS_MONITOR_SAMPLE_SCHD
 ADD ( CONSTRAINT FK_MONITOR_SAMPLE_SCHD
 FOREIGN KEY(AQS_MONITOR_ID_FK)
 REFERENCES AQS_MONITOR_ID(AQS_MONITOR_ID_PK)
 ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/

CREATE SEQUENCE NEXT_ID
 START WITH     1000
 INCREMENT BY   1
 NOCACHE
 NOCYCLE;
/

CREATE OR REPLACE TRIGGER INSERT_AQS_MONITOR_ID_PK
BEFORE INSERT ON AQS_MONITOR_ID
FOR EACH ROW

DECLARE
  NEXT_PK_ID INTEGER;
BEGIN
  SELECT NEXT_ID.NEXTVAL INTO NEXT_PK_ID FROM DUAL;
  :NEW.AQS_MONITOR_ID_PK := NEXT_PK_ID;
END;
/

CREATE OR REPLACE TRIGGER INSERT_AQS_RAW_RES_PK
BEFORE INSERT ON AQS_RAW_RES
FOR EACH ROW

DECLARE
  NEXT_PK_ID INTEGER;
BEGIN
  SELECT NEXT_ID.NEXTVAL INTO NEXT_PK_ID FROM DUAL;
  :NEW.AQS_RAW_RES_PK := NEXT_PK_ID;
END;
/

CREATE OR REPLACE TRIGGER INSERT_AQS_RES_QUAL_CD_PK
BEFORE INSERT ON AQS_RES_QUAL_CD
FOR EACH ROW

DECLARE
  NEXT_PK_ID INTEGER;
BEGIN
  SELECT NEXT_ID.NEXTVAL INTO NEXT_PK_ID FROM DUAL;
  :NEW.AQS_RES_QUAL_CD_PK := NEXT_PK_ID;
END;
/

CREATE OR REPLACE TRIGGER INSERT_AQS_SITE_ID_PK
BEFORE INSERT ON AQS_SITE_ID
FOR EACH ROW

DECLARE
  NEXT_PK_ID INTEGER;
BEGIN
  SELECT NEXT_ID.NEXTVAL INTO NEXT_PK_ID FROM DUAL;
  :NEW.AQS_SITE_ID_PK := NEXT_PK_ID;
END;
/

CREATE OR REPLACE TRIGGER INSERT_AQS_TRANS_PROTOCOL_PK
BEFORE INSERT ON AQS_TRANS_PROTOCOL
FOR EACH ROW

DECLARE
  NEXT_PK_ID INTEGER;
BEGIN
  SELECT NEXT_ID.NEXTVAL INTO NEXT_PK_ID FROM DUAL;
  :NEW.AQS_TRANS_PROTOCOL_PK := NEXT_PK_ID;
END;
/

CREATE TABLE AQS_RAW_COMP_INFO ( 
 AQS_RAW_COMP_INFO_PK    NUMBER NOT NULL,
 AQS_TRANS_PROTOCOL_FK NUMBER NOT NULL,
 ACTION_CD             VARCHAR2(1) NOT NULL,
 OBSERVATION_YEAR  VARCHAR2(4) NOT NULL,
 COMP_PERIOD_CD   NUMBER(2,0) NOT NULL, 
 SAMPLES_COUNT   NUMBER(3,0) NULL, 
 COMP_SMPL_VALUE      NUMBER(10,5) NULL,
 UNCERTAINTY_VALUE     NUMBER(11,5) NULL
 )
/

CREATE TABLE AQS_RAW_PREC_INFO ( 
 AQS_RAW_PREC_INFO_PK    NUMBER NOT NULL,
 AQS_TRANS_PROTOCOL_FK NUMBER NOT NULL,
 ACTION_CD             VARCHAR2(1) NOT NULL,
 PREC_TYPE_ID            VARCHAR2(40) NULL,
 PREC_ID_NUM    NUMBER(2,0) NOT NULL, 
 ACTUAL_METHOD_CD  VARCHAR2(3) NULL, 
 PREC_CHECK_DATE   VARCHAR2(10) NOT NULL,
 ACTUAL_VALUE         NUMBER(10,5) NULL, 
 INDICATED_METHOD_CD  VARCHAR2(03) NULL, 
 INDICATED_VALUE         NUMBER(10,5) NULL, 
 COL_POC_ID_NUM   NUMBER(2,0) NULL, 
 PREC_SMPL_ID   VARCHAR2(10) NULL,
 AUDIT_AGENCY_CD         VARCHAR2(4) NULL
 )
/

CREATE TABLE AQS_BLANK_INFO ( 
 AQS_BLANK_INFO_PK  NUMBER NOT NULL,
 AQS_TRANS_PROTOCOL_FK NUMBER NOT NULL,
 ACTION_CD             VARCHAR2(1) NOT NULL,
 SMPL_COLL_START_DATE  VARCHAR2(10) NOT NULL,
 SMPL_COLL_START_TIME  VARCHAR2(8) NOT NULL,
 BLANK_TYPE_CD   VARCHAR2(20) NOT NULL,
 UNCERTAINTY_VALUE     NUMBER(11,5) NULL,
 NULL_DATA_CD          VARCHAR2(2) NULL,
 DATA_VALIDITY_CD      VARCHAR2(1) NULL,
 DATA_APPROVAL_IND     VARCHAR2(1) NULL,
 MEASURE_VALUE         NUMBER(11,5) NULL 
 )
/

CREATE TABLE AQS_RAW_ACCU_INFO ( 
 AQS_RAW_ACCU_INFO_PK    NUMBER NOT NULL,
 AQS_TRANS_PROTOCOL_FK NUMBER NOT NULL,
 ACTION_CD             VARCHAR2(1) NOT NULL,
 ACCU_AUDIT_ID_NUM       VARCHAR2(2) NOT NULL,
 AUDIT_YEAR    VARCHAR2(4) NULL,
 QTR_REP_CD    VARCHAR2(2) NULL,
 ACCU_DATE    VARCHAR2(10) NOT NULL,
 AUDIT_TYPE_ID   VARCHAR2(20) NULL,
 LOCAL_STAND_ID   VARCHAR2(30) NULL,
 AUDIT_CLASS_ID   VARCHAR2(20) NULL,
 ACCU_TYPE_ID   VARCHAR2(20) NULL,
 AUDIT_SMPL_ID   VARCHAR2(10) NULL,
 LOCAL_STAND_EXP_DATE VARCHAR2(10) NULL,
 AUDIT_SCH_DATE   VARCHAR2(10) NULL,
 LVL1_ACT_VALUE         NUMBER(10,5) NULL, 
 LVL1_IND_VALUE         NUMBER(10,5) NULL, 
 LVL2_ACT_VALUE         NUMBER(10,5) NULL, 
 LVL2_IND_VALUE         NUMBER(10,5) NULL, 
 LVL3_ACT_VALUE         NUMBER(10,5) NULL, 
 LVL3_IND_VALUE         NUMBER(10,5) NULL, 
 LVL4_ACT_VALUE         NUMBER(10,5) NULL, 
 LVL4_IND_VALUE         NUMBER(10,5) NULL, 
 LVL5_ACT_VALUE         NUMBER(10,5) NULL, 
 LVL5_IND_VALUE         NUMBER(10,5) NULL, 
 ZERO_SPAN_VALUE         NUMBER(10,5) NULL
 )
/

CREATE TABLE AQS_ANNUAL_SUM_INFO ( 
 AQS_ANNUAL_SUM_INFO_PK  NUMBER NOT NULL,
 AQS_TRANS_PROTOCOL_FK NUMBER NOT NULL,
 ACTION_CD             VARCHAR2(1) NOT NULL,
 SUM_YEAR    VARCHAR2(4) NOT NULL,
 EXCEP_DATA_TYPE_CD      NUMBER(1,0) NOT NULL,
 OBSERVATION_COUNT  NUMBER(5,0) NULL,
 EVENTS_COUNT   NUMBER(5,0) NULL,
 HIGH_SMPL_VALUE   NUMBER(10,5) NULL,
 HIGH_SMPL_DATE   VARCHAR2(10) NULL,
 HIGH_SMPL_TIME   VARCHAR2(8) NULL,
 SEC_HIGH_SMPL_VALUE  NUMBER(10,5) NULL,
 SEC_HIGH_SMPL_DATE  VARCHAR2(10) NULL,
 SEC_HIGH_SMPL_TIME  VARCHAR2(8) NULL,
 THIRD_HIGH_SMPL_VALUE NUMBER(10,5) NULL,
 FOURTH_HIGH_SMPL_VALUE NUMBER(10,5) NULL,
 FIFTH_HIGH_SMPL_VALUE NUMBER(10,5) NULL,
 LOW_SMPL_VALUE   NUMBER(10,5) NULL,
 ARTH_MEAN_VALUE   NUMBER(10,5) NULL,
 ARTH_STD_DEV_VALUE  NUMBER(10,5) NULL,
 GEO_MEAN_VALUE   NUMBER(10,5) NULL,
 GEO_STD_DEV_VALUE  NUMBER(10,5) NULL,
 TENTH_PER_VALUE   NUMBER(10,5) NULL,
 TWENTY_FIFTH_PER_VALUE NUMBER(10,5) NULL,
 FIFTIETH_PER_VALUE  NUMBER(10,5) NULL,
 SEVENTY_FIFTH_PER_VALUE NUMBER(10,5) NULL,
 NINETIETH_PER_VALUE  NUMBER(10,5) NULL,
 NINETY_FIFTH_PER_VALUE NUMBER(10,5) NULL,
 NINETY_EIGHTH_PER_VALUE NUMBER(10,5) NULL,
 NINETY_NINTH_PER_VALUE NUMBER(10,5) NULL,
 OBSERVATION_PER_VALUE NUMBER(10,5) NULL,
 BELOW_HALF_MDL_COUNT NUMBER(5,0) NULL
 )
/

CREATE TABLE AQS_BLANK_RES_QUAL_CD ( 
 AQS_BLANK_RES_QUAL_CD_PK NUMBER NOT NULL,
 AQS_BLANK_INFO_FK     NUMBER NOT NULL,
 RES_QUAL_CD         VARCHAR2(2) NULL 
 )
/

CREATE TABLE AQS_COMP_RES_QUAL_CD ( 
 AQS_COMP_RES_QUAL_CD_PK NUMBER NOT NULL,
 AQS_COMP_INFO_FK     NUMBER NOT NULL,
 RES_QUAL_CD         VARCHAR2(2) NULL 
 )
/

CREATE UNIQUE INDEX PK_RAW_PREC_INFO
 ON AQS_RAW_PREC_INFO(AQS_RAW_PREC_INFO_PK)
/

CREATE UNIQUE INDEX PK_BLANK_INFO
 ON AQS_BLANK_INFO(AQS_BLANK_INFO_PK)
/

CREATE UNIQUE INDEX PK_RAW_COMP_INFO
 ON AQS_RAW_COMP_INFO(AQS_RAW_COMP_INFO_PK)
/

CREATE UNIQUE INDEX PK_RAW_ACCU_INFO
 ON AQS_RAW_ACCU_INFO(AQS_RAW_ACCU_INFO_PK)
/

CREATE UNIQUE INDEX PK_ANNUAL_SUM_INFO
 ON AQS_ANNUAL_SUM_INFO(AQS_ANNUAL_SUM_INFO_PK)
/
CREATE UNIQUE INDEX PK_BLANK_RES_QUAL_CD
 ON AQS_BLANK_RES_QUAL_CD(AQS_BLANK_RES_QUAL_CD_PK)
/

CREATE UNIQUE INDEX PK_COMP_RES_QUAL_CD
 ON AQS_COMP_RES_QUAL_CD(AQS_COMP_RES_QUAL_CD_PK)
/

ALTER TABLE AQS_RAW_PREC_INFO
 ADD ( CONSTRAINT PK_RAW_PREC_INFO
 PRIMARY KEY (AQS_RAW_PREC_INFO_PK)
 NOT DEFERRABLE INITIALLY IMMEDIATE )
/

ALTER TABLE AQS_BLANK_INFO
 ADD ( CONSTRAINT PK_BLANK_INFO
 PRIMARY KEY (AQS_BLANK_INFO_PK)
 NOT DEFERRABLE INITIALLY IMMEDIATE )
/

ALTER TABLE AQS_RAW_COMP_INFO
 ADD ( CONSTRAINT PK_RAW_COMP_INFO
 PRIMARY KEY (AQS_RAW_COMP_INFO_PK)
 NOT DEFERRABLE INITIALLY IMMEDIATE )
/

ALTER TABLE AQS_RAW_ACCU_INFO
 ADD ( CONSTRAINT PK_RAW_ACCU_INFO
 PRIMARY KEY (AQS_RAW_ACCU_INFO_PK)
 NOT DEFERRABLE INITIALLY IMMEDIATE )
/

ALTER TABLE AQS_ANNUAL_SUM_INFO
 ADD ( CONSTRAINT PK_ANNUAL_SUM_INFO
 PRIMARY KEY (AQS_ANNUAL_SUM_INFO_PK)
 NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE AQS_BLANK_RES_QUAL_CD
 ADD ( CONSTRAINT PK_BLANK_RES_QUAL_CD
 PRIMARY KEY (AQS_BLANK_RES_QUAL_CD_PK)
 NOT DEFERRABLE INITIALLY IMMEDIATE )
/

ALTER TABLE AQS_COMP_RES_QUAL_CD
 ADD ( CONSTRAINT PK_COMP_RES_QUAL_CD
 PRIMARY KEY (AQS_COMP_RES_QUAL_CD_PK)
 NOT DEFERRABLE INITIALLY IMMEDIATE )
/
ALTER TABLE AQS_RAW_PREC_INFO
 ADD ( CONSTRAINT FK_TRANS_PROTOCOL_PREC_INFO
 FOREIGN KEY(AQS_TRANS_PROTOCOL_FK)
 REFERENCES AQS_TRANS_PROTOCOL(AQS_TRANS_PROTOCOL_PK)
 ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/

ALTER TABLE AQS_BLANK_INFO
 ADD ( CONSTRAINT FK_TRANS_PROTOCOL_BLANK_INFO
 FOREIGN KEY(AQS_TRANS_PROTOCOL_FK)
 REFERENCES AQS_TRANS_PROTOCOL(AQS_TRANS_PROTOCOL_PK)
 ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/

ALTER TABLE AQS_RAW_COMP_INFO
 ADD ( CONSTRAINT FK_TRANS_PROTOCOL_COMP_INFO
 FOREIGN KEY(AQS_TRANS_PROTOCOL_FK)
 REFERENCES AQS_TRANS_PROTOCOL(AQS_TRANS_PROTOCOL_PK)
 ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/

ALTER TABLE AQS_RAW_ACCU_INFO
 ADD ( CONSTRAINT FK_TRANS_PROTOCOL_ACCU_INFO
 FOREIGN KEY(AQS_TRANS_PROTOCOL_FK)
 REFERENCES AQS_TRANS_PROTOCOL(AQS_TRANS_PROTOCOL_PK)
 ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/

ALTER TABLE AQS_ANNUAL_SUM_INFO
 ADD ( CONSTRAINT FK_TRANS_PROTOCOL_ANNUAL_SUM
 FOREIGN KEY(AQS_TRANS_PROTOCOL_FK)
 REFERENCES AQS_TRANS_PROTOCOL(AQS_TRANS_PROTOCOL_PK)
 ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
ALTER TABLE AQS_BLANK_RES_QUAL_CD
 ADD ( CONSTRAINT FK_BLANK_INFO
 FOREIGN KEY(AQS_BLANK_INFO_FK)
 REFERENCES AQS_BLANK_INFO(AQS_BLANK_INFO_PK)
 ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/

ALTER TABLE AQS_COMP_RES_QUAL_CD
 ADD ( CONSTRAINT FK_COMP_INFO
 FOREIGN KEY(AQS_COMP_INFO_FK)
 REFERENCES AQS_RAW_COMP_INFO(AQS_RAW_COMP_INFO_PK)
 ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/
CREATE OR REPLACE TRIGGER INSERT_AQS_RAW_PREC_INFO_PK
BEFORE INSERT ON AQS_RAW_PREC_INFO
FOR EACH ROW

DECLARE
  NEXT_PK_ID INTEGER;
BEGIN
  SELECT NEXT_ID.NEXTVAL INTO NEXT_PK_ID FROM DUAL;
  :NEW.AQS_RAW_PREC_INFO_PK := NEXT_PK_ID;
END;
/

CREATE OR REPLACE TRIGGER INSERT_AQS_BLANK_INFO_PK
BEFORE INSERT ON AQS_BLANK_INFO
FOR EACH ROW

DECLARE
  NEXT_PK_ID INTEGER;
BEGIN
  SELECT NEXT_ID.NEXTVAL INTO NEXT_PK_ID FROM DUAL;
  :NEW.AQS_BLANK_INFO_PK := NEXT_PK_ID;
END;
/

CREATE OR REPLACE TRIGGER INSERT_AQS_RAW_COMP_INFO_PK
BEFORE INSERT ON AQS_RAW_COMP_INFO
FOR EACH ROW

DECLARE
  NEXT_PK_ID INTEGER;
BEGIN
  SELECT NEXT_ID.NEXTVAL INTO NEXT_PK_ID FROM DUAL;
  :NEW.AQS_RAW_COMP_INFO_PK := NEXT_PK_ID;
END;
/

CREATE OR REPLACE TRIGGER INSERT_AQS_RAW_ACCU_INFO_PK
BEFORE INSERT ON AQS_RAW_ACCU_INFO
FOR EACH ROW

DECLARE
  NEXT_PK_ID INTEGER;
BEGIN
  SELECT NEXT_ID.NEXTVAL INTO NEXT_PK_ID FROM DUAL;
  :NEW.AQS_RAW_ACCU_INFO_PK := NEXT_PK_ID;
END;
/

CREATE OR REPLACE TRIGGER INSERT_AQS_ANNUAL_SUM_INFO_PK
BEFORE INSERT ON AQS_ANNUAL_SUM_INFO
FOR EACH ROW

DECLARE
  NEXT_PK_ID INTEGER;
BEGIN
  SELECT NEXT_ID.NEXTVAL INTO NEXT_PK_ID FROM DUAL;
  :NEW.AQS_ANNUAL_SUM_INFO_PK := NEXT_PK_ID;
END;
/

CREATE OR REPLACE TRIGGER INSERT_AQS_BLNK_RES_QUAL_CD_PK
BEFORE INSERT ON AQS_BLANK_RES_QUAL_CD
FOR EACH ROW

DECLARE
  NEXT_PK_ID INTEGER;
BEGIN
  SELECT NEXT_ID.NEXTVAL INTO NEXT_PK_ID FROM DUAL;
  :NEW.AQS_BLANK_RES_QUAL_CD_PK := NEXT_PK_ID;
END;
/

CREATE OR REPLACE TRIGGER INSERT_AQS_COMP_RES_QUAL_CD_PK
BEFORE INSERT ON AQS_COMP_RES_QUAL_CD
FOR EACH ROW

DECLARE
  NEXT_PK_ID INTEGER;
BEGIN
  SELECT NEXT_ID.NEXTVAL INTO NEXT_PK_ID FROM DUAL;
  :NEW.AQS_COMP_RES_QUAL_CD_PK := NEXT_PK_ID;
END;
/

CREATE OR REPLACE PROCEDURE AQS_CHECK_METADATA AS

BEGIN

   DECLARE
      V_COUNT INTEGER;
   BEGIN

      SELECT COUNT(*) INTO V_COUNT FROM AQS_METADATA;


   IF V_COUNT = 0 THEN

  INSERT INTO AQS_METADATA (
      AQS_SITE_ID_PK, AQS_MONITOR_ID_PK, AQS_TRANS_PROTOCOL_PK, AQS_RAW_RES_PK, FACILITY_SITE_ID, ACTION_CD, SMPL_COLL_START_DATE, COUNTY_CD)
  SELECT S.AQS_SITE_ID_PK, M.AQS_MONITOR_ID_PK, T.AQS_TRANS_PROTOCOL_PK, R.AQS_RAW_RES_PK, S.FACILITY_SITE_ID, R.ACTION_CD, R.SMPL_COLL_START_DATE, S.COUNTY_CD
        FROM AQS_RAW_RES R
            INNER JOIN AQS_TRANS_PROTOCOL T ON T.AQS_TRANS_PROTOCOL_PK = R.AQS_TRANS_PROTOCOL_FK
            INNER JOIN AQS_MONITOR_ID M ON M.AQS_MONITOR_ID_PK = T.AQS_MONITOR_ID_FK
            INNER JOIN AQS_SITE_ID S ON S.AQS_SITE_ID_PK = M.AQS_SITE_ID_FK;

  INSERT INTO AQS_METADATA (
      AQS_SITE_ID_PK, AQS_MONITOR_ID_PK, AQS_TRANS_PROTOCOL_PK, AQS_RAW_RES_PK, FACILITY_SITE_ID, ACTION_CD, SMPL_COLL_START_DATE, COUNTY_CD)
  SELECT S.AQS_SITE_ID_PK, M.AQS_MONITOR_ID_PK, T.AQS_TRANS_PROTOCOL_PK, R.AQS_RAW_PREC_INFO_PK, S.FACILITY_SITE_ID, R.ACTION_CD, R.PREC_CHECK_DATE, S.COUNTY_CD
        FROM AQS_RAW_PREC_INFO R
            INNER JOIN AQS_TRANS_PROTOCOL T ON T.AQS_TRANS_PROTOCOL_PK = R.AQS_TRANS_PROTOCOL_FK
            INNER JOIN AQS_MONITOR_ID M ON M.AQS_MONITOR_ID_PK = T.AQS_MONITOR_ID_FK
            INNER JOIN AQS_SITE_ID S ON S.AQS_SITE_ID_PK = M.AQS_SITE_ID_FK;

  INSERT INTO AQS_METADATA (
      AQS_SITE_ID_PK, AQS_MONITOR_ID_PK, AQS_TRANS_PROTOCOL_PK, AQS_RAW_RES_PK, FACILITY_SITE_ID, ACTION_CD, SMPL_COLL_START_DATE, COUNTY_CD)
  SELECT S.AQS_SITE_ID_PK, M.AQS_MONITOR_ID_PK, T.AQS_TRANS_PROTOCOL_PK, R.AQS_RAW_ACCU_INFO_PK, S.FACILITY_SITE_ID, R.ACTION_CD, R.ACCU_DATE, S.COUNTY_CD
        FROM AQS_RAW_ACCU_INFO R
            INNER JOIN AQS_TRANS_PROTOCOL T ON T.AQS_TRANS_PROTOCOL_PK = R.AQS_TRANS_PROTOCOL_FK
            INNER JOIN AQS_MONITOR_ID M ON M.AQS_MONITOR_ID_PK = T.AQS_MONITOR_ID_FK
            INNER JOIN AQS_SITE_ID S ON S.AQS_SITE_ID_PK = M.AQS_SITE_ID_FK;

  INSERT INTO AQS_METADATA (
      AQS_SITE_ID_PK, AQS_MONITOR_ID_PK, AQS_TRANS_PROTOCOL_PK, AQS_RAW_RES_PK, FACILITY_SITE_ID, ACTION_CD, SMPL_COLL_START_DATE, COUNTY_CD)
  SELECT S.AQS_SITE_ID_PK, M.AQS_MONITOR_ID_PK, T.AQS_TRANS_PROTOCOL_PK, R.AQS_ANNUAL_SUM_INFO_PK, S.FACILITY_SITE_ID, R.ACTION_CD, TO_CHAR('01-01-'||R.SUM_YEAR), S.COUNTY_CD
        FROM AQS_ANNUAL_SUM_INFO R
            INNER JOIN AQS_TRANS_PROTOCOL T ON T.AQS_TRANS_PROTOCOL_PK = R.AQS_TRANS_PROTOCOL_FK
            INNER JOIN AQS_MONITOR_ID M ON M.AQS_MONITOR_ID_PK = T.AQS_MONITOR_ID_FK
            INNER JOIN AQS_SITE_ID S ON S.AQS_SITE_ID_PK = M.AQS_SITE_ID_FK;

  INSERT INTO AQS_METADATA (
      AQS_SITE_ID_PK, AQS_MONITOR_ID_PK, AQS_TRANS_PROTOCOL_PK, AQS_RAW_RES_PK, FACILITY_SITE_ID, ACTION_CD, SMPL_COLL_START_DATE, COUNTY_CD)
  SELECT S.AQS_SITE_ID_PK, M.AQS_MONITOR_ID_PK, T.AQS_TRANS_PROTOCOL_PK, R.AQS_RAW_COMP_INFO_PK, S.FACILITY_SITE_ID, R.ACTION_CD, TO_CHAR('01-01-'||R.OBSERVATION_YEAR), S.COUNTY_CD
        FROM AQS_RAW_COMP_INFO R
            INNER JOIN AQS_TRANS_PROTOCOL T ON T.AQS_TRANS_PROTOCOL_PK = R.AQS_TRANS_PROTOCOL_FK
            INNER JOIN AQS_MONITOR_ID M ON M.AQS_MONITOR_ID_PK = T.AQS_MONITOR_ID_FK
            INNER JOIN AQS_SITE_ID S ON S.AQS_SITE_ID_PK = M.AQS_SITE_ID_FK;

  INSERT INTO AQS_METADATA (
      AQS_SITE_ID_PK, AQS_MONITOR_ID_PK, AQS_TRANS_PROTOCOL_PK, AQS_RAW_RES_PK, FACILITY_SITE_ID, ACTION_CD, SMPL_COLL_START_DATE, COUNTY_CD)
  SELECT S.AQS_SITE_ID_PK, M.AQS_MONITOR_ID_PK, T.AQS_TRANS_PROTOCOL_PK, R.AQS_BLANK_INFO_PK, S.FACILITY_SITE_ID, R.ACTION_CD, R.SMPL_COLL_START_DATE, S.COUNTY_CD
        FROM AQS_BLANK_INFO R
            INNER JOIN AQS_TRANS_PROTOCOL T ON T.AQS_TRANS_PROTOCOL_PK = R.AQS_TRANS_PROTOCOL_FK
            INNER JOIN AQS_MONITOR_ID M ON M.AQS_MONITOR_ID_PK = T.AQS_MONITOR_ID_FK
            INNER JOIN AQS_SITE_ID S ON S.AQS_SITE_ID_PK = M.AQS_SITE_ID_FK;

  COMMIT;

   END IF;

   END;

   EXCEPTION
     WHEN OTHERS THEN
       RAISE;

END AQS_CHECK_METADATA;
/