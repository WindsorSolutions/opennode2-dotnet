/*  
 ****************************************************************************************************************************   
 *
 *  Script Name:  TRI_4.0-ORA-DDL.sql
 *
 *  Purpose:  This script will build the required objects to support the TRI data flow, and the TRIDEX
 *            application in an Oracle environment.  It will build the TRI staging database, and required
 *            TRIDEX views, stored procedues, packages, triggers, sequencces, etc.
 *
 *  Note:  1.  Each object has been referenced with the schema identifier, so this can be executed as SYS.
 *         2.  Each identifier has been wrapped with a double quote.  There are some views that have mixed case
 *             and spaceing in the column name that requires this.
 *         
 *  Maintenance:
 *  
 *    Analyst         Date            Comment 
 *    ----------      ----------      --------------------------------------------
 *    KJames          01/27/2010      Created 
 *    KJames          01/28/2010      Modified schema object qualifier to "TRI40". 
 *    TK              02/04/2010      Updated V_FAC_CHEMICAL_DATA to add new fields
 *                                    utilized by Ohio.
 *    TK              02/10/2010      Updated V_BRS_SEARCH to add new fields
 *                                    utilized by Ohio.
 *    TK              02/11/2010      Added the procedure TRI_GET_AUTHORIZATION_ROLES
 *                                    which enables a simple role provider service to be used
 *                                    when Active Directory is not an option (e.g., GA DNR).
 *    TK              02/12/2010      Modified TRI_GET_AUTHORIZATION_ROLES to include
 *                                    exception handling for invalid username/password.
 *    TK              03/31/2010      V_TRI_PAGE1: Changed how R42A (full facility) is calculated.
 *                                    Now based on SUB_PARTIAL_FAC_ID; when this is "N", full facility = "Y".
 *                                    V_TRI_PAGE3_XFR: Fixed how this view displays transfer facilities to
 *                                    show all transfer locations (previously excluded the first one returned by the view).
 *                                    V_TRI_PAGE5: Included the "comment" for the Form R report.
 *                                    This change also requires a change to the Page5.ascx file.
 *    KJames          04/06/2010      Removed table prefix on V_BRS_CHEM_DDL.
 *    KJames          04/06/2010      Fixed minor typo in TRI_GET_AUTHORIZATION_ROLES that was preventing the procedure
 *                                    from compiling. 
 *    TK              04/13/2010      V_TRI_PAGE5: Added R811_TEXT to the list of fields returned by the view (was only
 *                                    in the SELECT statement before).
 *    KJames          12/08/2010      Added two new TRIDEX view into the script written by TK.  V_TRI_FORM_R_SHORT  and 
 *                                    V_TRI_FORM_R_SHORT_XFR.
 *    KJames          12/08/2010      Removed the "NODE_IN". object prefixes.
 *    KJames          12/08/2010      Commented out the DROP statements so script is runnable from the top for object creation.
 *                                    
 ****************************************************************************************************************************   
 */
 
/*
ALTER TABLE "TRI_WASTE_TREAT_METH"
 DROP CONSTRAINT "FK_WASTETREATMETH_WTDTL"
/

ALTER TABLE "TRI_WASTE_TREAT_DTL"
 DROP CONSTRAINT "FK_WASTETREATDTL_REPORT"
/

ALTER TABLE "TRI_UIC_ID"
 DROP CONSTRAINT "FK_UICID_FAC"
/

ALTER TABLE "TRI_TRANSFER_Q"
 DROP CONSTRAINT "FK_TRANSFERQ_TRANSFERLOC"
/

ALTER TABLE "TRI_TRANSFER_LOC"
 DROP CONSTRAINT "FK_TRANSFERLOC_REPORT"
/

ALTER TABLE "TRI_SRC_RED_METH_CD"
 DROP CONSTRAINT "FK_SRCREDMETHCD_SRCREDACT"
/

ALTER TABLE "TRI_SRC_RED_ACT"
 DROP CONSTRAINT "FK_SRCREDACT_REPORT"
/

ALTER TABLE "TRI_REPORT"
 DROP CONSTRAINT "FK_REPORT_SUB"
/

ALTER TABLE "TRI_REPORT_VALIDATION"
 DROP CONSTRAINT "FK_TRI_REPORT_VALIDATION_TRI_R"
/

ALTER TABLE "TRI_REPLACED_REPORT_ID"
 DROP CONSTRAINT "FK_REPLACEDREPORTID_REPORT"
/

ALTER TABLE "TRI_RCRA_ID"
 DROP CONSTRAINT "FK_RCRAID_FAC"
/

ALTER TABLE "TRI_ONSITE_UIC_DISP_QTY"
 DROP CONSTRAINT "FK_ONSITEUICDISPQTY_REPORT"
/

ALTER TABLE "TRI_ONSITE_TREATED_Q"
 DROP CONSTRAINT "FK_ONSITETREATEDQ_REPORT"
/

ALTER TABLE "TRI_ONSITE_RELEASE_Q"
 DROP CONSTRAINT "FK_ONSITERELEASEQ_REPORT"
/

ALTER TABLE "TRI_ONSITE_RECYCLED_Q"
 DROP CONSTRAINT "FK_ONSITERECYCLEDQ_REPORT"
/

ALTER TABLE "TRI_ONSITE_RECYCG_PROC"
 DROP CONSTRAINT "FK_ONSITERECYCGPROC_REPORT"
/

ALTER TABLE "TRI_ONSITE_RCV_PROC"
 DROP CONSTRAINT "FK_ONSITERCVPROC_REPORT"
/

ALTER TABLE "TRI_ONSITE_ENERGY_RCV_QTY"
 DROP CONSTRAINT "FK_ONSITEENERGYRCVQTY_REPORT"
/

ALTER TABLE "TRI_ONSITE_DISP_QTY"
 DROP CONSTRAINT "FK_ONSITEDISPQTY_REPORT"
/

ALTER TABLE "TRI_OFFSITE_UIC_DISP_QTY"
 DROP CONSTRAINT "FK_OFFSITEUICDISPQTY_REPORT"
/

ALTER TABLE "TRI_OFFSITE_TREATED_Q"
 DROP CONSTRAINT "FK_OFFSITETREATEDQ_REPORT"
/

ALTER TABLE "TRI_OFFSITE_RECYCLED_Q"
 DROP CONSTRAINT "FK_OFFSITERECYCLEDQ_REPORT"
/

ALTER TABLE "TRI_OFFSITE_ENERGY_REC_QTY"
 DROP CONSTRAINT "FK_OFFSITEENERGYRECQTY_REPORT"
/

ALTER TABLE "TRI_OFFSITE_DISP_QTY"
 DROP CONSTRAINT "FK_OFFSITEDISPQTY_REPORT"
/

ALTER TABLE "TRI_NPDES_ID"
 DROP CONSTRAINT "FK_NPDESID_FAC"
/

ALTER TABLE "TRI_FAC"
 DROP CONSTRAINT "FK_FAC_SUB"
/

ALTER TABLE "TRI_FAC_SIC"
 DROP CONSTRAINT "FK_FACSIC_FAC"
/

ALTER TABLE "TRI_FAC_NAICS"
 DROP CONSTRAINT "FK_FACNAICS_FAC"
/

ALTER TABLE "TRI_FAC_DUN"
 DROP CONSTRAINT "FK_FACDUN_FAC"
/

ALTER TABLE "TRI_CHEM"
 DROP CONSTRAINT "FK_CHEM_REPORT"
/

ALTER TABLE "APP_MANUALSUBMISSIONLOG"
 DROP CONSTRAINT "FK_APP_MANUALSUBMISSIONLOG_APP"
/

ALTER TABLE "APP_FI_TRIFID_DELETE"
 DROP CONSTRAINT "FK_APP_FI_TRIFID_DELETE_APP_FI"
/

ALTER TABLE "APP_FI_TRIFID_COMMENT"
 DROP CONSTRAINT "FK_APP_TRIFID_COMMENT_APP_TRIF"
/

ALTER TABLE "TRI_WASTE_TREAT_METH"
 DROP CONSTRAINT "PK_TRI_WASTE_TREAT_METH"
/

ALTER TABLE "TRI_WASTE_TREAT_DTL"
 DROP CONSTRAINT "PK_TRI_WASTE_TREAT_DTL"
/

ALTER TABLE "TRI_UIC_ID"
 DROP CONSTRAINT "PK_TRI_UIC_ID"
/

ALTER TABLE "TRI_TRANSFER_Q"
 DROP CONSTRAINT "PK_TRI_TRANSFER_Q"
/

ALTER TABLE "TRI_TRANSFER_LOC"
 DROP CONSTRAINT "PK_TRI_TRANSFER_LOC"
/

ALTER TABLE "TRI_SUB"
 DROP CONSTRAINT "PK_TRI_SUB"
/

ALTER TABLE "TRI_SRC_RED_METH_CD"
 DROP CONSTRAINT "PK_TRI_SRC_RED_METH_CD"
/

ALTER TABLE "TRI_SRC_RED_ACT"
 DROP CONSTRAINT "PK_TRI_SRC_RED_ACT"
/

ALTER TABLE "TRI_REPORT"
 DROP CONSTRAINT "PK_TRI_REPORT"
/

ALTER TABLE "TRI_REPORT_VALIDATION"
 DROP CONSTRAINT "PK_TRI_REPORT_VALIDATION"
/

ALTER TABLE "TRI_REPLACED_REPORT_ID"
 DROP CONSTRAINT "PK_TRI_REPLACED_REPORT_ID"
/

ALTER TABLE "TRI_RCRA_ID"
 DROP CONSTRAINT "PK_TRI_RCRA_ID"
/

ALTER TABLE "TRI_ONSITE_UIC_DISP_QTY"
 DROP CONSTRAINT "PK_TRI_ONSITE_UIC_DISP_QTY"
/

ALTER TABLE "TRI_ONSITE_TREATED_Q"
 DROP CONSTRAINT "PK_TRI_ONSITE_TREATED_Q"
/

ALTER TABLE "TRI_ONSITE_RELEASE_Q"
 DROP CONSTRAINT "PK_TRI_ONSITE_RELEASE_Q"
/

ALTER TABLE "TRI_ONSITE_RECYCLED_Q"
 DROP CONSTRAINT "PK_TRI_ONSITE_RECYCLED_Q"
/

ALTER TABLE "TRI_ONSITE_RECYCG_PROC"
 DROP CONSTRAINT "PK_TRI_ONSITE_RECYCG_PROC"
/

ALTER TABLE "TRI_ONSITE_RCV_PROC"
 DROP CONSTRAINT "PK_TRI_ONSITE_RCV_PROC"
/

ALTER TABLE "TRI_ONSITE_ENERGY_RCV_QTY"
 DROP CONSTRAINT "PK_TRI_ONSITE_ENERGY_RCV_QTY"
/

ALTER TABLE "TRI_ONSITE_DISP_QTY"
 DROP CONSTRAINT "PK_TRI_ONSITE_DISP_QTY"
/

ALTER TABLE "TRI_OFFSITE_UIC_DISP_QTY"
 DROP CONSTRAINT "PK_TRI_OFFSITE_UIC_DISP_QTY"
/

ALTER TABLE "TRI_OFFSITE_TREATED_Q"
 DROP CONSTRAINT "PK_TRI_OFFSITE_TREATED_Q"
/

ALTER TABLE "TRI_OFFSITE_RECYCLED_Q"
 DROP CONSTRAINT "PK_TRI_OFFSITE_RECYCLED_Q"
/

ALTER TABLE "TRI_OFFSITE_ENERGY_REC_QTY"
 DROP CONSTRAINT "PK_TRI_OFFSITE_ENERGY_REC_QTY"
/

ALTER TABLE "TRI_OFFSITE_DISP_QTY"
 DROP CONSTRAINT "PK_TRI_OFFSITE_DISP_QTY"
/

ALTER TABLE "TRI_NPDES_ID"
 DROP CONSTRAINT "PK_TRI_NPDES_ID"
/

ALTER TABLE "TRI_FAC"
 DROP CONSTRAINT "PK_TRI_FAC"
/

ALTER TABLE "TRI_FAC_SIC"
 DROP CONSTRAINT "PK_TRI_FAC_SIC"
/

ALTER TABLE "TRI_FAC_NAICS"
 DROP CONSTRAINT "PK_TRI_FAC_NAICS"
/

ALTER TABLE "TRI_FAC_DUN"
 DROP CONSTRAINT "PK_TRI_FAC_DUN"
/

ALTER TABLE "APP_MANUALSUBMISSIONLOG"
 DROP CONSTRAINT "PK_APP_MANUALSUBMISSIONLOG"
/

ALTER TABLE "APP_LOOKUP_CTY_REG"
 DROP CONSTRAINT "PK_APP_LOOKUP_CTY_REG"
/

ALTER TABLE "APP_FI_TRIFID"
 DROP CONSTRAINT "PK_APP_FI_TRIFID"
/

ALTER TABLE "APP_FI_TRIFID_DELETE"
 DROP CONSTRAINT "PK_APP_FI_TRIFID_DELETE"
/

ALTER TABLE "APP_FI_TRIFID_COMMENT"
 DROP CONSTRAINT "PK_APP_FI_TRIFID_COMMENT"
/

ALTER TABLE "APP_EMAILLOG"
 DROP CONSTRAINT "PK_APP_EMAILLOG"
/

ALTER TABLE "APP_COORDINATOR"
 DROP CONSTRAINT "PK_APP_COORDINATOR"
/

DROP TRIGGER "TRI_SUB_BI"
/

DROP TRIGGER "APP_MANUALSUBMISSIONLOG_BI"
/

DROP TRIGGER "APP_LOOKUP_CTY_REG_ID_TRIG"
/

DROP TRIGGER "APP_FI_TRIFID_BI"
/

DROP TRIGGER "APP_FI_TRIFID_DELETE_BI"
/

DROP TRIGGER "APP_FI_TRIFID_COMMENT_BI"
/

DROP TRIGGER "APP_EMAILLOG_BI"
/

DROP INDEX "IX_TRI_WASTE_TREAT_METH"
/

DROP INDEX "PK_TRI_WASTE_TREAT_METH"
/

DROP INDEX "PK_TRI_WASTE_TREAT_DTL"
/

DROP INDEX "IX_TRI_WASTE_TREAT_DTL"
/

DROP INDEX "PK_TRI_UIC_ID"
/

DROP INDEX "IX_TRI_UIC_ID"
/

DROP INDEX "PK_TRI_TRANSFER_Q"
/

DROP INDEX "IX_TRI_TRANSFER_Q"
/

DROP INDEX "IX_TRI_TRANSFER_LOC"
/

DROP INDEX "PK_TRI_TRANSFER_LOC"
/

DROP INDEX "PK_TRI_SUB"
/

DROP INDEX "UK_TRI_SUB"
/

DROP INDEX "IX_TRI_SRC_RED_METH_CD"
/

DROP INDEX "PK_TRI_SRC_RED_METH_CD"
/

DROP INDEX "PK_TRI_SRC_RED_ACT"
/

DROP INDEX "IX_TRI_SRC_RED_ACT"
/

DROP INDEX "PK_TRI_REPORT"
/

DROP INDEX "IX_TRI_REPORT"
/

DROP INDEX "PK_TRI_REPORT_VALIDATION"
/

DROP INDEX "IX_TRI_REPORT_VALIDATION"
/

DROP INDEX "PK_TRI_REPLACED_REPORT_ID"
/

DROP INDEX "IX_TRI_REPLACED_REPORT_ID"
/

DROP INDEX "IX_TRI_RCRA_ID"
/

DROP INDEX "PK_TRI_RCRA_ID"
/

DROP INDEX "IX_TRI_ONSITE_UIC_DISP_QTY"
/

DROP INDEX "PK_TRI_ONSITE_UIC_DISP_QTY"
/

DROP INDEX "PK_TRI_ONSITE_TREATED_Q"
/

DROP INDEX "IX_TRI_ONSITE_TREATED_Q"
/

DROP INDEX "IX_TRI_ONSITE_RELEASE_Q"
/

DROP INDEX "PK_TRI_ONSITE_RELEASE_Q"
/

DROP INDEX "IX_TRI_ONSITE_RECYCLED_Q"
/

DROP INDEX "PK_TRI_ONSITE_RECYCLED_Q"
/

DROP INDEX "PK_TRI_ONSITE_RECYCG_PROC"
/

DROP INDEX "IX_TRI_ONSITE_RECYCG_PROC"
/

DROP INDEX "PK_TRI_ONSITE_RCV_PROC"
/

DROP INDEX "IX_TRI_ONSITE_RCV_PROC"
/

DROP INDEX "PK_TRI_ONSITE_ENERGY_RCV_QTY"
/

DROP INDEX "IX_TRI_ONSITE_ENERGY_RCV_QTY"
/

DROP INDEX "PK_TRI_ONSITE_DISP_QTY"
/

DROP INDEX "IX_TRI_ONSITE_DISP_QTY"
/

DROP INDEX "PK_TRI_OFFSITE_UIC_DISP_QTY"
/

DROP INDEX "IX_TRI_OFFSITE_UIC_DISP_QTY"
/

DROP INDEX "IX_TRI_OFFSITE_TREATED_Q"
/

DROP INDEX "PK_TRI_OFFSITE_TREATED_Q"
/

DROP INDEX "IX_TRI_OFFSITE_RECYCLED_Q"
/

DROP INDEX "PK_TRI_OFFSITE_RECYCLED_Q"
/

DROP INDEX "IX_TRI_OFFSITE_ENERGY_REC_QTY"
/

DROP INDEX "PK_TRI_OFFSITE_ENERGY_REC_QTY"
/

DROP INDEX "IX_TRI_OFFSITE_DISP_QTY"
/

DROP INDEX "PK_TRI_OFFSITE_DISP_QTY"
/

DROP INDEX "IX_TRI_NPDES_ID"
/

DROP INDEX "PK_TRI_NPDES_ID"
/

DROP INDEX "IX_TRI_FAC"
/

DROP INDEX "PK_TRI_FAC"
/

DROP INDEX "PK_TRI_FAC_SIC"
/

DROP INDEX "IX_TRI_FAC_SIC"
/

DROP INDEX "PK_TRI_FAC_NAICS"
/

DROP INDEX "IX_TRI_FAC_NAICS"
/

DROP INDEX "IX_TRI_FAC_DUN"
/

DROP INDEX "PK_TRI_FAC_DUN"
/

DROP INDEX "PK_TRI_CHEM"
/

DROP INDEX "IX_TRI_CHEM"
/

DROP INDEX "IX_APP_MANUALSUBMISSIONLOG"
/

DROP INDEX "PK_APP_MANUALSUBMISSIONLOG"
/

DROP INDEX "IX_APP_LOOKUP_CTY_REG"
/

DROP INDEX "PK_APP_LOOKUP_CTY_REG"
/

DROP INDEX "PK_APP_FI_TRIFID"
/

DROP INDEX "IX_APP_FI_TRIFID_UNIQUECONSTRA"
/

DROP INDEX "PK_APP_FI_TRIFID_DELETE"
/

DROP INDEX "PK_APP_FI_TRIFID_COMMENT"
/

DROP INDEX "PK_APP_EMAILLOG"
/

DROP INDEX "PK_APP_COORDINATOR"
/

DROP FUNCTION "TRI_RANGECODECONVERSION"
/

DROP FUNCTION "TRI_CONV_EPA_PRCSSTATCD_DESC"
/

DROP FUNCTION "TRI_CONVERT_LBS_GRAMS"
/

DROP FUNCTION "TRI_CALC_SUB_METHOD"
/

DROP FUNCTION "TRI_CALC_REV_IND"
/

DROP FUNCTION "ISNUMERIC"
/

DROP PROCEDURE "TRI_UPDATE_TRI_RPT_DEFAULTS"
/

DROP PROCEDURE "TRI_UPDATE_FSID"
/

DROP PROCEDURE "TRI_SETRECEIPT"
/

DROP PROCEDURE "TRI_SETNEWFACILITY"
/

DROP PROCEDURE "TRI_SETFACILITYMANAGERDETAIL"
/

DROP PROCEDURE "TRI_SETFACILITY"
/

DROP PROCEDURE "TRI_PROCESSPOST_TRI_LOADER"
/

DROP PROCEDURE "TRI_INS_TRIFID_DELETE"
/

DROP PROCEDURE "TRI_INS_APP_FI_TRIFID_DELETE"
/

DROP PROCEDURE "TRI_INSERT_EMAILLOG"
/

DROP PROCEDURE "TRI_INSERT_APP_FI_TRIFID_BULK"
/

DROP PROCEDURE "TRI_INSERT_APP_FI_TRIFID"
/

DROP PROCEDURE "TRI_GETTRIFID_DELETE"
/

DROP PROCEDURE "TRI_GETMANUALSUBMISSIONDATA"
/

DROP PROCEDURE "TRI_GETFACILITYMNGDETAILDATA"
/

DROP PROCEDURE "TRI_GETFACILITYMANAGERDETAIL"
/

DROP PROCEDURE "TRI_GETFACILITYMANAGERDATA"
/

DROP PROCEDURE "TRI_DEL_TRIFID_DELETE"
/

DROP PROCEDURE "TRI_DELETEFACILITY"
/

DROP PROCEDURE "TRI_GET_AUTHORIZATION_ROLES"
/

DROP PACKAGE "PKG_TRI_UTILS"
/

DROP SEQUENCE "ID_SEQ"
/

DROP VIEW "V_TRI_PG5_810A"
/

DROP VIEW "V_TRI_PG5_810"
/

DROP VIEW "V_TRI_PG5_7C"
/

DROP VIEW "V_TRI_PG5_7B"
/

DROP VIEW "V_TRI_PG4_7A"
/

DROP VIEW "V_TRI_PG4_62L"
/

DROP VIEW "V_TRI_PG2_53"
/

DROP VIEW "V_TRI_PG1_49"
/

DROP VIEW "V_TRI_PG1_48"
/

DROP VIEW "V_TRI_PG1_47"
/

DROP VIEW "V_TRI_PG1_410"
/

DROP VIEW "V_TRI_PAGE5"
/

DROP VIEW "V_TRI_PAGE4"
/

DROP VIEW "V_TRI_PAGE3"
/

DROP VIEW "V_TRI_PAGE3_XFR"
/

DROP VIEW "V_TRI_PAGE2"
/

DROP VIEW "V_TRI_PAGE1"
/

DROP VIEW "V_TRI_FAC_SUB_SUMMARY"
/

DROP VIEW "V_MNG_FAC_LIST"
/

DROP VIEW "V_MNG_FAC_DTL"
/

DROP VIEW "V_MAN_SUB_DTL"
/

DROP VIEW "V_FORM_S1_PG4"
/

DROP VIEW "V_FORM_S1_PG3"
/

DROP VIEW "V_FORM_S1_PG3_62"
/

DROP VIEW "V_FORM_S1_PG2"
/

DROP VIEW "V_FORM_S1_PG1"
/

DROP VIEW "V_FORM_S1_PG1_53"
/

DROP VIEW "V_FORM_A_PG_2"
/

DROP VIEW "V_FORM_A_PG_1"
/

DROP VIEW "V_FAC_REPORT_DATA"
/

DROP VIEW "V_FAC_IDENT"
/

DROP VIEW "V_FAC_FACILITY_DATA"
/

DROP VIEW "V_FAC_CHEMICAL_DATA"
/

DROP VIEW "V_EXT_W_MGMT"
/

DROP VIEW "V_EXT_W_MGMT_D"
/

DROP VIEW "V_EXT_STR"
/

DROP VIEW "V_EXT_STR_D"
/

DROP VIEW "V_EXT_P2_FEE"
/

DROP VIEW "V_EXT_P2_FEE_D"
/

DROP VIEW "V_EXT_OFF_WT"
/

DROP VIEW "V_EXT_OFF_WT_D"
/

DROP VIEW "V_EXT_MASTER"
/

DROP VIEW "V_EXT_MASTER_D"
/

DROP VIEW "V_EXT_DIOXIN"
/

DROP VIEW "V_EXT_DIOXIN_OFF_WT"
/

DROP VIEW "V_EXT_DIOXIN_OFF_WT_D"
/

DROP VIEW "V_EXT_DIOXIN_D"
/

DROP VIEW "V_EXT_DETAIL"
/

DROP VIEW "V_EXT_DETAIL_D"
/

DROP VIEW "V_EXT_CONTACT"
/

DROP VIEW "V_EXT_CONTACT_D"
/

DROP VIEW "V_EPA_SUB"
/

DROP VIEW "V_EPA_SUB_CHEM"
/

DROP VIEW "V_EPA_DATASET"
/

DROP VIEW "V_BRS_SEARCH"
/

DROP VIEW "V_BRS_CHEM_DDL"
/

DROP VIEW "V_TRI_FORM_R_SHORT"
/

DROP VIEW "V_TRI_FORM_R_SHORT_XFR"
/

DROP TABLE "TRI_WASTE_TREAT_METH"
/

DROP TABLE "TRI_WASTE_TREAT_DTL"
/

DROP TABLE "TRI_UIC_ID"
/

DROP TABLE "TRI_TRANSFER_Q"
/

DROP TABLE "TRI_TRANSFER_LOC"
/

DROP TABLE "TRI_SUB"
/

DROP TABLE "TRI_SRC_RED_METH_CD"
/

DROP TABLE "TRI_SRC_RED_ACT"
/

DROP TABLE "TRI_REPORT"
/

DROP TABLE "TRI_REPORT_VALIDATION"
/

DROP TABLE "TRI_REPLACED_REPORT_ID"
/

DROP TABLE "TRI_RCRA_ID"
/

DROP TABLE "TRI_ONSITE_UIC_DISP_QTY"
/

DROP TABLE "TRI_ONSITE_TREATED_Q"
/

DROP TABLE "TRI_ONSITE_RELEASE_Q"
/

DROP TABLE "TRI_ONSITE_RECYCLED_Q"
/

DROP TABLE "TRI_ONSITE_RECYCG_PROC"
/

DROP TABLE "TRI_ONSITE_RCV_PROC"
/

DROP TABLE "TRI_ONSITE_ENERGY_RCV_QTY"
/

DROP TABLE "TRI_ONSITE_DISP_QTY"
/

DROP TABLE "TRI_OFFSITE_UIC_DISP_QTY"
/

DROP TABLE "TRI_OFFSITE_TREATED_Q"
/

DROP TABLE "TRI_OFFSITE_RECYCLED_Q"
/

DROP TABLE "TRI_OFFSITE_ENERGY_REC_QTY"
/

DROP TABLE "TRI_OFFSITE_DISP_QTY"
/

DROP TABLE "TRI_NPDES_ID"
/

DROP TABLE "TRI_FAC"
/

DROP TABLE "TRI_FAC_SIC"
/

DROP TABLE "TRI_FAC_NAICS"
/

DROP TABLE "TRI_FAC_DUN"
/

DROP TABLE "TRI_CHEM"
/

DROP TABLE "APP_MANUALSUBMISSIONLOG"
/

DROP TABLE "APP_LOOKUP_CTY_REG"
/

DROP TABLE "APP_FI_TRIFID"
/

DROP TABLE "APP_FI_TRIFID_DELETE"
/

DROP TABLE "APP_FI_TRIFID_COMMENT"
/

DROP TABLE "APP_EMAILLOG"
/

DROP TABLE "APP_COORDINATOR"
/

*/
CREATE TABLE "APP_COORDINATOR" ( 
 "ID"                             NUMBER(10,0) NOT NULL,
 "TRICOORDINATOR_NM"              VARCHAR2(255) NULL,
 "TRICOORDINATOR_TITLE"           VARCHAR2(255) NULL,
 "TRICOORDINATOR_ADDRESS_LN1_DS"  VARCHAR2(255) NULL,
 "TRICOORDINATOR_ADDRESS_LN2_DS"  VARCHAR2(255) NULL,
 "TRICOORDINATOR_ADDRESS_CITY_NM" VARCHAR2(255) NULL,
 "TRICOORDINATOR_ADDRESS_STATE_C" VARCHAR2(2) NULL,
 "TRICOORDINATOR_ADDRESS_ZIP_CD"  VARCHAR2(10) NULL,
 "TRICOORDINATOR_PHONE_NR"        VARCHAR2(20) NULL,
 "TRICOORDINATOR_EMAIL"           VARCHAR2(255) NULL 
 )
/

CREATE TABLE "APP_EMAILLOG" ( 
 "EMAIL_LOG_ID"         NUMBER(10,0) NOT NULL,
 "TRI_SUB_ID"           VARCHAR2(255) NOT NULL,
 "SENT_DT"              DATE NOT NULL,
 "CONTACT_EMAIL_DS"     VARCHAR2(50) NOT NULL,
 "LAST_UPDATED_USER_ID" VARCHAR2(255) NOT NULL,
 "LAST_UPDATED_DT"      DATE NOT NULL 
 )
/

CREATE TABLE "APP_FI_TRIFID_COMMENT" ( 
 "TRIFID_COMMENT_ID"    NUMBER(10,0) NOT NULL,
 "TRIFID_ID_FK"         NUMBER(10,0) NOT NULL,
 "COMMENT_DS"           VARCHAR2(4000) NOT NULL,
 "LAST_UPDATED_USER_ID" VARCHAR2(255) NOT NULL,
 "LAST_UPDATED_DT"      DATE NOT NULL 
 )
/

CREATE TABLE "APP_FI_TRIFID_DELETE" ( 
 "TRIFID_DELETE_ID"     NUMBER(10,0) NOT NULL,
 "TRIFID_ID_FK"         NUMBER(10,0) NOT NULL,
 "TRI_SUB_ID"           VARCHAR2(255) NOT NULL,
 "LAST_UPDATED_USER_ID" VARCHAR2(255) NOT NULL,
 "LAST_UPDATED_DT"      DATE NOT NULL 
 )
/

CREATE TABLE "APP_FI_TRIFID" ( 
 "TRIFID_ID"            NUMBER(10,0) NOT NULL,
 "TRIFID"               VARCHAR2(100) NOT NULL,
 "AGENCYID"             VARCHAR2(100) NULL,
 "EPAID"                VARCHAR2(100) NULL,
 "INACTIVE_DT"          DATE NULL,
 "LAST_UPDATED_USER_ID" VARCHAR2(255) NOT NULL,
 "LAST_UPDATED_DT"      DATE NOT NULL,
 "AGENCYNAME"           VARCHAR2(100) NULL 
 )
/

CREATE TABLE "APP_LOOKUP_CTY_REG" ( 
 "ID"            FLOAT NOT NULL,
 "COUNTY"        NVARCHAR2(255) NOT NULL,
 "ECOLOGYREGION" NVARCHAR2(255) NOT NULL 
 )
/

CREATE TABLE "APP_MANUALSUBMISSIONLOG" ( 
 "MANUAL_SUBMISSION_LOG_ID" NUMBER(10,0) NOT NULL,
 "TRIFID_ID_FK"             NUMBER(10,0) NOT NULL,
 "REPORTING_YEAR_NR"        VARCHAR2(100) NOT NULL,
 "STATE_RECEIVED_DT"        DATE NOT NULL,
 "SUBMISSION_METHOD_DS"     VARCHAR2(10) NOT NULL,
 "LAST_UPDATED_USER_ID"     VARCHAR2(255) NOT NULL,
 "LAST_UPDATED_DT"          DATE DEFAULT SYSDATE NOT NULL 
 )
/

CREATE TABLE "TRI_CHEM" ( 
 "PK_GUID"           VARCHAR2(36) NOT NULL,
 "FK_GUID"           VARCHAR2(36) NOT NULL,
 "CAS_CLBER"         VARCHAR2(100) NULL,
 "CHEM_TXT"          VARCHAR2(100) NULL,
 "CHEM_MIXTURE_TXT"  VARCHAR2(100) NULL,
 "CHEM_ID"           VARCHAR2(100) NULL,
 "CHEM_REGISTRY"     VARCHAR2(100) NULL,
 "CHEM_REGISTRY_CTX" VARCHAR2(100) NULL,
 "DIOXIN_DIST1"      VARCHAR2(100) NULL,
 "DIOXIN_DIST2"      VARCHAR2(100) NULL,
 "DIOXIN_DIST3"      VARCHAR2(100) NULL,
 "DIOXIN_DIST4"      VARCHAR2(100) NULL,
 "DIOXIN_DIST5"      VARCHAR2(100) NULL,
 "DIOXIN_DIST6"      VARCHAR2(100) NULL,
 "DIOXIN_DIST7"      VARCHAR2(100) NULL,
 "DIOXIN_DIST8"      VARCHAR2(100) NULL,
 "DIOXIN_DIST9"      VARCHAR2(100) NULL,
 "DIOXIN_DIST10"     VARCHAR2(100) NULL,
 "DIOXIN_DIST11"     VARCHAR2(100) NULL,
 "DIOXIN_DIST12"     VARCHAR2(100) NULL,
 "DIOXIN_DIST13"     VARCHAR2(100) NULL,
 "DIOXIN_DIST14"     VARCHAR2(100) NULL,
 "DIOXIN_DIST15"     VARCHAR2(100) NULL,
 "DIOXIN_DIST16"     VARCHAR2(100) NULL,
 "DIOXIN_DIST17"     VARCHAR2(100) NULL 
 )
/

CREATE TABLE "TRI_FAC_DUN" ( 
 "PK_GUID"      VARCHAR2(36) NOT NULL,
 "FK_GUID"      VARCHAR2(36) NOT NULL,
 "FAC_DUN_CODE" VARCHAR2(9) NULL 
 )
/

CREATE TABLE "TRI_FAC_NAICS" ( 
 "PK_GUID"           VARCHAR2(36) NOT NULL,
 "FK_GUID"           VARCHAR2(36) NOT NULL,
 "FAC_NAICS"         VARCHAR2(100) NULL,
 "NAICS_PRIMARY_IND" VARCHAR2(100) NULL 
 )
/

CREATE TABLE "TRI_FAC_SIC" ( 
 "PK_GUID"         VARCHAR2(36) NOT NULL,
 "FK_GUID"         VARCHAR2(36) NOT NULL,
 "FAC_SIC"         VARCHAR2(100) NULL,
 "SIC_PRIMARY_IND" VARCHAR2(100) NULL 
 )
/

CREATE TABLE "TRI_FAC" ( 
 "PK_GUID"                   VARCHAR2(36) NOT NULL,
 "FK_GUID"                   VARCHAR2(36) NOT NULL,
 "FAC_ID"                    VARCHAR2(100) NULL,
 "FAC_SITE"                  VARCHAR2(100) NULL,
 "LOC_ADD_TXT"               VARCHAR2(100) NULL,
 "SUPP_LOC_TXT"              VARCHAR2(100) NULL,
 "LOCALITY"                  VARCHAR2(100) NULL,
 "STATE_CL_ID"               VARCHAR2(100) NULL,
 "STATE_CODE"                VARCHAR2(10) NULL,
 "STATE"                     VARCHAR2(50) NULL,
 "ADD_POSTAL_CODE"           VARCHAR2(50) NULL,
 "COUNTRY_CL_ID"             VARCHAR2(100) NULL,
 "COUNTRY_CODE"              VARCHAR2(10) NULL,
 "COUNTRY"                   VARCHAR2(50) NULL,
 "COUNTY_CL_ID"              VARCHAR2(100) NULL,
 "COUNTY_CODE"               VARCHAR2(100) NULL,
 "COUNTY"                    VARCHAR2(100) NULL,
 "TRIBAL_CL_ID"              VARCHAR2(100) NULL,
 "TRIBAL_CODE"               VARCHAR2(100) NULL,
 "TRIBAL"                    VARCHAR2(100) NULL,
 "TRIBAL_LAND"               VARCHAR2(100) NULL,
 "TRIBAL_LAND_IND"           VARCHAR2(100) NULL,
 "LOC_DESCN_TXT"             VARCHAR2(100) NULL,
 "MAIL_FAC_SITE"             VARCHAR2(100) NULL,
 "MAIL_ADD_TXT"              VARCHAR2(100) NULL,
 "SUPP_MAIL_ADD"             VARCHAR2(100) NULL,
 "MAIL_ADD_CITY"             VARCHAR2(100) NULL,
 "MAIL_ADD_POSTAL_CODE"      VARCHAR2(100) NULL,
 "PROVINCE_TXT"              VARCHAR2(100) NULL,
 "MAIL_ADD_STATE_CDLST"      VARCHAR2(100) NULL,
 "MAIL_ADD_STATE_CODE"       VARCHAR2(10) NULL,
 "MAIL_ADD_STATE"            VARCHAR2(100) NULL,
 "MAIL_ADD_COUNTRY_CDLST"    VARCHAR2(100) NULL,
 "MAIL_ADD_COUNTRY_CODE"     VARCHAR2(10) NULL,
 "MAIL_ADD_COUNTRY"          VARCHAR2(100) NULL,
 "LAT_ME"                    VARCHAR2(20) NULL,
 "LON_ME"                    VARCHAR2(20) NULL,
 "SRC_MAP_SCALE_CLBER"       VARCHAR2(100) NULL,
 "HOR_ME_VALUE"              VARCHAR2(100) NULL,
 "HOR_ME_UNIT_CODE"          VARCHAR2(100) NULL,
 "HOR_ME_UNIT"               VARCHAR2(100) NULL,
 "HOR_ME_PREC_TXT"           VARCHAR2(100) NULL,
 "HOR_RESULT_QFR_CODE"       VARCHAR2(100) NULL,
 "HOR_RESULT_QFR"            VARCHAR2(100) NULL,
 "HOR_METH_ID_CODE"          VARCHAR2(100) NULL,
 "HOR_METH"                  VARCHAR2(100) NULL,
 "HOR_METH_DESCN_TXT"        VARCHAR2(100) NULL,
 "HOR_METH_DEV_TXT"          VARCHAR2(100) NULL,
 "GEO_REF_POINT_CD"          VARCHAR2(100) NULL,
 "GEO_REF_POINT_NM"          VARCHAR2(100) NULL,
 "HOR_REF_DATUM_CD"          VARCHAR2(100) NULL,
 "HOR_REF_DATUM_NM"          VARCHAR2(100) NULL,
 "DATA_COLLECTION_DATE"      VARCHAR2(100) NULL,
 "LOC_COMS_TXT"              VARCHAR2(100) NULL,
 "VER_ME_VALUE"              VARCHAR2(100) NULL,
 "VER_ME_UNIT_CODE"          VARCHAR2(100) NULL,
 "VER_ME_UNIT"               VARCHAR2(100) NULL,
 "VER_ME_PREC_TXT"           VARCHAR2(100) NULL,
 "VER_RESULT_QFR_CODE"       VARCHAR2(100) NULL,
 "VER_RESULT_QFR"            VARCHAR2(100) NULL,
 "VER_METH_ID_CODE"          VARCHAR2(100) NULL,
 "VER_METH"                  VARCHAR2(100) NULL,
 "VER_METH_DESCN_TXT"        VARCHAR2(100) NULL,
 "VER_METH_DEV_TXT"          VARCHAR2(100) NULL,
 "GEO_REF_DATUM_CD"          VARCHAR2(100) NULL,
 "GEO_REF_DATUM_NM"          VARCHAR2(100) NULL,
 "VERIF_METH_ID"             VARCHAR2(100) NULL,
 "VERIF_METH"                VARCHAR2(100) NULL,
 "VERIF_METH_DESC"           VARCHAR2(100) NULL,
 "VERIF_METH_DEV"            VARCHAR2(100) NULL,
 "COORD_DATA_SRC_CODE"       VARCHAR2(100) NULL,
 "COORD_DATA_SRC"            VARCHAR2(100) NULL,
 "GEOMETRIC_TYPE_CODE"       VARCHAR2(100) NULL,
 "GEOMETRIC_TYPE"            VARCHAR2(100) NULL,
 "LAT_DEGREE_ME"             VARCHAR2(100) NULL,
 "LAT_MINUTE_ME"             VARCHAR2(100) NULL,
 "LAT_SECOND_ME"             VARCHAR2(100) NULL,
 "LON_DEGREE_ME"             VARCHAR2(100) NULL,
 "LON_MINUTE_ME"             VARCHAR2(100) NULL,
 "LON_SECOND_ME"             VARCHAR2(100) NULL,
 "PARENT_COMPANY_TXT"        VARCHAR2(100) NULL,
 "PARENT_DUN_CODE"           VARCHAR2(100) NULL,
 "FACILITY_ACCESS_CODE"      VARCHAR2(100) NULL,
 "PRI_YR_TECH_CONTACT_NAME"  VARCHAR2(100) NULL,
 "PRI_YR_TECH_CONTACT_PHONE" VARCHAR2(100) NULL 
 )
/

CREATE TABLE "TRI_NPDES_ID" ( 
 "PK_GUID"        VARCHAR2(36) NOT NULL,
 "FK_GUID"        VARCHAR2(36) NOT NULL,
 "NPDES_ID_CLBER" VARCHAR2(100) NULL 
 )
/

CREATE TABLE "TRI_OFFSITE_DISP_QTY" ( 
 "PK_GUID"                   VARCHAR2(36) NOT NULL,
 "FK_GUID"                   VARCHAR2(36) NOT NULL,
 "YEAR_OFFSET_ME"            VARCHAR2(100) NULL,
 "TOTAL_Q"                   VARCHAR2(100) NULL,
 "TOTAL_Q_NA_IND"            CHAR(1) NULL,
 "TOX_EQ_VAL1"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL2"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL3"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL4"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL5"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL6"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL7"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL8"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL9"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL10"              VARCHAR2(100) NULL,
 "TOX_EQ_VAL11"              VARCHAR2(100) NULL,
 "TOX_EQ_VAL12"              VARCHAR2(100) NULL,
 "TOX_EQ_VAL13"              VARCHAR2(100) NULL,
 "TOX_EQ_VAL14"              VARCHAR2(100) NULL,
 "TOX_EQ_VAL15"              VARCHAR2(100) NULL,
 "TOX_EQ_VAL16"              VARCHAR2(100) NULL,
 "TOX_EQ_VAL17"              VARCHAR2(100) NULL,
 "TOX_EQ_NA_IND"             VARCHAR2(100) NULL,
 "CALC_ROUNDING_HINT_NUMBER" VARCHAR2(100) NULL 
 )
/

CREATE TABLE "TRI_OFFSITE_ENERGY_REC_QTY" ( 
 "PK_GUID"                   VARCHAR2(36) NOT NULL,
 "FK_GUID"                   VARCHAR2(36) NOT NULL,
 "YEAR_OFFSET_ME"            VARCHAR2(100) NULL,
 "TOTAL_Q"                   VARCHAR2(100) NULL,
 "TOTAL_Q_NA_IND"            CHAR(1) NULL,
 "TOX_EQ_VAL1"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL2"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL3"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL4"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL5"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL6"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL7"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL8"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL9"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL10"              VARCHAR2(100) NULL,
 "TOX_EQ_VAL11"              VARCHAR2(100) NULL,
 "TOX_EQ_VAL12"              VARCHAR2(100) NULL,
 "TOX_EQ_VAL13"              VARCHAR2(100) NULL,
 "TOX_EQ_VAL14"              VARCHAR2(100) NULL,
 "TOX_EQ_VAL15"              VARCHAR2(100) NULL,
 "TOX_EQ_VAL16"              VARCHAR2(100) NULL,
 "TOX_EQ_VAL17"              VARCHAR2(100) NULL,
 "TOX_EQ_NA_IND"             VARCHAR2(100) NULL,
 "CALC_ROUNDING_HINT_NUMBER" VARCHAR2(100) NULL 
 )
/

CREATE TABLE "TRI_OFFSITE_RECYCLED_Q" ( 
 "PK_GUID"                   VARCHAR2(36) NOT NULL,
 "FK_GUID"                   VARCHAR2(36) NOT NULL,
 "YEAR_OFFSET_ME"            VARCHAR2(100) NULL,
 "TOTAL_Q"                   VARCHAR2(100) NULL,
 "TOTAL_Q_NA_IND"            CHAR(1) NULL,
 "TOX_EQ_VAL1"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL2"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL3"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL4"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL5"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL6"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL7"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL8"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL9"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL10"              VARCHAR2(100) NULL,
 "TOX_EQ_VAL11"              VARCHAR2(100) NULL,
 "TOX_EQ_VAL12"              VARCHAR2(100) NULL,
 "TOX_EQ_VAL13"              VARCHAR2(100) NULL,
 "TOX_EQ_VAL14"              VARCHAR2(100) NULL,
 "TOX_EQ_VAL15"              VARCHAR2(100) NULL,
 "TOX_EQ_VAL16"              VARCHAR2(100) NULL,
 "TOX_EQ_VAL17"              VARCHAR2(100) NULL,
 "TOX_EQ_NA_IND"             VARCHAR2(100) NULL,
 "CALC_ROUNDING_HINT_NUMBER" VARCHAR2(100) NULL 
 )
/

CREATE TABLE "TRI_OFFSITE_TREATED_Q" ( 
 "PK_GUID"                   VARCHAR2(36) NOT NULL,
 "FK_GUID"                   VARCHAR2(36) NOT NULL,
 "YEAR_OFFSET_ME"            VARCHAR2(100) NULL,
 "TOTAL_Q"                   VARCHAR2(100) NULL,
 "TOTAL_Q_NA_IND"            CHAR(1) NULL,
 "TOX_EQ_VAL1"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL2"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL3"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL4"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL5"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL6"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL7"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL8"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL9"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL10"              VARCHAR2(100) NULL,
 "TOX_EQ_VAL11"              VARCHAR2(100) NULL,
 "TOX_EQ_VAL12"              VARCHAR2(100) NULL,
 "TOX_EQ_VAL13"              VARCHAR2(100) NULL,
 "TOX_EQ_VAL14"              VARCHAR2(100) NULL,
 "TOX_EQ_VAL15"              VARCHAR2(100) NULL,
 "TOX_EQ_VAL16"              VARCHAR2(100) NULL,
 "TOX_EQ_VAL17"              VARCHAR2(100) NULL,
 "TOX_EQ_NA_IND"             VARCHAR2(100) NULL,
 "CALC_ROUNDING_HINT_NUMBER" VARCHAR2(100) NULL 
 )
/

CREATE TABLE "TRI_OFFSITE_UIC_DISP_QTY" ( 
 "PK_GUID"                   VARCHAR2(36) NOT NULL,
 "FK_GUID"                   VARCHAR2(36) NOT NULL,
 "YEAR_OFFSET_ME"            VARCHAR2(100) NULL,
 "TOTAL_Q"                   VARCHAR2(100) NULL,
 "TOTAL_Q_NA_IND"            CHAR(1) NULL,
 "TOX_EQ_VAL1"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL2"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL3"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL4"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL5"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL6"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL7"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL8"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL9"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL10"              VARCHAR2(100) NULL,
 "TOX_EQ_VAL11"              VARCHAR2(100) NULL,
 "TOX_EQ_VAL12"              VARCHAR2(100) NULL,
 "TOX_EQ_VAL13"              VARCHAR2(100) NULL,
 "TOX_EQ_VAL14"              VARCHAR2(100) NULL,
 "TOX_EQ_VAL15"              VARCHAR2(100) NULL,
 "TOX_EQ_VAL16"              VARCHAR2(100) NULL,
 "TOX_EQ_VAL17"              VARCHAR2(100) NULL,
 "TOX_EQ_NA_IND"             VARCHAR2(100) NULL,
 "CALC_ROUNDING_HINT_NUMBER" VARCHAR2(100) NULL 
 )
/

CREATE TABLE "TRI_ONSITE_DISP_QTY" ( 
 "PK_GUID"                   VARCHAR2(36) NOT NULL,
 "FK_GUID"                   VARCHAR2(36) NOT NULL,
 "YEAR_OFFSET_ME"            VARCHAR2(100) NULL,
 "TOTAL_Q"                   VARCHAR2(100) NULL,
 "TOTAL_Q_NA_IND"            CHAR(1) NULL,
 "TOX_EQ_VAL1"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL2"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL3"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL4"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL5"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL6"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL7"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL8"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL9"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL10"              VARCHAR2(100) NULL,
 "TOX_EQ_VAL11"              VARCHAR2(100) NULL,
 "TOX_EQ_VAL12"              VARCHAR2(100) NULL,
 "TOX_EQ_VAL13"              VARCHAR2(100) NULL,
 "TOX_EQ_VAL14"              VARCHAR2(100) NULL,
 "TOX_EQ_VAL15"              VARCHAR2(100) NULL,
 "TOX_EQ_VAL16"              VARCHAR2(100) NULL,
 "TOX_EQ_VAL17"              VARCHAR2(100) NULL,
 "TOX_EQ_NA_IND"             VARCHAR2(100) NULL,
 "CALC_ROUNDING_HINT_NUMBER" VARCHAR2(100) NULL 
 )
/

CREATE TABLE "TRI_ONSITE_ENERGY_RCV_QTY" ( 
 "PK_GUID"                   VARCHAR2(36) NOT NULL,
 "FK_GUID"                   VARCHAR2(36) NOT NULL,
 "YEAR_OFFSET_ME"            VARCHAR2(100) NULL,
 "TOTAL_Q"                   VARCHAR2(100) NULL,
 "TOTAL_Q_NA_IND"            CHAR(1) NULL,
 "TOX_EQ_VAL1"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL2"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL3"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL4"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL5"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL6"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL7"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL8"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL9"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL10"              VARCHAR2(100) NULL,
 "TOX_EQ_VAL11"              VARCHAR2(100) NULL,
 "TOX_EQ_VAL12"              VARCHAR2(100) NULL,
 "TOX_EQ_VAL13"              VARCHAR2(100) NULL,
 "TOX_EQ_VAL14"              VARCHAR2(100) NULL,
 "TOX_EQ_VAL15"              VARCHAR2(100) NULL,
 "TOX_EQ_VAL16"              VARCHAR2(100) NULL,
 "TOX_EQ_VAL17"              VARCHAR2(100) NULL,
 "TOX_EQ_NA_IND"             VARCHAR2(100) NULL,
 "CALC_ROUNDING_HINT_NUMBER" VARCHAR2(100) NULL 
 )
/

CREATE TABLE "TRI_ONSITE_RCV_PROC" ( 
 "PK_GUID"              VARCHAR2(36) NOT NULL,
 "FK_GUID"              VARCHAR2(36) NOT NULL,
 "ENERGY_RCV_METH_CODE" VARCHAR2(100) NULL,
 "ENERGY_RCV_NA_IND"    CHAR(1) NULL 
 )
/

CREATE TABLE "TRI_ONSITE_RECYCG_PROC" ( 
 "PK_GUID"                 VARCHAR2(36) NOT NULL,
 "FK_GUID"                 VARCHAR2(36) NOT NULL,
 "ONSITE_RECYCG_METH_CODE" VARCHAR2(100) NULL,
 "ONSITE_RECYCG_NA_IND"    CHAR(1) NULL 
 )
/

CREATE TABLE "TRI_ONSITE_RECYCLED_Q" ( 
 "PK_GUID"                   VARCHAR2(36) NOT NULL,
 "FK_GUID"                   VARCHAR2(36) NOT NULL,
 "YEAR_OFFSET_ME"            VARCHAR2(100) NULL,
 "TOTAL_Q"                   VARCHAR2(100) NULL,
 "TOTAL_Q_NA_IND"            CHAR(1) NULL,
 "TOX_EQ_VAL1"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL2"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL3"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL4"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL5"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL6"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL7"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL8"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL9"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL10"              VARCHAR2(100) NULL,
 "TOX_EQ_VAL11"              VARCHAR2(100) NULL,
 "TOX_EQ_VAL12"              VARCHAR2(100) NULL,
 "TOX_EQ_VAL13"              VARCHAR2(100) NULL,
 "TOX_EQ_VAL14"              VARCHAR2(100) NULL,
 "TOX_EQ_VAL15"              VARCHAR2(100) NULL,
 "TOX_EQ_VAL16"              VARCHAR2(100) NULL,
 "TOX_EQ_VAL17"              VARCHAR2(100) NULL,
 "TOX_EQ_NA_IND"             VARCHAR2(100) NULL,
 "CALC_ROUNDING_HINT_NUMBER" VARCHAR2(100) NULL 
 )
/

CREATE TABLE "TRI_ONSITE_RELEASE_Q" ( 
 "PK_GUID"                       VARCHAR2(36) NOT NULL,
 "FK_GUID"                       VARCHAR2(36) NOT NULL,
 "EI_MEDIUM_CODE"                VARCHAR2(100) NULL,
 "WASTE_Q_ME"                    VARCHAR2(100) NULL,
 "WASTE_Q_NA_IND"                CHAR(1) NULL,
 "WASTE_Q_RANGE_CODE"            VARCHAR2(100) NULL,
 "Q_BASIS_EST_CD"                VARCHAR2(100) NULL,
 "Q_BASIS_NA_IND"                CHAR(1) NULL,
 "WATER_SEQ_CLBER"               VARCHAR2(100) NULL,
 "STREAM"                        VARCHAR2(100) NULL,
 "RELEASE_STORM_WATER"           VARCHAR2(100) NULL,
 "RELEASE_STORM_NA_IND"          CHAR(1) NULL,
 "TOX_EQ_VAL1"                   VARCHAR2(100) NULL,
 "TOX_EQ_VAL2"                   VARCHAR2(100) NULL,
 "TOX_EQ_VAL3"                   VARCHAR2(100) NULL,
 "TOX_EQ_VAL4"                   VARCHAR2(100) NULL,
 "TOX_EQ_VAL5"                   VARCHAR2(100) NULL,
 "TOX_EQ_VAL6"                   VARCHAR2(100) NULL,
 "TOX_EQ_VAL7"                   VARCHAR2(100) NULL,
 "TOX_EQ_VAL8"                   VARCHAR2(100) NULL,
 "TOX_EQ_VAL9"                   VARCHAR2(100) NULL,
 "TOX_EQ_VAL10"                  VARCHAR2(100) NULL,
 "TOX_EQ_VAL11"                  VARCHAR2(100) NULL,
 "TOX_EQ_VAL12"                  VARCHAR2(100) NULL,
 "TOX_EQ_VAL13"                  VARCHAR2(100) NULL,
 "TOX_EQ_VAL14"                  VARCHAR2(100) NULL,
 "TOX_EQ_VAL15"                  VARCHAR2(100) NULL,
 "TOX_EQ_VAL16"                  VARCHAR2(100) NULL,
 "TOX_EQ_VAL17"                  VARCHAR2(100) NULL,
 "TOX_EQ_NA_IND"                 VARCHAR2(100) NULL,
 "WASTE_Q_CATASTROPHIC_MEASURE"  VARCHAR2(100) NULL,
 "WASTE_Q_RANGE_NUM_BASIS_VALUE" VARCHAR2(100) NULL 
 )
/

CREATE TABLE "TRI_ONSITE_TREATED_Q" ( 
 "PK_GUID"                   VARCHAR2(36) NOT NULL,
 "FK_GUID"                   VARCHAR2(36) NOT NULL,
 "YEAR_OFFSET_ME"            VARCHAR2(100) NULL,
 "TOTAL_Q"                   VARCHAR2(100) NULL,
 "TOTAL_Q_NA_IND"            CHAR(1) NULL,
 "TOX_EQ_VAL1"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL2"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL3"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL4"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL5"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL6"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL7"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL8"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL9"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL10"              VARCHAR2(100) NULL,
 "TOX_EQ_VAL11"              VARCHAR2(100) NULL,
 "TOX_EQ_VAL12"              VARCHAR2(100) NULL,
 "TOX_EQ_VAL13"              VARCHAR2(100) NULL,
 "TOX_EQ_VAL14"              VARCHAR2(100) NULL,
 "TOX_EQ_VAL15"              VARCHAR2(100) NULL,
 "TOX_EQ_VAL16"              VARCHAR2(100) NULL,
 "TOX_EQ_VAL17"              VARCHAR2(100) NULL,
 "TOX_EQ_NA_IND"             VARCHAR2(100) NULL,
 "CALC_ROUNDING_HINT_NUMBER" VARCHAR2(100) NULL 
 )
/

CREATE TABLE "TRI_ONSITE_UIC_DISP_QTY" ( 
 "PK_GUID"                   VARCHAR2(36) NOT NULL,
 "FK_GUID"                   VARCHAR2(36) NULL,
 "YEAR_OFFSET_ME"            VARCHAR2(100) NULL,
 "TOTAL_Q"                   VARCHAR2(100) NULL,
 "TOTAL_Q_NA_IND"            CHAR(1) NULL,
 "TOX_EQ_VAL1"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL2"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL3"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL4"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL5"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL6"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL7"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL8"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL9"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL10"              VARCHAR2(100) NULL,
 "TOX_EQ_VAL11"              VARCHAR2(100) NULL,
 "TOX_EQ_VAL12"              VARCHAR2(100) NULL,
 "TOX_EQ_VAL13"              VARCHAR2(100) NULL,
 "TOX_EQ_VAL14"              VARCHAR2(100) NULL,
 "TOX_EQ_VAL15"              VARCHAR2(100) NULL,
 "TOX_EQ_VAL16"              VARCHAR2(100) NULL,
 "TOX_EQ_VAL17"              VARCHAR2(100) NULL,
 "TOX_EQ_NA_IND"             VARCHAR2(100) NULL,
 "CALC_ROUNDING_HINT_NUMBER" VARCHAR2(100) NULL 
 )
/

CREATE TABLE "TRI_RCRA_ID" ( 
 "PK_GUID"       VARCHAR2(36) NOT NULL,
 "FK_GUID"       VARCHAR2(36) NOT NULL,
 "RCRA_ID_CLBER" VARCHAR2(100) NULL 
 )
/

CREATE TABLE "TRI_REPLACED_REPORT_ID" ( 
 "PK_GUID"            VARCHAR2(36) NOT NULL,
 "FK_GUID"            VARCHAR2(36) NOT NULL,
 "REPLACED_REPORT_ID" VARCHAR2(100) NULL 
 )
/

CREATE TABLE "TRI_REPORT_VALIDATION" ( 
 "PK_GUID"                     VARCHAR2(36) NOT NULL,
 "FK_GUID"                     VARCHAR2(36) NOT NULL,
 "VALIDATION_ENTITY_NAME_TEXT" VARCHAR2(100) NULL,
 "VALIDATION_MESSAGE_CODE"     VARCHAR2(100) NULL,
 "VALIDATION_MESSAGE_TEXT"     VARCHAR2(100) NULL,
 "EPA_ERROR_SEVERITY_CODE"     VARCHAR2(100) NULL 
 )
/

CREATE TABLE "TRI_REPORT" ( 
 "PK_GUID"                        VARCHAR2(36) NOT NULL,
 "FK_GUID"                        VARCHAR2(36) NOT NULL,
 "REPORT_ID"                      VARCHAR2(100) NULL,
 "REPORT_POST_DATE"               VARCHAR2(50) NULL,
 "REPORT_REC_DATE"                VARCHAR2(50) NULL,
 "REPORT_ORIG_POST_DATE"          VARCHAR2(50) NULL,
 "REPORT_ORIG_REC_DATE"           VARCHAR2(50) NULL,
 "REPORT_SUB_METH_CODE"           VARCHAR2(100) NULL,
 "REPORT_EPA_PASSED_VALID_IND"    CHAR(1) NULL,
 "REPORT_EPA_PROCESSING_STATUS_C" VARCHAR2(100) NULL,
 "UNALTERED_REPORT_IND"           VARCHAR2(100) NULL,
 "REPORT_TYPE_CODE"               VARCHAR2(100) NULL,
 "SUB_REP_YEAR"                   VARCHAR2(100) NULL,
 "REPORT_DUE_DATE"                VARCHAR2(50) NULL,
 "REVISION_IND"                   VARCHAR2(100) NULL,
 "CHEM_TRADE_SECRET_IND"          VARCHAR2(100) NULL,
 "SUB_SANITIZED_IND"              VARCHAR2(100) NULL,
 "CERTIFIER"                      VARCHAR2(100) NULL,
 "CERTIFIER_TIT_TXT"              VARCHAR2(100) NULL,
 "CERT_SIGNED_DATE"               VARCHAR2(100) NULL,
 "SUB_ENTIRE_FAC_IND"             VARCHAR2(100) NULL,
 "SUB_PARTIAL_FAC_ID"             VARCHAR2(100) NULL,
 "SUB_FEDERAL_FAC_ID"             VARCHAR2(100) NULL,
 "SUB_CO_FAC_INDIC"               VARCHAR2(100) NULL,
 "TECH_CONT"                      VARCHAR2(100) NULL,
 "TECH_CONT_PHONE_TXT"            VARCHAR2(100) NULL,
 "TECH_CONT_EMAIL_ADDRES"         VARCHAR2(100) NULL,
 "PUB_CONT_ID"                    VARCHAR2(100) NULL,
 "PUB_CONT_TIT_TXT"               VARCHAR2(100) NULL,
 "PUB_CONT"                       VARCHAR2(100) NULL,
 "PUB_CONT_PHONE_TXT"             VARCHAR2(50) NULL,
 "CHEM_ANC_USAGE_IND"             VARCHAR2(100) NULL,
 "CHEM_ARTICLE_COMP_ID"           VARCHAR2(100) NULL,
 "CHEM_BYPRODUCT_IND"             VARCHAR2(100) NULL,
 "CHEM_FORMULATION_COMP"          VARCHAR2(100) NULL,
 "CHEM_IMPORTED_IND"              VARCHAR2(100) NULL,
 "CHEM_MANUFACTURE_AID_ID"        VARCHAR2(100) NULL,
 "CHEM_MANUFACTURE_IMPURITY"      VARCHAR2(100) NULL,
 "CHEM_PROC_IMPURITY_ID"          VARCHAR2(100) NULL,
 "CHEM_PROCING_AID_ID"            VARCHAR2(100) NULL,
 "CHEM_PRODUCED_IND"              VARCHAR2(100) NULL,
 "CHEM_REACTANT_IND"              VARCHAR2(100) NULL,
 "CHEM_REP_IND"                   VARCHAR2(100) NULL,
 "CHEM_SALES_DIST_ID"             VARCHAR2(100) NULL,
 "CHEM_USED_PROCED_ID"            VARCHAR2(100) NULL,
 "MAX_CHEM_AMOUNT_CODE"           VARCHAR2(100) NULL,
 "WASTE_Q_ME"                     VARCHAR2(100) NULL,
 "WASTE_Q_ME_NA_IND"              CHAR(1) NULL,
 "WASTE_Q_RANGE_CODE"             VARCHAR2(100) NULL,
 "Q_BASIS_EST_CODE"               VARCHAR2(100) NULL,
 "Q_BASIS_EST_NA_IND"             CHAR(1) NULL,
 "ONE_TIME_RELEASE_Q"             VARCHAR2(100) NULL,
 "ONE_TIME_NA_IND"                CHAR(1) NULL,
 "PRODUCTION_RATIO_ME"            VARCHAR2(100) NULL,
 "PRODUCTION_RATIO_NA_IND"        CHAR(1) NULL,
 "SUB_ADDITIONAL_DATA_ID"         VARCHAR2(100) NULL,
 "OPT_INF_TXT"                    VARCHAR2(4000) NULL,
 "PUB_CONT_EMAIL_ADDRES"          VARCHAR2(100) NULL,
 "CHEM_RPT_REV_CD_1"              VARCHAR2(100) NULL,
 "CHEM_RPT_REV_CD_2"              VARCHAR2(100) NULL,
 "CHEM_RPT_WD_CD_1"               VARCHAR2(100) NULL,
 "CHEM_RPT_WD_CD_2"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL1_POTW"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL2_POTW"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL3_POTW"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL4_POTW"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL5_POTW"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL6_POTW"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL7_POTW"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL8_POTW"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL9_POTW"               VARCHAR2(100) NULL,
 "TOX_EQ_VAL10_POTW"              VARCHAR2(100) NULL,
 "TOX_EQ_VAL11_POTW"              VARCHAR2(100) NULL,
 "TOX_EQ_VAL12_POTW"              VARCHAR2(100) NULL,
 "TOX_EQ_VAL13_POTW"              VARCHAR2(100) NULL,
 "TOX_EQ_VAL14_POTW"              VARCHAR2(100) NULL,
 "TOX_EQ_VAL15_POTW"              VARCHAR2(100) NULL,
 "TOX_EQ_VAL16_POTW"              VARCHAR2(100) NULL,
 "TOX_EQ_VAL17_POTW"              VARCHAR2(100) NULL,
 "TOX_EQ_NA_IND_POTW"             VARCHAR2(100) NULL,
 "WASTE_Q_CATASTROPHIC_MEASURE"   VARCHAR2(100) NULL,
 "WASTE_Q_RANGE_NUM_BASIS_VALUE"  VARCHAR2(100) NULL,
 "Q_DISP_LANDFILL_PERCENT_VALUE"  VARCHAR2(100) NULL,
 "Q_DISP_OTHER_PERCENT_VALUE"     VARCHAR2(100) NULL,
 "Q_TREATED_PERCENT_VALUE"        VARCHAR2(100) NULL,
 "TOX_EQ_VAL1_ONETIME"            VARCHAR2(100) NULL,
 "TOX_EQ_VAL2_ONETIME"            VARCHAR2(100) NULL,
 "TOX_EQ_VAL3_ONETIME"            VARCHAR2(100) NULL,
 "TOX_EQ_VAL4_ONETIME"            VARCHAR2(100) NULL,
 "TOX_EQ_VAL5_ONETIME"            VARCHAR2(100) NULL,
 "TOX_EQ_VAL6_ONETIME"            VARCHAR2(100) NULL,
 "TOX_EQ_VAL7_ONETIME"            VARCHAR2(100) NULL,
 "TOX_EQ_VAL8_ONETIME"            VARCHAR2(100) NULL,
 "TOX_EQ_VAL9_ONETIME"            VARCHAR2(100) NULL,
 "TOX_EQ_VAL10_ONETIME"           VARCHAR2(100) NULL,
 "TOX_EQ_VAL11_ONETIME"           VARCHAR2(100) NULL,
 "TOX_EQ_VAL12_ONETIME"           VARCHAR2(100) NULL,
 "TOX_EQ_VAL13_ONETIME"           VARCHAR2(100) NULL,
 "TOX_EQ_VAL14_ONETIME"           VARCHAR2(100) NULL,
 "TOX_EQ_VAL15_ONETIME"           VARCHAR2(100) NULL,
 "TOX_EQ_VAL16_ONETIME"           VARCHAR2(100) NULL,
 "TOX_EQ_VAL17_ONETIME"           VARCHAR2(100) NULL,
 "TOX_EQ_NA_IND_ONETIME"          VARCHAR2(100) NULL,
 "CALC_ROUNDING_HINT_NUMBER"      VARCHAR2(100) NULL 
 )
/

CREATE TABLE "TRI_SRC_RED_ACT" ( 
 "PK_GUID"          VARCHAR2(36) NOT NULL,
 "FK_GUID"          VARCHAR2(36) NOT NULL,
 "SRC_RED_SEQ_CL"   VARCHAR2(100) NULL,
 "SRC_RED_ACT_CODE" VARCHAR2(100) NULL,
 "SRC_RED_NA_IND"   CHAR(1) NULL 
 )
/

CREATE TABLE "TRI_SRC_RED_METH_CD" ( 
 "PK_GUID"           VARCHAR2(36) NOT NULL,
 "FK_GUID"           VARCHAR2(36) NOT NULL,
 "SRC_RED_METH_CODE" VARCHAR2(100) NULL,
 "SRC_RED_NA_IND"    CHAR(1) NULL 
 )
/

CREATE TABLE "TRI_SUB" ( 
 "PK_GUID"        VARCHAR2(36) NOT NULL,
 "TRI_SUB_ID"     VARCHAR2(255) NOT NULL,
 "INSERTED_DATE"  DATE DEFAULT SYSDATE NOT NULL,
 "TRANSACTION_ID" VARCHAR2(255) NOT NULL 
 )
/

CREATE TABLE "TRI_TRANSFER_LOC" ( 
 "PK_GUID"             VARCHAR2(36) NOT NULL,
 "FK_GUID"             VARCHAR2(36) NOT NULL,
 "TRANSFER_LOC_SEQ_CL" VARCHAR2(100) NULL,
 "POTW_IND"            VARCHAR2(100) NULL,
 "FAC_SITE"            VARCHAR2(100) NULL,
 "LOC_ADD_TXT"         VARCHAR2(100) NULL,
 "SUPP_LOC_TXT"        VARCHAR2(100) NULL,
 "LOCALITY"            VARCHAR2(100) NULL,
 "STATE"               VARCHAR2(100) NULL,
 "ADD_POSTAL_CODE"     VARCHAR2(100) NULL,
 "COUNTY"              VARCHAR2(100) NULL,
 "CONTROLLED_LOC_IND"  VARCHAR2(100) NULL,
 "RCRA_ID_CLBER"       VARCHAR2(100) NULL 
 )
/

CREATE TABLE "TRI_TRANSFER_Q" ( 
 "PK_GUID"                       VARCHAR2(36) NOT NULL,
 "FK_GUID"                       VARCHAR2(36) NOT NULL,
 "TRANSFER_SEQ_CLBER"            VARCHAR2(100) NULL,
 "WASTE_Q_ME"                    VARCHAR2(100) NULL,
 "WASTE_Q_RANGE_CODE"            VARCHAR2(100) NULL,
 "WASTE_Q_NA_IND"                CHAR(1) NULL,
 "Q_BASIS_EST_CODE"              VARCHAR2(100) NULL,
 "Q_BASIS_EST_NA_IND"            CHAR(1) NULL,
 "WASTE_MANAGEMENT_CODE"         VARCHAR2(100) NULL,
 "TOX_EQ_VAL1"                   VARCHAR2(100) NULL,
 "TOX_EQ_VAL2"                   VARCHAR2(100) NULL,
 "TOX_EQ_VAL3"                   VARCHAR2(100) NULL,
 "TOX_EQ_VAL4"                   VARCHAR2(100) NULL,
 "TOX_EQ_VAL5"                   VARCHAR2(100) NULL,
 "TOX_EQ_VAL6"                   VARCHAR2(100) NULL,
 "TOX_EQ_VAL7"                   VARCHAR2(100) NULL,
 "TOX_EQ_VAL8"                   VARCHAR2(100) NULL,
 "TOX_EQ_VAL9"                   VARCHAR2(100) NULL,
 "TOX_EQ_VAL10"                  VARCHAR2(100) NULL,
 "TOX_EQ_VAL11"                  VARCHAR2(100) NULL,
 "TOX_EQ_VAL12"                  VARCHAR2(100) NULL,
 "TOX_EQ_VAL13"                  VARCHAR2(100) NULL,
 "TOX_EQ_VAL14"                  VARCHAR2(100) NULL,
 "TOX_EQ_VAL15"                  VARCHAR2(100) NULL,
 "TOX_EQ_VAL16"                  VARCHAR2(100) NULL,
 "TOX_EQ_VAL17"                  VARCHAR2(100) NULL,
 "TOX_EQ_NA_IND"                 VARCHAR2(100) NULL,
 "WASTE_Q_CATASTROPHIC_MEASURE"  VARCHAR2(100) NULL,
 "WASTE_Q_RANGE_NUM_BASIS_VALUE" VARCHAR2(100) NULL 
 )
/

CREATE TABLE "TRI_UIC_ID" ( 
 "PK_GUID"      VARCHAR2(36) NOT NULL,
 "FK_GUID"      VARCHAR2(36) NOT NULL,
 "UIC_ID_CLBER" VARCHAR2(100) NULL 
 )
/

CREATE TABLE "TRI_WASTE_TREAT_DTL" ( 
 "PK_GUID"                VARCHAR2(36) NOT NULL,
 "FK_GUID"                VARCHAR2(36) NOT NULL,
 "WASTE_STREAM_SEQ_CLBER" VARCHAR2(100) NULL,
 "WASTE_STREAM_TYPE_CODE" VARCHAR2(100) NULL,
 "INFLUENT_CONC_RANGE_C"  VARCHAR2(100) NULL,
 "TREAT_EFF_EST_PCT"      VARCHAR2(100) NULL,
 "TREAT_EFF_RANGE_CD"     VARCHAR2(100) NULL,
 "TREAT_EFF_NA_IND"       CHAR(1) NULL,
 "OPERATING_DATA_IND"     VARCHAR2(100) NULL,
 "WASTE_TREAT_NA_IND"     CHAR(1) NULL 
 )
/

CREATE TABLE "TRI_WASTE_TREAT_METH" ( 
 "PK_GUID"               VARCHAR2(36) NOT NULL,
 "FK_GUID"               VARCHAR2(36) NOT NULL,
 "WASTE_TREAT_SEQ_CL"    VARCHAR2(100) NULL,
 "WASTE_TREAT_METH_CODE" VARCHAR2(100) NULL 
 )
/

CREATE FORCE VIEW "V_BRS_CHEM_DDL" ( "CHEM_TXT" )
AS
SELECT
/*******************************************************************************
Full Name:          V_TRI_BROWSE_TRI_SUBMISSIONS_CHEMICALS_DDL
Condensed Name:     V_BRS_CHEM_DDL
Author:             TK Conrad
Create date:        2007-05-18
Description:        Fills the drop-down-list on the Browse TRI Submissions page.
Conversion Author:  Suresh Sikharam
Conversion Date:    02-29-2008
*******************************************************************************/
  DISTINCT C.CHEM_TXT
  FROM TRI_CHEM C 
/

CREATE FORCE VIEW "V_BRS_SEARCH" ( "REPORT_YEAR", "DISPLAY_NAME", "TRIF_ID", "FAC_NAME", "AGENCY_NAME", "ADDRESS", "ZIP", "COUNTY", "CITY", "FS_ID", "EPA_ID", "RECEIVED_DATE", "CHEMS" )
AS
SELECT
 TO_NUMBER(RTRIM(R.SUB_REP_YEAR)) AS REPORT_YEAR
, CASE
  WHEN (T.AgencyName = '' OR T .AgencyName IS NULL)
  THEN F.FAC_SITE
  ELSE T.AgencyName
 END AS DISPLAY_NAME
, UPPER(F.FAC_ID) AS TRIF_ID
, F.FAC_SITE AS FAC_NAME
, T.AgencyName AS AGENCY_NAME
, COALESCE (F.LOC_ADD_TXT || ', ', '') ||
 COALESCE (F.LOCALITY || ', ', '') ||
 COALESCE (F.STATE || ', ', '') ||
 COALESCE (F.ADD_POSTAL_CODE, '') AS ADDRESS
,	F.ADD_POSTAL_CODE AS ZIP
,	F.COUNTY
,	F.LOCALITY AS CITY
, T.AGENCYID AS FS_ID
, T.EPAID AS EPA_ID
, S.INSERTED_DATE AS RECEIVED_DATE
, UPPER(C.CHEM_TXT) AS CHEMS

FROM TRI_REPORT R
JOIN TRI_SUB S ON R.FK_GUID = S.PK_GUID
JOIN TRI_FAC F ON F.FK_GUID = S.PK_GUID
LEFT JOIN TRI_CHEM C ON C.FK_GUID = R.PK_GUID
LEFT JOIN App_FI_TRIFID T ON F.FAC_ID = T.TRIFID
LEFT JOIN App_FI_TRIFID_Delete D ON
 D.TRIFID_ID_FK = T.TRIFID_ID
AND
 D.TRI_SUB_ID = S.TRI_SUB_ID

WHERE
 D.TRIFID_DELETE_ID IS NULL
AND
 T.Inactive_DT IS NULL 
/

CREATE FORCE VIEW "V_EPA_DATASET" ( "SUB_ID", "FAC_NAME", "TRIFID", "TECH_CONT", "TECH_CONT_EMAIL_ADDRESS", "REPORT_TYPE_CODE", "SUB_REP_YEAR", "CHEM_TXT" )
AS
SELECT

S.TRI_SUB_ID AS SUB_ID
,F.FAC_SITE AS FAC_NAME
,F.FAC_ID AS TRIFID
,R.TECH_CONT AS TECH_CONT
,R.TECH_CONT_EMAIL_ADDRES AS TECH_CONT_EMAIL_ADDRESS
,'Form ' || SUBSTR(REVERSE(R.REPORT_TYPE_CODE),1,1) AS REPORT_TYPE_CODE
,R.SUB_REP_YEAR AS SUB_REP_YEAR
,C.CHEM_TXT AS CHEM_TXT

FROM TRI_SUB S
JOIN TRI_FAC F ON S.PK_GUID = F.FK_GUID
JOIN TRI_REPORT R ON S.PK_GUID = R.FK_GUID
JOIN TRI_CHEM C ON R.PK_GUID = C.FK_GUID 
/

CREATE FORCE VIEW "V_EPA_SUB_CHEM" ( "SUB_ID", "REPORT_TYPE_CODE", "SUB_REP_YEAR", "CHEM_TXT" )
AS
SELECT DISTINCT S.TRI_SUB_ID AS SUB_ID, 'Form ' || SUBSTR(REVERSE(R.REPORT_TYPE_CODE),1 , 1) AS REPORT_TYPE_CODE, R.SUB_REP_YEAR, C.CHEM_TXT
FROM         TRI_SUB S INNER JOIN
                      TRI_FAC F ON S.PK_GUID = F.FK_GUID INNER JOIN
                      TRI_REPORT R ON S.PK_GUID = R.FK_GUID INNER JOIN
                      TRI_CHEM C ON R.PK_GUID = C.FK_GUID

WHERE NOT EXISTS
(
SELECT * FROM App_EmailLog E
WHERE E.TRI_SUB_ID = S.PK_GUID
) 
/

CREATE FORCE VIEW "V_EPA_SUB" ( "SUB_ID", "FAC_NAME", "TRIFID", "TECH_CONT", "TECH_CONT_EMAIL_ADDRESS" )
AS
SELECT DISTINCT 
                      S.TRI_SUB_ID AS SUB_ID, F.FAC_SITE AS FAC_NAME, F.FAC_ID AS TRIFID, R.TECH_CONT, 
                      R.TECH_CONT_EMAIL_ADDRES AS TECH_CONT_EMAIL_ADDRESS
FROM         TRI_SUB S INNER JOIN
                      TRI_FAC F ON S.PK_GUID = F.FK_GUID INNER JOIN
                      TRI_REPORT R ON S.PK_GUID = R.FK_GUID

WHERE NOT EXISTS
(
SELECT * FROM App_EmailLog E
WHERE E.TRI_SUB_ID = S.PK_GUID
) 
/

CREATE FORCE VIEW "V_EXT_CONTACT_D" ( "FSID", "ECY ID", "TRIFID", "Facility Name", "AKA", "Address 1", "Address 2", "CITY", "COUNTY", "ZIP", "Mail Name", "Mail Add 1", "Mail Add 2", "Mail City", "Mail State", "Mail Zip", "Mail Province", "Mail Country", "Mail Country Code", "Pub Contact", "Pub Phone", "Pub Email", "Tech Contact", "Tech Phone", "Tech Email", "ECY Region", "YEAR", "RECEIVED", "PK_GUID_FAC", "FK_GUID_FAC", "SUBMISSION_REPORTING_YEAR", "CHEMICAL_NAME_TEXT", "RECEIPTRECEIVEDDATE" )
AS
SELECT     FI.FS_ID AS FSID, FI.EPA_ID AS "ECY ID", UPPER(F.FAC_ID) AS TRIFID, F.FAC_SITE AS "Facility Name", T.AgencyName AS AKA, 
                      F.LOC_ADD_TXT AS "Address 1", F.SUPP_LOC_TXT AS "Address 2", F.LOCALITY AS City, F.COUNTY, F.ADD_POSTAL_CODE AS Zip, 
                      F.MAIL_FAC_SITE AS "Mail Name", F.MAIL_ADD_TXT AS "Mail Add 1", F.SUPP_MAIL_ADD AS "Mail Add 2", F.MAIL_ADD_CITY AS "Mail City", 
                      F.MAIL_ADD_STATE AS "Mail State", F.MAIL_ADD_POSTAL_CODE AS "Mail Zip", F.PROVINCE_TXT AS "Mail Province", 
                      F.MAIL_ADD_COUNTRY AS "Mail Country", F.MAIL_ADD_COUNTRY_CODE AS "Mail Country Code", R.PUB_CONT AS "Pub Contact", 
                      R.PUB_CONT_PHONE_TXT AS "Pub Phone", LOWER(R.PUB_CONT_EMAIL_ADDRES) AS "Pub Email", R.TECH_CONT AS "Tech Contact", 
                      R.TECH_CONT_PHONE_TXT AS "Tech Phone", LOWER(R.TECH_CONT_EMAIL_ADDRES) AS "Tech Email", CTYREG.EcologyRegion AS "ECY Region", 
                      MAX(R.SUB_REP_YEAR) AS Year, TO_CHAR(S.INSERTED_DATE, 'DD/MM/YYYYY') AS Received, F.PK_GUID AS PK_GUID_FAC, 
                      F.FK_GUID AS FK_GUID_FAC, MAX(R.SUB_REP_YEAR) AS SUBMISSION_REPORTING_YEAR,  CAST(NULL AS VARCHAR(255)) AS CHEMICAL_NAME_TEXT,
                      TO_CHAR(MAN.State_Received_DT, 'DD/MM/YYYY') AS ReceiptReceivedDate
FROM         TRI_REPORT R INNER JOIN
                      TRI_SUB S ON R.FK_GUID = S.PK_GUID INNER JOIN
                      TRI_FAC F ON F.FK_GUID = S.PK_GUID INNER JOIN
                      TRI_CHEM C ON C.FK_GUID = R.PK_GUID LEFT OUTER JOIN
                      V_FAC_IDENT FI ON UPPER(F.FAC_ID) = FI.TRIFID LEFT OUTER JOIN
                      TRI_FAC_NAICS N ON F.PK_GUID = N.FK_GUID AND N.NAICS_PRIMARY_IND = 'Primary' LEFT OUTER JOIN
                      App_Lookup_Cty_Reg CTYREG ON CTYREG.County = F.COUNTY LEFT OUTER JOIN
                      App_FI_TRIFID T ON F.FAC_ID = T.TRIFID LEFT OUTER JOIN
                      App_FI_TRIFID_Delete D ON D.TRIFID_ID_FK = T.TRIFID_ID AND D.TRI_SUB_ID = S.TRI_SUB_ID LEFT OUTER JOIN
                      App_ManualSubmissionLog MAN ON MAN.TRIFID_ID_FK = T.TRIFID_ID AND MAN.Reporting_Year_NR = R.SUB_REP_YEAR
-- WHERE     (C.CAS_CLBER <> 'N150')
GROUP BY F.PK_GUID, F.FK_GUID, UPPER(F.FAC_ID), FI.EPA_ID, FI.FS_ID, T.AgencyName, F.FAC_SITE, F.LOC_ADD_TXT, F.SUPP_LOC_TXT, F.LOCALITY, 
                      F.COUNTY, F.ADD_POSTAL_CODE, F.PROVINCE_TXT, F.MAIL_ADD_COUNTRY, F.MAIL_ADD_COUNTRY_CODE, F.MAIL_ADD_TXT, F.SUPP_MAIL_ADD, 
                      F.MAIL_ADD_CITY, F.MAIL_ADD_POSTAL_CODE, F.MAIL_ADD_STATE, R.PUB_CONT, R.PUB_CONT_PHONE_TXT, 
                      LOWER(R.PUB_CONT_EMAIL_ADDRES), R.TECH_CONT, R.TECH_CONT_PHONE_TXT, LOWER(R.TECH_CONT_EMAIL_ADDRES), F.MAIL_FAC_SITE, 
                      S.INSERTED_DATE, CTYREG.EcologyRegion, MAN.State_Received_DT 
/

CREATE FORCE VIEW "V_EXT_CONTACT" ( "FSID", "ECY ID", "TRIFID", "Facility Name", "AKA", "Address 1", "Address 2", "CITY", "COUNTY", "ZIP", "Mail Name", "Mail Add 1", "Mail Add 2", "Mail City", "Mail State", "Mail Zip", "Mail Province", "Mail Country", "Mail Country Code", "Pub Contact", "Pub Phone", "Pub Email", "Tech Contact", "Tech Phone", "Tech Email", "ECY Region", "YEAR", "RECEIVED", "PK_GUID_FAC", "FK_GUID_FAC", "SUBMISSION_REPORTING_YEAR", "CHEMICAL_NAME_TEXT", "RECEIPTRECEIVEDDATE" )
AS
SELECT     FI.FS_ID AS FSID, FI.EPA_ID AS "ECY ID", UPPER(F.FAC_ID) AS TRIFID, F.FAC_SITE AS "Facility Name", T.AgencyName AS AKA, 
                      F.LOC_ADD_TXT AS "Address 1", F.SUPP_LOC_TXT AS "Address 2", F.LOCALITY AS City, F.COUNTY, F.ADD_POSTAL_CODE AS Zip, 
                      F.MAIL_FAC_SITE AS "Mail Name", F.MAIL_ADD_TXT AS "Mail Add 1", F.SUPP_MAIL_ADD AS "Mail Add 2", F.MAIL_ADD_CITY AS "Mail City", 
                      F.MAIL_ADD_STATE AS "Mail State", F.MAIL_ADD_POSTAL_CODE AS "Mail Zip", F.PROVINCE_TXT AS "Mail Province", 
                      F.MAIL_ADD_COUNTRY AS "Mail Country", F.MAIL_ADD_COUNTRY_CODE AS "Mail Country Code", R.PUB_CONT AS "Pub Contact", 
                      R.PUB_CONT_PHONE_TXT AS "Pub Phone", LOWER(R.PUB_CONT_EMAIL_ADDRES) AS "Pub Email", R.TECH_CONT AS "Tech Contact", 
                      R.TECH_CONT_PHONE_TXT AS "Tech Phone", LOWER(R.TECH_CONT_EMAIL_ADDRES) AS "Tech Email", CTYREG.EcologyRegion AS "ECY Region", 
                      MAX(R.SUB_REP_YEAR) AS Year, TO_CHAR(S.INSERTED_DATE, 'DD/MM/YYYYY') AS Received, F.PK_GUID AS PK_GUID_FAC, 
                      F.FK_GUID AS FK_GUID_FAC, MAX(R.SUB_REP_YEAR) AS SUBMISSION_REPORTING_YEAR,  CAST(NULL AS VARCHAR(255)) AS CHEMICAL_NAME_TEXT,
                      TO_CHAR(MAN.State_Received_DT, 'DD/MM/YYYY') AS ReceiptReceivedDate
FROM         TRI_REPORT R INNER JOIN
                      TRI_SUB S ON R.FK_GUID = S.PK_GUID INNER JOIN
                      TRI_FAC F ON F.FK_GUID = S.PK_GUID INNER JOIN
                      TRI_CHEM C ON C.FK_GUID = R.PK_GUID LEFT OUTER JOIN
                      V_FAC_IDENT FI ON UPPER(F.FAC_ID) = FI.TRIFID LEFT OUTER JOIN
                      TRI_FAC_NAICS N ON F.PK_GUID = N.FK_GUID AND N.NAICS_PRIMARY_IND = 'Primary' LEFT OUTER JOIN
                      App_Lookup_Cty_Reg CTYREG ON CTYREG.County = F.COUNTY LEFT OUTER JOIN
                      App_FI_TRIFID T ON F.FAC_ID = T.TRIFID LEFT OUTER JOIN
                      App_FI_TRIFID_Delete D ON D.TRIFID_ID_FK = T.TRIFID_ID AND D.TRI_SUB_ID = S.TRI_SUB_ID LEFT OUTER JOIN
                      App_ManualSubmissionLog MAN ON MAN.TRIFID_ID_FK = T.TRIFID_ID AND MAN.Reporting_Year_NR = R.SUB_REP_YEAR
-- WHERE     (C.CAS_CLBER <> 'N150')
GROUP BY F.PK_GUID, F.FK_GUID, UPPER(F.FAC_ID), FI.EPA_ID, FI.FS_ID, T.AgencyName, F.FAC_SITE, F.LOC_ADD_TXT, F.SUPP_LOC_TXT, F.LOCALITY, 
                      F.COUNTY, F.ADD_POSTAL_CODE, F.PROVINCE_TXT, F.MAIL_ADD_COUNTRY, F.MAIL_ADD_COUNTRY_CODE, F.MAIL_ADD_TXT, F.SUPP_MAIL_ADD, 
                      F.MAIL_ADD_CITY, F.MAIL_ADD_POSTAL_CODE, F.MAIL_ADD_STATE, R.PUB_CONT, R.PUB_CONT_PHONE_TXT, 
                      LOWER(R.PUB_CONT_EMAIL_ADDRES), R.TECH_CONT, R.TECH_CONT_PHONE_TXT, LOWER(R.TECH_CONT_EMAIL_ADDRES), F.MAIL_FAC_SITE, 
                      S.INSERTED_DATE, CTYREG.EcologyRegion, MAN.State_Received_DT 
/

CREATE FORCE VIEW "V_EXT_DETAIL_D" ( "CAS_NUMBER", "CHEMICAL_NAME_TEXT", "PK_GUID_FAC", "PK_GUID_CHEM", "FK_GUID_FAC", "SUB_PARTIAL_FAC_ID", "PK_GUID_REPORT", "REVISION_INDICATOR", "REPORT_TYPE", "TRIFID", "EPA_ID", "FS_ID", "FAC_IDEN_COMMENT", "INACTIVE_DATE", "AGENCYNAME", "FAC_NAME", "LOC_ADD_LINE_1_DS", "LOC_ADD_LINE_2_DS", "CITY_NM", "COUNTY_NM", "ZIP_CD", "AIR_POINT", "AIR_NON_POINT", "LAND_TREA", "LAND_OTH_DISP", "LAND_RCRA_C", "LAND_SI_5_5_3_A", "LAND_OTH_LANDF", "LAND_SI_5_5_3_B", "UNINJ_I", "UNINJ_IIV", "ONE_TIME_RELEASE_Q", "PRODUCTION_RATIO_ME", "MAIL_PROVINCE_NM", "MAIL_COUNTRY_NM", "MAIL_COUNTRY_CD", "MAIL_ADD_LINE_1_DS", "MAIL_ADD_LINE_2_DS", "MAIL_CITY_NM", "MAIL_ZIP_CD", "MAIL_STATE_CD", "PUBLIC_CONTACT_NM", "PUBLIC_PHONE_NR", "PUBLIC_EMAIL", "TECH_CONTACT_NM", "TECH_PHONE_NR", "TECH_EMAIL", "FAC_NAICS_PRIMARY", "MAIL_NAME", "FK_GUID_REPORT", "FK_GUID_CHEM", "SIGNED_DT", "REPORT_FK", "CHEM_FK", "PROCESSING_STATUS_C", "ECOLOGY_REGION", "CHEM_RPT_REV_CD_1", "CHEM_RPT_REV_CD_2", "CHEM_RPT_WD_CD_1", "CHEM_RPT_WD_CD_2", "SUBMISSION_REPORTING_YEAR" )
AS
SELECT "CAS_NUMBER","CHEMICAL_NAME_TEXT","PK_GUID_FAC","PK_GUID_CHEM","FK_GUID_FAC","SUBMISSION_PARTIAL_FACILITY_ID","PK_GUID_REPORT","REVISION_INDICATOR","REPORT_TYPE","TRIFID","EPA_ID","FS_ID","FACILITY_IDEN_COMMENT","INACTIVE_DATE","AGENCYNAME","FAC_NAME","LOC_ADD_LINE_1_DS","LOC_ADD_LINE_2_DS","CITY_NM","COUNTY_NM","ZIP_CD","AIR_POINT","AIR_NON_POINT","LAND_TREA","LAND_OTH_DISP","LAND_RCRA_C","LAND_SI_5_5_3_A","LAND_OTH_LANDF","LAND_SI_5_5_3_B","UNINJ_I","UNINJ_IIV","ONE_TIME_RELEASE_Q","PRODUCTION_RATIO_ME","MAIL_PROVINCE_NM","MAIL_COUNTRY_NM","MAIL_COUNTRY_CD","MAIL_ADD_LINE_1_DS","MAIL_ADD_LINE_2_DS","MAIL_CITY_NM","MAIL_ZIP_CD","MAIL_STATE_CD","PUBLIC_CONTACT_NM","PUBLIC_PHONE_NR","PUBLIC_EMAIL","TECH_CONTACT_NM","TECH_PHONE_NR","TECH_EMAIL","FAC_NAICS_PRIMARY","MAIL_NAME","FK_GUID_REPORT","FK_GUID_CHEM","SIGNED_DT","REPORT_FK","CHEM_FK","REPORT_EPA_PROCESSING_STATUS_C","ECOLOGY_REGION","CHEM_RPT_REV_CD_1","CHEM_RPT_REV_CD_2","CHEM_RPT_WD_CD_1","CHEM_RPT_WD_CD_2", "SUBMISSION_REPORTING_YEAR" FROM V_EXT_MASTER_D 
/

CREATE FORCE VIEW "V_EXT_DETAIL" ( "CAS_NUMBER", "CHEMICAL_NAME_TEXT", "PK_GUID_FAC", "PK_GUID_CHEM", "FK_GUID_FAC", "SUB_PARTIAL_FAC_ID", "PK_GUID_REPORT", "REVISION_INDICATOR", "REPORT_TYPE", "TRIFID", "EPA_ID", "FS_ID", "FAC_IDEN_COMMENT", "INACTIVE_DATE", "AGENCYNAME", "FAC_NAME", "LOC_ADD_LINE_1_DS", "LOC_ADD_LINE_2_DS", "CITY_NM", "COUNTY_NM", "ZIP_CD", "AIR_POINT", "AIR_NON_POINT", "LAND_TREA", "LAND_OTH_DISP", "LAND_RCRA_C", "LAND_SI_5_5_3_A", "LAND_OTH_LANDF", "LAND_SI_5_5_3_B", "UNINJ_I", "UNINJ_IIV", "ONE_TIME_RELEASE_Q", "PRODUCTION_RATIO_ME", "MAIL_PROVINCE_NM", "MAIL_COUNTRY_NM", "MAIL_COUNTRY_CD", "MAIL_ADD_LINE_1_DS", "MAIL_ADD_LINE_2_DS", "MAIL_CITY_NM", "MAIL_ZIP_CD", "MAIL_STATE_CD", "PUBLIC_CONTACT_NM", "PUBLIC_PHONE_NR", "PUBLIC_EMAIL", "TECH_CONTACT_NM", "TECH_PHONE_NR", "TECH_EMAIL", "FAC_NAICS_PRIMARY", "MAIL_NAME", "FK_GUID_REPORT", "FK_GUID_CHEM", "SIGNED_DT", "REPORT_FK", "CHEM_FK", "PROCESSING_STATUS_C", "ECOLOGY_REGION", "CHEM_RPT_REV_CD_1", "CHEM_RPT_REV_CD_2", "CHEM_RPT_WD_CD_1", "CHEM_RPT_WD_CD_2", "SUBMISSION_REPORTING_YEAR" )
AS
SELECT "CAS_NUMBER","CHEMICAL_NAME_TEXT","PK_GUID_FAC","PK_GUID_CHEM","FK_GUID_FAC","SUBMISSION_PARTIAL_FACILITY_ID","PK_GUID_REPORT","REVISION_INDICATOR","REPORT_TYPE","TRIFID","EPA_ID","FS_ID","FACILITY_IDEN_COMMENT","INACTIVE_DATE","AGENCYNAME","FAC_NAME","LOC_ADD_LINE_1_DS","LOC_ADD_LINE_2_DS","CITY_NM","COUNTY_NM","ZIP_CD","AIR_POINT","AIR_NON_POINT","LAND_TREA","LAND_OTH_DISP","LAND_RCRA_C","LAND_SI_5_5_3_A","LAND_OTH_LANDF","LAND_SI_5_5_3_B","UNINJ_I","UNINJ_IIV","ONE_TIME_RELEASE_Q","PRODUCTION_RATIO_ME","MAIL_PROVINCE_NM","MAIL_COUNTRY_NM","MAIL_COUNTRY_CD","MAIL_ADD_LINE_1_DS","MAIL_ADD_LINE_2_DS","MAIL_CITY_NM","MAIL_ZIP_CD","MAIL_STATE_CD","PUBLIC_CONTACT_NM","PUBLIC_PHONE_NR","PUBLIC_EMAIL","TECH_CONTACT_NM","TECH_PHONE_NR","TECH_EMAIL","FAC_NAICS_PRIMARY","MAIL_NAME","FK_GUID_REPORT","FK_GUID_CHEM","SIGNED_DT","REPORT_FK","CHEM_FK","REPORT_EPA_PROCESSING_STATUS_C","ECOLOGY_REGION","CHEM_RPT_REV_CD_1","CHEM_RPT_REV_CD_2","CHEM_RPT_WD_CD_1","CHEM_RPT_WD_CD_2", "SUBMISSION_REPORTING_YEAR" FROM V_EXT_MASTER 
/

CREATE FORCE VIEW "V_EXT_DIOXIN_D" ( "PK_GUID_SUB", "PK_GUID_REP", "FSID", "EPA ID", "TRIFID", "Year", "REVISION", "Partial Sub", "Form", "Facility Name", "AKA", "Address 1", "Address 2", "City", "County", "Zip", "Chemical", "CAS #", "51 Fugitive Air-TEQ_NA", "51 Fugitive Air-TEQ_01", "51 Fugitive Air-TEQ_02", "51 Fugitive Air-TEQ_03", "51 Fugitive Air-TEQ_04", "51 Fugitive Air-TEQ_05", "51 Fugitive Air-TEQ_06", "51 Fugitive Air-TEQ_07", "51 Fugitive Air-TEQ_08", "51 Fugitive Air-TEQ_09", "51 Fugitive Air-TEQ_10", "51 Fugitive Air-TEQ_11", "51 Fugitive Air-TEQ_12", "51 Fugitive Air-TEQ_13", "51 Fugitive Air-TEQ_14", "51 Fugitive Air-TEQ_15", "51 Fugitive Air-TEQ_16", "51 Fugitive Air-TEQ_17", "52 Stack Air-TEQ_NA", "52 Stack Air-TEQ_01", "52 Stack Air-TEQ_02", "52 Stack Air-TEQ_03", "52 Stack Air-TEQ_04", "52 Stack Air-TEQ_05", "52 Stack Air-TEQ_06", "52 Stack Air-TEQ_07", "52 Stack Air-TEQ_08", "52 Stack Air-TEQ_09", "52 Stack Air-TEQ_10", "52 Stack Air-TEQ_11", "52 Stack Air-TEQ_12", "52 Stack Air-TEQ_13", "52 Stack Air-TEQ_14", "52 Stack Air-TEQ_15", "52 Stack Air-TEQ_16", "52 Stack Air-TEQ_17", "531 Water-TEQ_NA", "531 Water-TEQ_01", "531 Water-TEQ_02", "531 Water-TEQ_03", "531 Water-TEQ_04", "531 Water-TEQ_05", "531 Water-TEQ_06", "531 Water-TEQ_07", "531 Water-TEQ_08", "531 Water-TEQ_09", "531 Water-TEQ_10", "531 Water-TEQ_11", "531 Water-TEQ_12", "531 Water-TEQ_13", "531 Water-TEQ_14", "531 Water-TEQ_15", "531 Water-TEQ_16", "531 Water-TEQ_17", "532 Water-TEQ_NA", "532 Water-TEQ_01", "532 Water-TEQ_02", "532 Water-TEQ_03", "532 Water-TEQ_04", "532 Water-TEQ_05", "532 Water-TEQ_06", "532 Water-TEQ_07", "532 Water-TEQ_08", "532 Water-TEQ_09", "532 Water-TEQ_10", "532 Water-TEQ_11", "532 Water-TEQ_12", "532 Water-TEQ_13", "532 Water-TEQ_14", "532 Water-TEQ_15", "532 Water-TEQ_16", "532 Water-TEQ_17", "533 Water-TEQ_NA", "533 Water-TEQ_01", "533 Water-TEQ_02", "533 Water-TEQ_03", "533 Water-TEQ_04", "533 Water-TEQ_05", "533 Water-TEQ_06", "533 Water-TEQ_07", "533 Water-TEQ_08", "533 Water-TEQ_09", "533 Water-TEQ_10", "533 Water-TEQ_11", "533 Water-TEQ_12", "533 Water-TEQ_13", "533 Water-TEQ_14", "533 Water-TEQ_15", "533 Water-TEQ_16", "533 Water-TEQ_17", "541 UG INJ Class I-TEQ_NA", "541 UG INJ Class I-TEQ_01", "541 UG INJ Class I-TEQ_02", "541 UG INJ Class I-TEQ_03", "541 UG INJ Class I-TEQ_04", "541 UG INJ Class I-TEQ_05", "541 UG INJ Class I-TEQ_06", "541 UG INJ Class I-TEQ_07", "541 UG INJ Class I-TEQ_08", "541 UG INJ Class I-TEQ_09", "541 UG INJ Class I-TEQ_10", "541 UG INJ Class I-TEQ_11", "541 UG INJ Class I-TEQ_12", "541 UG INJ Class I-TEQ_13", "541 UG INJ Class I-TEQ_14", "541 UG INJ Class I-TEQ_15", "541 UG INJ Class I-TEQ_16", "541 UG INJ Class I-TEQ_17", "542 UG INJ Class II-V-TEQ_NA", "542 UG INJ Class II-V-TEQ_01", "542 UG INJ Class II-V-TEQ_02", "542 UG INJ Class II-V-TEQ_03", "542 UG INJ Class II-V-TEQ_04", "542 UG INJ Class II-V-TEQ_05", "542 UG INJ Class II-V-TEQ_06", "542 UG INJ Class II-V-TEQ_07", "542 UG INJ Class II-V-TEQ_08", "542 UG INJ Class II-V-TEQ_09", "542 UG INJ Class II-V-TEQ_10", "542 UG INJ Class II-V-TEQ_11", "542 UG INJ Class II-V-TEQ_12", "542 UG INJ Class II-V-TEQ_13", "542 UG INJ Class II-V-TEQ_14", "542 UG INJ Class II-V-TEQ_15", "542 UG INJ Class II-V-TEQ_16", "542 UG INJ Class II-V-TEQ_17", "551A RCRA C Landfill-TEQ_NA", "551A RCRA C Landfill-TEQ_01", "551A RCRA C Landfill-TEQ_02", "551A RCRA C Landfill-TEQ_03", "551A RCRA C Landfill-TEQ_04", "551A RCRA C Landfill-TEQ_05", "551A RCRA C Landfill-TEQ_06", "551A RCRA C Landfill-TEQ_07", "551A RCRA C Landfill-TEQ_08", "551A RCRA C Landfill-TEQ_09", "551A RCRA C Landfill-TEQ_10", "551A RCRA C Landfill-TEQ_11", "551A RCRA C Landfill-TEQ_12", "551A RCRA C Landfill-TEQ_13", "551A RCRA C Landfill-TEQ_14", "551A RCRA C Landfill-TEQ_15", "551A RCRA C Landfill-TEQ_16", "551A RCRA C Landfill-TEQ_17", "551B Other Landfill-TEQ_NA", "551B Other Landfill-TEQ_01", "551B Other Landfill-TEQ_02", "551B Other Landfill-TEQ_03", "551B Other Landfill-TEQ_04", "551B Other Landfill-TEQ_05", "551B Other Landfill-TEQ_06", "551B Other Landfill-TEQ_07", "551B Other Landfill-TEQ_08", "551B Other Landfill-TEQ_09", "551B Other Landfill-TEQ_10", "551B Other Landfill-TEQ_11", "551B Other Landfill-TEQ_12", "551B Other Landfill-TEQ_13", "551B Other Landfill-TEQ_14", "551B Other Landfill-TEQ_15", "551B Other Landfill-TEQ_16", "551B Other Landfill-TEQ_17", "552 Land Treatment-TEQ_NA", "552 Land Treatment-TEQ_01", "552 Land Treatment-TEQ_02", "552 Land Treatment-TEQ_03", "552 Land Treatment-TEQ_04", "552 Land Treatment-TEQ_05", "552 Land Treatment-TEQ_06", "552 Land Treatment-TEQ_07", "552 Land Treatment-TEQ_08", "552 Land Treatment-TEQ_09", "552 Land Treatment-TEQ_10", "552 Land Treatment-TEQ_11", "552 Land Treatment-TEQ_12", "552 Land Treatment-TEQ_13", "552 Land Treatment-TEQ_14", "552 Land Treatment-TEQ_15", "552 Land Treatment-TEQ_16", "552 Land Treatment-TEQ_17", "553A RCRA C SI-TEQ_NA", "553A RCRA C SI-TEQ_01", "553A RCRA C SI-TEQ_02", "553A RCRA C SI-TEQ_03", "553A RCRA C SI-TEQ_04", "553A RCRA C SI-TEQ_05", "553A RCRA C SI-TEQ_06", "553A RCRA C SI-TEQ_07", "553A RCRA C SI-TEQ_08", "553A RCRA C SI-TEQ_09", "553A RCRA C SI-TEQ_10", "553A RCRA C SI-TEQ_11", "553A RCRA C SI-TEQ_12", "553A RCRA C SI-TEQ_13", "553A RCRA C SI-TEQ_14", "553A RCRA C SI-TEQ_15", "553A RCRA C SI-TEQ_16", "553A RCRA C SI-TEQ_17", "553B Other SI-TEQ_NA", "553B Other SI-TEQ_01", "553B Other SI-TEQ_02", "553B Other SI-TEQ_03", "553B Other SI-TEQ_04", "553B Other SI-TEQ_05", "553B Other SI-TEQ_06", "553B Other SI-TEQ_07", "553B Other SI-TEQ_08", "553B Other SI-TEQ_09", "553B Other SI-TEQ_10", "553B Other SI-TEQ_11", "553B Other SI-TEQ_12", "553B Other SI-TEQ_13", "553B Other SI-TEQ_14", "553B Other SI-TEQ_15", "553B Other SI-TEQ_16", "553B Other SI-TEQ_17", "554 Other Disposal-TEQ_NA", "554 Other Disposal-TEQ_01", "554 Other Disposal-TEQ_02", "554 Other Disposal-TEQ_03", "554 Other Disposal-TEQ_04", "554 Other Disposal-TEQ_05", "554 Other Disposal-TEQ_06", "554 Other Disposal-TEQ_07", "554 Other Disposal-TEQ_08", "554 Other Disposal-TEQ_09", "554 Other Disposal-TEQ_10", "554 Other Disposal-TEQ_11", "554 Other Disposal-TEQ_12", "554 Other Disposal-TEQ_13", "554 Other Disposal-TEQ_14", "554 Other Disposal-TEQ_15", "554 Other Disposal-TEQ_16", "554 Other Disposal-TEQ_17", "POTW Waste Quantity-TEQ_NA", "POTW Waste Quantity-TEQ_01", "POTW Waste Quantity-TEQ_02", "POTW Waste Quantity-TEQ_03", "POTW Waste Quantity-TEQ_04", "POTW Waste Quantity-TEQ_05", "POTW Waste Quantity-TEQ_06", "POTW Waste Quantity-TEQ_07", "POTW Waste Quantity-TEQ_08", "POTW Waste Quantity-TEQ_09", "POTW Waste Quantity-TEQ_10", "POTW Waste Quantity-TEQ_11", "POTW Waste Quantity-TEQ_12", "POTW Waste Quantity-TEQ_13", "POTW Waste Quantity-TEQ_14", "POTW Waste Quantity-TEQ_15", "POTW Waste Quantity-TEQ_16", "POTW Waste Quantity-TEQ_17", "81A Ons Disp UG INJ C1-TEQ_N", "81A Ons Disp UG INJ C1-TEQ_01", "81A Ons Disp UG INJ C1-TEQ_02", "81A Ons Disp UG INJ C1-TEQ_03", "81A Ons Disp UG INJ C1-TEQ_04", "81A Ons Disp UG INJ C1-TEQ_05", "81A Ons Disp UG INJ C1-TEQ_06", "81A Ons Disp UG INJ C1-TEQ_07", "81A Ons Disp UG INJ C1-TEQ_08", "81A Ons Disp UG INJ C1-TEQ_09", "81A Ons Disp UG INJ C1-TEQ_10", "81A Ons Disp UG INJ C1-TEQ_11", "81A Ons Disp UG INJ C1-TEQ_12", "81A Ons Disp UG INJ C1-TEQ_13", "81A Ons Disp UG INJ C1-TEQ_14", "81A Ons Disp UG INJ C1-TEQ_15", "81A Ons Disp UG INJ C1-TEQ_16", "81A Ons Disp UG INJ C1-TEQ_17", "81B Ons Disp Other-TEQ_NA", "81B Ons Disp Other-TEQ_01", "81B Ons Disp Other-TEQ_02", "81B Ons Disp Other-TEQ_03", "81B Ons Disp Other-TEQ_04", "81B Ons Disp Other-TEQ_05", "81B Ons Disp Other-TEQ_06", "81B Ons Disp Other-TEQ_07", "81B Ons Disp Other-TEQ_08", "81B Ons Disp Other-TEQ_09", "81B Ons Disp Other-TEQ_10", "81B Ons Disp Other-TEQ_11", "81B Ons Disp Other-TEQ_12", "81B Ons Disp Other-TEQ_13", "81B Ons Disp Other-TEQ_14", "81B Ons Disp Other-TEQ_15", "81B Ons Disp Other-TEQ_16", "81B Ons Disp Other-TEQ_17", "81C Off Disp UG INJ C1-TEQ_NA", "81C Off Disp UG INJ C1-TEQ_01", "81C Off Disp UG INJ C1-TEQ_02", "81C Off Disp UG INJ C1-TEQ_03", "81C Off Disp UG INJ C1-TEQ_04", "81C Off Disp UG INJ C1-TEQ_05", "81C Off Disp UG INJ C1-TEQ_06", "81C Off Disp UG INJ C1-TEQ_07", "81C Off Disp UG INJ C1-TEQ_08", "81C Off Disp UG INJ C1-TEQ_09", "81C Off Disp UG INJ C1-TEQ_10", "81C Off Disp UG INJ C1-TEQ_11", "81C Off Disp UG INJ C1-TEQ_12", "81C Off Disp UG INJ C1-TEQ_13", "81C Off Disp UG INJ C1-TEQ_14", "81C Off Disp UG INJ C1-TEQ_15", "81C Off Disp UG INJ C1-TEQ_16", "81C Off Disp UG INJ C1-TEQ_17", "81D Off Disp Other-TEQ_NA", "81D Off Disp Other-TEQ_01", "81D Off Disp Other-TEQ_02", "81D Off Disp Other-TEQ_03", "81D Off Disp Other-TEQ_04", "81D Off Disp Other-TEQ_05", "81D Off Disp Other-TEQ_06", "81D Off Disp Other-TEQ_07", "81D Off Disp Other-TEQ_08", "81D Off Disp Other-TEQ_09", "81D Off Disp Other-TEQ_10", "81D Off Disp Other-TEQ_11", "81D Off Disp Other-TEQ_12", "81D Off Disp Other-TEQ_13", "81D Off Disp Other-TEQ_14", "81D Off Disp Other-TEQ_15", "81D Off Disp Other-TEQ_16", "81D Off Disp Other-TEQ_17", "82 Ons Eng Rec-TEQ_NA", "82 Ons Eng Rec-TEQ_01", "82 Ons Eng Rec-TEQ_02", "82 Ons Eng Rec-TEQ_03", "82 Ons Eng Rec-TEQ_04", "82 Ons Eng Rec-TEQ_05", "82 Ons Eng Rec-TEQ_06", "82 Ons Eng Rec-TEQ_07", "82 Ons Eng Rec-TEQ_08", "82 Ons Eng Rec-TEQ_09", "82 Ons Eng Rec-TEQ_10", "82 Ons Eng Rec-TEQ_11", "82 Ons Eng Rec-TEQ_12", "82 Ons Eng Rec-TEQ_13", "82 Ons Eng Rec-TEQ_14", "82 Ons Eng Rec-TEQ_15", "82 Ons Eng Rec-TEQ_16", "82 Ons Eng Rec-TEQ_17", "83 Off Eng Rec-TEQ_NA", "83 Off Eng Rec-TEQ_01", "83 Off Eng Rec-TEQ_02", "83 Off Eng Rec-TEQ_03", "83 Off Eng Rec-TEQ_04", "83 Off Eng Rec-TEQ_05", "83 Off Eng Rec-TEQ_06", "83 Off Eng Rec-TEQ_07", "83 Off Eng Rec-TEQ_08", "83 Off Eng Rec-TEQ_09", "83 Off Eng Rec-TEQ_10", "83 Off Eng Rec-TEQ_11", "83 Off Eng Rec-TEQ_12", "83 Off Eng Rec-TEQ_13", "83 Off Eng Rec-TEQ_14", "83 Off Eng Rec-TEQ_15", "83 Off Eng Rec-TEQ_16", "83 Off Eng Rec-TEQ_17", "84 Ons Recycle-TEQ_NA", "84 Ons Recycle-TEQ_01", "84 Ons Recycle-TEQ_02", "84 Ons Recycle-TEQ_03", "84 Ons Recycle-TEQ_04", "84 Ons Recycle-TEQ_05", "84 Ons Recycle-TEQ_06", "84 Ons Recycle-TEQ_07", "84 Ons Recycle-TEQ_08", "84 Ons Recycle-TEQ_09", "84 Ons Recycle-TEQ_10", "84 Ons Recycle-TEQ_11", "84 Ons Recycle-TEQ_12", "84 Ons Recycle-TEQ_13", "84 Ons Recycle-TEQ_14", "84 Ons Recycle-TEQ_15", "84 Ons Recycle-TEQ_16", "84 Ons Recycle-TEQ_17", "85 Off Recycle-TEQ_NA", "85 Off Recycle-TEQ_01", "85 Off Recycle-TEQ_02", "85 Off Recycle-TEQ_03", "85 Off Recycle-TEQ_04", "85 Off Recycle-TEQ_05", "85 Off Recycle-TEQ_06", "85 Off Recycle-TEQ_07", "85 Off Recycle-TEQ_08", "85 Off Recycle-TEQ_09", "85 Off Recycle-TEQ_10", "85 Off Recycle-TEQ_11", "85 Off Recycle-TEQ_12", "85 Off Recycle-TEQ_13", "85 Off Recycle-TEQ_14", "85 Off Recycle-TEQ_15", "85 Off Recycle-TEQ_16", "85 Off Recycle-TEQ_17", "86 Ons Treated-TEQ_NA", "86 Ons Treated-TEQ_01", "86 Ons Treated-TEQ_02", "86 Ons Treated-TEQ_03", "86 Ons Treated-TEQ_04", "86 Ons Treated-TEQ_05", "86 Ons Treated-TEQ_06", "86 Ons Treated-TEQ_07", "86 Ons Treated-TEQ_08", "86 Ons Treated-TEQ_09", "86 Ons Treated-TEQ_10", "86 Ons Treated-TEQ_11", "86 Ons Treated-TEQ_12", "86 Ons Treated-TEQ_13", "86 Ons Treated-TEQ_14", "86 Ons Treated-TEQ_15", "86 Ons Treated-TEQ_16", "86 Ons Treated-TEQ_17", "87 Off Treated-TEQ_NA", "87 Off Treated-TEQ_01", "87 Off Treated-TEQ_02", "87 Off Treated-TEQ_03", "87 Off Treated-TEQ_04", "87 Off Treated-TEQ_05", "87 Off Treated-TEQ_06", "87 Off Treated-TEQ_07", "87 Off Treated-TEQ_08", "87 Off Treated-TEQ_09", "87 Off Treated-TEQ_10", "87 Off Treated-TEQ_11", "87 Off Treated-TEQ_12", "87 Off Treated-TEQ_13", "87 Off Treated-TEQ_14", "87 Off Treated-TEQ_15", "87 Off Treated-TEQ_16", "87 Off Treated-TEQ_17", "88 Remed One-Time-TEQ_NA", "88 Remed One-Time-TEQ_01", "88 Remed One-Time-TEQ_02", "88 Remed One-Time-TEQ_03", "88 Remed One-Time-TEQ_04", "88 Remed One-Time-TEQ_05", "88 Remed One-Time-TEQ_06", "88 Remed One-Time-TEQ_07", "88 Remed One-Time-TEQ_08", "88 Remed One-Time-TEQ_09", "88 Remed One-Time-TEQ_10", "88 Remed One-Time-TEQ_11", "88 Remed One-Time-TEQ_12", "88 Remed One-Time-TEQ_13", "88 Remed One-Time-TEQ_14", "88 Remed One-Time-TEQ_15", "88 Remed One-Time-TEQ_16", "88 Remed One-Time-TEQ_17", "SUBMISSION_REPORTING_YEAR", "ECOLOGY_REGION", "FS_ID", "EPA_ID", "COUNTY_NM", "FAC_NAME", "AGENCYNAME", "CHEMICAL_NAME_TEXT" )
AS
SELECT

      V_FORM_S1_PG1.PK_GUID_SUB
,     V_FORM_S1_PG1.PK_GUID_REP

, T.AgencyID "FSID"
, T.EPAID "EPA ID"
, UPPER(F.FAC_ID) "TRIFID"
, R.SUB_REP_YEAR "Year"
, R.REVISION_IND Revision
, R.SUB_PARTIAL_FAC_ID "Partial Sub"
, SUBSTR(R.REPORT_TYPE_CODE, -1, 1) "Form"
, F.FAC_SITE "Facility Name"
, T.AgencyName "AKA"
, F.LOC_ADD_TXT "Address 1"
, F.SUPP_LOC_TXT "Address 2"
, F.LOCALITY "City"
, F.COUNTY "County"
, F.ADD_POSTAL_CODE "Zip"
, C.CHEM_TXT "Chemical"
, C.CAS_CLBER "CAS #"

,     V_FORM_S1_PG1.S151NA "51 Fugitive Air-TEQ_NA"
,     V_FORM_S1_PG1.S151T1 "51 Fugitive Air-TEQ_01"
,     V_FORM_S1_PG1.S151T2 "51 Fugitive Air-TEQ_02"
,     V_FORM_S1_PG1.S151T3 "51 Fugitive Air-TEQ_03"
,     V_FORM_S1_PG1.S151T4 "51 Fugitive Air-TEQ_04"
,     V_FORM_S1_PG1.S151T5 "51 Fugitive Air-TEQ_05"
,     V_FORM_S1_PG1.S151T6 "51 Fugitive Air-TEQ_06"
,     V_FORM_S1_PG1.S151T7 "51 Fugitive Air-TEQ_07"
,     V_FORM_S1_PG1.S151T8 "51 Fugitive Air-TEQ_08"
,     V_FORM_S1_PG1.S151T9 "51 Fugitive Air-TEQ_09"
,     V_FORM_S1_PG1.S151T10 "51 Fugitive Air-TEQ_10"
,     V_FORM_S1_PG1.S151T11 "51 Fugitive Air-TEQ_11"
,     V_FORM_S1_PG1.S151T12 "51 Fugitive Air-TEQ_12"
,     V_FORM_S1_PG1.S151T13 "51 Fugitive Air-TEQ_13"
,     V_FORM_S1_PG1.S151T14 "51 Fugitive Air-TEQ_14"
,     V_FORM_S1_PG1.S151T15 "51 Fugitive Air-TEQ_15"
,     V_FORM_S1_PG1.S151T16 "51 Fugitive Air-TEQ_16"
,     V_FORM_S1_PG1.S151T17 "51 Fugitive Air-TEQ_17"
,     V_FORM_S1_PG1.S152NA "52 Stack Air-TEQ_NA"
,     V_FORM_S1_PG1.S152T1 "52 Stack Air-TEQ_01"
,     V_FORM_S1_PG1.S152T2 "52 Stack Air-TEQ_02"
,     V_FORM_S1_PG1.S152T3 "52 Stack Air-TEQ_03"
,     V_FORM_S1_PG1.S152T4 "52 Stack Air-TEQ_04"
,     V_FORM_S1_PG1.S152T5 "52 Stack Air-TEQ_05"
,     V_FORM_S1_PG1.S152T6 "52 Stack Air-TEQ_06"
,     V_FORM_S1_PG1.S152T7 "52 Stack Air-TEQ_07"
,     V_FORM_S1_PG1.S152T8 "52 Stack Air-TEQ_08"
,     V_FORM_S1_PG1.S152T9 "52 Stack Air-TEQ_09"
,     V_FORM_S1_PG1.S152T10 "52 Stack Air-TEQ_10"
,     V_FORM_S1_PG1.S152T11 "52 Stack Air-TEQ_11"
,     V_FORM_S1_PG1.S152T12 "52 Stack Air-TEQ_12"
,     V_FORM_S1_PG1.S152T13 "52 Stack Air-TEQ_13"
,     V_FORM_S1_PG1.S152T14 "52 Stack Air-TEQ_14"
,     V_FORM_S1_PG1.S152T15 "52 Stack Air-TEQ_15"
,     V_FORM_S1_PG1.S152T16 "52 Stack Air-TEQ_16"
,     V_FORM_S1_PG1.S152T17 "52 Stack Air-TEQ_17"
,     V_FORM_S1_PG1.S1531NA "531 Water-TEQ_NA"
,     V_FORM_S1_PG1.S1531T1 "531 Water-TEQ_01"
,     V_FORM_S1_PG1.S1531T2 "531 Water-TEQ_02"
,     V_FORM_S1_PG1.S1531T3 "531 Water-TEQ_03"
,     V_FORM_S1_PG1.S1531T4 "531 Water-TEQ_04"
,     V_FORM_S1_PG1.S1531T5 "531 Water-TEQ_05"
,     V_FORM_S1_PG1.S1531T6 "531 Water-TEQ_06"
,     V_FORM_S1_PG1.S1531T7 "531 Water-TEQ_07"
,     V_FORM_S1_PG1.S1531T8 "531 Water-TEQ_08"
,     V_FORM_S1_PG1.S1531T9 "531 Water-TEQ_09"
,     V_FORM_S1_PG1.S1531T10 "531 Water-TEQ_10"
,     V_FORM_S1_PG1.S1531T11 "531 Water-TEQ_11"
,     V_FORM_S1_PG1.S1531T12 "531 Water-TEQ_12"
,     V_FORM_S1_PG1.S1531T13 "531 Water-TEQ_13"
,     V_FORM_S1_PG1.S1531T14 "531 Water-TEQ_14"
,     V_FORM_S1_PG1.S1531T15 "531 Water-TEQ_15"
,     V_FORM_S1_PG1.S1531T16 "531 Water-TEQ_16"
,     V_FORM_S1_PG1.S1531T17 "531 Water-TEQ_17"
,     V_FORM_S1_PG1.S1532NA "532 Water-TEQ_NA"
,     V_FORM_S1_PG1.S1532T1 "532 Water-TEQ_01"
,     V_FORM_S1_PG1.S1532T2 "532 Water-TEQ_02"
,     V_FORM_S1_PG1.S1532T3 "532 Water-TEQ_03"
,     V_FORM_S1_PG1.S1532T4 "532 Water-TEQ_04"
,     V_FORM_S1_PG1.S1532T5 "532 Water-TEQ_05"
,     V_FORM_S1_PG1.S1532T6 "532 Water-TEQ_06"
,     V_FORM_S1_PG1.S1532T7 "532 Water-TEQ_07"
,     V_FORM_S1_PG1.S1532T8 "532 Water-TEQ_08"
,     V_FORM_S1_PG1.S1532T9 "532 Water-TEQ_09"
,     V_FORM_S1_PG1.S1532T10 "532 Water-TEQ_10"
,     V_FORM_S1_PG1.S1532T11 "532 Water-TEQ_11"
,     V_FORM_S1_PG1.S1532T12 "532 Water-TEQ_12"
,     V_FORM_S1_PG1.S1532T13 "532 Water-TEQ_13"
,     V_FORM_S1_PG1.S1532T14 "532 Water-TEQ_14"
,     V_FORM_S1_PG1.S1532T15 "532 Water-TEQ_15"
,     V_FORM_S1_PG1.S1532T16 "532 Water-TEQ_16"
,     V_FORM_S1_PG1.S1532T17 "532 Water-TEQ_17"
,     V_FORM_S1_PG1.S1533NA "533 Water-TEQ_NA"
,     V_FORM_S1_PG1.S1533T1 "533 Water-TEQ_01"
,     V_FORM_S1_PG1.S1533T2 "533 Water-TEQ_02"
,     V_FORM_S1_PG1.S1533T3 "533 Water-TEQ_03"
,     V_FORM_S1_PG1.S1533T4 "533 Water-TEQ_04"
,     V_FORM_S1_PG1.S1533T5 "533 Water-TEQ_05"
,     V_FORM_S1_PG1.S1533T6 "533 Water-TEQ_06"
,     V_FORM_S1_PG1.S1533T7 "533 Water-TEQ_07"
,     V_FORM_S1_PG1.S1533T8 "533 Water-TEQ_08"
,     V_FORM_S1_PG1.S1533T9 "533 Water-TEQ_09"
,     V_FORM_S1_PG1.S1533T10 "533 Water-TEQ_10"
,     V_FORM_S1_PG1.S1533T11 "533 Water-TEQ_11"
,     V_FORM_S1_PG1.S1533T12 "533 Water-TEQ_12"
,     V_FORM_S1_PG1.S1533T13 "533 Water-TEQ_13"
,     V_FORM_S1_PG1.S1533T14 "533 Water-TEQ_14"
,     V_FORM_S1_PG1.S1533T15 "533 Water-TEQ_15"
,     V_FORM_S1_PG1.S1533T16 "533 Water-TEQ_16"
,     V_FORM_S1_PG1.S1533T17 "533 Water-TEQ_17"
,     V_FORM_S1_PG2.S1541NA "541 UG INJ Class I-TEQ_NA"
,     V_FORM_S1_PG2.S1541T1 "541 UG INJ Class I-TEQ_01"
,     V_FORM_S1_PG2.S1541T2 "541 UG INJ Class I-TEQ_02"
,     V_FORM_S1_PG2.S1541T3 "541 UG INJ Class I-TEQ_03"
,     V_FORM_S1_PG2.S1541T4 "541 UG INJ Class I-TEQ_04"
,     V_FORM_S1_PG2.S1541T5 "541 UG INJ Class I-TEQ_05"
,     V_FORM_S1_PG2.S1541T6 "541 UG INJ Class I-TEQ_06"
,     V_FORM_S1_PG2.S1541T7 "541 UG INJ Class I-TEQ_07"
,     V_FORM_S1_PG2.S1541T8 "541 UG INJ Class I-TEQ_08"
,     V_FORM_S1_PG2.S1541T9 "541 UG INJ Class I-TEQ_09"
,     V_FORM_S1_PG2.S1541T10 "541 UG INJ Class I-TEQ_10"
,     V_FORM_S1_PG2.S1541T11 "541 UG INJ Class I-TEQ_11"
,     V_FORM_S1_PG2.S1541T12 "541 UG INJ Class I-TEQ_12"
,     V_FORM_S1_PG2.S1541T13 "541 UG INJ Class I-TEQ_13"
,     V_FORM_S1_PG2.S1541T14 "541 UG INJ Class I-TEQ_14"
,     V_FORM_S1_PG2.S1541T15 "541 UG INJ Class I-TEQ_15"
,     V_FORM_S1_PG2.S1541T16 "541 UG INJ Class I-TEQ_16"
,     V_FORM_S1_PG2.S1541T17 "541 UG INJ Class I-TEQ_17"
,     V_FORM_S1_PG2.S1542NA "542 UG INJ Class II-V-TEQ_NA"
,     V_FORM_S1_PG2.S1542T1 "542 UG INJ Class II-V-TEQ_01"
,     V_FORM_S1_PG2.S1542T2 "542 UG INJ Class II-V-TEQ_02"
,     V_FORM_S1_PG2.S1542T3 "542 UG INJ Class II-V-TEQ_03"
,     V_FORM_S1_PG2.S1542T4 "542 UG INJ Class II-V-TEQ_04"
,     V_FORM_S1_PG2.S1542T5 "542 UG INJ Class II-V-TEQ_05"
,     V_FORM_S1_PG2.S1542T6 "542 UG INJ Class II-V-TEQ_06"
,     V_FORM_S1_PG2.S1542T7 "542 UG INJ Class II-V-TEQ_07"
,     V_FORM_S1_PG2.S1542T8 "542 UG INJ Class II-V-TEQ_08"
,     V_FORM_S1_PG2.S1542T9 "542 UG INJ Class II-V-TEQ_09"
,     V_FORM_S1_PG2.S1542T10 "542 UG INJ Class II-V-TEQ_10"
,     V_FORM_S1_PG2.S1542T11 "542 UG INJ Class II-V-TEQ_11"
,     V_FORM_S1_PG2.S1542T12 "542 UG INJ Class II-V-TEQ_12"
,     V_FORM_S1_PG2.S1542T13 "542 UG INJ Class II-V-TEQ_13"
,     V_FORM_S1_PG2.S1542T14 "542 UG INJ Class II-V-TEQ_14"
,     V_FORM_S1_PG2.S1542T15 "542 UG INJ Class II-V-TEQ_15"
,     V_FORM_S1_PG2.S1542T16 "542 UG INJ Class II-V-TEQ_16"
,     V_FORM_S1_PG2.S1542T17 "542 UG INJ Class II-V-TEQ_17"
,     V_FORM_S1_PG2.S1551ANA "551A RCRA C Landfill-TEQ_NA"
,     V_FORM_S1_PG2.S1551AT1 "551A RCRA C Landfill-TEQ_01"
,     V_FORM_S1_PG2.S1551AT2 "551A RCRA C Landfill-TEQ_02"
,     V_FORM_S1_PG2.S1551AT3 "551A RCRA C Landfill-TEQ_03"
,     V_FORM_S1_PG2.S1551AT4 "551A RCRA C Landfill-TEQ_04"
,     V_FORM_S1_PG2.S1551AT5 "551A RCRA C Landfill-TEQ_05"
,     V_FORM_S1_PG2.S1551AT6 "551A RCRA C Landfill-TEQ_06"
,     V_FORM_S1_PG2.S1551AT7 "551A RCRA C Landfill-TEQ_07"
,     V_FORM_S1_PG2.S1551AT8 "551A RCRA C Landfill-TEQ_08"
,     V_FORM_S1_PG2.S1551AT9 "551A RCRA C Landfill-TEQ_09"
,     V_FORM_S1_PG2.S1551AT10 "551A RCRA C Landfill-TEQ_10"
,     V_FORM_S1_PG2.S1551AT11 "551A RCRA C Landfill-TEQ_11"
,     V_FORM_S1_PG2.S1551AT12 "551A RCRA C Landfill-TEQ_12"
,     V_FORM_S1_PG2.S1551AT13 "551A RCRA C Landfill-TEQ_13"
,     V_FORM_S1_PG2.S1551AT14 "551A RCRA C Landfill-TEQ_14"
,     V_FORM_S1_PG2.S1551AT15 "551A RCRA C Landfill-TEQ_15"
,     V_FORM_S1_PG2.S1551AT16 "551A RCRA C Landfill-TEQ_16"
,     V_FORM_S1_PG2.S1551AT17 "551A RCRA C Landfill-TEQ_17"
,     V_FORM_S1_PG2.S1551BNA "551B Other Landfill-TEQ_NA"
,     V_FORM_S1_PG2.S1551BT1 "551B Other Landfill-TEQ_01"
,     V_FORM_S1_PG2.S1551BT2 "551B Other Landfill-TEQ_02"
,     V_FORM_S1_PG2.S1551BT3 "551B Other Landfill-TEQ_03"
,     V_FORM_S1_PG2.S1551BT4 "551B Other Landfill-TEQ_04"
,     V_FORM_S1_PG2.S1551BT5 "551B Other Landfill-TEQ_05"
,     V_FORM_S1_PG2.S1551BT6 "551B Other Landfill-TEQ_06"
,     V_FORM_S1_PG2.S1551BT7 "551B Other Landfill-TEQ_07"
,     V_FORM_S1_PG2.S1551BT8 "551B Other Landfill-TEQ_08"
,     V_FORM_S1_PG2.S1551BT9 "551B Other Landfill-TEQ_09"
,     V_FORM_S1_PG2.S1551BT10 "551B Other Landfill-TEQ_10"
,     V_FORM_S1_PG2.S1551BT11 "551B Other Landfill-TEQ_11"
,     V_FORM_S1_PG2.S1551BT12 "551B Other Landfill-TEQ_12"
,     V_FORM_S1_PG2.S1551BT13 "551B Other Landfill-TEQ_13"
,     V_FORM_S1_PG2.S1551BT14 "551B Other Landfill-TEQ_14"
,     V_FORM_S1_PG2.S1551BT15 "551B Other Landfill-TEQ_15"
,     V_FORM_S1_PG2.S1551BT16 "551B Other Landfill-TEQ_16"
,     V_FORM_S1_PG2.S1551BT17 "551B Other Landfill-TEQ_17"
,     V_FORM_S1_PG2.S1552NA "552 Land Treatment-TEQ_NA"
,     V_FORM_S1_PG2.S1552T1 "552 Land Treatment-TEQ_01"
,     V_FORM_S1_PG2.S1552T2 "552 Land Treatment-TEQ_02"
,     V_FORM_S1_PG2.S1552T3 "552 Land Treatment-TEQ_03"
,     V_FORM_S1_PG2.S1552T4 "552 Land Treatment-TEQ_04"
,     V_FORM_S1_PG2.S1552T5 "552 Land Treatment-TEQ_05"
,     V_FORM_S1_PG2.S1552T6 "552 Land Treatment-TEQ_06"
,     V_FORM_S1_PG2.S1552T7 "552 Land Treatment-TEQ_07"
,     V_FORM_S1_PG2.S1552T8 "552 Land Treatment-TEQ_08"
,     V_FORM_S1_PG2.S1552T9 "552 Land Treatment-TEQ_09"
,     V_FORM_S1_PG2.S1552T10 "552 Land Treatment-TEQ_10"
,     V_FORM_S1_PG2.S1552T11 "552 Land Treatment-TEQ_11"
,     V_FORM_S1_PG2.S1552T12 "552 Land Treatment-TEQ_12"
,     V_FORM_S1_PG2.S1552T13 "552 Land Treatment-TEQ_13"
,     V_FORM_S1_PG2.S1552T14 "552 Land Treatment-TEQ_14"
,     V_FORM_S1_PG2.S1552T15 "552 Land Treatment-TEQ_15"
,     V_FORM_S1_PG2.S1552T16 "552 Land Treatment-TEQ_16"
,     V_FORM_S1_PG2.S1552T17 "552 Land Treatment-TEQ_17"
,     V_FORM_S1_PG2.S1553ANA "553A RCRA C SI-TEQ_NA"
,     V_FORM_S1_PG2.S1553AT1 "553A RCRA C SI-TEQ_01"
,     V_FORM_S1_PG2.S1553AT2 "553A RCRA C SI-TEQ_02"
,     V_FORM_S1_PG2.S1553AT3 "553A RCRA C SI-TEQ_03"
,     V_FORM_S1_PG2.S1553AT4 "553A RCRA C SI-TEQ_04"
,     V_FORM_S1_PG2.S1553AT5 "553A RCRA C SI-TEQ_05"
,     V_FORM_S1_PG2.S1553AT6 "553A RCRA C SI-TEQ_06"
,     V_FORM_S1_PG2.S1553AT7 "553A RCRA C SI-TEQ_07"
,     V_FORM_S1_PG2.S1553AT8 "553A RCRA C SI-TEQ_08"
,     V_FORM_S1_PG2.S1553AT9 "553A RCRA C SI-TEQ_09"
,     V_FORM_S1_PG2.S1553AT10 "553A RCRA C SI-TEQ_10"
,     V_FORM_S1_PG2.S1553AT11 "553A RCRA C SI-TEQ_11"
,     V_FORM_S1_PG2.S1553AT12 "553A RCRA C SI-TEQ_12"
,     V_FORM_S1_PG2.S1553AT13 "553A RCRA C SI-TEQ_13"
,     V_FORM_S1_PG2.S1553AT14 "553A RCRA C SI-TEQ_14"
,     V_FORM_S1_PG2.S1553AT15 "553A RCRA C SI-TEQ_15"
,     V_FORM_S1_PG2.S1553AT16 "553A RCRA C SI-TEQ_16"
,     V_FORM_S1_PG2.S1553AT17 "553A RCRA C SI-TEQ_17"
,     V_FORM_S1_PG2.S1553BNA "553B Other SI-TEQ_NA"
,     V_FORM_S1_PG2.S1553BT1 "553B Other SI-TEQ_01"
,     V_FORM_S1_PG2.S1553BT2 "553B Other SI-TEQ_02"
,     V_FORM_S1_PG2.S1553BT3 "553B Other SI-TEQ_03"
,     V_FORM_S1_PG2.S1553BT4 "553B Other SI-TEQ_04"
,     V_FORM_S1_PG2.S1553BT5 "553B Other SI-TEQ_05"
,     V_FORM_S1_PG2.S1553BT6 "553B Other SI-TEQ_06"
,     V_FORM_S1_PG2.S1553BT7 "553B Other SI-TEQ_07"
,     V_FORM_S1_PG2.S1553BT8 "553B Other SI-TEQ_08"
,     V_FORM_S1_PG2.S1553BT9 "553B Other SI-TEQ_09"
,     V_FORM_S1_PG2.S1553BT10 "553B Other SI-TEQ_10"
,     V_FORM_S1_PG2.S1553BT11 "553B Other SI-TEQ_11"
,     V_FORM_S1_PG2.S1553BT12 "553B Other SI-TEQ_12"
,     V_FORM_S1_PG2.S1553BT13 "553B Other SI-TEQ_13"
,     V_FORM_S1_PG2.S1553BT14 "553B Other SI-TEQ_14"
,     V_FORM_S1_PG2.S1553BT15 "553B Other SI-TEQ_15"
,     V_FORM_S1_PG2.S1553BT16 "553B Other SI-TEQ_16"
,     V_FORM_S1_PG2.S1553BT17 "553B Other SI-TEQ_17"
,     V_FORM_S1_PG2.S1554NA "554 Other Disposal-TEQ_NA"
,     V_FORM_S1_PG2.S1554T1 "554 Other Disposal-TEQ_01"
,     V_FORM_S1_PG2.S1554T2 "554 Other Disposal-TEQ_02"
,     V_FORM_S1_PG2.S1554T3 "554 Other Disposal-TEQ_03"
,     V_FORM_S1_PG2.S1554T4 "554 Other Disposal-TEQ_04"
,     V_FORM_S1_PG2.S1554T5 "554 Other Disposal-TEQ_05"
,     V_FORM_S1_PG2.S1554T6 "554 Other Disposal-TEQ_06"
,     V_FORM_S1_PG2.S1554T7 "554 Other Disposal-TEQ_07"
,     V_FORM_S1_PG2.S1554T8 "554 Other Disposal-TEQ_08"
,     V_FORM_S1_PG2.S1554T9 "554 Other Disposal-TEQ_09"
,     V_FORM_S1_PG2.S1554T10 "554 Other Disposal-TEQ_10"
,     V_FORM_S1_PG2.S1554T11 "554 Other Disposal-TEQ_11"
,     V_FORM_S1_PG2.S1554T12 "554 Other Disposal-TEQ_12"
,     V_FORM_S1_PG2.S1554T13 "554 Other Disposal-TEQ_13"
,     V_FORM_S1_PG2.S1554T14 "554 Other Disposal-TEQ_14"
,     V_FORM_S1_PG2.S1554T15 "554 Other Disposal-TEQ_15"
,     V_FORM_S1_PG2.S1554T16 "554 Other Disposal-TEQ_16"
,     V_FORM_S1_PG2.S1554T17 "554 Other Disposal-TEQ_17"
,     V_FORM_S1_PG3.S161A3NA "POTW Waste Quantity-TEQ_NA"
,     V_FORM_S1_PG3.S161A3T1 "POTW Waste Quantity-TEQ_01"
,     V_FORM_S1_PG3.S161A3T2 "POTW Waste Quantity-TEQ_02"
,     V_FORM_S1_PG3.S161A3T3 "POTW Waste Quantity-TEQ_03"
,     V_FORM_S1_PG3.S161A3T4 "POTW Waste Quantity-TEQ_04"
,     V_FORM_S1_PG3.S161A3T5 "POTW Waste Quantity-TEQ_05"
,     V_FORM_S1_PG3.S161A3T6 "POTW Waste Quantity-TEQ_06"
,     V_FORM_S1_PG3.S161A3T7 "POTW Waste Quantity-TEQ_07"
,     V_FORM_S1_PG3.S161A3T8 "POTW Waste Quantity-TEQ_08"
,     V_FORM_S1_PG3.S161A3T9 "POTW Waste Quantity-TEQ_09"
,     V_FORM_S1_PG3.S161A3T10 "POTW Waste Quantity-TEQ_10"
,     V_FORM_S1_PG3.S161A3T11 "POTW Waste Quantity-TEQ_11"
,     V_FORM_S1_PG3.S161A3T12 "POTW Waste Quantity-TEQ_12"
,     V_FORM_S1_PG3.S161A3T13 "POTW Waste Quantity-TEQ_13"
,     V_FORM_S1_PG3.S161A3T14 "POTW Waste Quantity-TEQ_14"
,     V_FORM_S1_PG3.S161A3T15 "POTW Waste Quantity-TEQ_15"
,     V_FORM_S1_PG3.S161A3T16 "POTW Waste Quantity-TEQ_16"
,     V_FORM_S1_PG3.S161A3T17 "POTW Waste Quantity-TEQ_17"
,     V_FORM_S1_PG4.S181ANA "81A Ons Disp UG INJ C1-TEQ_N"
,     V_FORM_S1_PG4.S181AT1 "81A Ons Disp UG INJ C1-TEQ_01"
,     V_FORM_S1_PG4.S181AT2 "81A Ons Disp UG INJ C1-TEQ_02"
,     V_FORM_S1_PG4.S181AT3 "81A Ons Disp UG INJ C1-TEQ_03"
,     V_FORM_S1_PG4.S181AT4 "81A Ons Disp UG INJ C1-TEQ_04"
,     V_FORM_S1_PG4.S181AT5 "81A Ons Disp UG INJ C1-TEQ_05"
,     V_FORM_S1_PG4.S181AT6 "81A Ons Disp UG INJ C1-TEQ_06"
,     V_FORM_S1_PG4.S181AT7 "81A Ons Disp UG INJ C1-TEQ_07"
,     V_FORM_S1_PG4.S181AT8 "81A Ons Disp UG INJ C1-TEQ_08"
,     V_FORM_S1_PG4.S181AT9 "81A Ons Disp UG INJ C1-TEQ_09"
,     V_FORM_S1_PG4.S181AT10 "81A Ons Disp UG INJ C1-TEQ_10"
,     V_FORM_S1_PG4.S181AT11 "81A Ons Disp UG INJ C1-TEQ_11"
,     V_FORM_S1_PG4.S181AT12 "81A Ons Disp UG INJ C1-TEQ_12"
,     V_FORM_S1_PG4.S181AT13 "81A Ons Disp UG INJ C1-TEQ_13"
,     V_FORM_S1_PG4.S181AT14 "81A Ons Disp UG INJ C1-TEQ_14"
,     V_FORM_S1_PG4.S181AT15 "81A Ons Disp UG INJ C1-TEQ_15"
,     V_FORM_S1_PG4.S181AT16 "81A Ons Disp UG INJ C1-TEQ_16"
,     V_FORM_S1_PG4.S181AT17 "81A Ons Disp UG INJ C1-TEQ_17"
,     V_FORM_S1_PG4.S181BNA "81B Ons Disp Other-TEQ_NA"
,     V_FORM_S1_PG4.S181BT1 "81B Ons Disp Other-TEQ_01"
,     V_FORM_S1_PG4.S181BT2 "81B Ons Disp Other-TEQ_02"
,     V_FORM_S1_PG4.S181BT3 "81B Ons Disp Other-TEQ_03"
,     V_FORM_S1_PG4.S181BT4 "81B Ons Disp Other-TEQ_04"
,     V_FORM_S1_PG4.S181BT5 "81B Ons Disp Other-TEQ_05"
,     V_FORM_S1_PG4.S181BT6 "81B Ons Disp Other-TEQ_06"
,     V_FORM_S1_PG4.S181BT7 "81B Ons Disp Other-TEQ_07"
,     V_FORM_S1_PG4.S181BT8 "81B Ons Disp Other-TEQ_08"
,     V_FORM_S1_PG4.S181BT9 "81B Ons Disp Other-TEQ_09"
,     V_FORM_S1_PG4.S181BT10 "81B Ons Disp Other-TEQ_10"
,     V_FORM_S1_PG4.S181BT11 "81B Ons Disp Other-TEQ_11"
,     V_FORM_S1_PG4.S181BT12 "81B Ons Disp Other-TEQ_12"
,     V_FORM_S1_PG4.S181BT13 "81B Ons Disp Other-TEQ_13"
,     V_FORM_S1_PG4.S181BT14 "81B Ons Disp Other-TEQ_14"
,     V_FORM_S1_PG4.S181BT15 "81B Ons Disp Other-TEQ_15"
,     V_FORM_S1_PG4.S181BT16 "81B Ons Disp Other-TEQ_16"
,     V_FORM_S1_PG4.S181BT17 "81B Ons Disp Other-TEQ_17"
,     V_FORM_S1_PG4.S181CNA "81C Off Disp UG INJ C1-TEQ_NA"
,     V_FORM_S1_PG4.S181CT1 "81C Off Disp UG INJ C1-TEQ_01"
,     V_FORM_S1_PG4.S181CT2 "81C Off Disp UG INJ C1-TEQ_02"
,     V_FORM_S1_PG4.S181CT3 "81C Off Disp UG INJ C1-TEQ_03"
,     V_FORM_S1_PG4.S181CT4 "81C Off Disp UG INJ C1-TEQ_04"
,     V_FORM_S1_PG4.S181CT5 "81C Off Disp UG INJ C1-TEQ_05"
,     V_FORM_S1_PG4.S181CT6 "81C Off Disp UG INJ C1-TEQ_06"
,     V_FORM_S1_PG4.S181CT7 "81C Off Disp UG INJ C1-TEQ_07"
,     V_FORM_S1_PG4.S181CT8 "81C Off Disp UG INJ C1-TEQ_08"
,     V_FORM_S1_PG4.S181CT9 "81C Off Disp UG INJ C1-TEQ_09"
,     V_FORM_S1_PG4.S181CT10 "81C Off Disp UG INJ C1-TEQ_10"
,     V_FORM_S1_PG4.S181CT11 "81C Off Disp UG INJ C1-TEQ_11"
,     V_FORM_S1_PG4.S181CT12 "81C Off Disp UG INJ C1-TEQ_12"
,     V_FORM_S1_PG4.S181CT13 "81C Off Disp UG INJ C1-TEQ_13"
,     V_FORM_S1_PG4.S181CT14 "81C Off Disp UG INJ C1-TEQ_14"
,     V_FORM_S1_PG4.S181CT15 "81C Off Disp UG INJ C1-TEQ_15"
,     V_FORM_S1_PG4.S181CT16 "81C Off Disp UG INJ C1-TEQ_16"
,     V_FORM_S1_PG4.S181CT17 "81C Off Disp UG INJ C1-TEQ_17"
,     V_FORM_S1_PG4.S181DNA "81D Off Disp Other-TEQ_NA"
,     V_FORM_S1_PG4.S181DT1 "81D Off Disp Other-TEQ_01"
,     V_FORM_S1_PG4.S181DT2 "81D Off Disp Other-TEQ_02"
,     V_FORM_S1_PG4.S181DT3 "81D Off Disp Other-TEQ_03"
,     V_FORM_S1_PG4.S181DT4 "81D Off Disp Other-TEQ_04"
,     V_FORM_S1_PG4.S181DT5 "81D Off Disp Other-TEQ_05"
,     V_FORM_S1_PG4.S181DT6 "81D Off Disp Other-TEQ_06"
,     V_FORM_S1_PG4.S181DT7 "81D Off Disp Other-TEQ_07"
,     V_FORM_S1_PG4.S181DT8 "81D Off Disp Other-TEQ_08"
,     V_FORM_S1_PG4.S181DT9 "81D Off Disp Other-TEQ_09"
,     V_FORM_S1_PG4.S181DT10 "81D Off Disp Other-TEQ_10"
,     V_FORM_S1_PG4.S181DT11 "81D Off Disp Other-TEQ_11"
,     V_FORM_S1_PG4.S181DT12 "81D Off Disp Other-TEQ_12"
,     V_FORM_S1_PG4.S181DT13 "81D Off Disp Other-TEQ_13"
,     V_FORM_S1_PG4.S181DT14 "81D Off Disp Other-TEQ_14"
,     V_FORM_S1_PG4.S181DT15 "81D Off Disp Other-TEQ_15"
,     V_FORM_S1_PG4.S181DT16 "81D Off Disp Other-TEQ_16"
,     V_FORM_S1_PG4.S181DT17 "81D Off Disp Other-TEQ_17"
,     V_FORM_S1_PG4.S182NA "82 Ons Eng Rec-TEQ_NA"
,     V_FORM_S1_PG4.S182T1 "82 Ons Eng Rec-TEQ_01"
,     V_FORM_S1_PG4.S182T2 "82 Ons Eng Rec-TEQ_02"
,     V_FORM_S1_PG4.S182T3 "82 Ons Eng Rec-TEQ_03"
,     V_FORM_S1_PG4.S182T4 "82 Ons Eng Rec-TEQ_04"
,     V_FORM_S1_PG4.S182T5 "82 Ons Eng Rec-TEQ_05"
,     V_FORM_S1_PG4.S182T6 "82 Ons Eng Rec-TEQ_06"
,     V_FORM_S1_PG4.S182T7 "82 Ons Eng Rec-TEQ_07"
,     V_FORM_S1_PG4.S182T8 "82 Ons Eng Rec-TEQ_08"
,     V_FORM_S1_PG4.S182T9 "82 Ons Eng Rec-TEQ_09"
,     V_FORM_S1_PG4.S182T10 "82 Ons Eng Rec-TEQ_10"
,     V_FORM_S1_PG4.S182T11 "82 Ons Eng Rec-TEQ_11"
,     V_FORM_S1_PG4.S182T12 "82 Ons Eng Rec-TEQ_12"
,     V_FORM_S1_PG4.S182T13 "82 Ons Eng Rec-TEQ_13"
,     V_FORM_S1_PG4.S182T14 "82 Ons Eng Rec-TEQ_14"
,     V_FORM_S1_PG4.S182T15 "82 Ons Eng Rec-TEQ_15"
,     V_FORM_S1_PG4.S182T16 "82 Ons Eng Rec-TEQ_16"
,     V_FORM_S1_PG4.S182T17 "82 Ons Eng Rec-TEQ_17"
,     V_FORM_S1_PG4.S183NA "83 Off Eng Rec-TEQ_NA"
,     V_FORM_S1_PG4.S183T1 "83 Off Eng Rec-TEQ_01"
,     V_FORM_S1_PG4.S183T2 "83 Off Eng Rec-TEQ_02"
,     V_FORM_S1_PG4.S183T3 "83 Off Eng Rec-TEQ_03"
,     V_FORM_S1_PG4.S183T4 "83 Off Eng Rec-TEQ_04"
,     V_FORM_S1_PG4.S183T5 "83 Off Eng Rec-TEQ_05"
,     V_FORM_S1_PG4.S183T6 "83 Off Eng Rec-TEQ_06"
,     V_FORM_S1_PG4.S183T7 "83 Off Eng Rec-TEQ_07"
,     V_FORM_S1_PG4.S183T8 "83 Off Eng Rec-TEQ_08"
,     V_FORM_S1_PG4.S183T9 "83 Off Eng Rec-TEQ_09"
,     V_FORM_S1_PG4.S183T10 "83 Off Eng Rec-TEQ_10"
,     V_FORM_S1_PG4.S183T11 "83 Off Eng Rec-TEQ_11"
,     V_FORM_S1_PG4.S183T12 "83 Off Eng Rec-TEQ_12"
,     V_FORM_S1_PG4.S183T13 "83 Off Eng Rec-TEQ_13"
,     V_FORM_S1_PG4.S183T14 "83 Off Eng Rec-TEQ_14"
,     V_FORM_S1_PG4.S183T15 "83 Off Eng Rec-TEQ_15"
,     V_FORM_S1_PG4.S183T16 "83 Off Eng Rec-TEQ_16"
,     V_FORM_S1_PG4.S183T17 "83 Off Eng Rec-TEQ_17"
,     V_FORM_S1_PG4.S184NA "84 Ons Recycle-TEQ_NA"
,     V_FORM_S1_PG4.S184T1 "84 Ons Recycle-TEQ_01"
,     V_FORM_S1_PG4.S184T2 "84 Ons Recycle-TEQ_02"
,     V_FORM_S1_PG4.S184T3 "84 Ons Recycle-TEQ_03"
,     V_FORM_S1_PG4.S184T4 "84 Ons Recycle-TEQ_04"
,     V_FORM_S1_PG4.S184T5 "84 Ons Recycle-TEQ_05"
,     V_FORM_S1_PG4.S184T6 "84 Ons Recycle-TEQ_06"
,     V_FORM_S1_PG4.S184T7 "84 Ons Recycle-TEQ_07"
,     V_FORM_S1_PG4.S184T8 "84 Ons Recycle-TEQ_08"
,     V_FORM_S1_PG4.S184T9 "84 Ons Recycle-TEQ_09"
,     V_FORM_S1_PG4.S184T10 "84 Ons Recycle-TEQ_10"
,     V_FORM_S1_PG4.S184T11 "84 Ons Recycle-TEQ_11"
,     V_FORM_S1_PG4.S184T12 "84 Ons Recycle-TEQ_12"
,     V_FORM_S1_PG4.S184T13 "84 Ons Recycle-TEQ_13"
,     V_FORM_S1_PG4.S184T14 "84 Ons Recycle-TEQ_14"
,     V_FORM_S1_PG4.S184T15 "84 Ons Recycle-TEQ_15"
,     V_FORM_S1_PG4.S184T16 "84 Ons Recycle-TEQ_16"
,     V_FORM_S1_PG4.S184T17 "84 Ons Recycle-TEQ_17"
,     V_FORM_S1_PG4.S185NA "85 Off Recycle-TEQ_NA"
,     V_FORM_S1_PG4.S185T1 "85 Off Recycle-TEQ_01"
,     V_FORM_S1_PG4.S185T2 "85 Off Recycle-TEQ_02"
,     V_FORM_S1_PG4.S185T3 "85 Off Recycle-TEQ_03"
,     V_FORM_S1_PG4.S185T4 "85 Off Recycle-TEQ_04"
,     V_FORM_S1_PG4.S185T5 "85 Off Recycle-TEQ_05"
,     V_FORM_S1_PG4.S185T6 "85 Off Recycle-TEQ_06"
,     V_FORM_S1_PG4.S185T7 "85 Off Recycle-TEQ_07"
,     V_FORM_S1_PG4.S185T8 "85 Off Recycle-TEQ_08"
,     V_FORM_S1_PG4.S185T9 "85 Off Recycle-TEQ_09"
,     V_FORM_S1_PG4.S185T10 "85 Off Recycle-TEQ_10"
,     V_FORM_S1_PG4.S185T11 "85 Off Recycle-TEQ_11"
,     V_FORM_S1_PG4.S185T12 "85 Off Recycle-TEQ_12"
,     V_FORM_S1_PG4.S185T13 "85 Off Recycle-TEQ_13"
,     V_FORM_S1_PG4.S185T14 "85 Off Recycle-TEQ_14"
,     V_FORM_S1_PG4.S185T15 "85 Off Recycle-TEQ_15"
,     V_FORM_S1_PG4.S185T16 "85 Off Recycle-TEQ_16"
,     V_FORM_S1_PG4.S185T17 "85 Off Recycle-TEQ_17"
,     V_FORM_S1_PG4.S186NA "86 Ons Treated-TEQ_NA"
,     V_FORM_S1_PG4.S186T1 "86 Ons Treated-TEQ_01"
,     V_FORM_S1_PG4.S186T2 "86 Ons Treated-TEQ_02"
,     V_FORM_S1_PG4.S186T3 "86 Ons Treated-TEQ_03"
,     V_FORM_S1_PG4.S186T4 "86 Ons Treated-TEQ_04"
,     V_FORM_S1_PG4.S186T5 "86 Ons Treated-TEQ_05"
,     V_FORM_S1_PG4.S186T6 "86 Ons Treated-TEQ_06"
,     V_FORM_S1_PG4.S186T7 "86 Ons Treated-TEQ_07"
,     V_FORM_S1_PG4.S186T8 "86 Ons Treated-TEQ_08"
,     V_FORM_S1_PG4.S186T9 "86 Ons Treated-TEQ_09"
,     V_FORM_S1_PG4.S186T10 "86 Ons Treated-TEQ_10"
,     V_FORM_S1_PG4.S186T11 "86 Ons Treated-TEQ_11"
,     V_FORM_S1_PG4.S186T12 "86 Ons Treated-TEQ_12"
,     V_FORM_S1_PG4.S186T13 "86 Ons Treated-TEQ_13"
,     V_FORM_S1_PG4.S186T14 "86 Ons Treated-TEQ_14"
,     V_FORM_S1_PG4.S186T15 "86 Ons Treated-TEQ_15"
,     V_FORM_S1_PG4.S186T16 "86 Ons Treated-TEQ_16"
,     V_FORM_S1_PG4.S186T17 "86 Ons Treated-TEQ_17"
,     V_FORM_S1_PG4.S187NA "87 Off Treated-TEQ_NA"
,     V_FORM_S1_PG4.S187T1 "87 Off Treated-TEQ_01"
,     V_FORM_S1_PG4.S187T2 "87 Off Treated-TEQ_02"
,     V_FORM_S1_PG4.S187T3 "87 Off Treated-TEQ_03"
,     V_FORM_S1_PG4.S187T4 "87 Off Treated-TEQ_04"
,     V_FORM_S1_PG4.S187T5 "87 Off Treated-TEQ_05"
,     V_FORM_S1_PG4.S187T6 "87 Off Treated-TEQ_06"
,     V_FORM_S1_PG4.S187T7 "87 Off Treated-TEQ_07"
,     V_FORM_S1_PG4.S187T8 "87 Off Treated-TEQ_08"
,     V_FORM_S1_PG4.S187T9 "87 Off Treated-TEQ_09"
,     V_FORM_S1_PG4.S187T10 "87 Off Treated-TEQ_10"
,     V_FORM_S1_PG4.S187T11 "87 Off Treated-TEQ_11"
,     V_FORM_S1_PG4.S187T12 "87 Off Treated-TEQ_12"
,     V_FORM_S1_PG4.S187T13 "87 Off Treated-TEQ_13"
,     V_FORM_S1_PG4.S187T14 "87 Off Treated-TEQ_14"
,     V_FORM_S1_PG4.S187T15 "87 Off Treated-TEQ_15"
,     V_FORM_S1_PG4.S187T16 "87 Off Treated-TEQ_16"
,     V_FORM_S1_PG4.S187T17 "87 Off Treated-TEQ_17"
,     V_FORM_S1_PG4.S188NA "88 Remed One-Time-TEQ_NA"
,     V_FORM_S1_PG4.S188T1 "88 Remed One-Time-TEQ_01"
,     V_FORM_S1_PG4.S188T2 "88 Remed One-Time-TEQ_02"
,     V_FORM_S1_PG4.S188T3 "88 Remed One-Time-TEQ_03"
,     V_FORM_S1_PG4.S188T4 "88 Remed One-Time-TEQ_04"
,     V_FORM_S1_PG4.S188T5 "88 Remed One-Time-TEQ_05"
,     V_FORM_S1_PG4.S188T6 "88 Remed One-Time-TEQ_06"
,     V_FORM_S1_PG4.S188T7 "88 Remed One-Time-TEQ_07"
,     V_FORM_S1_PG4.S188T8 "88 Remed One-Time-TEQ_08"
,     V_FORM_S1_PG4.S188T9 "88 Remed One-Time-TEQ_09"
,     V_FORM_S1_PG4.S188T10 "88 Remed One-Time-TEQ_10"
,     V_FORM_S1_PG4.S188T11 "88 Remed One-Time-TEQ_11"
,     V_FORM_S1_PG4.S188T12 "88 Remed One-Time-TEQ_12"
,     V_FORM_S1_PG4.S188T13 "88 Remed One-Time-TEQ_13"
,     V_FORM_S1_PG4.S188T14 "88 Remed One-Time-TEQ_14"
,     V_FORM_S1_PG4.S188T15 "88 Remed One-Time-TEQ_15"
,     V_FORM_S1_PG4.S188T16 "88 Remed One-Time-TEQ_16"
,     V_FORM_S1_PG4.S188T17 "88 Remed One-Time-TEQ_17"

,     R.SUB_REP_YEAR SUBMISSION_REPORTING_YEAR
,     CTYREG.EcologyRegion ECOLOGY_REGION
,     T.AgencyID FS_ID
,     T.EPAID EPA_ID
,     F.COUNTY COUNTY_NM
,     F.FAC_SITE FAC_NAME
,     T.AgencyName
,     C.CHEM_TXT CHEMICAL_NAME_TEXT

FROM TRI_SUB S
JOIN TRI_FAC F ON F.FK_GUID = S.PK_GUID
LEFT JOIN App_Lookup_Cty_Reg CTYREG ON CTYREG.County = F.COUNTY
JOIN TRI_REPORT R ON R.FK_GUID = S.PK_GUID
JOIN TRI_CHEM C ON C.FK_GUID = R.PK_GUID
JOIN App_FI_TRIFID T ON T.TRIFID = F.FAC_ID
JOIN V_FORM_S1_PG1 ON V_FORM_S1_PG1.PK_GUID_REP = R.PK_GUID
JOIN V_FORM_S1_PG2 ON V_FORM_S1_PG2.PK_GUID_REP = R.PK_GUID
JOIN V_FORM_S1_PG3 ON V_FORM_S1_PG3.PK_GUID_REP = R.PK_GUID
JOIN V_FORM_S1_PG4 ON V_FORM_S1_PG4.PK_GUID_REP = R.PK_GUID

WHERE C.CAS_CLBER = 'N150' 
/

CREATE FORCE VIEW "V_EXT_DIOXIN_OFF_WT_D" ( "PK_GUID", "FK_GUID", "FSID", "ECY ID", "TRIFID", "Year", "Facility Name", "AKA", "Address 1", "Address 2", "CITY", "COUNTY", "ZIP", "CHEMICAL", "Trans RCRA ID", "Trans Facility Name", "Trans Address", "Trans City", "Trans State", "Trans Waste Total", "Waste Mgmt Code", "TEQ_01", "TEQ_02", "TEQ_03", "TEQ_04", "TEQ_05", "TEQ_06", "TEQ_07", "TEQ_08", "TEQ_09", "TEQ_10", "TEQ_11", "TEQ_12", "TEQ_13", "TEQ_14", "TEQ_15", "TEQ_16", "TEQ_17", "TEQ_NA", "ECY Region", "SUBMISSION_REPORTING_YEAR", "ECOLOGY_REGION", "FS_ID", "EPA_ID", "COUNTY_NM", "FAC_NAME", "AGENCYNAME", "CHEMICAL_NAME_TEXT" )
AS
SELECT
 TL.PK_GUID
, TL.FK_GUID
, TD.FS_ID "FSID"
, TD.EPA_ID "ECY ID"
, TD.TRIFID
, TD.SUBMISSION_REPORTING_YEAR "Year"
, TD.FAC_NAME "Facility Name"
, TD.AgencyName AKA
, TD.LOC_ADD_LINE_1_DS "Address 1"
, TD.LOC_ADD_LINE_2_DS "Address 2"
, TD.CITY_NM City
, TD.COUNTY_NM County
, TD.ZIP_CD Zip
, TD.CHEMICAL_NAME_TEXT Chemical
, TL.RCRA_ID_CLBER "Trans RCRA ID"
, TL.FAC_SITE "Trans Facility Name"
, TL.LOC_ADD_TXT "Trans Address"
, TL.LOCALITY "Trans City"
, TL.STATE "Trans State"
, CASE
  WHEN TLQ.WASTE_Q_NA_IND = 'Y' THEN NULL
  ELSE TRI_RangeCodeConversion(TLQ.WASTE_Q_ME, TLQ.WASTE_Q_RANGE_CODE)
 END "Trans Waste Total"
, TLQ.WASTE_MANAGEMENT_CODE "Waste Mgmt Code"
, TLQ.TOX_EQ_VAL1 "TEQ_01"
, TLQ.TOX_EQ_VAL2 "TEQ_02"
, TLQ.TOX_EQ_VAL3 "TEQ_03"
, TLQ.TOX_EQ_VAL4 "TEQ_04"
, TLQ.TOX_EQ_VAL5 "TEQ_05"
, TLQ.TOX_EQ_VAL6 "TEQ_06"
, TLQ.TOX_EQ_VAL7 "TEQ_07"
, TLQ.TOX_EQ_VAL8 "TEQ_08"
, TLQ.TOX_EQ_VAL9 "TEQ_09"
, TLQ.TOX_EQ_VAL10 "TEQ_10"
, TLQ.TOX_EQ_VAL11 "TEQ_11"
, TLQ.TOX_EQ_VAL12 "TEQ_12"
, TLQ.TOX_EQ_VAL13 "TEQ_13"
, TLQ.TOX_EQ_VAL14 "TEQ_14"
, TLQ.TOX_EQ_VAL15 "TEQ_15"
, TLQ.TOX_EQ_VAL16 "TEQ_16"
, TLQ.TOX_EQ_VAL17 "TEQ_17"
, TLQ.TOX_EQ_NA_IND "TEQ_NA"
, TD.ECOLOGY_REGION "ECY Region"
, TD.SUBMISSION_REPORTING_YEAR
, TD.ECOLOGY_REGION
, TD.FS_ID
, TD.EPA_ID
, TD.COUNTY_NM
, TD.FAC_NAME
, TD.AgencyName
, TD.CHEMICAL_NAME_TEXT

FROM TRI_TRANSFER_LOC TL
JOIN V_EXT_MASTER_D TD ON TL.FK_GUID = TD.PK_GUID_REPORT
JOIN TRI_TRANSFER_Q TLQ ON TLQ.FK_GUID = TL.PK_GUID
WHERE
TD.REPORT_TYPE = 'TRI_FORM_R'
AND
TD.CAS_NUMBER = 'N150' 
/

CREATE FORCE VIEW "V_EXT_DIOXIN_OFF_WT" ( "PK_GUID", "FK_GUID", "FSID", "ECY ID", "TRIFID", "Year", "Facility Name", "AKA", "Address 1", "Address 2", "CITY", "COUNTY", "ZIP", "CHEMICAL", "Trans RCRA ID", "Trans Facility Name", "Trans Address", "Trans City", "Trans State", "Trans Waste Total", "Waste Mgmt Code", "TEQ_01", "TEQ_02", "TEQ_03", "TEQ_04", "TEQ_05", "TEQ_06", "TEQ_07", "TEQ_08", "TEQ_09", "TEQ_10", "TEQ_11", "TEQ_12", "TEQ_13", "TEQ_14", "TEQ_15", "TEQ_16", "TEQ_17", "TEQ_NA", "ECY Region", "SUBMISSION_REPORTING_YEAR", "ECOLOGY_REGION", "FS_ID", "EPA_ID", "COUNTY_NM", "FAC_NAME", "AGENCYNAME", "CHEMICAL_NAME_TEXT" )
AS
SELECT
 TL.PK_GUID
, TL.FK_GUID
, TD.FS_ID "FSID"
, TD.EPA_ID "ECY ID"
, TD.TRIFID
, TD.SUBMISSION_REPORTING_YEAR "Year"
, TD.FAC_NAME "Facility Name"
, TD.AgencyName AKA
, TD.LOC_ADD_LINE_1_DS "Address 1"
, TD.LOC_ADD_LINE_2_DS "Address 2"
, TD.CITY_NM City
, TD.COUNTY_NM County
, TD.ZIP_CD Zip
, TD.CHEMICAL_NAME_TEXT Chemical
, TL.RCRA_ID_CLBER "Trans RCRA ID"
, TL.FAC_SITE "Trans Facility Name"
, TL.LOC_ADD_TXT "Trans Address"
, TL.LOCALITY "Trans City"
, TL.STATE "Trans State"
, CASE
  WHEN TLQ.WASTE_Q_NA_IND = 'Y' THEN NULL
  ELSE TRI_RangeCodeConversion(TLQ.WASTE_Q_ME, TLQ.WASTE_Q_RANGE_CODE)
 END "Trans Waste Total"
, TLQ.WASTE_MANAGEMENT_CODE "Waste Mgmt Code"
, TLQ.TOX_EQ_VAL1 "TEQ_01"
, TLQ.TOX_EQ_VAL2 "TEQ_02"
, TLQ.TOX_EQ_VAL3 "TEQ_03"
, TLQ.TOX_EQ_VAL4 "TEQ_04"
, TLQ.TOX_EQ_VAL5 "TEQ_05"
, TLQ.TOX_EQ_VAL6 "TEQ_06"
, TLQ.TOX_EQ_VAL7 "TEQ_07"
, TLQ.TOX_EQ_VAL8 "TEQ_08"
, TLQ.TOX_EQ_VAL9 "TEQ_09"
, TLQ.TOX_EQ_VAL10 "TEQ_10"
, TLQ.TOX_EQ_VAL11 "TEQ_11"
, TLQ.TOX_EQ_VAL12 "TEQ_12"
, TLQ.TOX_EQ_VAL13 "TEQ_13"
, TLQ.TOX_EQ_VAL14 "TEQ_14"
, TLQ.TOX_EQ_VAL15 "TEQ_15"
, TLQ.TOX_EQ_VAL16 "TEQ_16"
, TLQ.TOX_EQ_VAL17 "TEQ_17"
, TLQ.TOX_EQ_NA_IND "TEQ_NA"
, TD.ECOLOGY_REGION "ECY Region"
, TD.SUBMISSION_REPORTING_YEAR
, TD.ECOLOGY_REGION
, TD.FS_ID
, TD.EPA_ID
, TD.COUNTY_NM
, TD.FAC_NAME
, TD.AgencyName
, TD.CHEMICAL_NAME_TEXT

FROM TRI_TRANSFER_LOC TL
JOIN V_EXT_MASTER_D TD ON TL.FK_GUID = TD.PK_GUID_REPORT
JOIN TRI_TRANSFER_Q TLQ ON TLQ.FK_GUID = TL.PK_GUID
WHERE
TD.REPORT_TYPE = 'TRI_FORM_R'
AND
TD.CAS_NUMBER <> 'N150' 
/

CREATE FORCE VIEW "V_EXT_DIOXIN" ( "PK_GUID_SUB", "PK_GUID_REP", "FSID", "EPA ID", "TRIFID", "Year", "REVISION", "Partial Sub", "Form", "Facility Name", "AKA", "Address 1", "Address 2", "City", "County", "Zip", "Chemical", "CAS #", "51 Fugitive Air-TEQ_NA", "51 Fugitive Air-TEQ_01", "51 Fugitive Air-TEQ_02", "51 Fugitive Air-TEQ_03", "51 Fugitive Air-TEQ_04", "51 Fugitive Air-TEQ_05", "51 Fugitive Air-TEQ_06", "51 Fugitive Air-TEQ_07", "51 Fugitive Air-TEQ_08", "51 Fugitive Air-TEQ_09", "51 Fugitive Air-TEQ_10", "51 Fugitive Air-TEQ_11", "51 Fugitive Air-TEQ_12", "51 Fugitive Air-TEQ_13", "51 Fugitive Air-TEQ_14", "51 Fugitive Air-TEQ_15", "51 Fugitive Air-TEQ_16", "51 Fugitive Air-TEQ_17", "52 Stack Air-TEQ_NA", "52 Stack Air-TEQ_01", "52 Stack Air-TEQ_02", "52 Stack Air-TEQ_03", "52 Stack Air-TEQ_04", "52 Stack Air-TEQ_05", "52 Stack Air-TEQ_06", "52 Stack Air-TEQ_07", "52 Stack Air-TEQ_08", "52 Stack Air-TEQ_09", "52 Stack Air-TEQ_10", "52 Stack Air-TEQ_11", "52 Stack Air-TEQ_12", "52 Stack Air-TEQ_13", "52 Stack Air-TEQ_14", "52 Stack Air-TEQ_15", "52 Stack Air-TEQ_16", "52 Stack Air-TEQ_17", "531 Water-TEQ_NA", "531 Water-TEQ_01", "531 Water-TEQ_02", "531 Water-TEQ_03", "531 Water-TEQ_04", "531 Water-TEQ_05", "531 Water-TEQ_06", "531 Water-TEQ_07", "531 Water-TEQ_08", "531 Water-TEQ_09", "531 Water-TEQ_10", "531 Water-TEQ_11", "531 Water-TEQ_12", "531 Water-TEQ_13", "531 Water-TEQ_14", "531 Water-TEQ_15", "531 Water-TEQ_16", "531 Water-TEQ_17", "532 Water-TEQ_NA", "532 Water-TEQ_01", "532 Water-TEQ_02", "532 Water-TEQ_03", "532 Water-TEQ_04", "532 Water-TEQ_05", "532 Water-TEQ_06", "532 Water-TEQ_07", "532 Water-TEQ_08", "532 Water-TEQ_09", "532 Water-TEQ_10", "532 Water-TEQ_11", "532 Water-TEQ_12", "532 Water-TEQ_13", "532 Water-TEQ_14", "532 Water-TEQ_15", "532 Water-TEQ_16", "532 Water-TEQ_17", "533 Water-TEQ_NA", "533 Water-TEQ_01", "533 Water-TEQ_02", "533 Water-TEQ_03", "533 Water-TEQ_04", "533 Water-TEQ_05", "533 Water-TEQ_06", "533 Water-TEQ_07", "533 Water-TEQ_08", "533 Water-TEQ_09", "533 Water-TEQ_10", "533 Water-TEQ_11", "533 Water-TEQ_12", "533 Water-TEQ_13", "533 Water-TEQ_14", "533 Water-TEQ_15", "533 Water-TEQ_16", "533 Water-TEQ_17", "541 UG INJ Class I-TEQ_NA", "541 UG INJ Class I-TEQ_01", "541 UG INJ Class I-TEQ_02", "541 UG INJ Class I-TEQ_03", "541 UG INJ Class I-TEQ_04", "541 UG INJ Class I-TEQ_05", "541 UG INJ Class I-TEQ_06", "541 UG INJ Class I-TEQ_07", "541 UG INJ Class I-TEQ_08", "541 UG INJ Class I-TEQ_09", "541 UG INJ Class I-TEQ_10", "541 UG INJ Class I-TEQ_11", "541 UG INJ Class I-TEQ_12", "541 UG INJ Class I-TEQ_13", "541 UG INJ Class I-TEQ_14", "541 UG INJ Class I-TEQ_15", "541 UG INJ Class I-TEQ_16", "541 UG INJ Class I-TEQ_17", "542 UG INJ Class II-V-TEQ_NA", "542 UG INJ Class II-V-TEQ_01", "542 UG INJ Class II-V-TEQ_02", "542 UG INJ Class II-V-TEQ_03", "542 UG INJ Class II-V-TEQ_04", "542 UG INJ Class II-V-TEQ_05", "542 UG INJ Class II-V-TEQ_06", "542 UG INJ Class II-V-TEQ_07", "542 UG INJ Class II-V-TEQ_08", "542 UG INJ Class II-V-TEQ_09", "542 UG INJ Class II-V-TEQ_10", "542 UG INJ Class II-V-TEQ_11", "542 UG INJ Class II-V-TEQ_12", "542 UG INJ Class II-V-TEQ_13", "542 UG INJ Class II-V-TEQ_14", "542 UG INJ Class II-V-TEQ_15", "542 UG INJ Class II-V-TEQ_16", "542 UG INJ Class II-V-TEQ_17", "551A RCRA C Landfill-TEQ_NA", "551A RCRA C Landfill-TEQ_01", "551A RCRA C Landfill-TEQ_02", "551A RCRA C Landfill-TEQ_03", "551A RCRA C Landfill-TEQ_04", "551A RCRA C Landfill-TEQ_05", "551A RCRA C Landfill-TEQ_06", "551A RCRA C Landfill-TEQ_07", "551A RCRA C Landfill-TEQ_08", "551A RCRA C Landfill-TEQ_09", "551A RCRA C Landfill-TEQ_10", "551A RCRA C Landfill-TEQ_11", "551A RCRA C Landfill-TEQ_12", "551A RCRA C Landfill-TEQ_13", "551A RCRA C Landfill-TEQ_14", "551A RCRA C Landfill-TEQ_15", "551A RCRA C Landfill-TEQ_16", "551A RCRA C Landfill-TEQ_17", "551B Other Landfill-TEQ_NA", "551B Other Landfill-TEQ_01", "551B Other Landfill-TEQ_02", "551B Other Landfill-TEQ_03", "551B Other Landfill-TEQ_04", "551B Other Landfill-TEQ_05", "551B Other Landfill-TEQ_06", "551B Other Landfill-TEQ_07", "551B Other Landfill-TEQ_08", "551B Other Landfill-TEQ_09", "551B Other Landfill-TEQ_10", "551B Other Landfill-TEQ_11", "551B Other Landfill-TEQ_12", "551B Other Landfill-TEQ_13", "551B Other Landfill-TEQ_14", "551B Other Landfill-TEQ_15", "551B Other Landfill-TEQ_16", "551B Other Landfill-TEQ_17", "552 Land Treatment-TEQ_NA", "552 Land Treatment-TEQ_01", "552 Land Treatment-TEQ_02", "552 Land Treatment-TEQ_03", "552 Land Treatment-TEQ_04", "552 Land Treatment-TEQ_05", "552 Land Treatment-TEQ_06", "552 Land Treatment-TEQ_07", "552 Land Treatment-TEQ_08", "552 Land Treatment-TEQ_09", "552 Land Treatment-TEQ_10", "552 Land Treatment-TEQ_11", "552 Land Treatment-TEQ_12", "552 Land Treatment-TEQ_13", "552 Land Treatment-TEQ_14", "552 Land Treatment-TEQ_15", "552 Land Treatment-TEQ_16", "552 Land Treatment-TEQ_17", "553A RCRA C SI-TEQ_NA", "553A RCRA C SI-TEQ_01", "553A RCRA C SI-TEQ_02", "553A RCRA C SI-TEQ_03", "553A RCRA C SI-TEQ_04", "553A RCRA C SI-TEQ_05", "553A RCRA C SI-TEQ_06", "553A RCRA C SI-TEQ_07", "553A RCRA C SI-TEQ_08", "553A RCRA C SI-TEQ_09", "553A RCRA C SI-TEQ_10", "553A RCRA C SI-TEQ_11", "553A RCRA C SI-TEQ_12", "553A RCRA C SI-TEQ_13", "553A RCRA C SI-TEQ_14", "553A RCRA C SI-TEQ_15", "553A RCRA C SI-TEQ_16", "553A RCRA C SI-TEQ_17", "553B Other SI-TEQ_NA", "553B Other SI-TEQ_01", "553B Other SI-TEQ_02", "553B Other SI-TEQ_03", "553B Other SI-TEQ_04", "553B Other SI-TEQ_05", "553B Other SI-TEQ_06", "553B Other SI-TEQ_07", "553B Other SI-TEQ_08", "553B Other SI-TEQ_09", "553B Other SI-TEQ_10", "553B Other SI-TEQ_11", "553B Other SI-TEQ_12", "553B Other SI-TEQ_13", "553B Other SI-TEQ_14", "553B Other SI-TEQ_15", "553B Other SI-TEQ_16", "553B Other SI-TEQ_17", "554 Other Disposal-TEQ_NA", "554 Other Disposal-TEQ_01", "554 Other Disposal-TEQ_02", "554 Other Disposal-TEQ_03", "554 Other Disposal-TEQ_04", "554 Other Disposal-TEQ_05", "554 Other Disposal-TEQ_06", "554 Other Disposal-TEQ_07", "554 Other Disposal-TEQ_08", "554 Other Disposal-TEQ_09", "554 Other Disposal-TEQ_10", "554 Other Disposal-TEQ_11", "554 Other Disposal-TEQ_12", "554 Other Disposal-TEQ_13", "554 Other Disposal-TEQ_14", "554 Other Disposal-TEQ_15", "554 Other Disposal-TEQ_16", "554 Other Disposal-TEQ_17", "POTW Waste Quantity-TEQ_NA", "POTW Waste Quantity-TEQ_01", "POTW Waste Quantity-TEQ_02", "POTW Waste Quantity-TEQ_03", "POTW Waste Quantity-TEQ_04", "POTW Waste Quantity-TEQ_05", "POTW Waste Quantity-TEQ_06", "POTW Waste Quantity-TEQ_07", "POTW Waste Quantity-TEQ_08", "POTW Waste Quantity-TEQ_09", "POTW Waste Quantity-TEQ_10", "POTW Waste Quantity-TEQ_11", "POTW Waste Quantity-TEQ_12", "POTW Waste Quantity-TEQ_13", "POTW Waste Quantity-TEQ_14", "POTW Waste Quantity-TEQ_15", "POTW Waste Quantity-TEQ_16", "POTW Waste Quantity-TEQ_17", "81A Ons Disp UG INJ C1-TEQ_N", "81A Ons Disp UG INJ C1-TEQ_01", "81A Ons Disp UG INJ C1-TEQ_02", "81A Ons Disp UG INJ C1-TEQ_03", "81A Ons Disp UG INJ C1-TEQ_04", "81A Ons Disp UG INJ C1-TEQ_05", "81A Ons Disp UG INJ C1-TEQ_06", "81A Ons Disp UG INJ C1-TEQ_07", "81A Ons Disp UG INJ C1-TEQ_08", "81A Ons Disp UG INJ C1-TEQ_09", "81A Ons Disp UG INJ C1-TEQ_10", "81A Ons Disp UG INJ C1-TEQ_11", "81A Ons Disp UG INJ C1-TEQ_12", "81A Ons Disp UG INJ C1-TEQ_13", "81A Ons Disp UG INJ C1-TEQ_14", "81A Ons Disp UG INJ C1-TEQ_15", "81A Ons Disp UG INJ C1-TEQ_16", "81A Ons Disp UG INJ C1-TEQ_17", "81B Ons Disp Other-TEQ_NA", "81B Ons Disp Other-TEQ_01", "81B Ons Disp Other-TEQ_02", "81B Ons Disp Other-TEQ_03", "81B Ons Disp Other-TEQ_04", "81B Ons Disp Other-TEQ_05", "81B Ons Disp Other-TEQ_06", "81B Ons Disp Other-TEQ_07", "81B Ons Disp Other-TEQ_08", "81B Ons Disp Other-TEQ_09", "81B Ons Disp Other-TEQ_10", "81B Ons Disp Other-TEQ_11", "81B Ons Disp Other-TEQ_12", "81B Ons Disp Other-TEQ_13", "81B Ons Disp Other-TEQ_14", "81B Ons Disp Other-TEQ_15", "81B Ons Disp Other-TEQ_16", "81B Ons Disp Other-TEQ_17", "81C Off Disp UG INJ C1-TEQ_NA", "81C Off Disp UG INJ C1-TEQ_01", "81C Off Disp UG INJ C1-TEQ_02", "81C Off Disp UG INJ C1-TEQ_03", "81C Off Disp UG INJ C1-TEQ_04", "81C Off Disp UG INJ C1-TEQ_05", "81C Off Disp UG INJ C1-TEQ_06", "81C Off Disp UG INJ C1-TEQ_07", "81C Off Disp UG INJ C1-TEQ_08", "81C Off Disp UG INJ C1-TEQ_09", "81C Off Disp UG INJ C1-TEQ_10", "81C Off Disp UG INJ C1-TEQ_11", "81C Off Disp UG INJ C1-TEQ_12", "81C Off Disp UG INJ C1-TEQ_13", "81C Off Disp UG INJ C1-TEQ_14", "81C Off Disp UG INJ C1-TEQ_15", "81C Off Disp UG INJ C1-TEQ_16", "81C Off Disp UG INJ C1-TEQ_17", "81D Off Disp Other-TEQ_NA", "81D Off Disp Other-TEQ_01", "81D Off Disp Other-TEQ_02", "81D Off Disp Other-TEQ_03", "81D Off Disp Other-TEQ_04", "81D Off Disp Other-TEQ_05", "81D Off Disp Other-TEQ_06", "81D Off Disp Other-TEQ_07", "81D Off Disp Other-TEQ_08", "81D Off Disp Other-TEQ_09", "81D Off Disp Other-TEQ_10", "81D Off Disp Other-TEQ_11", "81D Off Disp Other-TEQ_12", "81D Off Disp Other-TEQ_13", "81D Off Disp Other-TEQ_14", "81D Off Disp Other-TEQ_15", "81D Off Disp Other-TEQ_16", "81D Off Disp Other-TEQ_17", "82 Ons Eng Rec-TEQ_NA", "82 Ons Eng Rec-TEQ_01", "82 Ons Eng Rec-TEQ_02", "82 Ons Eng Rec-TEQ_03", "82 Ons Eng Rec-TEQ_04", "82 Ons Eng Rec-TEQ_05", "82 Ons Eng Rec-TEQ_06", "82 Ons Eng Rec-TEQ_07", "82 Ons Eng Rec-TEQ_08", "82 Ons Eng Rec-TEQ_09", "82 Ons Eng Rec-TEQ_10", "82 Ons Eng Rec-TEQ_11", "82 Ons Eng Rec-TEQ_12", "82 Ons Eng Rec-TEQ_13", "82 Ons Eng Rec-TEQ_14", "82 Ons Eng Rec-TEQ_15", "82 Ons Eng Rec-TEQ_16", "82 Ons Eng Rec-TEQ_17", "83 Off Eng Rec-TEQ_NA", "83 Off Eng Rec-TEQ_01", "83 Off Eng Rec-TEQ_02", "83 Off Eng Rec-TEQ_03", "83 Off Eng Rec-TEQ_04", "83 Off Eng Rec-TEQ_05", "83 Off Eng Rec-TEQ_06", "83 Off Eng Rec-TEQ_07", "83 Off Eng Rec-TEQ_08", "83 Off Eng Rec-TEQ_09", "83 Off Eng Rec-TEQ_10", "83 Off Eng Rec-TEQ_11", "83 Off Eng Rec-TEQ_12", "83 Off Eng Rec-TEQ_13", "83 Off Eng Rec-TEQ_14", "83 Off Eng Rec-TEQ_15", "83 Off Eng Rec-TEQ_16", "83 Off Eng Rec-TEQ_17", "84 Ons Recycle-TEQ_NA", "84 Ons Recycle-TEQ_01", "84 Ons Recycle-TEQ_02", "84 Ons Recycle-TEQ_03", "84 Ons Recycle-TEQ_04", "84 Ons Recycle-TEQ_05", "84 Ons Recycle-TEQ_06", "84 Ons Recycle-TEQ_07", "84 Ons Recycle-TEQ_08", "84 Ons Recycle-TEQ_09", "84 Ons Recycle-TEQ_10", "84 Ons Recycle-TEQ_11", "84 Ons Recycle-TEQ_12", "84 Ons Recycle-TEQ_13", "84 Ons Recycle-TEQ_14", "84 Ons Recycle-TEQ_15", "84 Ons Recycle-TEQ_16", "84 Ons Recycle-TEQ_17", "85 Off Recycle-TEQ_NA", "85 Off Recycle-TEQ_01", "85 Off Recycle-TEQ_02", "85 Off Recycle-TEQ_03", "85 Off Recycle-TEQ_04", "85 Off Recycle-TEQ_05", "85 Off Recycle-TEQ_06", "85 Off Recycle-TEQ_07", "85 Off Recycle-TEQ_08", "85 Off Recycle-TEQ_09", "85 Off Recycle-TEQ_10", "85 Off Recycle-TEQ_11", "85 Off Recycle-TEQ_12", "85 Off Recycle-TEQ_13", "85 Off Recycle-TEQ_14", "85 Off Recycle-TEQ_15", "85 Off Recycle-TEQ_16", "85 Off Recycle-TEQ_17", "86 Ons Treated-TEQ_NA", "86 Ons Treated-TEQ_01", "86 Ons Treated-TEQ_02", "86 Ons Treated-TEQ_03", "86 Ons Treated-TEQ_04", "86 Ons Treated-TEQ_05", "86 Ons Treated-TEQ_06", "86 Ons Treated-TEQ_07", "86 Ons Treated-TEQ_08", "86 Ons Treated-TEQ_09", "86 Ons Treated-TEQ_10", "86 Ons Treated-TEQ_11", "86 Ons Treated-TEQ_12", "86 Ons Treated-TEQ_13", "86 Ons Treated-TEQ_14", "86 Ons Treated-TEQ_15", "86 Ons Treated-TEQ_16", "86 Ons Treated-TEQ_17", "87 Off Treated-TEQ_NA", "87 Off Treated-TEQ_01", "87 Off Treated-TEQ_02", "87 Off Treated-TEQ_03", "87 Off Treated-TEQ_04", "87 Off Treated-TEQ_05", "87 Off Treated-TEQ_06", "87 Off Treated-TEQ_07", "87 Off Treated-TEQ_08", "87 Off Treated-TEQ_09", "87 Off Treated-TEQ_10", "87 Off Treated-TEQ_11", "87 Off Treated-TEQ_12", "87 Off Treated-TEQ_13", "87 Off Treated-TEQ_14", "87 Off Treated-TEQ_15", "87 Off Treated-TEQ_16", "87 Off Treated-TEQ_17", "88 Remed One-Time-TEQ_NA", "88 Remed One-Time-TEQ_01", "88 Remed One-Time-TEQ_02", "88 Remed One-Time-TEQ_03", "88 Remed One-Time-TEQ_04", "88 Remed One-Time-TEQ_05", "88 Remed One-Time-TEQ_06", "88 Remed One-Time-TEQ_07", "88 Remed One-Time-TEQ_08", "88 Remed One-Time-TEQ_09", "88 Remed One-Time-TEQ_10", "88 Remed One-Time-TEQ_11", "88 Remed One-Time-TEQ_12", "88 Remed One-Time-TEQ_13", "88 Remed One-Time-TEQ_14", "88 Remed One-Time-TEQ_15", "88 Remed One-Time-TEQ_16", "88 Remed One-Time-TEQ_17", "SUBMISSION_REPORTING_YEAR", "ECOLOGY_REGION", "FS_ID", "EPA_ID", "COUNTY_NM", "FAC_NAME", "AGENCYNAME", "CHEMICAL_NAME_TEXT" )
AS
SELECT

      V_FORM_S1_PG1.PK_GUID_SUB
,     V_FORM_S1_PG1.PK_GUID_REP

, T.AgencyID "FSID"
, T.EPAID "EPA ID"
, UPPER(F.FAC_ID) "TRIFID"
, R.SUB_REP_YEAR "Year"
, R.REVISION_IND Revision
, R.SUB_PARTIAL_FAC_ID "Partial Sub"
, SUBSTR(R.REPORT_TYPE_CODE, -1, 1) "Form"
, F.FAC_SITE "Facility Name"
, T.AgencyName "AKA"
, F.LOC_ADD_TXT "Address 1"
, F.SUPP_LOC_TXT "Address 2"
, F.LOCALITY "City"
, F.COUNTY "County"
, F.ADD_POSTAL_CODE "Zip"
, C.CHEM_TXT "Chemical"
, C.CAS_CLBER "CAS #"

,     V_FORM_S1_PG1.S151NA "51 Fugitive Air-TEQ_NA"
,     V_FORM_S1_PG1.S151T1 "51 Fugitive Air-TEQ_01"
,     V_FORM_S1_PG1.S151T2 "51 Fugitive Air-TEQ_02"
,     V_FORM_S1_PG1.S151T3 "51 Fugitive Air-TEQ_03"
,     V_FORM_S1_PG1.S151T4 "51 Fugitive Air-TEQ_04"
,     V_FORM_S1_PG1.S151T5 "51 Fugitive Air-TEQ_05"
,     V_FORM_S1_PG1.S151T6 "51 Fugitive Air-TEQ_06"
,     V_FORM_S1_PG1.S151T7 "51 Fugitive Air-TEQ_07"
,     V_FORM_S1_PG1.S151T8 "51 Fugitive Air-TEQ_08"
,     V_FORM_S1_PG1.S151T9 "51 Fugitive Air-TEQ_09"
,     V_FORM_S1_PG1.S151T10 "51 Fugitive Air-TEQ_10"
,     V_FORM_S1_PG1.S151T11 "51 Fugitive Air-TEQ_11"
,     V_FORM_S1_PG1.S151T12 "51 Fugitive Air-TEQ_12"
,     V_FORM_S1_PG1.S151T13 "51 Fugitive Air-TEQ_13"
,     V_FORM_S1_PG1.S151T14 "51 Fugitive Air-TEQ_14"
,     V_FORM_S1_PG1.S151T15 "51 Fugitive Air-TEQ_15"
,     V_FORM_S1_PG1.S151T16 "51 Fugitive Air-TEQ_16"
,     V_FORM_S1_PG1.S151T17 "51 Fugitive Air-TEQ_17"
,     V_FORM_S1_PG1.S152NA "52 Stack Air-TEQ_NA"
,     V_FORM_S1_PG1.S152T1 "52 Stack Air-TEQ_01"
,     V_FORM_S1_PG1.S152T2 "52 Stack Air-TEQ_02"
,     V_FORM_S1_PG1.S152T3 "52 Stack Air-TEQ_03"
,     V_FORM_S1_PG1.S152T4 "52 Stack Air-TEQ_04"
,     V_FORM_S1_PG1.S152T5 "52 Stack Air-TEQ_05"
,     V_FORM_S1_PG1.S152T6 "52 Stack Air-TEQ_06"
,     V_FORM_S1_PG1.S152T7 "52 Stack Air-TEQ_07"
,     V_FORM_S1_PG1.S152T8 "52 Stack Air-TEQ_08"
,     V_FORM_S1_PG1.S152T9 "52 Stack Air-TEQ_09"
,     V_FORM_S1_PG1.S152T10 "52 Stack Air-TEQ_10"
,     V_FORM_S1_PG1.S152T11 "52 Stack Air-TEQ_11"
,     V_FORM_S1_PG1.S152T12 "52 Stack Air-TEQ_12"
,     V_FORM_S1_PG1.S152T13 "52 Stack Air-TEQ_13"
,     V_FORM_S1_PG1.S152T14 "52 Stack Air-TEQ_14"
,     V_FORM_S1_PG1.S152T15 "52 Stack Air-TEQ_15"
,     V_FORM_S1_PG1.S152T16 "52 Stack Air-TEQ_16"
,     V_FORM_S1_PG1.S152T17 "52 Stack Air-TEQ_17"
,     V_FORM_S1_PG1.S1531NA "531 Water-TEQ_NA"
,     V_FORM_S1_PG1.S1531T1 "531 Water-TEQ_01"
,     V_FORM_S1_PG1.S1531T2 "531 Water-TEQ_02"
,     V_FORM_S1_PG1.S1531T3 "531 Water-TEQ_03"
,     V_FORM_S1_PG1.S1531T4 "531 Water-TEQ_04"
,     V_FORM_S1_PG1.S1531T5 "531 Water-TEQ_05"
,     V_FORM_S1_PG1.S1531T6 "531 Water-TEQ_06"
,     V_FORM_S1_PG1.S1531T7 "531 Water-TEQ_07"
,     V_FORM_S1_PG1.S1531T8 "531 Water-TEQ_08"
,     V_FORM_S1_PG1.S1531T9 "531 Water-TEQ_09"
,     V_FORM_S1_PG1.S1531T10 "531 Water-TEQ_10"
,     V_FORM_S1_PG1.S1531T11 "531 Water-TEQ_11"
,     V_FORM_S1_PG1.S1531T12 "531 Water-TEQ_12"
,     V_FORM_S1_PG1.S1531T13 "531 Water-TEQ_13"
,     V_FORM_S1_PG1.S1531T14 "531 Water-TEQ_14"
,     V_FORM_S1_PG1.S1531T15 "531 Water-TEQ_15"
,     V_FORM_S1_PG1.S1531T16 "531 Water-TEQ_16"
,     V_FORM_S1_PG1.S1531T17 "531 Water-TEQ_17"
,     V_FORM_S1_PG1.S1532NA "532 Water-TEQ_NA"
,     V_FORM_S1_PG1.S1532T1 "532 Water-TEQ_01"
,     V_FORM_S1_PG1.S1532T2 "532 Water-TEQ_02"
,     V_FORM_S1_PG1.S1532T3 "532 Water-TEQ_03"
,     V_FORM_S1_PG1.S1532T4 "532 Water-TEQ_04"
,     V_FORM_S1_PG1.S1532T5 "532 Water-TEQ_05"
,     V_FORM_S1_PG1.S1532T6 "532 Water-TEQ_06"
,     V_FORM_S1_PG1.S1532T7 "532 Water-TEQ_07"
,     V_FORM_S1_PG1.S1532T8 "532 Water-TEQ_08"
,     V_FORM_S1_PG1.S1532T9 "532 Water-TEQ_09"
,     V_FORM_S1_PG1.S1532T10 "532 Water-TEQ_10"
,     V_FORM_S1_PG1.S1532T11 "532 Water-TEQ_11"
,     V_FORM_S1_PG1.S1532T12 "532 Water-TEQ_12"
,     V_FORM_S1_PG1.S1532T13 "532 Water-TEQ_13"
,     V_FORM_S1_PG1.S1532T14 "532 Water-TEQ_14"
,     V_FORM_S1_PG1.S1532T15 "532 Water-TEQ_15"
,     V_FORM_S1_PG1.S1532T16 "532 Water-TEQ_16"
,     V_FORM_S1_PG1.S1532T17 "532 Water-TEQ_17"
,     V_FORM_S1_PG1.S1533NA "533 Water-TEQ_NA"
,     V_FORM_S1_PG1.S1533T1 "533 Water-TEQ_01"
,     V_FORM_S1_PG1.S1533T2 "533 Water-TEQ_02"
,     V_FORM_S1_PG1.S1533T3 "533 Water-TEQ_03"
,     V_FORM_S1_PG1.S1533T4 "533 Water-TEQ_04"
,     V_FORM_S1_PG1.S1533T5 "533 Water-TEQ_05"
,     V_FORM_S1_PG1.S1533T6 "533 Water-TEQ_06"
,     V_FORM_S1_PG1.S1533T7 "533 Water-TEQ_07"
,     V_FORM_S1_PG1.S1533T8 "533 Water-TEQ_08"
,     V_FORM_S1_PG1.S1533T9 "533 Water-TEQ_09"
,     V_FORM_S1_PG1.S1533T10 "533 Water-TEQ_10"
,     V_FORM_S1_PG1.S1533T11 "533 Water-TEQ_11"
,     V_FORM_S1_PG1.S1533T12 "533 Water-TEQ_12"
,     V_FORM_S1_PG1.S1533T13 "533 Water-TEQ_13"
,     V_FORM_S1_PG1.S1533T14 "533 Water-TEQ_14"
,     V_FORM_S1_PG1.S1533T15 "533 Water-TEQ_15"
,     V_FORM_S1_PG1.S1533T16 "533 Water-TEQ_16"
,     V_FORM_S1_PG1.S1533T17 "533 Water-TEQ_17"
,     V_FORM_S1_PG2.S1541NA "541 UG INJ Class I-TEQ_NA"
,     V_FORM_S1_PG2.S1541T1 "541 UG INJ Class I-TEQ_01"
,     V_FORM_S1_PG2.S1541T2 "541 UG INJ Class I-TEQ_02"
,     V_FORM_S1_PG2.S1541T3 "541 UG INJ Class I-TEQ_03"
,     V_FORM_S1_PG2.S1541T4 "541 UG INJ Class I-TEQ_04"
,     V_FORM_S1_PG2.S1541T5 "541 UG INJ Class I-TEQ_05"
,     V_FORM_S1_PG2.S1541T6 "541 UG INJ Class I-TEQ_06"
,     V_FORM_S1_PG2.S1541T7 "541 UG INJ Class I-TEQ_07"
,     V_FORM_S1_PG2.S1541T8 "541 UG INJ Class I-TEQ_08"
,     V_FORM_S1_PG2.S1541T9 "541 UG INJ Class I-TEQ_09"
,     V_FORM_S1_PG2.S1541T10 "541 UG INJ Class I-TEQ_10"
,     V_FORM_S1_PG2.S1541T11 "541 UG INJ Class I-TEQ_11"
,     V_FORM_S1_PG2.S1541T12 "541 UG INJ Class I-TEQ_12"
,     V_FORM_S1_PG2.S1541T13 "541 UG INJ Class I-TEQ_13"
,     V_FORM_S1_PG2.S1541T14 "541 UG INJ Class I-TEQ_14"
,     V_FORM_S1_PG2.S1541T15 "541 UG INJ Class I-TEQ_15"
,     V_FORM_S1_PG2.S1541T16 "541 UG INJ Class I-TEQ_16"
,     V_FORM_S1_PG2.S1541T17 "541 UG INJ Class I-TEQ_17"
,     V_FORM_S1_PG2.S1542NA "542 UG INJ Class II-V-TEQ_NA"
,     V_FORM_S1_PG2.S1542T1 "542 UG INJ Class II-V-TEQ_01"
,     V_FORM_S1_PG2.S1542T2 "542 UG INJ Class II-V-TEQ_02"
,     V_FORM_S1_PG2.S1542T3 "542 UG INJ Class II-V-TEQ_03"
,     V_FORM_S1_PG2.S1542T4 "542 UG INJ Class II-V-TEQ_04"
,     V_FORM_S1_PG2.S1542T5 "542 UG INJ Class II-V-TEQ_05"
,     V_FORM_S1_PG2.S1542T6 "542 UG INJ Class II-V-TEQ_06"
,     V_FORM_S1_PG2.S1542T7 "542 UG INJ Class II-V-TEQ_07"
,     V_FORM_S1_PG2.S1542T8 "542 UG INJ Class II-V-TEQ_08"
,     V_FORM_S1_PG2.S1542T9 "542 UG INJ Class II-V-TEQ_09"
,     V_FORM_S1_PG2.S1542T10 "542 UG INJ Class II-V-TEQ_10"
,     V_FORM_S1_PG2.S1542T11 "542 UG INJ Class II-V-TEQ_11"
,     V_FORM_S1_PG2.S1542T12 "542 UG INJ Class II-V-TEQ_12"
,     V_FORM_S1_PG2.S1542T13 "542 UG INJ Class II-V-TEQ_13"
,     V_FORM_S1_PG2.S1542T14 "542 UG INJ Class II-V-TEQ_14"
,     V_FORM_S1_PG2.S1542T15 "542 UG INJ Class II-V-TEQ_15"
,     V_FORM_S1_PG2.S1542T16 "542 UG INJ Class II-V-TEQ_16"
,     V_FORM_S1_PG2.S1542T17 "542 UG INJ Class II-V-TEQ_17"
,     V_FORM_S1_PG2.S1551ANA "551A RCRA C Landfill-TEQ_NA"
,     V_FORM_S1_PG2.S1551AT1 "551A RCRA C Landfill-TEQ_01"
,     V_FORM_S1_PG2.S1551AT2 "551A RCRA C Landfill-TEQ_02"
,     V_FORM_S1_PG2.S1551AT3 "551A RCRA C Landfill-TEQ_03"
,     V_FORM_S1_PG2.S1551AT4 "551A RCRA C Landfill-TEQ_04"
,     V_FORM_S1_PG2.S1551AT5 "551A RCRA C Landfill-TEQ_05"
,     V_FORM_S1_PG2.S1551AT6 "551A RCRA C Landfill-TEQ_06"
,     V_FORM_S1_PG2.S1551AT7 "551A RCRA C Landfill-TEQ_07"
,     V_FORM_S1_PG2.S1551AT8 "551A RCRA C Landfill-TEQ_08"
,     V_FORM_S1_PG2.S1551AT9 "551A RCRA C Landfill-TEQ_09"
,     V_FORM_S1_PG2.S1551AT10 "551A RCRA C Landfill-TEQ_10"
,     V_FORM_S1_PG2.S1551AT11 "551A RCRA C Landfill-TEQ_11"
,     V_FORM_S1_PG2.S1551AT12 "551A RCRA C Landfill-TEQ_12"
,     V_FORM_S1_PG2.S1551AT13 "551A RCRA C Landfill-TEQ_13"
,     V_FORM_S1_PG2.S1551AT14 "551A RCRA C Landfill-TEQ_14"
,     V_FORM_S1_PG2.S1551AT15 "551A RCRA C Landfill-TEQ_15"
,     V_FORM_S1_PG2.S1551AT16 "551A RCRA C Landfill-TEQ_16"
,     V_FORM_S1_PG2.S1551AT17 "551A RCRA C Landfill-TEQ_17"
,     V_FORM_S1_PG2.S1551BNA "551B Other Landfill-TEQ_NA"
,     V_FORM_S1_PG2.S1551BT1 "551B Other Landfill-TEQ_01"
,     V_FORM_S1_PG2.S1551BT2 "551B Other Landfill-TEQ_02"
,     V_FORM_S1_PG2.S1551BT3 "551B Other Landfill-TEQ_03"
,     V_FORM_S1_PG2.S1551BT4 "551B Other Landfill-TEQ_04"
,     V_FORM_S1_PG2.S1551BT5 "551B Other Landfill-TEQ_05"
,     V_FORM_S1_PG2.S1551BT6 "551B Other Landfill-TEQ_06"
,     V_FORM_S1_PG2.S1551BT7 "551B Other Landfill-TEQ_07"
,     V_FORM_S1_PG2.S1551BT8 "551B Other Landfill-TEQ_08"
,     V_FORM_S1_PG2.S1551BT9 "551B Other Landfill-TEQ_09"
,     V_FORM_S1_PG2.S1551BT10 "551B Other Landfill-TEQ_10"
,     V_FORM_S1_PG2.S1551BT11 "551B Other Landfill-TEQ_11"
,     V_FORM_S1_PG2.S1551BT12 "551B Other Landfill-TEQ_12"
,     V_FORM_S1_PG2.S1551BT13 "551B Other Landfill-TEQ_13"
,     V_FORM_S1_PG2.S1551BT14 "551B Other Landfill-TEQ_14"
,     V_FORM_S1_PG2.S1551BT15 "551B Other Landfill-TEQ_15"
,     V_FORM_S1_PG2.S1551BT16 "551B Other Landfill-TEQ_16"
,     V_FORM_S1_PG2.S1551BT17 "551B Other Landfill-TEQ_17"
,     V_FORM_S1_PG2.S1552NA "552 Land Treatment-TEQ_NA"
,     V_FORM_S1_PG2.S1552T1 "552 Land Treatment-TEQ_01"
,     V_FORM_S1_PG2.S1552T2 "552 Land Treatment-TEQ_02"
,     V_FORM_S1_PG2.S1552T3 "552 Land Treatment-TEQ_03"
,     V_FORM_S1_PG2.S1552T4 "552 Land Treatment-TEQ_04"
,     V_FORM_S1_PG2.S1552T5 "552 Land Treatment-TEQ_05"
,     V_FORM_S1_PG2.S1552T6 "552 Land Treatment-TEQ_06"
,     V_FORM_S1_PG2.S1552T7 "552 Land Treatment-TEQ_07"
,     V_FORM_S1_PG2.S1552T8 "552 Land Treatment-TEQ_08"
,     V_FORM_S1_PG2.S1552T9 "552 Land Treatment-TEQ_09"
,     V_FORM_S1_PG2.S1552T10 "552 Land Treatment-TEQ_10"
,     V_FORM_S1_PG2.S1552T11 "552 Land Treatment-TEQ_11"
,     V_FORM_S1_PG2.S1552T12 "552 Land Treatment-TEQ_12"
,     V_FORM_S1_PG2.S1552T13 "552 Land Treatment-TEQ_13"
,     V_FORM_S1_PG2.S1552T14 "552 Land Treatment-TEQ_14"
,     V_FORM_S1_PG2.S1552T15 "552 Land Treatment-TEQ_15"
,     V_FORM_S1_PG2.S1552T16 "552 Land Treatment-TEQ_16"
,     V_FORM_S1_PG2.S1552T17 "552 Land Treatment-TEQ_17"
,     V_FORM_S1_PG2.S1553ANA "553A RCRA C SI-TEQ_NA"
,     V_FORM_S1_PG2.S1553AT1 "553A RCRA C SI-TEQ_01"
,     V_FORM_S1_PG2.S1553AT2 "553A RCRA C SI-TEQ_02"
,     V_FORM_S1_PG2.S1553AT3 "553A RCRA C SI-TEQ_03"
,     V_FORM_S1_PG2.S1553AT4 "553A RCRA C SI-TEQ_04"
,     V_FORM_S1_PG2.S1553AT5 "553A RCRA C SI-TEQ_05"
,     V_FORM_S1_PG2.S1553AT6 "553A RCRA C SI-TEQ_06"
,     V_FORM_S1_PG2.S1553AT7 "553A RCRA C SI-TEQ_07"
,     V_FORM_S1_PG2.S1553AT8 "553A RCRA C SI-TEQ_08"
,     V_FORM_S1_PG2.S1553AT9 "553A RCRA C SI-TEQ_09"
,     V_FORM_S1_PG2.S1553AT10 "553A RCRA C SI-TEQ_10"
,     V_FORM_S1_PG2.S1553AT11 "553A RCRA C SI-TEQ_11"
,     V_FORM_S1_PG2.S1553AT12 "553A RCRA C SI-TEQ_12"
,     V_FORM_S1_PG2.S1553AT13 "553A RCRA C SI-TEQ_13"
,     V_FORM_S1_PG2.S1553AT14 "553A RCRA C SI-TEQ_14"
,     V_FORM_S1_PG2.S1553AT15 "553A RCRA C SI-TEQ_15"
,     V_FORM_S1_PG2.S1553AT16 "553A RCRA C SI-TEQ_16"
,     V_FORM_S1_PG2.S1553AT17 "553A RCRA C SI-TEQ_17"
,     V_FORM_S1_PG2.S1553BNA "553B Other SI-TEQ_NA"
,     V_FORM_S1_PG2.S1553BT1 "553B Other SI-TEQ_01"
,     V_FORM_S1_PG2.S1553BT2 "553B Other SI-TEQ_02"
,     V_FORM_S1_PG2.S1553BT3 "553B Other SI-TEQ_03"
,     V_FORM_S1_PG2.S1553BT4 "553B Other SI-TEQ_04"
,     V_FORM_S1_PG2.S1553BT5 "553B Other SI-TEQ_05"
,     V_FORM_S1_PG2.S1553BT6 "553B Other SI-TEQ_06"
,     V_FORM_S1_PG2.S1553BT7 "553B Other SI-TEQ_07"
,     V_FORM_S1_PG2.S1553BT8 "553B Other SI-TEQ_08"
,     V_FORM_S1_PG2.S1553BT9 "553B Other SI-TEQ_09"
,     V_FORM_S1_PG2.S1553BT10 "553B Other SI-TEQ_10"
,     V_FORM_S1_PG2.S1553BT11 "553B Other SI-TEQ_11"
,     V_FORM_S1_PG2.S1553BT12 "553B Other SI-TEQ_12"
,     V_FORM_S1_PG2.S1553BT13 "553B Other SI-TEQ_13"
,     V_FORM_S1_PG2.S1553BT14 "553B Other SI-TEQ_14"
,     V_FORM_S1_PG2.S1553BT15 "553B Other SI-TEQ_15"
,     V_FORM_S1_PG2.S1553BT16 "553B Other SI-TEQ_16"
,     V_FORM_S1_PG2.S1553BT17 "553B Other SI-TEQ_17"
,     V_FORM_S1_PG2.S1554NA "554 Other Disposal-TEQ_NA"
,     V_FORM_S1_PG2.S1554T1 "554 Other Disposal-TEQ_01"
,     V_FORM_S1_PG2.S1554T2 "554 Other Disposal-TEQ_02"
,     V_FORM_S1_PG2.S1554T3 "554 Other Disposal-TEQ_03"
,     V_FORM_S1_PG2.S1554T4 "554 Other Disposal-TEQ_04"
,     V_FORM_S1_PG2.S1554T5 "554 Other Disposal-TEQ_05"
,     V_FORM_S1_PG2.S1554T6 "554 Other Disposal-TEQ_06"
,     V_FORM_S1_PG2.S1554T7 "554 Other Disposal-TEQ_07"
,     V_FORM_S1_PG2.S1554T8 "554 Other Disposal-TEQ_08"
,     V_FORM_S1_PG2.S1554T9 "554 Other Disposal-TEQ_09"
,     V_FORM_S1_PG2.S1554T10 "554 Other Disposal-TEQ_10"
,     V_FORM_S1_PG2.S1554T11 "554 Other Disposal-TEQ_11"
,     V_FORM_S1_PG2.S1554T12 "554 Other Disposal-TEQ_12"
,     V_FORM_S1_PG2.S1554T13 "554 Other Disposal-TEQ_13"
,     V_FORM_S1_PG2.S1554T14 "554 Other Disposal-TEQ_14"
,     V_FORM_S1_PG2.S1554T15 "554 Other Disposal-TEQ_15"
,     V_FORM_S1_PG2.S1554T16 "554 Other Disposal-TEQ_16"
,     V_FORM_S1_PG2.S1554T17 "554 Other Disposal-TEQ_17"
,     V_FORM_S1_PG3.S161A3NA "POTW Waste Quantity-TEQ_NA"
,     V_FORM_S1_PG3.S161A3T1 "POTW Waste Quantity-TEQ_01"
,     V_FORM_S1_PG3.S161A3T2 "POTW Waste Quantity-TEQ_02"
,     V_FORM_S1_PG3.S161A3T3 "POTW Waste Quantity-TEQ_03"
,     V_FORM_S1_PG3.S161A3T4 "POTW Waste Quantity-TEQ_04"
,     V_FORM_S1_PG3.S161A3T5 "POTW Waste Quantity-TEQ_05"
,     V_FORM_S1_PG3.S161A3T6 "POTW Waste Quantity-TEQ_06"
,     V_FORM_S1_PG3.S161A3T7 "POTW Waste Quantity-TEQ_07"
,     V_FORM_S1_PG3.S161A3T8 "POTW Waste Quantity-TEQ_08"
,     V_FORM_S1_PG3.S161A3T9 "POTW Waste Quantity-TEQ_09"
,     V_FORM_S1_PG3.S161A3T10 "POTW Waste Quantity-TEQ_10"
,     V_FORM_S1_PG3.S161A3T11 "POTW Waste Quantity-TEQ_11"
,     V_FORM_S1_PG3.S161A3T12 "POTW Waste Quantity-TEQ_12"
,     V_FORM_S1_PG3.S161A3T13 "POTW Waste Quantity-TEQ_13"
,     V_FORM_S1_PG3.S161A3T14 "POTW Waste Quantity-TEQ_14"
,     V_FORM_S1_PG3.S161A3T15 "POTW Waste Quantity-TEQ_15"
,     V_FORM_S1_PG3.S161A3T16 "POTW Waste Quantity-TEQ_16"
,     V_FORM_S1_PG3.S161A3T17 "POTW Waste Quantity-TEQ_17"
,     V_FORM_S1_PG4.S181ANA "81A Ons Disp UG INJ C1-TEQ_N"
,     V_FORM_S1_PG4.S181AT1 "81A Ons Disp UG INJ C1-TEQ_01"
,     V_FORM_S1_PG4.S181AT2 "81A Ons Disp UG INJ C1-TEQ_02"
,     V_FORM_S1_PG4.S181AT3 "81A Ons Disp UG INJ C1-TEQ_03"
,     V_FORM_S1_PG4.S181AT4 "81A Ons Disp UG INJ C1-TEQ_04"
,     V_FORM_S1_PG4.S181AT5 "81A Ons Disp UG INJ C1-TEQ_05"
,     V_FORM_S1_PG4.S181AT6 "81A Ons Disp UG INJ C1-TEQ_06"
,     V_FORM_S1_PG4.S181AT7 "81A Ons Disp UG INJ C1-TEQ_07"
,     V_FORM_S1_PG4.S181AT8 "81A Ons Disp UG INJ C1-TEQ_08"
,     V_FORM_S1_PG4.S181AT9 "81A Ons Disp UG INJ C1-TEQ_09"
,     V_FORM_S1_PG4.S181AT10 "81A Ons Disp UG INJ C1-TEQ_10"
,     V_FORM_S1_PG4.S181AT11 "81A Ons Disp UG INJ C1-TEQ_11"
,     V_FORM_S1_PG4.S181AT12 "81A Ons Disp UG INJ C1-TEQ_12"
,     V_FORM_S1_PG4.S181AT13 "81A Ons Disp UG INJ C1-TEQ_13"
,     V_FORM_S1_PG4.S181AT14 "81A Ons Disp UG INJ C1-TEQ_14"
,     V_FORM_S1_PG4.S181AT15 "81A Ons Disp UG INJ C1-TEQ_15"
,     V_FORM_S1_PG4.S181AT16 "81A Ons Disp UG INJ C1-TEQ_16"
,     V_FORM_S1_PG4.S181AT17 "81A Ons Disp UG INJ C1-TEQ_17"
,     V_FORM_S1_PG4.S181BNA "81B Ons Disp Other-TEQ_NA"
,     V_FORM_S1_PG4.S181BT1 "81B Ons Disp Other-TEQ_01"
,     V_FORM_S1_PG4.S181BT2 "81B Ons Disp Other-TEQ_02"
,     V_FORM_S1_PG4.S181BT3 "81B Ons Disp Other-TEQ_03"
,     V_FORM_S1_PG4.S181BT4 "81B Ons Disp Other-TEQ_04"
,     V_FORM_S1_PG4.S181BT5 "81B Ons Disp Other-TEQ_05"
,     V_FORM_S1_PG4.S181BT6 "81B Ons Disp Other-TEQ_06"
,     V_FORM_S1_PG4.S181BT7 "81B Ons Disp Other-TEQ_07"
,     V_FORM_S1_PG4.S181BT8 "81B Ons Disp Other-TEQ_08"
,     V_FORM_S1_PG4.S181BT9 "81B Ons Disp Other-TEQ_09"
,     V_FORM_S1_PG4.S181BT10 "81B Ons Disp Other-TEQ_10"
,     V_FORM_S1_PG4.S181BT11 "81B Ons Disp Other-TEQ_11"
,     V_FORM_S1_PG4.S181BT12 "81B Ons Disp Other-TEQ_12"
,     V_FORM_S1_PG4.S181BT13 "81B Ons Disp Other-TEQ_13"
,     V_FORM_S1_PG4.S181BT14 "81B Ons Disp Other-TEQ_14"
,     V_FORM_S1_PG4.S181BT15 "81B Ons Disp Other-TEQ_15"
,     V_FORM_S1_PG4.S181BT16 "81B Ons Disp Other-TEQ_16"
,     V_FORM_S1_PG4.S181BT17 "81B Ons Disp Other-TEQ_17"
,     V_FORM_S1_PG4.S181CNA "81C Off Disp UG INJ C1-TEQ_NA"
,     V_FORM_S1_PG4.S181CT1 "81C Off Disp UG INJ C1-TEQ_01"
,     V_FORM_S1_PG4.S181CT2 "81C Off Disp UG INJ C1-TEQ_02"
,     V_FORM_S1_PG4.S181CT3 "81C Off Disp UG INJ C1-TEQ_03"
,     V_FORM_S1_PG4.S181CT4 "81C Off Disp UG INJ C1-TEQ_04"
,     V_FORM_S1_PG4.S181CT5 "81C Off Disp UG INJ C1-TEQ_05"
,     V_FORM_S1_PG4.S181CT6 "81C Off Disp UG INJ C1-TEQ_06"
,     V_FORM_S1_PG4.S181CT7 "81C Off Disp UG INJ C1-TEQ_07"
,     V_FORM_S1_PG4.S181CT8 "81C Off Disp UG INJ C1-TEQ_08"
,     V_FORM_S1_PG4.S181CT9 "81C Off Disp UG INJ C1-TEQ_09"
,     V_FORM_S1_PG4.S181CT10 "81C Off Disp UG INJ C1-TEQ_10"
,     V_FORM_S1_PG4.S181CT11 "81C Off Disp UG INJ C1-TEQ_11"
,     V_FORM_S1_PG4.S181CT12 "81C Off Disp UG INJ C1-TEQ_12"
,     V_FORM_S1_PG4.S181CT13 "81C Off Disp UG INJ C1-TEQ_13"
,     V_FORM_S1_PG4.S181CT14 "81C Off Disp UG INJ C1-TEQ_14"
,     V_FORM_S1_PG4.S181CT15 "81C Off Disp UG INJ C1-TEQ_15"
,     V_FORM_S1_PG4.S181CT16 "81C Off Disp UG INJ C1-TEQ_16"
,     V_FORM_S1_PG4.S181CT17 "81C Off Disp UG INJ C1-TEQ_17"
,     V_FORM_S1_PG4.S181DNA "81D Off Disp Other-TEQ_NA"
,     V_FORM_S1_PG4.S181DT1 "81D Off Disp Other-TEQ_01"
,     V_FORM_S1_PG4.S181DT2 "81D Off Disp Other-TEQ_02"
,     V_FORM_S1_PG4.S181DT3 "81D Off Disp Other-TEQ_03"
,     V_FORM_S1_PG4.S181DT4 "81D Off Disp Other-TEQ_04"
,     V_FORM_S1_PG4.S181DT5 "81D Off Disp Other-TEQ_05"
,     V_FORM_S1_PG4.S181DT6 "81D Off Disp Other-TEQ_06"
,     V_FORM_S1_PG4.S181DT7 "81D Off Disp Other-TEQ_07"
,     V_FORM_S1_PG4.S181DT8 "81D Off Disp Other-TEQ_08"
,     V_FORM_S1_PG4.S181DT9 "81D Off Disp Other-TEQ_09"
,     V_FORM_S1_PG4.S181DT10 "81D Off Disp Other-TEQ_10"
,     V_FORM_S1_PG4.S181DT11 "81D Off Disp Other-TEQ_11"
,     V_FORM_S1_PG4.S181DT12 "81D Off Disp Other-TEQ_12"
,     V_FORM_S1_PG4.S181DT13 "81D Off Disp Other-TEQ_13"
,     V_FORM_S1_PG4.S181DT14 "81D Off Disp Other-TEQ_14"
,     V_FORM_S1_PG4.S181DT15 "81D Off Disp Other-TEQ_15"
,     V_FORM_S1_PG4.S181DT16 "81D Off Disp Other-TEQ_16"
,     V_FORM_S1_PG4.S181DT17 "81D Off Disp Other-TEQ_17"
,     V_FORM_S1_PG4.S182NA "82 Ons Eng Rec-TEQ_NA"
,     V_FORM_S1_PG4.S182T1 "82 Ons Eng Rec-TEQ_01"
,     V_FORM_S1_PG4.S182T2 "82 Ons Eng Rec-TEQ_02"
,     V_FORM_S1_PG4.S182T3 "82 Ons Eng Rec-TEQ_03"
,     V_FORM_S1_PG4.S182T4 "82 Ons Eng Rec-TEQ_04"
,     V_FORM_S1_PG4.S182T5 "82 Ons Eng Rec-TEQ_05"
,     V_FORM_S1_PG4.S182T6 "82 Ons Eng Rec-TEQ_06"
,     V_FORM_S1_PG4.S182T7 "82 Ons Eng Rec-TEQ_07"
,     V_FORM_S1_PG4.S182T8 "82 Ons Eng Rec-TEQ_08"
,     V_FORM_S1_PG4.S182T9 "82 Ons Eng Rec-TEQ_09"
,     V_FORM_S1_PG4.S182T10 "82 Ons Eng Rec-TEQ_10"
,     V_FORM_S1_PG4.S182T11 "82 Ons Eng Rec-TEQ_11"
,     V_FORM_S1_PG4.S182T12 "82 Ons Eng Rec-TEQ_12"
,     V_FORM_S1_PG4.S182T13 "82 Ons Eng Rec-TEQ_13"
,     V_FORM_S1_PG4.S182T14 "82 Ons Eng Rec-TEQ_14"
,     V_FORM_S1_PG4.S182T15 "82 Ons Eng Rec-TEQ_15"
,     V_FORM_S1_PG4.S182T16 "82 Ons Eng Rec-TEQ_16"
,     V_FORM_S1_PG4.S182T17 "82 Ons Eng Rec-TEQ_17"
,     V_FORM_S1_PG4.S183NA "83 Off Eng Rec-TEQ_NA"
,     V_FORM_S1_PG4.S183T1 "83 Off Eng Rec-TEQ_01"
,     V_FORM_S1_PG4.S183T2 "83 Off Eng Rec-TEQ_02"
,     V_FORM_S1_PG4.S183T3 "83 Off Eng Rec-TEQ_03"
,     V_FORM_S1_PG4.S183T4 "83 Off Eng Rec-TEQ_04"
,     V_FORM_S1_PG4.S183T5 "83 Off Eng Rec-TEQ_05"
,     V_FORM_S1_PG4.S183T6 "83 Off Eng Rec-TEQ_06"
,     V_FORM_S1_PG4.S183T7 "83 Off Eng Rec-TEQ_07"
,     V_FORM_S1_PG4.S183T8 "83 Off Eng Rec-TEQ_08"
,     V_FORM_S1_PG4.S183T9 "83 Off Eng Rec-TEQ_09"
,     V_FORM_S1_PG4.S183T10 "83 Off Eng Rec-TEQ_10"
,     V_FORM_S1_PG4.S183T11 "83 Off Eng Rec-TEQ_11"
,     V_FORM_S1_PG4.S183T12 "83 Off Eng Rec-TEQ_12"
,     V_FORM_S1_PG4.S183T13 "83 Off Eng Rec-TEQ_13"
,     V_FORM_S1_PG4.S183T14 "83 Off Eng Rec-TEQ_14"
,     V_FORM_S1_PG4.S183T15 "83 Off Eng Rec-TEQ_15"
,     V_FORM_S1_PG4.S183T16 "83 Off Eng Rec-TEQ_16"
,     V_FORM_S1_PG4.S183T17 "83 Off Eng Rec-TEQ_17"
,     V_FORM_S1_PG4.S184NA "84 Ons Recycle-TEQ_NA"
,     V_FORM_S1_PG4.S184T1 "84 Ons Recycle-TEQ_01"
,     V_FORM_S1_PG4.S184T2 "84 Ons Recycle-TEQ_02"
,     V_FORM_S1_PG4.S184T3 "84 Ons Recycle-TEQ_03"
,     V_FORM_S1_PG4.S184T4 "84 Ons Recycle-TEQ_04"
,     V_FORM_S1_PG4.S184T5 "84 Ons Recycle-TEQ_05"
,     V_FORM_S1_PG4.S184T6 "84 Ons Recycle-TEQ_06"
,     V_FORM_S1_PG4.S184T7 "84 Ons Recycle-TEQ_07"
,     V_FORM_S1_PG4.S184T8 "84 Ons Recycle-TEQ_08"
,     V_FORM_S1_PG4.S184T9 "84 Ons Recycle-TEQ_09"
,     V_FORM_S1_PG4.S184T10 "84 Ons Recycle-TEQ_10"
,     V_FORM_S1_PG4.S184T11 "84 Ons Recycle-TEQ_11"
,     V_FORM_S1_PG4.S184T12 "84 Ons Recycle-TEQ_12"
,     V_FORM_S1_PG4.S184T13 "84 Ons Recycle-TEQ_13"
,     V_FORM_S1_PG4.S184T14 "84 Ons Recycle-TEQ_14"
,     V_FORM_S1_PG4.S184T15 "84 Ons Recycle-TEQ_15"
,     V_FORM_S1_PG4.S184T16 "84 Ons Recycle-TEQ_16"
,     V_FORM_S1_PG4.S184T17 "84 Ons Recycle-TEQ_17"
,     V_FORM_S1_PG4.S185NA "85 Off Recycle-TEQ_NA"
,     V_FORM_S1_PG4.S185T1 "85 Off Recycle-TEQ_01"
,     V_FORM_S1_PG4.S185T2 "85 Off Recycle-TEQ_02"
,     V_FORM_S1_PG4.S185T3 "85 Off Recycle-TEQ_03"
,     V_FORM_S1_PG4.S185T4 "85 Off Recycle-TEQ_04"
,     V_FORM_S1_PG4.S185T5 "85 Off Recycle-TEQ_05"
,     V_FORM_S1_PG4.S185T6 "85 Off Recycle-TEQ_06"
,     V_FORM_S1_PG4.S185T7 "85 Off Recycle-TEQ_07"
,     V_FORM_S1_PG4.S185T8 "85 Off Recycle-TEQ_08"
,     V_FORM_S1_PG4.S185T9 "85 Off Recycle-TEQ_09"
,     V_FORM_S1_PG4.S185T10 "85 Off Recycle-TEQ_10"
,     V_FORM_S1_PG4.S185T11 "85 Off Recycle-TEQ_11"
,     V_FORM_S1_PG4.S185T12 "85 Off Recycle-TEQ_12"
,     V_FORM_S1_PG4.S185T13 "85 Off Recycle-TEQ_13"
,     V_FORM_S1_PG4.S185T14 "85 Off Recycle-TEQ_14"
,     V_FORM_S1_PG4.S185T15 "85 Off Recycle-TEQ_15"
,     V_FORM_S1_PG4.S185T16 "85 Off Recycle-TEQ_16"
,     V_FORM_S1_PG4.S185T17 "85 Off Recycle-TEQ_17"
,     V_FORM_S1_PG4.S186NA "86 Ons Treated-TEQ_NA"
,     V_FORM_S1_PG4.S186T1 "86 Ons Treated-TEQ_01"
,     V_FORM_S1_PG4.S186T2 "86 Ons Treated-TEQ_02"
,     V_FORM_S1_PG4.S186T3 "86 Ons Treated-TEQ_03"
,     V_FORM_S1_PG4.S186T4 "86 Ons Treated-TEQ_04"
,     V_FORM_S1_PG4.S186T5 "86 Ons Treated-TEQ_05"
,     V_FORM_S1_PG4.S186T6 "86 Ons Treated-TEQ_06"
,     V_FORM_S1_PG4.S186T7 "86 Ons Treated-TEQ_07"
,     V_FORM_S1_PG4.S186T8 "86 Ons Treated-TEQ_08"
,     V_FORM_S1_PG4.S186T9 "86 Ons Treated-TEQ_09"
,     V_FORM_S1_PG4.S186T10 "86 Ons Treated-TEQ_10"
,     V_FORM_S1_PG4.S186T11 "86 Ons Treated-TEQ_11"
,     V_FORM_S1_PG4.S186T12 "86 Ons Treated-TEQ_12"
,     V_FORM_S1_PG4.S186T13 "86 Ons Treated-TEQ_13"
,     V_FORM_S1_PG4.S186T14 "86 Ons Treated-TEQ_14"
,     V_FORM_S1_PG4.S186T15 "86 Ons Treated-TEQ_15"
,     V_FORM_S1_PG4.S186T16 "86 Ons Treated-TEQ_16"
,     V_FORM_S1_PG4.S186T17 "86 Ons Treated-TEQ_17"
,     V_FORM_S1_PG4.S187NA "87 Off Treated-TEQ_NA"
,     V_FORM_S1_PG4.S187T1 "87 Off Treated-TEQ_01"
,     V_FORM_S1_PG4.S187T2 "87 Off Treated-TEQ_02"
,     V_FORM_S1_PG4.S187T3 "87 Off Treated-TEQ_03"
,     V_FORM_S1_PG4.S187T4 "87 Off Treated-TEQ_04"
,     V_FORM_S1_PG4.S187T5 "87 Off Treated-TEQ_05"
,     V_FORM_S1_PG4.S187T6 "87 Off Treated-TEQ_06"
,     V_FORM_S1_PG4.S187T7 "87 Off Treated-TEQ_07"
,     V_FORM_S1_PG4.S187T8 "87 Off Treated-TEQ_08"
,     V_FORM_S1_PG4.S187T9 "87 Off Treated-TEQ_09"
,     V_FORM_S1_PG4.S187T10 "87 Off Treated-TEQ_10"
,     V_FORM_S1_PG4.S187T11 "87 Off Treated-TEQ_11"
,     V_FORM_S1_PG4.S187T12 "87 Off Treated-TEQ_12"
,     V_FORM_S1_PG4.S187T13 "87 Off Treated-TEQ_13"
,     V_FORM_S1_PG4.S187T14 "87 Off Treated-TEQ_14"
,     V_FORM_S1_PG4.S187T15 "87 Off Treated-TEQ_15"
,     V_FORM_S1_PG4.S187T16 "87 Off Treated-TEQ_16"
,     V_FORM_S1_PG4.S187T17 "87 Off Treated-TEQ_17"
,     V_FORM_S1_PG4.S188NA "88 Remed One-Time-TEQ_NA"
,     V_FORM_S1_PG4.S188T1 "88 Remed One-Time-TEQ_01"
,     V_FORM_S1_PG4.S188T2 "88 Remed One-Time-TEQ_02"
,     V_FORM_S1_PG4.S188T3 "88 Remed One-Time-TEQ_03"
,     V_FORM_S1_PG4.S188T4 "88 Remed One-Time-TEQ_04"
,     V_FORM_S1_PG4.S188T5 "88 Remed One-Time-TEQ_05"
,     V_FORM_S1_PG4.S188T6 "88 Remed One-Time-TEQ_06"
,     V_FORM_S1_PG4.S188T7 "88 Remed One-Time-TEQ_07"
,     V_FORM_S1_PG4.S188T8 "88 Remed One-Time-TEQ_08"
,     V_FORM_S1_PG4.S188T9 "88 Remed One-Time-TEQ_09"
,     V_FORM_S1_PG4.S188T10 "88 Remed One-Time-TEQ_10"
,     V_FORM_S1_PG4.S188T11 "88 Remed One-Time-TEQ_11"
,     V_FORM_S1_PG4.S188T12 "88 Remed One-Time-TEQ_12"
,     V_FORM_S1_PG4.S188T13 "88 Remed One-Time-TEQ_13"
,     V_FORM_S1_PG4.S188T14 "88 Remed One-Time-TEQ_14"
,     V_FORM_S1_PG4.S188T15 "88 Remed One-Time-TEQ_15"
,     V_FORM_S1_PG4.S188T16 "88 Remed One-Time-TEQ_16"
,     V_FORM_S1_PG4.S188T17 "88 Remed One-Time-TEQ_17"

,     R.SUB_REP_YEAR SUBMISSION_REPORTING_YEAR
,     CTYREG.EcologyRegion ECOLOGY_REGION
,     T.AgencyID FS_ID
,     T.EPAID EPA_ID
,     F.COUNTY COUNTY_NM
,     F.FAC_SITE FAC_NAME
,     T.AgencyName
,     C.CHEM_TXT CHEMICAL_NAME_TEXT

FROM TRI_SUB S
JOIN TRI_FAC F ON F.FK_GUID = S.PK_GUID
LEFT JOIN App_Lookup_Cty_Reg CTYREG ON CTYREG.County = F.COUNTY
JOIN TRI_REPORT R ON R.FK_GUID = S.PK_GUID
JOIN TRI_CHEM C ON C.FK_GUID = R.PK_GUID
JOIN App_FI_TRIFID T ON T.TRIFID = F.FAC_ID
JOIN V_FORM_S1_PG1 ON V_FORM_S1_PG1.PK_GUID_REP = R.PK_GUID
JOIN V_FORM_S1_PG2 ON V_FORM_S1_PG2.PK_GUID_REP = R.PK_GUID
JOIN V_FORM_S1_PG3 ON V_FORM_S1_PG3.PK_GUID_REP = R.PK_GUID
JOIN V_FORM_S1_PG4 ON V_FORM_S1_PG4.PK_GUID_REP = R.PK_GUID

WHERE C.CAS_CLBER <> 'N150' 
/

CREATE FORCE VIEW "V_EXT_MASTER_D" ( "CAS_NUMBER", "CHEMICAL_NAME_TEXT", "PK_GUID_FAC", "PK_GUID_CHEM", "FK_GUID_FAC", "SUBMISSION_PARTIAL_FACILITY_ID", "PK_GUID_REPORT", "SUBMISSION_REPORTING_YEAR", "REVISION_INDICATOR", "REPORT_TYPE", "TRIFID", "EPA_ID", "FS_ID", "FACILITY_IDEN_COMMENT", "INACTIVE_DATE", "AGENCYNAME", "FAC_NAME", "LOC_ADD_LINE_1_DS", "LOC_ADD_LINE_2_DS", "CITY_NM", "COUNTY_NM", "ZIP_CD", "AIR_POINT", "AIR_NON_POINT", "LAND_TREA", "LAND_OTH_DISP", "LAND_RCRA_C", "LAND_SI_5_5_3_A", "LAND_OTH_LANDF", "LAND_SI_5_5_3_B", "UNINJ_I", "UNINJ_IIV", "WATER", "TOTAL", "POTW_WASTE_QUANTITY_ME", "TOTAL_OFFSITE_WASTE_Q", "ONE_TIME_RELEASE_Q", "PRODUCTION_RATIO_ME", "MAIL_PROVINCE_NM", "MAIL_COUNTRY_NM", "MAIL_COUNTRY_CD", "MAIL_ADD_LINE_1_DS", "MAIL_ADD_LINE_2_DS", "MAIL_CITY_NM", "MAIL_ZIP_CD", "MAIL_STATE_CD", "PUBLIC_CONTACT_NM", "PUBLIC_PHONE_NR", "PUBLIC_EMAIL", "TECH_CONTACT_NM", "TECH_PHONE_NR", "TECH_EMAIL", "FAC_NAICS_PRIMARY", "MAIL_NAME", "FK_GUID_REPORT", "FK_GUID_CHEM", "SIGNED_DT", "REPORT_FK", "CHEM_FK", "REPORT_EPA_PROCESSING_STATUS_C", "ECOLOGY_REGION", "CHEM_RPT_REV_CD_1", "CHEM_RPT_REV_CD_2", "CHEM_RPT_WD_CD_1", "CHEM_RPT_WD_CD_2" )
AS
SELECT     C.CAS_CLBER CAS_NUMBER, C.CHEM_TXT CHEMICAL_NAME_TEXT, F.PK_GUID PK_GUID_FAC, C.PK_GUID PK_GUID_CHEM, 
                      F.FK_GUID FK_GUID_FAC, R.SUB_PARTIAL_FAC_ID SUBMISSION_PARTIAL_FACILITY_ID, R.PK_GUID PK_GUID_REPORT, 
                      R.SUB_REP_YEAR SUBMISSION_REPORTING_YEAR, 
                      TRI_CALC_REV_IND(R.CHEM_RPT_REV_CD_1,R.CHEM_RPT_REV_CD_2,R.CHEM_RPT_WD_CD_1,R.CHEM_RPT_WD_CD_2,R.REVISION_IND) REVISION_INDICATOR,
                      R.REPORT_TYPE_CODE REPORT_TYPE, 
                      UPPER(F.FAC_ID) TRIFID, FI.EPA_ID, FI.FS_ID, FI.Comment_DS FACILITY_IDEN_COMMENT, FI.Inactive_DT INACTIVE_DATE, 
                      T.AgencyName, F.FAC_SITE FAC_NAME, F.LOC_ADD_TXT LOC_ADD_LINE_1_DS, F.SUPP_LOC_TXT LOC_ADD_LINE_2_DS, 
                      F.LOCALITY CITY_NM, F.COUNTY COUNTY_NM, F.ADD_POSTAL_CODE ZIP_CD,
                          (SELECT     CASE WHEN ONSR.WASTE_Q_NA_IND = 'Y' THEN NULL ELSE TRI_RangeCodeConversion(ONSR.WASTE_Q_ME, 
                                                   ONSR.WASTE_Q_RANGE_CODE) END Expr1
                            FROM          TRI_ONSITE_RELEASE_Q ONSR
                            WHERE      (FK_GUID = R.PK_GUID) AND (EI_MEDIUM_CODE = 'air stack')) AIR_POINT,
                          (SELECT     CASE WHEN ONSR.WASTE_Q_NA_IND = 'Y' THEN NULL ELSE TRI_RangeCodeConversion(ONSR.WASTE_Q_ME, 
                                                   ONSR.WASTE_Q_RANGE_CODE) END Expr1
                            FROM          TRI_ONSITE_RELEASE_Q ONSR
                            WHERE      (FK_GUID = R.PK_GUID) AND (EI_MEDIUM_CODE = 'air fug')) AIR_NON_POINT,
                          (SELECT     CASE WHEN ONSR.WASTE_Q_NA_IND = 'Y' THEN NULL ELSE TRI_RangeCodeConversion(ONSR.WASTE_Q_ME, 
                                                   ONSR.WASTE_Q_RANGE_CODE) END Expr1
                            FROM          TRI_ONSITE_RELEASE_Q ONSR
                            WHERE      (FK_GUID = R.PK_GUID) AND (EI_MEDIUM_CODE = 'land trea')) LAND_TREA,
                          (SELECT     CASE WHEN ONSR.WASTE_Q_NA_IND = 'Y' THEN NULL ELSE TRI_RangeCodeConversion(ONSR.WASTE_Q_ME, 
                                                   ONSR.WASTE_Q_RANGE_CODE) END Expr1
                            FROM          TRI_ONSITE_RELEASE_Q ONSR
                            WHERE      (FK_GUID = R.PK_GUID) AND (EI_MEDIUM_CODE = 'oth disp')) LAND_OTH_DISP,
                          (SELECT     CASE WHEN ONSR.WASTE_Q_NA_IND = 'Y' THEN NULL ELSE TRI_RangeCodeConversion(ONSR.WASTE_Q_ME, 
                                                   ONSR.WASTE_Q_RANGE_CODE) END Expr1
                            FROM          TRI_ONSITE_RELEASE_Q ONSR
                            WHERE      (FK_GUID = R.PK_GUID) AND (EI_MEDIUM_CODE = 'rcra c')) LAND_RCRA_C,
                          (SELECT     CASE WHEN ONSR.WASTE_Q_NA_IND = 'Y' THEN NULL ELSE TRI_RangeCodeConversion(ONSR.WASTE_Q_ME, 
                                                   ONSR.WASTE_Q_RANGE_CODE) END Expr1
                            FROM          TRI_ONSITE_RELEASE_Q ONSR
                            WHERE      (FK_GUID = R.PK_GUID) AND (EI_MEDIUM_CODE = 'si 5.5.3a')) LAND_SI_5_5_3_A,
                          (SELECT     CASE WHEN ONSR.WASTE_Q_NA_IND = 'Y' THEN NULL ELSE TRI_RangeCodeConversion(ONSR.WASTE_Q_ME, 
                                                   ONSR.WASTE_Q_RANGE_CODE) END Expr1
                            FROM          TRI_ONSITE_RELEASE_Q ONSR
                            WHERE      (FK_GUID = R.PK_GUID) AND (EI_MEDIUM_CODE = 'oth landf')) LAND_OTH_LANDF,
                          (SELECT     CASE WHEN ONSR.WASTE_Q_NA_IND = 'Y' THEN NULL ELSE TRI_RangeCodeConversion(ONSR.WASTE_Q_ME, 
                                                   ONSR.WASTE_Q_RANGE_CODE) END Expr1
                            FROM          TRI_ONSITE_RELEASE_Q ONSR
                            WHERE      (FK_GUID = R.PK_GUID) AND (EI_MEDIUM_CODE = 'si 5.5.3b')) LAND_SI_5_5_3_B,
                          (SELECT     CASE WHEN ONSR.WASTE_Q_NA_IND = 'Y' THEN NULL ELSE TRI_RangeCodeConversion(ONSR.WASTE_Q_ME, 
                                                   ONSR.WASTE_Q_RANGE_CODE) END Expr1
                            FROM          TRI_ONSITE_RELEASE_Q ONSR
                            WHERE      (FK_GUID = R.PK_GUID) AND (EI_MEDIUM_CODE = 'uninj i')) UNINJ_I,
                          (SELECT     CASE WHEN ONSR.WASTE_Q_NA_IND = 'Y' THEN NULL ELSE TRI_RangeCodeConversion(ONSR.WASTE_Q_ME, 
                                                   ONSR.WASTE_Q_RANGE_CODE) END Expr1
                            FROM          TRI_ONSITE_RELEASE_Q ONSR
                            WHERE      (FK_GUID = R.PK_GUID) AND (EI_MEDIUM_CODE = 'uninj iiv')) UNINJ_IIV,
                          (SELECT     SUM(CASE WHEN ONSR.WASTE_Q_NA_IND = 'Y' THEN 0 
                                                   ELSE TO_NUMBER(TRI_RangeCodeConversion(ONSR.WASTE_Q_ME, ONSR.WASTE_Q_RANGE_CODE)) END) Expr1
                            FROM          TRI_ONSITE_RELEASE_Q ONSR
                            WHERE      (FK_GUID = R.PK_GUID) AND (EI_MEDIUM_CODE = 'water')) WATER,
                          (SELECT     SUM(CASE WHEN ONSR.WASTE_Q_NA_IND = 'Y' THEN 0 
                                                   ELSE TO_NUMBER(TRI_RangeCodeConversion(ONSR.WASTE_Q_ME, ONSR.WASTE_Q_RANGE_CODE)) END) Expr1
                            FROM          TRI_ONSITE_RELEASE_Q ONSR
                            WHERE      (FK_GUID = R.PK_GUID)) TOTAL, TRI_RangeCodeConversion(R.WASTE_Q_ME, R.WASTE_Q_RANGE_CODE) 
                      POTW_WASTE_QUANTITY_ME,
                          (SELECT     SUM(CASE WHEN OFSR.WASTE_Q_NA_IND = 'Y' THEN 0 
                                                   ELSE TO_NUMBER(TRI_RangeCodeConversion(OFSR.WASTE_Q_ME, OFSR.WASTE_Q_RANGE_CODE)) END) Expr1
                            FROM          TRI_TRANSFER_Q OFSR INNER JOIN
                                                   TRI_TRANSFER_LOC TL ON OFSR.FK_GUID = TL.PK_GUID
                            WHERE      (TL.FK_GUID = R.PK_GUID)) TOTAL_OFFSITE_WASTE_Q, R.ONE_TIME_RELEASE_Q, 
                      R.PRODUCTION_RATIO_ME, F.PROVINCE_TXT MAIL_PROVINCE_NM, 
                      F.MAIL_ADD_COUNTRY MAIL_COUNTRY_NM, F.MAIL_ADD_COUNTRY_CODE MAIL_COUNTRY_CD, 
                      F.MAIL_ADD_TXT MAIL_ADD_LINE_1_DS, F.SUPP_MAIL_ADD MAIL_ADD_LINE_2_DS, F.MAIL_ADD_CITY MAIL_CITY_NM, 
                      F.MAIL_ADD_POSTAL_CODE MAIL_ZIP_CD, F.MAIL_ADD_STATE MAIL_STATE_CD, R.PUB_CONT PUBLIC_CONTACT_NM, 
                      R.PUB_CONT_PHONE_TXT PUBLIC_PHONE_NR, LOWER(R.PUB_CONT_EMAIL_ADDRES) PUBLIC_EMAIL, 
                      R.TECH_CONT TECH_CONTACT_NM, R.TECH_CONT_PHONE_TXT TECH_PHONE_NR, LOWER(R.TECH_CONT_EMAIL_ADDRES) TECH_EMAIL,
                       N.FAC_NAICS FAC_NAICS_PRIMARY, F.MAIL_FAC_SITE MAIL_NAME, R.PK_GUID FK_GUID_REPORT, C.FK_GUID FK_GUID_CHEM, 
                      R.CERT_SIGNED_DATE SIGNED_DT, R.FK_GUID REPORT_FK, C.FK_GUID CHEM_FK, 
R.REPORT_EPA_PROCESSING_STATUS_C, 
                      CTYREG.EcologyRegion ECOLOGY_REGION, R.CHEM_RPT_REV_CD_1, R.CHEM_RPT_REV_CD_2, R.CHEM_RPT_WD_CD_1, 
                      R.CHEM_RPT_WD_CD_2
FROM         TRI_REPORT R INNER JOIN
                      TRI_SUB S ON R.FK_GUID = S.PK_GUID INNER JOIN
                      TRI_FAC F ON F.FK_GUID = S.PK_GUID INNER JOIN
                      TRI_CHEM C ON C.FK_GUID = R.PK_GUID LEFT OUTER JOIN
                      V_FAC_IDENT FI ON UPPER(F.FAC_ID) = FI.TRIFID LEFT OUTER JOIN
                      TRI_FAC_NAICS N ON F.PK_GUID = N.FK_GUID AND N.NAICS_PRIMARY_IND = 'Primary' LEFT OUTER JOIN
                      App_Lookup_Cty_Reg CTYREG ON CTYREG.County = F.COUNTY LEFT OUTER JOIN
                      App_FI_TRIFID T ON F.FAC_ID = T.TRIFID LEFT OUTER JOIN
                      App_FI_TRIFID_Delete D ON D.TRIFID_ID_FK = T.TRIFID_ID AND D.TRI_SUB_ID = S.TRI_SUB_ID

WHERE
 (
 R.SUB_PARTIAL_FAC_ID = 'Y'
 OR
  (
  R.SUB_PARTIAL_FAC_ID = 'N'
  AND
  S.INSERTED_DATE =
   (
   SELECT MAX(S2.INSERTED_DATE)
   FROM TRI_SUB S2
   JOIN TRI_FAC F2 ON F2.FK_GUID = S2.PK_GUID
   JOIN TRI_REPORT R2 ON R2.FK_GUID = S2.PK_GUID
   JOIN TRI_CHEM C2 ON C2.FK_GUID = R2.PK_GUID
   WHERE
    F2.FAC_ID = F.FAC_ID
    AND
    R2.SUB_REP_YEAR = R.SUB_REP_YEAR
    AND
    C2.CAS_CLBER = C.CAS_CLBER
    AND
    C2.CHEM_TXT = C.CHEM_TXT
   )
 AND
   (
   TRI_CALC_REV_IND(CHEM_RPT_REV_CD_1,CHEM_RPT_REV_CD_2,CHEM_RPT_WD_CD_1,CHEM_RPT_WD_CD_2,REVISION_IND) = 'Y'
   OR
    (
    TRI_CALC_REV_IND(CHEM_RPT_REV_CD_1,CHEM_RPT_REV_CD_2,CHEM_RPT_WD_CD_1,CHEM_RPT_WD_CD_2,REVISION_IND) = 'N'
    AND NOT EXISTS
     (
     SELECT * FROM TRI_REPORT R3
     JOIN TRI_CHEM C3 ON C3.FK_GUID = R3.PK_GUID
     WHERE
     C3.CHEM_TXT = C.CHEM_TXT
     AND
     R3.FK_GUID = R.FK_GUID
     AND
     TRI_CALC_REV_IND(CHEM_RPT_REV_CD_1,CHEM_RPT_REV_CD_2,CHEM_RPT_WD_CD_1,CHEM_RPT_WD_CD_2,REVISION_IND) = 'Y'
     )
    )
   )

  )
 )

AND

-- Exclude any reports that are in a "withdrawn" status with the EPA:
-- 
-- -1 = unknown
--  0 = inactive submission
--  1 = active submission
--  2 = submission needs manual review
--  3 = hold active 
--  4 = hold inactive 
--  5 = withdrawn submission
--  6 = withdrawal request pending

NVL(R.REPORT_EPA_PROCESSING_STATUS_C, '9999') <> '5'

AND

C.CAS_CLBER = 'N150'

AND

-- Exclude "deleted" facilities

D.TRIFID_DELETE_ID IS NULL

-- TKC 1/31/2008 exclude "inactive" facilities
AND NVL(T.Inactive_DT, TO_DATE('1900-01-01','YYYY-MM-DD')) = TO_DATE('1900-01-01','YYYY-MM-DD') 
/

CREATE FORCE VIEW "V_EXT_MASTER" ( "CAS_NUMBER", "CHEMICAL_NAME_TEXT", "PK_GUID_FAC", "PK_GUID_CHEM", "FK_GUID_FAC", "SUBMISSION_PARTIAL_FACILITY_ID", "PK_GUID_REPORT", "SUBMISSION_REPORTING_YEAR", "REVISION_INDICATOR", "REPORT_TYPE", "TRIFID", "EPA_ID", "FS_ID", "FACILITY_IDEN_COMMENT", "INACTIVE_DATE", "AGENCYNAME", "FAC_NAME", "LOC_ADD_LINE_1_DS", "LOC_ADD_LINE_2_DS", "CITY_NM", "COUNTY_NM", "ZIP_CD", "AIR_POINT", "AIR_NON_POINT", "LAND_TREA", "LAND_OTH_DISP", "LAND_RCRA_C", "LAND_SI_5_5_3_A", "LAND_OTH_LANDF", "LAND_SI_5_5_3_B", "UNINJ_I", "UNINJ_IIV", "WATER", "TOTAL", "POTW_WASTE_QUANTITY_ME", "TOTAL_OFFSITE_WASTE_Q", "ONE_TIME_RELEASE_Q", "PRODUCTION_RATIO_ME", "MAIL_PROVINCE_NM", "MAIL_COUNTRY_NM", "MAIL_COUNTRY_CD", "MAIL_ADD_LINE_1_DS", "MAIL_ADD_LINE_2_DS", "MAIL_CITY_NM", "MAIL_ZIP_CD", "MAIL_STATE_CD", "PUBLIC_CONTACT_NM", "PUBLIC_PHONE_NR", "PUBLIC_EMAIL", "TECH_CONTACT_NM", "TECH_PHONE_NR", "TECH_EMAIL", "FAC_NAICS_PRIMARY", "MAIL_NAME", "FK_GUID_REPORT", "FK_GUID_CHEM", "SIGNED_DT", "REPORT_FK", "CHEM_FK", "REPORT_EPA_PROCESSING_STATUS_C", "ECOLOGY_REGION", "CHEM_RPT_REV_CD_1", "CHEM_RPT_REV_CD_2", "CHEM_RPT_WD_CD_1", "CHEM_RPT_WD_CD_2" )
AS
SELECT     C.CAS_CLBER CAS_NUMBER, C.CHEM_TXT CHEMICAL_NAME_TEXT, F.PK_GUID PK_GUID_FAC, C.PK_GUID PK_GUID_CHEM, 
                      F.FK_GUID FK_GUID_FAC, R.SUB_PARTIAL_FAC_ID SUBMISSION_PARTIAL_FACILITY_ID, R.PK_GUID PK_GUID_REPORT, 
                      R.SUB_REP_YEAR SUBMISSION_REPORTING_YEAR, 
                      TRI_CALC_REV_IND(R.CHEM_RPT_REV_CD_1,R.CHEM_RPT_REV_CD_2,R.CHEM_RPT_WD_CD_1,R.CHEM_RPT_WD_CD_2,R.REVISION_IND) REVISION_INDICATOR,
                      R.REPORT_TYPE_CODE REPORT_TYPE, 
                      UPPER(F.FAC_ID) TRIFID, FI.EPA_ID, FI.FS_ID, FI.Comment_DS FACILITY_IDEN_COMMENT, FI.Inactive_DT INACTIVE_DATE, 
                      T.AgencyName, F.FAC_SITE FAC_NAME, F.LOC_ADD_TXT LOC_ADD_LINE_1_DS, F.SUPP_LOC_TXT LOC_ADD_LINE_2_DS, 
                      F.LOCALITY CITY_NM, F.COUNTY COUNTY_NM, F.ADD_POSTAL_CODE ZIP_CD,
                          (SELECT     CASE WHEN ONSR.WASTE_Q_NA_IND = 'Y' THEN NULL ELSE TRI_RangeCodeConversion(ONSR.WASTE_Q_ME, 
                                                   ONSR.WASTE_Q_RANGE_CODE) END Expr1
                            FROM          TRI_ONSITE_RELEASE_Q ONSR
                            WHERE      (FK_GUID = R.PK_GUID) AND (EI_MEDIUM_CODE = 'air stack')) AIR_POINT,
                          (SELECT     CASE WHEN ONSR.WASTE_Q_NA_IND = 'Y' THEN NULL ELSE TRI_RangeCodeConversion(ONSR.WASTE_Q_ME, 
                                                   ONSR.WASTE_Q_RANGE_CODE) END Expr1
                            FROM          TRI_ONSITE_RELEASE_Q ONSR
                            WHERE      (FK_GUID = R.PK_GUID) AND (EI_MEDIUM_CODE = 'air fug')) AIR_NON_POINT,
                          (SELECT     CASE WHEN ONSR.WASTE_Q_NA_IND = 'Y' THEN NULL ELSE TRI_RangeCodeConversion(ONSR.WASTE_Q_ME, 
                                                   ONSR.WASTE_Q_RANGE_CODE) END Expr1
                            FROM          TRI_ONSITE_RELEASE_Q ONSR
                            WHERE      (FK_GUID = R.PK_GUID) AND (EI_MEDIUM_CODE = 'land trea')) LAND_TREA,
                          (SELECT     CASE WHEN ONSR.WASTE_Q_NA_IND = 'Y' THEN NULL ELSE TRI_RangeCodeConversion(ONSR.WASTE_Q_ME, 
                                                   ONSR.WASTE_Q_RANGE_CODE) END Expr1
                            FROM          TRI_ONSITE_RELEASE_Q ONSR
                            WHERE      (FK_GUID = R.PK_GUID) AND (EI_MEDIUM_CODE = 'oth disp')) LAND_OTH_DISP,
                          (SELECT     CASE WHEN ONSR.WASTE_Q_NA_IND = 'Y' THEN NULL ELSE TRI_RangeCodeConversion(ONSR.WASTE_Q_ME, 
                                                   ONSR.WASTE_Q_RANGE_CODE) END Expr1
                            FROM          TRI_ONSITE_RELEASE_Q ONSR
                            WHERE      (FK_GUID = R.PK_GUID) AND (EI_MEDIUM_CODE = 'rcra c')) LAND_RCRA_C,
                          (SELECT     CASE WHEN ONSR.WASTE_Q_NA_IND = 'Y' THEN NULL ELSE TRI_RangeCodeConversion(ONSR.WASTE_Q_ME, 
                                                   ONSR.WASTE_Q_RANGE_CODE) END Expr1
                            FROM          TRI_ONSITE_RELEASE_Q ONSR
                            WHERE      (FK_GUID = R.PK_GUID) AND (EI_MEDIUM_CODE = 'si 5.5.3a')) LAND_SI_5_5_3_A,
                          (SELECT     CASE WHEN ONSR.WASTE_Q_NA_IND = 'Y' THEN NULL ELSE TRI_RangeCodeConversion(ONSR.WASTE_Q_ME, 
                                                   ONSR.WASTE_Q_RANGE_CODE) END Expr1
                            FROM          TRI_ONSITE_RELEASE_Q ONSR
                            WHERE      (FK_GUID = R.PK_GUID) AND (EI_MEDIUM_CODE = 'oth landf')) LAND_OTH_LANDF,
                          (SELECT     CASE WHEN ONSR.WASTE_Q_NA_IND = 'Y' THEN NULL ELSE TRI_RangeCodeConversion(ONSR.WASTE_Q_ME, 
                                                   ONSR.WASTE_Q_RANGE_CODE) END Expr1
                            FROM          TRI_ONSITE_RELEASE_Q ONSR
                            WHERE      (FK_GUID = R.PK_GUID) AND (EI_MEDIUM_CODE = 'si 5.5.3b')) LAND_SI_5_5_3_B,
                          (SELECT     CASE WHEN ONSR.WASTE_Q_NA_IND = 'Y' THEN NULL ELSE TRI_RangeCodeConversion(ONSR.WASTE_Q_ME, 
                                                   ONSR.WASTE_Q_RANGE_CODE) END Expr1
                            FROM          TRI_ONSITE_RELEASE_Q ONSR
                            WHERE      (FK_GUID = R.PK_GUID) AND (EI_MEDIUM_CODE = 'uninj i')) UNINJ_I,
                          (SELECT     CASE WHEN ONSR.WASTE_Q_NA_IND = 'Y' THEN NULL ELSE TRI_RangeCodeConversion(ONSR.WASTE_Q_ME, 
                                                   ONSR.WASTE_Q_RANGE_CODE) END Expr1
                            FROM          TRI_ONSITE_RELEASE_Q ONSR
                            WHERE      (FK_GUID = R.PK_GUID) AND (EI_MEDIUM_CODE = 'uninj iiv')) UNINJ_IIV,
                          (SELECT     SUM(CASE WHEN ONSR.WASTE_Q_NA_IND = 'Y' THEN 0 
                                                   ELSE TO_NUMBER(TRI_RangeCodeConversion(ONSR.WASTE_Q_ME, ONSR.WASTE_Q_RANGE_CODE)) END) Expr1
                            FROM          TRI_ONSITE_RELEASE_Q ONSR
                            WHERE      (FK_GUID = R.PK_GUID) AND (EI_MEDIUM_CODE = 'water')) WATER,
                          (SELECT     SUM(CASE WHEN ONSR.WASTE_Q_NA_IND = 'Y' THEN 0 
                                                   ELSE TO_NUMBER(TRI_RangeCodeConversion(ONSR.WASTE_Q_ME, ONSR.WASTE_Q_RANGE_CODE)) END) Expr1
                            FROM          TRI_ONSITE_RELEASE_Q ONSR
                            WHERE      (FK_GUID = R.PK_GUID)) TOTAL, TRI_RangeCodeConversion(R.WASTE_Q_ME, R.WASTE_Q_RANGE_CODE) 
                      POTW_WASTE_QUANTITY_ME,
                          (SELECT     SUM(CASE WHEN OFSR.WASTE_Q_NA_IND = 'Y' THEN 0 
                                                   ELSE TO_NUMBER(TRI_RangeCodeConversion(OFSR.WASTE_Q_ME, OFSR.WASTE_Q_RANGE_CODE)) END) Expr1
                            FROM          TRI_TRANSFER_Q OFSR INNER JOIN
                                                   TRI_TRANSFER_LOC TL ON OFSR.FK_GUID = TL.PK_GUID
                            WHERE      (TL.FK_GUID = R.PK_GUID)) TOTAL_OFFSITE_WASTE_Q, R.ONE_TIME_RELEASE_Q, 
                      R.PRODUCTION_RATIO_ME, F.PROVINCE_TXT MAIL_PROVINCE_NM, 
                      F.MAIL_ADD_COUNTRY MAIL_COUNTRY_NM, F.MAIL_ADD_COUNTRY_CODE MAIL_COUNTRY_CD, 
                      F.MAIL_ADD_TXT MAIL_ADD_LINE_1_DS, F.SUPP_MAIL_ADD MAIL_ADD_LINE_2_DS, F.MAIL_ADD_CITY MAIL_CITY_NM, 
                      F.MAIL_ADD_POSTAL_CODE MAIL_ZIP_CD, F.MAIL_ADD_STATE MAIL_STATE_CD, R.PUB_CONT PUBLIC_CONTACT_NM, 
                      R.PUB_CONT_PHONE_TXT PUBLIC_PHONE_NR, LOWER(R.PUB_CONT_EMAIL_ADDRES) PUBLIC_EMAIL, 
                      R.TECH_CONT TECH_CONTACT_NM, R.TECH_CONT_PHONE_TXT TECH_PHONE_NR, LOWER(R.TECH_CONT_EMAIL_ADDRES) TECH_EMAIL,
                       N.FAC_NAICS FAC_NAICS_PRIMARY, F.MAIL_FAC_SITE MAIL_NAME, R.PK_GUID FK_GUID_REPORT, C.FK_GUID FK_GUID_CHEM, 
                      R.CERT_SIGNED_DATE SIGNED_DT, R.FK_GUID REPORT_FK, C.FK_GUID CHEM_FK, 
R.REPORT_EPA_PROCESSING_STATUS_C, 
                      CTYREG.EcologyRegion ECOLOGY_REGION, R.CHEM_RPT_REV_CD_1, R.CHEM_RPT_REV_CD_2, R.CHEM_RPT_WD_CD_1, 
                      R.CHEM_RPT_WD_CD_2
FROM         TRI_REPORT R INNER JOIN
                      TRI_SUB S ON R.FK_GUID = S.PK_GUID INNER JOIN
                      TRI_FAC F ON F.FK_GUID = S.PK_GUID INNER JOIN
                      TRI_CHEM C ON C.FK_GUID = R.PK_GUID LEFT OUTER JOIN
                      V_FAC_IDENT FI ON UPPER(F.FAC_ID) = FI.TRIFID LEFT OUTER JOIN
                      TRI_FAC_NAICS N ON F.PK_GUID = N.FK_GUID AND N.NAICS_PRIMARY_IND = 'Primary' LEFT OUTER JOIN
                      App_Lookup_Cty_Reg CTYREG ON CTYREG.County = F.COUNTY LEFT OUTER JOIN
                      App_FI_TRIFID T ON F.FAC_ID = T.TRIFID LEFT OUTER JOIN
                      App_FI_TRIFID_Delete D ON D.TRIFID_ID_FK = T.TRIFID_ID AND D.TRI_SUB_ID = S.TRI_SUB_ID

WHERE
 (
 R.SUB_PARTIAL_FAC_ID = 'Y'
 OR
  (
  R.SUB_PARTIAL_FAC_ID = 'N'
  AND
  S.INSERTED_DATE =
   (
   SELECT MAX(S2.INSERTED_DATE)
   FROM TRI_SUB S2
   JOIN TRI_FAC F2 ON F2.FK_GUID = S2.PK_GUID
   JOIN TRI_REPORT R2 ON R2.FK_GUID = S2.PK_GUID
   JOIN TRI_CHEM C2 ON C2.FK_GUID = R2.PK_GUID
   WHERE
    F2.FAC_ID = F.FAC_ID
    AND
    R2.SUB_REP_YEAR = R.SUB_REP_YEAR
    AND
    C2.CAS_CLBER = C.CAS_CLBER
    AND
    C2.CHEM_TXT = C.CHEM_TXT
   )
 AND
   (
   TRI_CALC_REV_IND(CHEM_RPT_REV_CD_1,CHEM_RPT_REV_CD_2,CHEM_RPT_WD_CD_1,CHEM_RPT_WD_CD_2,REVISION_IND) = 'Y'
   OR
    (
    TRI_CALC_REV_IND(CHEM_RPT_REV_CD_1,CHEM_RPT_REV_CD_2,CHEM_RPT_WD_CD_1,CHEM_RPT_WD_CD_2,REVISION_IND) = 'N'
    AND NOT EXISTS
     (
     SELECT * FROM TRI_REPORT R3
     JOIN TRI_CHEM C3 ON C3.FK_GUID = R3.PK_GUID
     WHERE
     C3.CHEM_TXT = C.CHEM_TXT
     AND
     R3.FK_GUID = R.FK_GUID
     AND
     TRI_CALC_REV_IND(CHEM_RPT_REV_CD_1,CHEM_RPT_REV_CD_2,CHEM_RPT_WD_CD_1,CHEM_RPT_WD_CD_2,REVISION_IND) = 'Y'
     )
    )
   )

  )
 )

AND

-- Exclude any reports that are in a "withdrawn" status with the EPA:
-- 
-- -1 = unknown
--  0 = inactive submission
--  1 = active submission
--  2 = submission needs manual review
--  3 = hold active 
--  4 = hold inactive 
--  5 = withdrawn submission
--  6 = withdrawal request pending

NVL(R.REPORT_EPA_PROCESSING_STATUS_C, '9999') <> '5'

AND

C.CAS_CLBER <> 'N150'

AND

-- Exclude "deleted" facilities

D.TRIFID_DELETE_ID IS NULL

-- TKC 1/31/2008 exclude "inactive" facilities
AND NVL(T.Inactive_DT, TO_DATE('1900-01-01','YYYY-MM-DD')) = TO_DATE('1900-01-01','YYYY-MM-DD') 
/

CREATE FORCE VIEW "V_EXT_OFF_WT_D" ( "PK_GUID", "FK_GUID", "FSID", "ECY ID", "TRIFID", "Year", "Facility Name", "AKA", "Address 1", "Address 2", "CITY", "COUNTY", "ZIP", "CHEMICAL", "Trans RCRA ID", "Trans Facility Name", "Trans Address", "Trans City", "Trans State", "Trans Waste Total", "Waste Mgmt Code", "ECY Region", "SUBMISSION_REPORTING_YEAR", "ECOLOGY_REGION", "FS_ID", "EPA_ID", "COUNTY_NM", "FAC_NAME", "AGENCYNAME", "CHEMICAL_NAME_TEXT" )
AS
SELECT     TL.PK_GUID, TL.FK_GUID, TD.FS_ID FSID, TD.EPA_ID "ECY ID", TD.TRIFID, TD.SUBMISSION_REPORTING_YEAR "Year", 
                      TD.FAC_NAME "Facility Name", TD.AgencyName AKA, TD.LOC_ADD_LINE_1_DS "Address 1", TD.LOC_ADD_LINE_2_DS "Address 2", 
                      TD.CITY_NM City, TD.COUNTY_NM County, TD.ZIP_CD Zip, TD.CHEMICAL_NAME_TEXT Chemical, 
                      TL.RCRA_ID_CLBER "Trans RCRA ID", TL.FAC_SITE "Trans Facility Name", TL.LOC_ADD_TXT "Trans Address", TL.LOCALITY "Trans City", 
                      TL.STATE "Trans State", CASE WHEN TLQ.WASTE_Q_NA_IND = 'Y' THEN NULL ELSE TRI_RangeCodeConversion(TLQ.WASTE_Q_ME, 
                      TLQ.WASTE_Q_RANGE_CODE) END "Trans Waste Total", TLQ.WASTE_MANAGEMENT_CODE "Waste Mgmt Code", 
                      TD.ECOLOGY_REGION "ECY Region", TD.SUBMISSION_REPORTING_YEAR, TD.ECOLOGY_REGION, TD.FS_ID, TD.EPA_ID, TD.COUNTY_NM, 
                      TD.FAC_NAME, TD.AgencyName, TD.CHEMICAL_NAME_TEXT
FROM         TRI_TRANSFER_LOC TL INNER JOIN
                      V_EXT_MASTER_D TD ON TL.FK_GUID = TD.PK_GUID_REPORT INNER JOIN
                      TRI_TRANSFER_Q TLQ ON TLQ.FK_GUID = TL.PK_GUID
WHERE     TD.REPORT_TYPE = 'TRI_FORM_R' 
/

CREATE FORCE VIEW "V_EXT_OFF_WT" ( "PK_GUID", "FK_GUID", "FSID", "ECY ID", "TRIFID", "Year", "Facility Name", "AKA", "Address 1", "Address 2", "CITY", "COUNTY", "ZIP", "CHEMICAL", "Trans RCRA ID", "Trans Facility Name", "Trans Address", "Trans City", "Trans State", "Trans Waste Total", "Waste Mgmt Code", "ECY Region", "SUBMISSION_REPORTING_YEAR", "ECOLOGY_REGION", "FS_ID", "EPA_ID", "COUNTY_NM", "FAC_NAME", "AGENCYNAME", "CHEMICAL_NAME_TEXT" )
AS
SELECT     TL.PK_GUID, TL.FK_GUID, TD.FS_ID FSID, TD.EPA_ID "ECY ID", TD.TRIFID, TD.SUBMISSION_REPORTING_YEAR "Year", 
                      TD.FAC_NAME "Facility Name", TD.AgencyName AKA, TD.LOC_ADD_LINE_1_DS "Address 1", TD.LOC_ADD_LINE_2_DS "Address 2", 
                      TD.CITY_NM City, TD.COUNTY_NM County, TD.ZIP_CD Zip, TD.CHEMICAL_NAME_TEXT Chemical, 
                      TL.RCRA_ID_CLBER "Trans RCRA ID", TL.FAC_SITE "Trans Facility Name", TL.LOC_ADD_TXT "Trans Address", TL.LOCALITY "Trans City", 
                      TL.STATE "Trans State", CASE WHEN TLQ.WASTE_Q_NA_IND = 'Y' THEN NULL ELSE TRI_RangeCodeConversion(TLQ.WASTE_Q_ME, 
                      TLQ.WASTE_Q_RANGE_CODE) END "Trans Waste Total", TLQ.WASTE_MANAGEMENT_CODE "Waste Mgmt Code", 
                      TD.ECOLOGY_REGION "ECY Region", TD.SUBMISSION_REPORTING_YEAR, TD.ECOLOGY_REGION, TD.FS_ID, TD.EPA_ID, TD.COUNTY_NM, 
                      TD.FAC_NAME, TD.AgencyName, TD.CHEMICAL_NAME_TEXT
FROM         TRI_TRANSFER_LOC TL INNER JOIN
                      V_EXT_MASTER TD ON TL.FK_GUID = TD.PK_GUID_REPORT INNER JOIN
                      TRI_TRANSFER_Q TLQ ON TLQ.FK_GUID = TL.PK_GUID
WHERE     TD.REPORT_TYPE = 'TRI_FORM_R' 
/

CREATE FORCE VIEW "V_EXT_P2_FEE_D" ( "FSID", "ECY ID", "TRIFID", "Facility Name", "AKA", "Address 1", "Address 2", "CITY", "ZIP", "COUNTY", "Mail Address 1", "Mail Address 2", "Mail City", "Mail State", "Mail Province", "Mail Zip", "Mail Country", "NAICS", "Tech Contact", "Tech Phone", "Year", "Sum of TRI", "ECY Region", "SUBMISSION_REPORTING_YEAR", "ECOLOGY_REGION", "FS_ID", "EPA_ID", "COUNTY_NM", "FAC_NAME", "AGENCYNAME" )
AS
SELECT FS_ID FSID,
    EPA_ID "ECY ID",
    TRIFID,
    FAC_NAME "Facility Name",
    AgencyName AKA,
    LOC_ADD_LINE_1_DS "Address 1",
    LOC_ADD_LINE_2_DS "Address 2",
    CITY_NM City,
    ZIP_CD Zip,
    COUNTY_NM County,
    MAIL_ADD_LINE_1_DS "Mail Address 1",
    MAIL_ADD_LINE_2_DS "Mail Address 2",
    MAIL_CITY_NM "Mail City",
    MAIL_STATE_CD "Mail State",
    MAIL_PROVINCE_NM "Mail Province",
    MAIL_ZIP_CD "Mail Zip",
    MAIL_COUNTRY_CD "Mail Country",
    FAC_NAICS_PRIMARY "NAICS",
    TECH_CONTACT_NM "Tech Contact",
    TECH_PHONE_NR "Tech Phone",
    SUBMISSION_REPORTING_YEAR "Year",
    SUM(TOTAL) "Sum of TRI",
    ECOLOGY_REGION "ECY Region",
    SUBMISSION_REPORTING_YEAR,
    ECOLOGY_REGION,
    FS_ID,
    EPA_ID,
    COUNTY_NM,
    FAC_NAME,
    AgencyName
/*
    (SELECT COUNT(*)
    FROM V_EXT_MASTER TD2
    WHERE TD2.TRIFID                  = TD.TRIFID
    AND TD2.SUBMISSION_REPORTING_YEAR = TD.SUBMISSION_REPORTING_YEAR
    AND TD2.REPORT_TYPE               = 'TRI_FORM_R'
    ) CountFormR,
    (SELECT COUNT(*)
    FROM V_EXT_MASTER TD2
    WHERE TD2.TRIFID                  = TD.TRIFID
    AND TD2.SUBMISSION_REPORTING_YEAR = TD.SUBMISSION_REPORTING_YEAR
    AND TD2.REPORT_TYPE               = 'TRI_FORM_A'
    ) CountFormA
*/
  FROM V_EXT_MASTER_D TD
  GROUP BY FS_ID, EPA_ID, TRIFID, FAC_NAME, AgencyName, LOC_ADD_LINE_1_DS, LOC_ADD_LINE_2_DS, CITY_NM, ZIP_CD, COUNTY_NM, MAIL_ADD_LINE_1_DS, MAIL_ADD_LINE_2_DS, MAIL_CITY_NM, MAIL_STATE_CD, MAIL_PROVINCE_NM, MAIL_ZIP_CD, MAIL_COUNTRY_CD, FAC_NAICS_PRIMARY, TECH_CONTACT_NM, TECH_PHONE_NR, SUBMISSION_REPORTING_YEAR, ECOLOGY_REGION, SUBMISSION_REPORTING_YEAR, ECOLOGY_REGION, FS_ID, EPA_ID, COUNTY_NM, FAC_NAME, AgencyName
  /*
  , (SELECT COUNT(*)
    FROM V_EXT_MASTER TD2
    WHERE TD2.TRIFID                  = TD.TRIFID
    AND TD2.SUBMISSION_REPORTING_YEAR = TD.SUBMISSION_REPORTING_YEAR
    AND TD2.REPORT_TYPE               = 'TRI_FORM_R'
    ), (SELECT COUNT(*)
    FROM V_EXT_MASTER TD2
    WHERE TD2.TRIFID                  = TD.TRIFID
    AND TD2.SUBMISSION_REPORTING_YEAR = TD.SUBMISSION_REPORTING_YEAR
    AND TD2.REPORT_TYPE               = 'TRI_FORM_A'
    )
*/ 
/

CREATE FORCE VIEW "V_EXT_P2_FEE" ( "FSID", "ECY ID", "TRIFID", "Facility Name", "AKA", "Address 1", "Address 2", "CITY", "ZIP", "COUNTY", "Mail Address 1", "Mail Address 2", "Mail City", "Mail State", "Mail Province", "Mail Zip", "Mail Country", "NAICS", "Tech Contact", "Tech Phone", "Year", "Sum of TRI", "ECY Region", "SUBMISSION_REPORTING_YEAR", "ECOLOGY_REGION", "FS_ID", "EPA_ID", "COUNTY_NM", "FAC_NAME", "AGENCYNAME" )
AS
SELECT FS_ID FSID,
    EPA_ID "ECY ID",
    TRIFID,
    FAC_NAME "Facility Name",
    AgencyName AKA,
    LOC_ADD_LINE_1_DS "Address 1",
    LOC_ADD_LINE_2_DS "Address 2",
    CITY_NM City,
    ZIP_CD Zip,
    COUNTY_NM County,
    MAIL_ADD_LINE_1_DS "Mail Address 1",
    MAIL_ADD_LINE_2_DS "Mail Address 2",
    MAIL_CITY_NM "Mail City",
    MAIL_STATE_CD "Mail State",
    MAIL_PROVINCE_NM "Mail Province",
    MAIL_ZIP_CD "Mail Zip",
    MAIL_COUNTRY_CD "Mail Country",
    FAC_NAICS_PRIMARY "NAICS",
    TECH_CONTACT_NM "Tech Contact",
    TECH_PHONE_NR "Tech Phone",
    SUBMISSION_REPORTING_YEAR "Year",
    SUM(TOTAL) "Sum of TRI",
    ECOLOGY_REGION "ECY Region",
    SUBMISSION_REPORTING_YEAR,
    ECOLOGY_REGION,
    FS_ID,
    EPA_ID,
    COUNTY_NM,
    FAC_NAME,
    AgencyName
/*
    (SELECT COUNT(*)
    FROM V_EXT_MASTER TD2
    WHERE TD2.TRIFID                  = TD.TRIFID
    AND TD2.SUBMISSION_REPORTING_YEAR = TD.SUBMISSION_REPORTING_YEAR
    AND TD2.REPORT_TYPE               = 'TRI_FORM_R'
    ) CountFormR,
    (SELECT COUNT(*)
    FROM V_EXT_MASTER TD2
    WHERE TD2.TRIFID                  = TD.TRIFID
    AND TD2.SUBMISSION_REPORTING_YEAR = TD.SUBMISSION_REPORTING_YEAR
    AND TD2.REPORT_TYPE               = 'TRI_FORM_A'
    ) CountFormA
*/
  FROM V_EXT_MASTER TD
  GROUP BY FS_ID, EPA_ID, TRIFID, FAC_NAME, AgencyName, LOC_ADD_LINE_1_DS, LOC_ADD_LINE_2_DS, CITY_NM, ZIP_CD, COUNTY_NM, MAIL_ADD_LINE_1_DS, MAIL_ADD_LINE_2_DS, MAIL_CITY_NM, MAIL_STATE_CD, MAIL_PROVINCE_NM, MAIL_ZIP_CD, MAIL_COUNTRY_CD, FAC_NAICS_PRIMARY, TECH_CONTACT_NM, TECH_PHONE_NR, SUBMISSION_REPORTING_YEAR, ECOLOGY_REGION, SUBMISSION_REPORTING_YEAR, ECOLOGY_REGION, FS_ID, EPA_ID, COUNTY_NM, FAC_NAME, AgencyName
  /*
  , (SELECT COUNT(*)
    FROM V_EXT_MASTER TD2
    WHERE TD2.TRIFID                  = TD.TRIFID
    AND TD2.SUBMISSION_REPORTING_YEAR = TD.SUBMISSION_REPORTING_YEAR
    AND TD2.REPORT_TYPE               = 'TRI_FORM_R'
    ), (SELECT COUNT(*)
    FROM V_EXT_MASTER TD2
    WHERE TD2.TRIFID                  = TD.TRIFID
    AND TD2.SUBMISSION_REPORTING_YEAR = TD.SUBMISSION_REPORTING_YEAR
    AND TD2.REPORT_TYPE               = 'TRI_FORM_A'
    )
*/ 
/

CREATE FORCE VIEW "V_EXT_STR_D" ( "FSID", "ECY ID", "TRIFID", "Year", "Facility Name", "AKA", "Address 1", "Address 2", "CITY", "COUNTY", "ZIP", "CHEMICAL", "CAS #", "PK_GUID", "FK_GUID", "Release Total", "Release Range Code", "Basis of Estimate Code", "Water Body Sequence #", "Water Body Name", "Release % from Stormwater", "ECY Region", "SUBMISSION_REPORTING_YEAR", "ECOLOGY_REGION", "FS_ID", "EPA_ID", "COUNTY_NM", "FAC_NAME", "AGENCYNAME", "CHEMICAL_NAME_TEXT" )
AS
SELECT     TD.FS_ID FSID, TD.EPA_ID "ECY ID", TD.TRIFID, TD.SUBMISSION_REPORTING_YEAR "Year", TD.FAC_NAME "Facility Name", 
                      TD.AgencyName AKA, TD.LOC_ADD_LINE_1_DS "Address 1", TD.LOC_ADD_LINE_2_DS "Address 2", TD.CITY_NM City, 
                      TD.COUNTY_NM County, TD.ZIP_CD Zip, TD.CHEMICAL_NAME_TEXT Chemical, TD.CAS_NUMBER "CAS #", ONSR.PK_GUID, 
                      ONSR.FK_GUID, CASE WHEN ONSR.WASTE_Q_NA_IND = 'Y' THEN '0' ELSE TRI_RangeCodeConversion(ONSR.WASTE_Q_ME, 
                      ONSR.WASTE_Q_RANGE_CODE) END "Release Total", ONSR.WASTE_Q_RANGE_CODE "Release Range Code", 
                      ONSR.Q_BASIS_EST_CD "Basis of Estimate Code", ONSR.WATER_SEQ_CLBER "Water Body Sequence #", 
                      ONSR.STREAM "Water Body Name", ONSR.RELEASE_STORM_WATER "Release % from Stormwater", TD.ECOLOGY_REGION "ECY Region", 
                      TD.SUBMISSION_REPORTING_YEAR, TD.ECOLOGY_REGION, TD.FS_ID, TD.EPA_ID, TD.COUNTY_NM, TD.FAC_NAME, TD.AgencyName, 
                      TD.CHEMICAL_NAME_TEXT
FROM         V_EXT_MASTER_D TD INNER JOIN
                      TRI_ONSITE_RELEASE_Q ONSR ON TD.PK_GUID_REPORT = ONSR.FK_GUID
WHERE     (CASE WHEN ONSR.WASTE_Q_NA_IND = 'Y' THEN '0' ELSE TRI_RangeCodeConversion(ONSR.WASTE_Q_ME, ONSR.WASTE_Q_RANGE_CODE) 
                      END <> '0') AND (NVL(ONSR.STREAM, 'NA') <> 'NA') AND (TD.REPORT_TYPE = 'TRI_FORM_R') 
/

CREATE FORCE VIEW "V_EXT_STR" ( "FSID", "ECY ID", "TRIFID", "Year", "Facility Name", "AKA", "Address 1", "Address 2", "CITY", "COUNTY", "ZIP", "CHEMICAL", "CAS #", "PK_GUID", "FK_GUID", "Release Total", "Release Range Code", "Basis of Estimate Code", "Water Body Sequence #", "Water Body Name", "Release % from Stormwater", "ECY Region", "SUBMISSION_REPORTING_YEAR", "ECOLOGY_REGION", "FS_ID", "EPA_ID", "COUNTY_NM", "FAC_NAME", "AGENCYNAME", "CHEMICAL_NAME_TEXT" )
AS
SELECT     TD.FS_ID FSID, TD.EPA_ID "ECY ID", TD.TRIFID, TD.SUBMISSION_REPORTING_YEAR "Year", TD.FAC_NAME "Facility Name", 
                      TD.AgencyName AKA, TD.LOC_ADD_LINE_1_DS "Address 1", TD.LOC_ADD_LINE_2_DS "Address 2", TD.CITY_NM City, 
                      TD.COUNTY_NM County, TD.ZIP_CD Zip, TD.CHEMICAL_NAME_TEXT Chemical, TD.CAS_NUMBER "CAS #", ONSR.PK_GUID, 
                      ONSR.FK_GUID, CASE WHEN ONSR.WASTE_Q_NA_IND = 'Y' THEN '0' ELSE TRI_RangeCodeConversion(ONSR.WASTE_Q_ME, 
                      ONSR.WASTE_Q_RANGE_CODE) END "Release Total", ONSR.WASTE_Q_RANGE_CODE "Release Range Code", 
                      ONSR.Q_BASIS_EST_CD "Basis of Estimate Code", ONSR.WATER_SEQ_CLBER "Water Body Sequence #", 
                      ONSR.STREAM "Water Body Name", ONSR.RELEASE_STORM_WATER "Release % from Stormwater", TD.ECOLOGY_REGION "ECY Region", 
                      TD.SUBMISSION_REPORTING_YEAR, TD.ECOLOGY_REGION, TD.FS_ID, TD.EPA_ID, TD.COUNTY_NM, TD.FAC_NAME, TD.AgencyName, 
                      TD.CHEMICAL_NAME_TEXT
FROM         V_EXT_MASTER TD INNER JOIN
                      TRI_ONSITE_RELEASE_Q ONSR ON TD.PK_GUID_REPORT = ONSR.FK_GUID
WHERE     (CASE WHEN ONSR.WASTE_Q_NA_IND = 'Y' THEN '0' ELSE TRI_RangeCodeConversion(ONSR.WASTE_Q_ME, ONSR.WASTE_Q_RANGE_CODE) 
                      END <> '0') AND (NVL(ONSR.STREAM, 'NA') <> 'NA') AND (TD.REPORT_TYPE = 'TRI_FORM_R') 
/

CREATE FORCE VIEW "V_EXT_W_MGMT_D" ( "PK_GUID_REPORT", "FSID", "ECY ID", "TRIFID", "YEAR", "REVISION", "Partial Sub", "Facility Name", "AKA", "CHEMICAL", "Cas #", "Prod Ratio", "One Time Release", "On Disp UG INJ Lfill P YR", "On Disp UG INJ Lfill C YR", "On Disp UG INJ Lfill +1 YR", "On Disp UG INJ Lfill +2 YR", "Off Disp UG INJ Lfill P YR", "Off Disp UG INJ Lfill C YR", "Off Disp UG INJ Lfill +1 YR", "Off Disp UG INJ Lfill +2 YR", "On Disp Other P YR", "On Disp Other C YR", "On Disp Other +1 YR", "On Disp Other +2 YR", "Off Disp Other P YR", "Off Disp Other C YR", "Off Disp Other +1 YR", "Off Disp Other +2 YR", "On Energy Recovery P YR", "On Energy Recovery C YR", "On Energy Recovery +1 YR", "On Energy Recovery +2 YR", "Off Energy Recovery P YR", "Off Energy Recovery C YR", "Off Energy Recovery +1 YR", "Off Energy Recovery +2 YR", "On Recycled P YR", "On Recycled C YR", "On Recycled +1 YR", "On Recycled +2 YR", "Off Recycled P YR", "Off Recycled C YR", "Off Recycled +1 YR", "Off Recycled +2 YR", "On Treated P YR", "On Treated C YR", "On Treated +1 YR", "On Treated +2 YR", "Off Treated P YR", "Off Treated C YR", "Off Treated +1 YR", "Off Treated +2 YR", "ECY Region", "SUBMISSION_REPORTING_YEAR", "ECOLOGY_REGION", "FS_ID", "EPA_ID", "COUNTY_NM", "FAC_NAME", "AGENCYNAME", "CHEMICAL_NAME_TEXT" )
AS
SELECT     PK_GUID_REPORT, FS_ID FSID, EPA_ID "ECY ID", TRIFID, SUBMISSION_REPORTING_YEAR Year, REVISION_INDICATOR Revision, 
                      SUBMISSION_PARTIAL_FACILITY_ID "Partial Sub", FAC_NAME "Facility Name", AgencyName AKA, CHEMICAL_NAME_TEXT Chemical, 
                      CAS_NUMBER "Cas #", PRODUCTION_RATIO_ME "Prod Ratio", ONE_TIME_RELEASE_Q "One Time Release",
                          (SELECT     CASE WHEN TOTAL_Q_NA_IND = 'Y' THEN NULL ELSE TOTAL_Q END Expr1
                            FROM          TRI_ONSITE_UIC_DISP_QTY
                            WHERE      (FK_GUID = TD.PK_GUID_REPORT) AND (YEAR_OFFSET_ME = '-1')) "On Disp UG INJ Lfill P YR",
                          (SELECT     CASE WHEN TOTAL_Q_NA_IND = 'Y' THEN NULL ELSE TOTAL_Q END Expr1
                            FROM          TRI_ONSITE_UIC_DISP_QTY TRI_ONSITE_UIC_DISP_QTY_3
                            WHERE      (FK_GUID = TD.PK_GUID_REPORT) AND (YEAR_OFFSET_ME = '0')) "On Disp UG INJ Lfill C YR",
                          (SELECT     CASE WHEN TOTAL_Q_NA_IND = 'Y' THEN NULL ELSE TOTAL_Q END Expr1
                            FROM          TRI_ONSITE_UIC_DISP_QTY TRI_ONSITE_UIC_DISP_QTY_2
                            WHERE      (FK_GUID = TD.PK_GUID_REPORT) AND (YEAR_OFFSET_ME = '1')) "On Disp UG INJ Lfill +1 YR",
                          (SELECT     CASE WHEN TOTAL_Q_NA_IND = 'Y' THEN NULL ELSE TOTAL_Q END Expr1
                            FROM          TRI_ONSITE_UIC_DISP_QTY TRI_ONSITE_UIC_DISP_QTY_1
                            WHERE      (FK_GUID = TD.PK_GUID_REPORT) AND (YEAR_OFFSET_ME = '2')) "On Disp UG INJ Lfill +2 YR",
                          (SELECT     CASE WHEN TOTAL_Q_NA_IND = 'Y' THEN NULL ELSE TOTAL_Q END Expr1
                            FROM          TRI_OFFSITE_UIC_DISP_QTY
                            WHERE      (FK_GUID = TD.PK_GUID_REPORT) AND (YEAR_OFFSET_ME = '-1')) "Off Disp UG INJ Lfill P YR",
                          (SELECT     CASE WHEN TOTAL_Q_NA_IND = 'Y' THEN NULL ELSE TOTAL_Q END Expr1
                            FROM          TRI_OFFSITE_UIC_DISP_QTY TRI_OFFSITE_UIC_DISP_QTY_3
                            WHERE      (FK_GUID = TD.PK_GUID_REPORT) AND (YEAR_OFFSET_ME = '0')) "Off Disp UG INJ Lfill C YR",
                          (SELECT     CASE WHEN TOTAL_Q_NA_IND = 'Y' THEN NULL ELSE TOTAL_Q END Expr1
                            FROM          TRI_OFFSITE_UIC_DISP_QTY TRI_OFFSITE_UIC_DISP_QTY_2
                            WHERE      (FK_GUID = TD.PK_GUID_REPORT) AND (YEAR_OFFSET_ME = '1')) "Off Disp UG INJ Lfill +1 YR",
                          (SELECT     CASE WHEN TOTAL_Q_NA_IND = 'Y' THEN NULL ELSE TOTAL_Q END Expr1
                            FROM          TRI_OFFSITE_UIC_DISP_QTY TRI_OFFSITE_UIC_DISP_QTY_1
                            WHERE      (FK_GUID = TD.PK_GUID_REPORT) AND (YEAR_OFFSET_ME = '2')) "Off Disp UG INJ Lfill +2 YR",
                          (SELECT     CASE WHEN TOTAL_Q_NA_IND = 'Y' THEN NULL ELSE TOTAL_Q END Expr1
                            FROM          TRI_ONSITE_DISP_QTY
                            WHERE      (FK_GUID = TD.PK_GUID_REPORT) AND (YEAR_OFFSET_ME = '-1')) "On Disp Other P YR",
                          (SELECT     CASE WHEN TOTAL_Q_NA_IND = 'Y' THEN NULL ELSE TOTAL_Q END Expr1
                            FROM          TRI_ONSITE_DISP_QTY TRI_ONSITE_DISP_QTY_3
                            WHERE      (FK_GUID = TD.PK_GUID_REPORT) AND (YEAR_OFFSET_ME = '0')) "On Disp Other C YR",
                          (SELECT     CASE WHEN TOTAL_Q_NA_IND = 'Y' THEN NULL ELSE TOTAL_Q END Expr1
                            FROM          TRI_ONSITE_DISP_QTY TRI_ONSITE_DISP_QTY_2
                            WHERE      (FK_GUID = TD.PK_GUID_REPORT) AND (YEAR_OFFSET_ME = '1')) "On Disp Other +1 YR",
                          (SELECT     CASE WHEN TOTAL_Q_NA_IND = 'Y' THEN NULL ELSE TOTAL_Q END Expr1
                            FROM          TRI_ONSITE_DISP_QTY TRI_ONSITE_DISP_QTY_1
                            WHERE      (FK_GUID = TD.PK_GUID_REPORT) AND (YEAR_OFFSET_ME = '2')) "On Disp Other +2 YR",
                          (SELECT     CASE WHEN TOTAL_Q_NA_IND = 'Y' THEN NULL ELSE TOTAL_Q END Expr1
                            FROM          TRI_OFFSITE_DISP_QTY
                            WHERE      (FK_GUID = TD.PK_GUID_REPORT) AND (YEAR_OFFSET_ME = '-1')) "Off Disp Other P YR",
                          (SELECT     CASE WHEN TOTAL_Q_NA_IND = 'Y' THEN NULL ELSE TOTAL_Q END Expr1
                            FROM          TRI_OFFSITE_DISP_QTY TRI_OFFSITE_DISP_QTY_3
                            WHERE      (FK_GUID = TD.PK_GUID_REPORT) AND (YEAR_OFFSET_ME = '0')) "Off Disp Other C YR",
                          (SELECT     CASE WHEN TOTAL_Q_NA_IND = 'Y' THEN NULL ELSE TOTAL_Q END Expr1
                            FROM          TRI_OFFSITE_DISP_QTY TRI_OFFSITE_DISP_QTY_2
                            WHERE      (FK_GUID = TD.PK_GUID_REPORT) AND (YEAR_OFFSET_ME = '1')) "Off Disp Other +1 YR",
                          (SELECT     CASE WHEN TOTAL_Q_NA_IND = 'Y' THEN NULL ELSE TOTAL_Q END Expr1
                            FROM          TRI_OFFSITE_DISP_QTY TRI_OFFSITE_DISP_QTY_1
                            WHERE      (FK_GUID = TD.PK_GUID_REPORT) AND (YEAR_OFFSET_ME = '2')) "Off Disp Other +2 YR",
                          (SELECT     CASE WHEN TOTAL_Q_NA_IND = 'Y' THEN NULL ELSE TOTAL_Q END Expr1
                            FROM          TRI_ONSITE_ENERGY_RCV_QTY
                            WHERE      (FK_GUID = TD.PK_GUID_REPORT) AND (YEAR_OFFSET_ME = '-1')) "On Energy Recovery P YR",
                          (SELECT     CASE WHEN TOTAL_Q_NA_IND = 'Y' THEN NULL ELSE TOTAL_Q END Expr1
                            FROM          TRI_ONSITE_ENERGY_RCV_QTY TRI_ONSITE_ENERGY_RCV_QTY_3
                            WHERE      (FK_GUID = TD.PK_GUID_REPORT) AND (YEAR_OFFSET_ME = '0')) "On Energy Recovery C YR",
                          (SELECT     CASE WHEN TOTAL_Q_NA_IND = 'Y' THEN NULL ELSE TOTAL_Q END Expr1
                            FROM          TRI_ONSITE_ENERGY_RCV_QTY TRI_ONSITE_ENERGY_RCV_QTY_2
                            WHERE      (FK_GUID = TD.PK_GUID_REPORT) AND (YEAR_OFFSET_ME = '1')) "On Energy Recovery +1 YR",
                          (SELECT     CASE WHEN TOTAL_Q_NA_IND = 'Y' THEN NULL ELSE TOTAL_Q END Expr1
                            FROM          TRI_ONSITE_ENERGY_RCV_QTY TRI_ONSITE_ENERGY_RCV_QTY_1
                            WHERE      (FK_GUID = TD.PK_GUID_REPORT) AND (YEAR_OFFSET_ME = '2')) "On Energy Recovery +2 YR",
                          (SELECT     CASE WHEN TOTAL_Q_NA_IND = 'Y' THEN NULL ELSE TOTAL_Q END Expr1
                            FROM          TRI_OFFSITE_ENERGY_REC_QTY
                            WHERE      (FK_GUID = TD.PK_GUID_REPORT) AND (YEAR_OFFSET_ME = '-1')) "Off Energy Recovery P YR",
                          (SELECT     CASE WHEN TOTAL_Q_NA_IND = 'Y' THEN NULL ELSE TOTAL_Q END Expr1
                            FROM          TRI_OFFSITE_ENERGY_REC_QTY TRI_OFFSITE_ENERGY_REC_QTY_3
                            WHERE      (FK_GUID = TD.PK_GUID_REPORT) AND (YEAR_OFFSET_ME = '0')) "Off Energy Recovery C YR",
                          (SELECT     CASE WHEN TOTAL_Q_NA_IND = 'Y' THEN NULL ELSE TOTAL_Q END Expr1
                            FROM          TRI_OFFSITE_ENERGY_REC_QTY TRI_OFFSITE_ENERGY_REC_QTY_2
                            WHERE      (FK_GUID = TD.PK_GUID_REPORT) AND (YEAR_OFFSET_ME = '1')) "Off Energy Recovery +1 YR",
                          (SELECT     CASE WHEN TOTAL_Q_NA_IND = 'Y' THEN NULL ELSE TOTAL_Q END Expr1
                            FROM          TRI_OFFSITE_ENERGY_REC_QTY TRI_OFFSITE_ENERGY_REC_QTY_1
                            WHERE      (FK_GUID = TD.PK_GUID_REPORT) AND (YEAR_OFFSET_ME = '2')) "Off Energy Recovery +2 YR",
                          (SELECT     CASE WHEN TOTAL_Q_NA_IND = 'Y' THEN NULL ELSE TOTAL_Q END Expr1
                            FROM          TRI_ONSITE_RECYCLED_Q
                            WHERE      (FK_GUID = TD.PK_GUID_REPORT) AND (YEAR_OFFSET_ME = '-1')) "On Recycled P YR",
                          (SELECT     CASE WHEN TOTAL_Q_NA_IND = 'Y' THEN NULL ELSE TOTAL_Q END Expr1
                            FROM          TRI_ONSITE_RECYCLED_Q TRI_ONSITE_RECYCLED_Q_3
                            WHERE      (FK_GUID = TD.PK_GUID_REPORT) AND (YEAR_OFFSET_ME = '0')) "On Recycled C YR",
                          (SELECT     CASE WHEN TOTAL_Q_NA_IND = 'Y' THEN NULL ELSE TOTAL_Q END Expr1
                            FROM          TRI_ONSITE_RECYCLED_Q TRI_ONSITE_RECYCLED_Q_2
                            WHERE      (FK_GUID = TD.PK_GUID_REPORT) AND (YEAR_OFFSET_ME = '1')) "On Recycled +1 YR",
                          (SELECT     CASE WHEN TOTAL_Q_NA_IND = 'Y' THEN NULL ELSE TOTAL_Q END Expr1
                            FROM          TRI_ONSITE_RECYCLED_Q TRI_ONSITE_RECYCLED_Q_1
                            WHERE      (FK_GUID = TD.PK_GUID_REPORT) AND (YEAR_OFFSET_ME = '2')) "On Recycled +2 YR",
                          (SELECT     CASE WHEN TOTAL_Q_NA_IND = 'Y' THEN NULL ELSE TOTAL_Q END Expr1
                            FROM          TRI_OFFSITE_RECYCLED_Q
                            WHERE      (FK_GUID = TD.PK_GUID_REPORT) AND (YEAR_OFFSET_ME = '-1')) "Off Recycled P YR",
                          (SELECT     CASE WHEN TOTAL_Q_NA_IND = 'Y' THEN NULL ELSE TOTAL_Q END Expr1
                            FROM          TRI_OFFSITE_RECYCLED_Q TRI_OFFSITE_RECYCLED_Q_3
                            WHERE      (FK_GUID = TD.PK_GUID_REPORT) AND (YEAR_OFFSET_ME = '0')) "Off Recycled C YR",
                          (SELECT     CASE WHEN TOTAL_Q_NA_IND = 'Y' THEN NULL ELSE TOTAL_Q END Expr1
                            FROM          TRI_OFFSITE_RECYCLED_Q TRI_OFFSITE_RECYCLED_Q_2
                            WHERE      (FK_GUID = TD.PK_GUID_REPORT) AND (YEAR_OFFSET_ME = '1')) "Off Recycled +1 YR",
                          (SELECT     CASE WHEN TOTAL_Q_NA_IND = 'Y' THEN NULL ELSE TOTAL_Q END Expr1
                            FROM          TRI_OFFSITE_RECYCLED_Q TRI_OFFSITE_RECYCLED_Q_1
                            WHERE      (FK_GUID = TD.PK_GUID_REPORT) AND (YEAR_OFFSET_ME = '2')) "Off Recycled +2 YR",
                          (SELECT     CASE WHEN TOTAL_Q_NA_IND = 'Y' THEN NULL ELSE TOTAL_Q END Expr1
                            FROM          TRI_ONSITE_TREATED_Q
                            WHERE      (FK_GUID = TD.PK_GUID_REPORT) AND (YEAR_OFFSET_ME = '-1')) "On Treated P YR",
                          (SELECT     CASE WHEN TOTAL_Q_NA_IND = 'Y' THEN NULL ELSE TOTAL_Q END Expr1
                            FROM          TRI_ONSITE_TREATED_Q TRI_ONSITE_TREATED_Q_3
                            WHERE      (FK_GUID = TD.PK_GUID_REPORT) AND (YEAR_OFFSET_ME = '0')) "On Treated C YR",
                          (SELECT     CASE WHEN TOTAL_Q_NA_IND = 'Y' THEN NULL ELSE TOTAL_Q END Expr1
                            FROM          TRI_ONSITE_TREATED_Q TRI_ONSITE_TREATED_Q_2
                            WHERE      (FK_GUID = TD.PK_GUID_REPORT) AND (YEAR_OFFSET_ME = '1')) "On Treated +1 YR",
                          (SELECT     CASE WHEN TOTAL_Q_NA_IND = 'Y' THEN NULL ELSE TOTAL_Q END Expr1
                            FROM          TRI_ONSITE_TREATED_Q TRI_ONSITE_TREATED_Q_1
                            WHERE      (FK_GUID = TD.PK_GUID_REPORT) AND (YEAR_OFFSET_ME = '2')) "On Treated +2 YR",
                          (SELECT     CASE WHEN TOTAL_Q_NA_IND = 'Y' THEN NULL ELSE TOTAL_Q END Expr1
                            FROM          TRI_OFFSITE_TREATED_Q
                            WHERE      (FK_GUID = TD.PK_GUID_REPORT) AND (YEAR_OFFSET_ME = '-1')) "Off Treated P YR",
                          (SELECT     CASE WHEN TOTAL_Q_NA_IND = 'Y' THEN NULL ELSE TOTAL_Q END Expr1
                            FROM          TRI_OFFSITE_TREATED_Q TRI_OFFSITE_TREATED_Q_3
                            WHERE      (FK_GUID = TD.PK_GUID_REPORT) AND (YEAR_OFFSET_ME = '0')) "Off Treated C YR",
                          (SELECT     CASE WHEN TOTAL_Q_NA_IND = 'Y' THEN NULL ELSE TOTAL_Q END Expr1
                            FROM          TRI_OFFSITE_TREATED_Q TRI_OFFSITE_TREATED_Q_2
                            WHERE      (FK_GUID = TD.PK_GUID_REPORT) AND (YEAR_OFFSET_ME = '1')) "Off Treated +1 YR",
                          (SELECT     CASE WHEN TOTAL_Q_NA_IND = 'Y' THEN NULL ELSE TOTAL_Q END Expr1
                            FROM          TRI_OFFSITE_TREATED_Q TRI_OFFSITE_TREATED_Q_1
                            WHERE      (FK_GUID = TD.PK_GUID_REPORT) AND (YEAR_OFFSET_ME = '2')) "Off Treated +2 YR", ECOLOGY_REGION "ECY Region", 
                      SUBMISSION_REPORTING_YEAR, ECOLOGY_REGION, FS_ID, EPA_ID, COUNTY_NM, FAC_NAME, AgencyName, CHEMICAL_NAME_TEXT
FROM         V_EXT_MASTER_D TD
WHERE     (REPORT_TYPE = 'TRI_FORM_R') 
/

CREATE FORCE VIEW "V_EXT_W_MGMT" ( "PK_GUID_REPORT", "FSID", "ECY ID", "TRIFID", "YEAR", "REVISION", "Partial Sub", "Facility Name", "AKA", "CHEMICAL", "Cas #", "Prod Ratio", "One Time Release", "On Disp UG INJ Lfill P YR", "On Disp UG INJ Lfill C YR", "On Disp UG INJ Lfill +1 YR", "On Disp UG INJ Lfill +2 YR", "Off Disp UG INJ Lfill P YR", "Off Disp UG INJ Lfill C YR", "Off Disp UG INJ Lfill +1 YR", "Off Disp UG INJ Lfill +2 YR", "On Disp Other P YR", "On Disp Other C YR", "On Disp Other +1 YR", "On Disp Other +2 YR", "Off Disp Other P YR", "Off Disp Other C YR", "Off Disp Other +1 YR", "Off Disp Other +2 YR", "On Energy Recovery P YR", "On Energy Recovery C YR", "On Energy Recovery +1 YR", "On Energy Recovery +2 YR", "Off Energy Recovery P YR", "Off Energy Recovery C YR", "Off Energy Recovery +1 YR", "Off Energy Recovery +2 YR", "On Recycled P YR", "On Recycled C YR", "On Recycled +1 YR", "On Recycled +2 YR", "Off Recycled P YR", "Off Recycled C YR", "Off Recycled +1 YR", "Off Recycled +2 YR", "On Treated P YR", "On Treated C YR", "On Treated +1 YR", "On Treated +2 YR", "Off Treated P YR", "Off Treated C YR", "Off Treated +1 YR", "Off Treated +2 YR", "ECY Region", "SUBMISSION_REPORTING_YEAR", "ECOLOGY_REGION", "FS_ID", "EPA_ID", "COUNTY_NM", "FAC_NAME", "AGENCYNAME", "CHEMICAL_NAME_TEXT" )
AS
SELECT     PK_GUID_REPORT, FS_ID FSID, EPA_ID "ECY ID", TRIFID, SUBMISSION_REPORTING_YEAR Year, REVISION_INDICATOR Revision, 
                      SUBMISSION_PARTIAL_FACILITY_ID "Partial Sub", FAC_NAME "Facility Name", AgencyName AKA, CHEMICAL_NAME_TEXT Chemical, 
                      CAS_NUMBER "Cas #", PRODUCTION_RATIO_ME "Prod Ratio", ONE_TIME_RELEASE_Q "One Time Release",
                          (SELECT     CASE WHEN TOTAL_Q_NA_IND = 'Y' THEN NULL ELSE TOTAL_Q END Expr1
                            FROM          TRI_ONSITE_UIC_DISP_QTY
                            WHERE      (FK_GUID = TD.PK_GUID_REPORT) AND (YEAR_OFFSET_ME = '-1')) "On Disp UG INJ Lfill P YR",
                          (SELECT     CASE WHEN TOTAL_Q_NA_IND = 'Y' THEN NULL ELSE TOTAL_Q END Expr1
                            FROM          TRI_ONSITE_UIC_DISP_QTY TRI_ONSITE_UIC_DISP_QTY_3
                            WHERE      (FK_GUID = TD.PK_GUID_REPORT) AND (YEAR_OFFSET_ME = '0')) "On Disp UG INJ Lfill C YR",
                          (SELECT     CASE WHEN TOTAL_Q_NA_IND = 'Y' THEN NULL ELSE TOTAL_Q END Expr1
                            FROM          TRI_ONSITE_UIC_DISP_QTY TRI_ONSITE_UIC_DISP_QTY_2
                            WHERE      (FK_GUID = TD.PK_GUID_REPORT) AND (YEAR_OFFSET_ME = '1')) "On Disp UG INJ Lfill +1 YR",
                          (SELECT     CASE WHEN TOTAL_Q_NA_IND = 'Y' THEN NULL ELSE TOTAL_Q END Expr1
                            FROM          TRI_ONSITE_UIC_DISP_QTY TRI_ONSITE_UIC_DISP_QTY_1
                            WHERE      (FK_GUID = TD.PK_GUID_REPORT) AND (YEAR_OFFSET_ME = '2')) "On Disp UG INJ Lfill +2 YR",
                          (SELECT     CASE WHEN TOTAL_Q_NA_IND = 'Y' THEN NULL ELSE TOTAL_Q END Expr1
                            FROM          TRI_OFFSITE_UIC_DISP_QTY
                            WHERE      (FK_GUID = TD.PK_GUID_REPORT) AND (YEAR_OFFSET_ME = '-1')) "Off Disp UG INJ Lfill P YR",
                          (SELECT     CASE WHEN TOTAL_Q_NA_IND = 'Y' THEN NULL ELSE TOTAL_Q END Expr1
                            FROM          TRI_OFFSITE_UIC_DISP_QTY TRI_OFFSITE_UIC_DISP_QTY_3
                            WHERE      (FK_GUID = TD.PK_GUID_REPORT) AND (YEAR_OFFSET_ME = '0')) "Off Disp UG INJ Lfill C YR",
                          (SELECT     CASE WHEN TOTAL_Q_NA_IND = 'Y' THEN NULL ELSE TOTAL_Q END Expr1
                            FROM          TRI_OFFSITE_UIC_DISP_QTY TRI_OFFSITE_UIC_DISP_QTY_2
                            WHERE      (FK_GUID = TD.PK_GUID_REPORT) AND (YEAR_OFFSET_ME = '1')) "Off Disp UG INJ Lfill +1 YR",
                          (SELECT     CASE WHEN TOTAL_Q_NA_IND = 'Y' THEN NULL ELSE TOTAL_Q END Expr1
                            FROM          TRI_OFFSITE_UIC_DISP_QTY TRI_OFFSITE_UIC_DISP_QTY_1
                            WHERE      (FK_GUID = TD.PK_GUID_REPORT) AND (YEAR_OFFSET_ME = '2')) "Off Disp UG INJ Lfill +2 YR",
                          (SELECT     CASE WHEN TOTAL_Q_NA_IND = 'Y' THEN NULL ELSE TOTAL_Q END Expr1
                            FROM          TRI_ONSITE_DISP_QTY
                            WHERE      (FK_GUID = TD.PK_GUID_REPORT) AND (YEAR_OFFSET_ME = '-1')) "On Disp Other P YR",
                          (SELECT     CASE WHEN TOTAL_Q_NA_IND = 'Y' THEN NULL ELSE TOTAL_Q END Expr1
                            FROM          TRI_ONSITE_DISP_QTY TRI_ONSITE_DISP_QTY_3
                            WHERE      (FK_GUID = TD.PK_GUID_REPORT) AND (YEAR_OFFSET_ME = '0')) "On Disp Other C YR",
                          (SELECT     CASE WHEN TOTAL_Q_NA_IND = 'Y' THEN NULL ELSE TOTAL_Q END Expr1
                            FROM          TRI_ONSITE_DISP_QTY TRI_ONSITE_DISP_QTY_2
                            WHERE      (FK_GUID = TD.PK_GUID_REPORT) AND (YEAR_OFFSET_ME = '1')) "On Disp Other +1 YR",
                          (SELECT     CASE WHEN TOTAL_Q_NA_IND = 'Y' THEN NULL ELSE TOTAL_Q END Expr1
                            FROM          TRI_ONSITE_DISP_QTY TRI_ONSITE_DISP_QTY_1
                            WHERE      (FK_GUID = TD.PK_GUID_REPORT) AND (YEAR_OFFSET_ME = '2')) "On Disp Other +2 YR",
                          (SELECT     CASE WHEN TOTAL_Q_NA_IND = 'Y' THEN NULL ELSE TOTAL_Q END Expr1
                            FROM          TRI_OFFSITE_DISP_QTY
                            WHERE      (FK_GUID = TD.PK_GUID_REPORT) AND (YEAR_OFFSET_ME = '-1')) "Off Disp Other P YR",
                          (SELECT     CASE WHEN TOTAL_Q_NA_IND = 'Y' THEN NULL ELSE TOTAL_Q END Expr1
                            FROM          TRI_OFFSITE_DISP_QTY TRI_OFFSITE_DISP_QTY_3
                            WHERE      (FK_GUID = TD.PK_GUID_REPORT) AND (YEAR_OFFSET_ME = '0')) "Off Disp Other C YR",
                          (SELECT     CASE WHEN TOTAL_Q_NA_IND = 'Y' THEN NULL ELSE TOTAL_Q END Expr1
                            FROM          TRI_OFFSITE_DISP_QTY TRI_OFFSITE_DISP_QTY_2
                            WHERE      (FK_GUID = TD.PK_GUID_REPORT) AND (YEAR_OFFSET_ME = '1')) "Off Disp Other +1 YR",
                          (SELECT     CASE WHEN TOTAL_Q_NA_IND = 'Y' THEN NULL ELSE TOTAL_Q END Expr1
                            FROM          TRI_OFFSITE_DISP_QTY TRI_OFFSITE_DISP_QTY_1
                            WHERE      (FK_GUID = TD.PK_GUID_REPORT) AND (YEAR_OFFSET_ME = '2')) "Off Disp Other +2 YR",
                          (SELECT     CASE WHEN TOTAL_Q_NA_IND = 'Y' THEN NULL ELSE TOTAL_Q END Expr1
                            FROM          TRI_ONSITE_ENERGY_RCV_QTY
                            WHERE      (FK_GUID = TD.PK_GUID_REPORT) AND (YEAR_OFFSET_ME = '-1')) "On Energy Recovery P YR",
                          (SELECT     CASE WHEN TOTAL_Q_NA_IND = 'Y' THEN NULL ELSE TOTAL_Q END Expr1
                            FROM          TRI_ONSITE_ENERGY_RCV_QTY TRI_ONSITE_ENERGY_RCV_QTY_3
                            WHERE      (FK_GUID = TD.PK_GUID_REPORT) AND (YEAR_OFFSET_ME = '0')) "On Energy Recovery C YR",
                          (SELECT     CASE WHEN TOTAL_Q_NA_IND = 'Y' THEN NULL ELSE TOTAL_Q END Expr1
                            FROM          TRI_ONSITE_ENERGY_RCV_QTY TRI_ONSITE_ENERGY_RCV_QTY_2
                            WHERE      (FK_GUID = TD.PK_GUID_REPORT) AND (YEAR_OFFSET_ME = '1')) "On Energy Recovery +1 YR",
                          (SELECT     CASE WHEN TOTAL_Q_NA_IND = 'Y' THEN NULL ELSE TOTAL_Q END Expr1
                            FROM          TRI_ONSITE_ENERGY_RCV_QTY TRI_ONSITE_ENERGY_RCV_QTY_1
                            WHERE      (FK_GUID = TD.PK_GUID_REPORT) AND (YEAR_OFFSET_ME = '2')) "On Energy Recovery +2 YR",
                          (SELECT     CASE WHEN TOTAL_Q_NA_IND = 'Y' THEN NULL ELSE TOTAL_Q END Expr1
                            FROM          TRI_OFFSITE_ENERGY_REC_QTY
                            WHERE      (FK_GUID = TD.PK_GUID_REPORT) AND (YEAR_OFFSET_ME = '-1')) "Off Energy Recovery P YR",
                          (SELECT     CASE WHEN TOTAL_Q_NA_IND = 'Y' THEN NULL ELSE TOTAL_Q END Expr1
                            FROM          TRI_OFFSITE_ENERGY_REC_QTY TRI_OFFSITE_ENERGY_REC_QTY_3
                            WHERE      (FK_GUID = TD.PK_GUID_REPORT) AND (YEAR_OFFSET_ME = '0')) "Off Energy Recovery C YR",
                          (SELECT     CASE WHEN TOTAL_Q_NA_IND = 'Y' THEN NULL ELSE TOTAL_Q END Expr1
                            FROM          TRI_OFFSITE_ENERGY_REC_QTY TRI_OFFSITE_ENERGY_REC_QTY_2
                            WHERE      (FK_GUID = TD.PK_GUID_REPORT) AND (YEAR_OFFSET_ME = '1')) "Off Energy Recovery +1 YR",
                          (SELECT     CASE WHEN TOTAL_Q_NA_IND = 'Y' THEN NULL ELSE TOTAL_Q END Expr1
                            FROM          TRI_OFFSITE_ENERGY_REC_QTY TRI_OFFSITE_ENERGY_REC_QTY_1
                            WHERE      (FK_GUID = TD.PK_GUID_REPORT) AND (YEAR_OFFSET_ME = '2')) "Off Energy Recovery +2 YR",
                          (SELECT     CASE WHEN TOTAL_Q_NA_IND = 'Y' THEN NULL ELSE TOTAL_Q END Expr1
                            FROM          TRI_ONSITE_RECYCLED_Q
                            WHERE      (FK_GUID = TD.PK_GUID_REPORT) AND (YEAR_OFFSET_ME = '-1')) "On Recycled P YR",
                          (SELECT     CASE WHEN TOTAL_Q_NA_IND = 'Y' THEN NULL ELSE TOTAL_Q END Expr1
                            FROM          TRI_ONSITE_RECYCLED_Q TRI_ONSITE_RECYCLED_Q_3
                            WHERE      (FK_GUID = TD.PK_GUID_REPORT) AND (YEAR_OFFSET_ME = '0')) "On Recycled C YR",
                          (SELECT     CASE WHEN TOTAL_Q_NA_IND = 'Y' THEN NULL ELSE TOTAL_Q END Expr1
                            FROM          TRI_ONSITE_RECYCLED_Q TRI_ONSITE_RECYCLED_Q_2
                            WHERE      (FK_GUID = TD.PK_GUID_REPORT) AND (YEAR_OFFSET_ME = '1')) "On Recycled +1 YR",
                          (SELECT     CASE WHEN TOTAL_Q_NA_IND = 'Y' THEN NULL ELSE TOTAL_Q END Expr1
                            FROM          TRI_ONSITE_RECYCLED_Q TRI_ONSITE_RECYCLED_Q_1
                            WHERE      (FK_GUID = TD.PK_GUID_REPORT) AND (YEAR_OFFSET_ME = '2')) "On Recycled +2 YR",
                          (SELECT     CASE WHEN TOTAL_Q_NA_IND = 'Y' THEN NULL ELSE TOTAL_Q END Expr1
                            FROM          TRI_OFFSITE_RECYCLED_Q
                            WHERE      (FK_GUID = TD.PK_GUID_REPORT) AND (YEAR_OFFSET_ME = '-1')) "Off Recycled P YR",
                          (SELECT     CASE WHEN TOTAL_Q_NA_IND = 'Y' THEN NULL ELSE TOTAL_Q END Expr1
                            FROM          TRI_OFFSITE_RECYCLED_Q TRI_OFFSITE_RECYCLED_Q_3
                            WHERE      (FK_GUID = TD.PK_GUID_REPORT) AND (YEAR_OFFSET_ME = '0')) "Off Recycled C YR",
                          (SELECT     CASE WHEN TOTAL_Q_NA_IND = 'Y' THEN NULL ELSE TOTAL_Q END Expr1
                            FROM          TRI_OFFSITE_RECYCLED_Q TRI_OFFSITE_RECYCLED_Q_2
                            WHERE      (FK_GUID = TD.PK_GUID_REPORT) AND (YEAR_OFFSET_ME = '1')) "Off Recycled +1 YR",
                          (SELECT     CASE WHEN TOTAL_Q_NA_IND = 'Y' THEN NULL ELSE TOTAL_Q END Expr1
                            FROM          TRI_OFFSITE_RECYCLED_Q TRI_OFFSITE_RECYCLED_Q_1
                            WHERE      (FK_GUID = TD.PK_GUID_REPORT) AND (YEAR_OFFSET_ME = '2')) "Off Recycled +2 YR",
                          (SELECT     CASE WHEN TOTAL_Q_NA_IND = 'Y' THEN NULL ELSE TOTAL_Q END Expr1
                            FROM          TRI_ONSITE_TREATED_Q
                            WHERE      (FK_GUID = TD.PK_GUID_REPORT) AND (YEAR_OFFSET_ME = '-1')) "On Treated P YR",
                          (SELECT     CASE WHEN TOTAL_Q_NA_IND = 'Y' THEN NULL ELSE TOTAL_Q END Expr1
                            FROM          TRI_ONSITE_TREATED_Q TRI_ONSITE_TREATED_Q_3
                            WHERE      (FK_GUID = TD.PK_GUID_REPORT) AND (YEAR_OFFSET_ME = '0')) "On Treated C YR",
                          (SELECT     CASE WHEN TOTAL_Q_NA_IND = 'Y' THEN NULL ELSE TOTAL_Q END Expr1
                            FROM          TRI_ONSITE_TREATED_Q TRI_ONSITE_TREATED_Q_2
                            WHERE      (FK_GUID = TD.PK_GUID_REPORT) AND (YEAR_OFFSET_ME = '1')) "On Treated +1 YR",
                          (SELECT     CASE WHEN TOTAL_Q_NA_IND = 'Y' THEN NULL ELSE TOTAL_Q END Expr1
                            FROM          TRI_ONSITE_TREATED_Q TRI_ONSITE_TREATED_Q_1
                            WHERE      (FK_GUID = TD.PK_GUID_REPORT) AND (YEAR_OFFSET_ME = '2')) "On Treated +2 YR",
                          (SELECT     CASE WHEN TOTAL_Q_NA_IND = 'Y' THEN NULL ELSE TOTAL_Q END Expr1
                            FROM          TRI_OFFSITE_TREATED_Q
                            WHERE      (FK_GUID = TD.PK_GUID_REPORT) AND (YEAR_OFFSET_ME = '-1')) "Off Treated P YR",
                          (SELECT     CASE WHEN TOTAL_Q_NA_IND = 'Y' THEN NULL ELSE TOTAL_Q END Expr1
                            FROM          TRI_OFFSITE_TREATED_Q TRI_OFFSITE_TREATED_Q_3
                            WHERE      (FK_GUID = TD.PK_GUID_REPORT) AND (YEAR_OFFSET_ME = '0')) "Off Treated C YR",
                          (SELECT     CASE WHEN TOTAL_Q_NA_IND = 'Y' THEN NULL ELSE TOTAL_Q END Expr1
                            FROM          TRI_OFFSITE_TREATED_Q TRI_OFFSITE_TREATED_Q_2
                            WHERE      (FK_GUID = TD.PK_GUID_REPORT) AND (YEAR_OFFSET_ME = '1')) "Off Treated +1 YR",
                          (SELECT     CASE WHEN TOTAL_Q_NA_IND = 'Y' THEN NULL ELSE TOTAL_Q END Expr1
                            FROM          TRI_OFFSITE_TREATED_Q TRI_OFFSITE_TREATED_Q_1
                            WHERE      (FK_GUID = TD.PK_GUID_REPORT) AND (YEAR_OFFSET_ME = '2')) "Off Treated +2 YR", ECOLOGY_REGION "ECY Region", 
                      SUBMISSION_REPORTING_YEAR, ECOLOGY_REGION, FS_ID, EPA_ID, COUNTY_NM, FAC_NAME, AgencyName, CHEMICAL_NAME_TEXT
FROM         V_EXT_MASTER TD
WHERE     (REPORT_TYPE = 'TRI_FORM_R') 
/

  CREATE FORCE VIEW "V_FAC_CHEMICAL_DATA" ("TRIFID", "SUB_REP_YEAR", "SUB_ID", "REPORT_TYPE_CODE", "IS_REVISION", "IS_PARTIAL", "RECEIVED_DATE", "CHEMICAL_NAME", "CHEMICAL_CAS_NO", "TRI_FILENAME", "CHEM_ID", "INSERTED_DATE") AS 
  SELECT

 UPPER(F.FAC_ID) AS TRIFID
, R.SUB_REP_YEAR
, S.PK_GUID AS SUB_ID
, UPPER(COALESCE (SUBSTR(REVERSE(R.REPORT_TYPE_CODE), 1,1), '')) AS REPORT_TYPE_CODE
, CASE WHEN TRI_CALC_REV_IND(R.CHEM_RPT_REV_CD_1,R.CHEM_RPT_REV_CD_2,R.CHEM_RPT_WD_CD_1,R.CHEM_RPT_WD_CD_2,R.REVISION_IND) = 'Y' THEN 1 ELSE 0 END AS IS_REVISION
, CASE WHEN R.SUB_PARTIAL_FAC_ID = 'Y' THEN 1 ELSE 0 END AS IS_PARTIAL
, S.INSERTED_DATE AS RECEIVED_DATE
, UPPER(C.CHEM_TXT) AS CHEMICAL_NAME
,	UPPER(C.CAS_CLBER) AS CHEMICAL_CAS_NO
,	CAST('' AS VARCHAR(255)) AS TRI_FILENAME
, R.PK_GUID AS CHEM_ID
, S.INSERTED_DATE

FROM TRI_SUB S
JOIN TRI_FAC F ON F.FK_GUID = S.PK_GUID
JOIN TRI_REPORT R ON R.FK_GUID = S.PK_GUID
JOIN TRI_CHEM C ON C.FK_GUID = R.PK_GUID
JOIN App_FI_TRIFID T ON F.FAC_ID = T.TRIFID

WHERE NOT EXISTS
(
SELECT * FROM App_FI_TRIFID_Delete D
WHERE D.TRIFID_ID_FK = T.TRIFID_ID
AND D.TRI_SUB_ID = S.TRI_SUB_ID
)

AND T.INACTIVE_DT IS NULL

/*
AND
S.INSERTED_DATE =
 (
 SELECT MAX(S2.INSERTED_DATE)
 FROM TRI_SUB S2
 JOIN TRI_FAC F2 ON F2.FK_GUID = S2.PK_GUID
 JOIN TRI_REPORT R2 ON R2.FK_GUID = S2.PK_GUID
 JOIN TRI_CHEM C2 ON C2.FK_GUID = R2.PK_GUID
 WHERE
  F2.FAC_ID = F.FAC_ID
  AND
  R2.SUB_REP_YEAR = R.SUB_REP_YEAR
  AND
  C2.CHEM_TXT = C.CHEM_TXT
 )
*/
/

CREATE FORCE VIEW "V_FAC_FACILITY_DATA" ( "TRIFID", "FAC_NAME", "ADDRESS1", "ADDRESS2", "CITY", "USPS", "ZIP", "INSERTED_DATE" )
AS
SELECT 
   UPPER(F.FAC_ID) AS TRIFID
  , UPPER(COALESCE(CASE WHEN (T .AgencyName = '' OR T .AgencyName IS NULL) THEN F.FAC_SITE ELSE T .AgencyName END, '')) AS FAC_NAME
  , REPLACE(UPPER(COALESCE (F.LOC_ADD_TXT, '')) || ', ' || UPPER(COALESCE (F.SUPP_LOC_TXT, ''))
   || ', ' || UPPER(COALESCE (F.LOCALITY, '')) || ', ' || UPPER(COALESCE (F.STATE, '')) || ' '
   || UPPER(COALESCE (F.ADD_POSTAL_CODE, '')), ', , ', ', ') AS ADDRESS1
  , UPPER(COALESCE (F.COUNTY, '')) AS ADDRESS2
  , UPPER(COALESCE (F.LOCALITY, '')) AS CITY
  , UPPER(COALESCE (F.STATE, '')) AS USPS
  , UPPER(COALESCE (F.ADD_POSTAL_CODE, '')) AS ZIP
  , S.INSERTED_DATE

FROM  TRI_FAC F
      INNER JOIN TRI_SUB S ON S.PK_GUID = F.FK_GUID
      INNER JOIN APP_FI_TRIFID T ON F.FAC_ID = T.TRIFID
WHERE NOT EXISTS
  (
  SELECT * FROM APP_FI_TRIFID_DELETE D
  WHERE D.TRIFID_ID_FK = T.TRIFID_ID
  AND D.TRI_SUB_ID = S.TRI_SUB_ID
  )
AND T.INACTIVE_DT IS NULL 
/

CREATE FORCE VIEW "V_FAC_IDENT" ( "TRIFID", "FS_ID", "EPA_ID", "COMMENT_DS", "INACTIVE_DT" )
AS
SELECT 
/*******************************************************************************
Full Name:          V_FacilityIdentification
Condensed Name:     V_FAC_IDENT
Author:             TK Conrad
Create date:        2007-05-18
Description:        Presents the linkage between TRIFIDs, F/S IDs, and EPA IDs 
                    in a flattened view structure to be used by other views and 
                    processes.
Conversion Author:  Suresh Sikharam
Conversion Date:    03-03-2008
*******************************************************************************/

       T.TRIFID AS TRIFID
       ,T.AgencyID AS FS_ID
       ,T.EPAID AS EPA_ID
        /*
        ,MAX(CASE WHEN AT.Agency_Type_CD = 'FS' THEN LTA.Agency_ID ELSE '' END) AS FS_ID
        ,MAX(CASE WHEN AT.Agency_Type_CD = 'EPA' THEN LTA.Agency_ID ELSE '' END) AS EPA_ID
        */
       ,TC.Comment_DS
       ,T.Inactive_DT

  FROM App_FI_TRIFID T
  LEFT JOIN App_FI_TRIFID_Comment TC ON T.TRIFID_ID = TC.TRIFID_ID_FK
        /*
        LEFT JOIN App_FI_LinkTRIFID_Agency LTA ON T.TRIFID_ID = LTA.TRIFID_ID_FK
        LEFT JOIN App_FI_AgencyType AT ON AT.Agency_Type_ID = LTA.Agency_Type_FK
        */
        /*
        LEFT JOIN App_FI_LinkTRIFID_AltAgency LTALT
          JOIN App_FI_AgencyType ATALT ON ATALT.Agency_Type_ID = LTALT.Agency_Type_FK
        ON LTA.Link_TRIFID_Agency_ID = LTALT.Link_TRIFID_Agency_FK
        */
        /*
        GROUP BY
        T.TRIFID
        ,TC.Comment_DS
        ,T.Inactive_DT
        */ 
/

CREATE FORCE VIEW "V_FAC_REPORT_DATA" ( "TRIFID", "SUB_REP_YEAR", "INSERTED_DATE", "REPORT_YEAR", "REPORT_SUB_METH", "REPORT_EPA_STATUS", "SUB_ID", "REPORT_CHEM_NUM", "REPORT_TYPE_CODE" )
AS
SELECT
 F.FAC_ID AS TRIFID
, R.SUB_REP_YEAR
, '' AS INSERTED_DATE
, COALESCE (R.SUB_REP_YEAR, '') AS REPORT_YEAR
, TRI_CALC_SUB_METHOD(S.TRI_SUB_ID) AS REPORT_SUB_METH
--, UPPER(COALESCE (R.REPORT_SUB_METH_CODE, '')) AS REPORT_SUB_METH
, UPPER(COALESCE (TRI_CONV_EPA_PRCSSTATCD_DESC(R.REPORT_EPA_PROCESSING_STATUS_C), '')) AS REPORT_EPA_STATUS
, S.PK_GUID AS SUB_ID
, COUNT(*) AS REPORT_CHEM_NUM
, '' AS REPORT_TYPE_CODE

FROM TRI_SUB S
JOIN TRI_FAC F ON F.FK_GUID = S.PK_GUID
JOIN TRI_REPORT R ON R.FK_GUID = S.PK_GUID
JOIN TRI_CHEM C ON C.FK_GUID = R.PK_GUID
JOIN APP_FI_TRIFID T ON T.TRIFID = F.FAC_ID

WHERE NOT EXISTS
  (
  SELECT * FROM APP_FI_TRIFID_DELETE D
  WHERE D.TRIFID_ID_FK = T.TRIFID_ID
  AND D.TRI_SUB_ID = S.TRI_SUB_ID
  )

AND T.INACTIVE_DT IS NULL

GROUP BY
 F.FAC_ID
, R.SUB_REP_YEAR
--, R.REPORT_SUB_METH_CODE
, R.REPORT_EPA_PROCESSING_STATUS_C
, S.PK_GUID
, S.TRI_SUB_ID 
/

CREATE FORCE VIEW "V_FORM_A_PG_1" ( "PK_GUID_SUB", "PK_GUID_REP", "FAC_ID", "A0", "A0REVCD1", "A0REVCD2", "A0WITHDCD1", "A0WITHDCD2", "A1", "A21", "A22", "A31", "A33", "A41TRI_ID", "A41NAME", "A41STREET", "A41_CITYSTATE", "A41MAIL_NAME", "A41MAIL_STREET", "A41MAILCITYSTATE", "A41MAILCOUNTRY", "A42C", "A42D", "A43NAME", "A43EMAIL", "A43TEL", "A44NAME", "A44TEL", "A44EMAIL", "A45A", "A45B", "A45C", "A45D", "A45E", "A45F", "A47A", "A47B", "A51", "A52" )
AS
SELECT DISTINCT
       S.PK_GUID AS PK_GUID_SUB,
       R.PK_GUID AS PK_GUID_REP,
       UPPER(F.FAC_ID) FAC_ID,
       R.REVISION_IND A0,
       R.CHEM_RPT_REV_CD_1 A0REVCD1,
       R.CHEM_RPT_REV_CD_2 A0REVCD2,
       R.CHEM_RPT_WD_CD_1 A0WITHDCD1,
       R.CHEM_RPT_WD_CD_2 A0WITHDCD2,
       R.SUB_REP_YEAR A1,
       R.CHEM_TRADE_SECRET_IND A21,
       CASE R.CHEM_TRADE_SECRET_IND
            WHEN 'Y' THEN R.SUB_SANITIZED_IND
            ELSE NULL
       END A22,
       R.CERTIFIER || ' ' || R.CERTIFIER_TIT_TXT AS A31,
       R.CERT_SIGNED_DATE A33,
       UPPER(F.FAC_ID) A41TRI_ID,
       F.FAC_SITE A41NAME,
       NVL(F.LOC_ADD_TXT,'') || ' ' || NVL(F.SUPP_LOC_TXT,'') A41STREET,
       NVL(F.LOCALITY,'') || '/' || NVL(F.COUNTY,'') || '/' || NVL(F.STATE,'') || '/' || NVL(F.ADD_POSTAL_CODE,'') A41_CITYSTATE,
       F.MAIL_FAC_SITE A41MAIL_NAME,
       NVL(F.MAIL_ADD_TXT,'') || ' ' || NVL(F.SUPP_MAIL_ADD,'') A41MAIL_STREET,
       NVL(F.MAIL_ADD_CITY,'') || '/' || NVL(F.MAIL_ADD_STATE,'') || '/' || NVL(F.MAIL_ADD_POSTAL_CODE,'') A41MAILCITYSTATE,
       F.MAIL_ADD_COUNTRY A41MAILCOUNTRY,
--       SUB_ENTIRE_FAC_IND R42A,
--       SUB_PARTIAL_FAC_ID R42B,
       R.SUB_FEDERAL_FAC_ID A42C,
       R.SUB_CO_FAC_INDIC A42D,
       R.TECH_CONT A43NAME,
       CASE WHEN R.TECH_CONT_EMAIL_ADDRES = 'NA' THEN 'NA' ELSE LOWER(R.TECH_CONT_EMAIL_ADDRES) END A43EMAIL,
       R.TECH_CONT_PHONE_TXT A43TEL,
       PUB_CONT A44NAME,
       PUB_CONT_PHONE_TXT A44TEL,
       R.PUB_CONT_EMAIL_ADDRES A44EMAIL,
       (SELECT N.FAC_NAICS
          FROM TRI_FAC_NAICS N
         WHERE N.NAICS_PRIMARY_IND = 'Primary'
           AND N.FK_GUID = F.PK_GUID) A45A,
       (SELECT N.FAC_NAICS
          FROM TRI_FAC_NAICS N
         WHERE N.NAICS_PRIMARY_IND <> 'Primary'
           AND FK_GUID = F.PK_GUID
           AND (SELECT COUNT (*)
                  FROM TRI_FAC_NAICS N2
                 WHERE N.FK_GUID = N2.FK_GUID
                   AND N2.PK_GUID <= N.PK_GUID
                   AND N2.NAICS_PRIMARY_IND <> 'Primary') = 1) A45B,
       (SELECT N.FAC_NAICS
          FROM TRI_FAC_NAICS N
         WHERE N.NAICS_PRIMARY_IND <> 'Primary'
           AND FK_GUID = F.PK_GUID
           AND (SELECT COUNT (*)
                  FROM TRI_FAC_NAICS N2
                 WHERE N.FK_GUID = N2.FK_GUID
                   AND N2.PK_GUID <= N.PK_GUID
                   AND N2.NAICS_PRIMARY_IND <> 'Primary') = 2) A45C,
       (SELECT N.FAC_NAICS
          FROM TRI_FAC_NAICS N
         WHERE N.NAICS_PRIMARY_IND <> 'Primary'
           AND FK_GUID = F.PK_GUID
           AND (SELECT COUNT (*)
                  FROM TRI_FAC_NAICS N2
                 WHERE N.FK_GUID = N2.FK_GUID
                   AND N2.PK_GUID <= N.PK_GUID
                   AND N2.NAICS_PRIMARY_IND <> 'Primary') = 3) A45D,
       (SELECT N.FAC_NAICS
          FROM TRI_FAC_NAICS N
         WHERE N.NAICS_PRIMARY_IND <> 'Primary'
           AND FK_GUID = F.PK_GUID
           AND (SELECT COUNT (*)
                  FROM TRI_FAC_NAICS N2
                 WHERE N.FK_GUID = N2.FK_GUID
                   AND N2.PK_GUID <= N.PK_GUID
                   AND N2.NAICS_PRIMARY_IND <> 'Primary') = 4) A45E,
       (SELECT N.FAC_NAICS
          FROM TRI_FAC_NAICS N
         WHERE N.NAICS_PRIMARY_IND <> 'Primary'
           AND FK_GUID = F.PK_GUID
           AND (SELECT COUNT (*)
                  FROM TRI_FAC_NAICS N2
                 WHERE N.FK_GUID = N2.FK_GUID
                   AND N2.PK_GUID <= N.PK_GUID
                   AND N2.NAICS_PRIMARY_IND <> 'Primary') = 5) A45F,
--       LAT_DEGREE_ME R46LATDEG,
--       LAT_MINUTE_ME R46LATMIN,
--       LAT_SECOND_ME R46LATSEC,
--       LON_DEGREE_ME R46LONGDEG,
--       LON_MINUTE_ME R46LONGMIN,
--       LON_SECOND_ME R46LONGSEC,

    (SELECT R47 FROM V_TRI_PG1_47 M WHERE NUM = 1 AND M.PK_GUID = R.PK_GUID) A47A,
    (SELECT R47 FROM V_TRI_PG1_47 M WHERE NUM = 2 AND M.PK_GUID = R.PK_GUID) A47B,

--    (SELECT R48 FROM V_TRI_PG1_48 M WHERE NUM = 1 AND M.PK_GUID = R.PK_GUID) R481,
--    (SELECT R48 FROM V_TRI_PG1_48 M WHERE NUM = 2 AND M.PK_GUID = R.PK_GUID) R482,


--    (SELECT R49 FROM V_TRI_PG1_49 M WHERE NUM = 1 AND M.PK_GUID = R.PK_GUID) R491,
--    (SELECT R49 FROM V_TRI_PG1_49 M WHERE NUM = 2 AND M.PK_GUID = R.PK_GUID) R492,

--    (SELECT R410 FROM V_TRI_PG1_410 M WHERE NUM = 1 AND M.PK_GUID = R.PK_GUID) R4101,
--    (SELECT R410 FROM V_TRI_PG1_410 M WHERE NUM = 2 AND M.PK_GUID = R.PK_GUID) R4102,

       F.PARENT_COMPANY_TXT A51,
       F.PARENT_DUN_CODE A52
  FROM TRI_REPORT R INNER JOIN TRI_SUB S ON R.FK_GUID = S.PK_GUID
       INNER JOIN TRI_FAC F ON F.FK_GUID = S.PK_GUID
       INNER JOIN TRI_CHEM C ON C.FK_GUID = R.PK_GUID 
/

CREATE FORCE VIEW "V_FORM_A_PG_2" ( "PK_GUID_SUB", "PK_GUID_REP", "FAC_ID", "A11", "A12", "A13", "A21", "CHEM_ID" )
AS
SELECT
/*******************************************************************************
Full Name:          V_TRI_FORM_A_PAGE_2
Condensed Name:     V_FORM_A_PG_2
Author:             TK Conrad
Create date:        2007-05-18
Description:        Fills the fields on Form "A", Pages 2..n
Conversion Author:  Suresh Sikharam
Conversion Date:    03-04-2008
*******************************************************************************/
       S.PK_GUID AS PK_GUID_SUB
       ,R.PK_GUID AS PK_GUID_REP
       ,UPPER(FAC_ID) FAC_ID
       ,C.CAS_CLBER A11
       ,C.CHEM_TXT A12
       ,C.CHEM_REGISTRY A13
       ,C.CHEM_MIXTURE_TXT A21
       ,R.PK_GUID AS CHEM_ID
  FROM TRI_REPORT R
  JOIN TRI_SUB S ON R.FK_GUID = S.PK_GUID
  JOIN TRI_FAC F ON F.FK_GUID = S.PK_GUID
  JOIN TRI_CHEM C ON C.FK_GUID = R.PK_GUID 
/

CREATE FORCE VIEW "V_FORM_S1_PG1_53" ( "FK_GUID", "TOX_EQ_VAL1", "TOX_EQ_VAL2", "TOX_EQ_VAL3", "TOX_EQ_VAL4", "TOX_EQ_VAL5", "TOX_EQ_VAL6", "TOX_EQ_VAL7", "TOX_EQ_VAL8", "TOX_EQ_VAL9", "TOX_EQ_VAL10", "TOX_EQ_VAL11", "TOX_EQ_VAL12", "TOX_EQ_VAL13", "TOX_EQ_VAL14", "TOX_EQ_VAL15", "TOX_EQ_VAL16", "TOX_EQ_VAL17", "TOX_EQ_NA_IND", "NUM" )
AS
SELECT   FK_GUID,
  TOX_EQ_VAL1,
  TOX_EQ_VAL2,
  TOX_EQ_VAL3,
  TOX_EQ_VAL4,
  TOX_EQ_VAL5,
  TOX_EQ_VAL6,
  TOX_EQ_VAL7,
  TOX_EQ_VAL8,
  TOX_EQ_VAL9,
  TOX_EQ_VAL10,
  TOX_EQ_VAL11,
  TOX_EQ_VAL12,
  TOX_EQ_VAL13,
  TOX_EQ_VAL14,
  TOX_EQ_VAL15,
  TOX_EQ_VAL16,
  TOX_EQ_VAL17,
  TOX_EQ_NA_IND,
         (SELECT COUNT (*)
            FROM TRI_ONSITE_RELEASE_Q REL2
           WHERE REL2.EI_MEDIUM_CODE = 'WATER'
             AND REL2.FK_GUID = REL.FK_GUID
             AND REL2.PK_GUID <= REL.PK_GUID) NUM
    FROM TRI_ONSITE_RELEASE_Q REL
   WHERE EI_MEDIUM_CODE = 'WATER' 
/

CREATE FORCE VIEW "V_FORM_S1_PG1" ( "PK_GUID_SUB", "PK_GUID_REP", "FAC_ID", "CHEM_TXT", "S151NA", "S151T1", "S151T2", "S151T3", "S151T4", "S151T5", "S151T6", "S151T7", "S151T8", "S151T9", "S151T10", "S151T11", "S151T12", "S151T13", "S151T14", "S151T15", "S151T16", "S151T17", "S152NA", "S152T1", "S152T2", "S152T3", "S152T4", "S152T5", "S152T6", "S152T7", "S152T8", "S152T9", "S152T10", "S152T11", "S152T12", "S152T13", "S152T14", "S152T15", "S152T16", "S152T17", "S1531NA", "S1531T1", "S1531T2", "S1531T3", "S1531T4", "S1531T5", "S1531T6", "S1531T7", "S1531T8", "S1531T9", "S1531T10", "S1531T11", "S1531T12", "S1531T13", "S1531T14", "S1531T15", "S1531T16", "S1531T17", "S1532NA", "S1532T1", "S1532T2", "S1532T3", "S1532T4", "S1532T5", "S1532T6", "S1532T7", "S1532T8", "S1532T9", "S1532T10", "S1532T11", "S1532T12", "S1532T13", "S1532T14", "S1532T15", "S1532T16", "S1532T17", "S1533NA", "S1533T1", "S1533T2", "S1533T3", "S1533T4", "S1533T5", "S1533T6", "S1533T7", "S1533T8", "S1533T9", "S1533T10", "S1533T11", "S1533T12", "S1533T13", "S1533T14", "S1533T15", "S1533T16", "S1533T17" )
AS
SELECT
       S.PK_GUID AS PK_GUID_SUB,
       R.PK_GUID AS PK_GUID_REP,
       FAC_ID,
       CHEM_TXT,

       REL.TOX_EQ_NA_IND S151NA,
       REL.TOX_EQ_VAL1 S151T1,
       REL.TOX_EQ_VAL2 S151T2,
       REL.TOX_EQ_VAL3 S151T3,
       REL.TOX_EQ_VAL4 S151T4,
       REL.TOX_EQ_VAL5 S151T5,
       REL.TOX_EQ_VAL6 S151T6,
       REL.TOX_EQ_VAL7 S151T7,
       REL.TOX_EQ_VAL8 S151T8,
       REL.TOX_EQ_VAL9 S151T9,
       REL.TOX_EQ_VAL10 S151T10,
       REL.TOX_EQ_VAL11 S151T11,
       REL.TOX_EQ_VAL12 S151T12,
       REL.TOX_EQ_VAL13 S151T13,
       REL.TOX_EQ_VAL14 S151T14,
       REL.TOX_EQ_VAL15 S151T15,
       REL.TOX_EQ_VAL16 S151T16,
       REL.TOX_EQ_VAL17 S151T17,

       REL2.TOX_EQ_NA_IND S152NA,
       REL2.TOX_EQ_VAL1 S152T1,
       REL2.TOX_EQ_VAL2 S152T2,
       REL2.TOX_EQ_VAL3 S152T3,
       REL2.TOX_EQ_VAL4 S152T4,
       REL2.TOX_EQ_VAL5 S152T5,
       REL2.TOX_EQ_VAL6 S152T6,
       REL2.TOX_EQ_VAL7 S152T7,
       REL2.TOX_EQ_VAL8 S152T8,
       REL2.TOX_EQ_VAL9 S152T9,
       REL2.TOX_EQ_VAL10 S152T10,
       REL2.TOX_EQ_VAL11 S152T11,
       REL2.TOX_EQ_VAL12 S152T12,
       REL2.TOX_EQ_VAL13 S152T13,
       REL2.TOX_EQ_VAL14 S152T14,
       REL2.TOX_EQ_VAL15 S152T15,
       REL2.TOX_EQ_VAL16 S152T16,
       REL2.TOX_EQ_VAL17 S152T17,

       S1531.TOX_EQ_NA_IND S1531NA,
       S1531.TOX_EQ_VAL1 S1531T1,
       S1531.TOX_EQ_VAL2 S1531T2,
       S1531.TOX_EQ_VAL3 S1531T3,
       S1531.TOX_EQ_VAL4 S1531T4,
       S1531.TOX_EQ_VAL5 S1531T5,
       S1531.TOX_EQ_VAL6 S1531T6,
       S1531.TOX_EQ_VAL7 S1531T7,
       S1531.TOX_EQ_VAL8 S1531T8,
       S1531.TOX_EQ_VAL9 S1531T9,
       S1531.TOX_EQ_VAL10 S1531T10,
       S1531.TOX_EQ_VAL11 S1531T11,
       S1531.TOX_EQ_VAL12 S1531T12,
       S1531.TOX_EQ_VAL13 S1531T13,
       S1531.TOX_EQ_VAL14 S1531T14,
       S1531.TOX_EQ_VAL15 S1531T15,
       S1531.TOX_EQ_VAL16 S1531T16,
       S1531.TOX_EQ_VAL17 S1531T17,

       S1532.TOX_EQ_NA_IND S1532NA,
       S1532.TOX_EQ_VAL1 S1532T1,
       S1532.TOX_EQ_VAL2 S1532T2,
       S1532.TOX_EQ_VAL3 S1532T3,
       S1532.TOX_EQ_VAL4 S1532T4,
       S1532.TOX_EQ_VAL5 S1532T5,
       S1532.TOX_EQ_VAL6 S1532T6,
       S1532.TOX_EQ_VAL7 S1532T7,
       S1532.TOX_EQ_VAL8 S1532T8,
       S1532.TOX_EQ_VAL9 S1532T9,
       S1532.TOX_EQ_VAL10 S1532T10,
       S1532.TOX_EQ_VAL11 S1532T11,
       S1532.TOX_EQ_VAL12 S1532T12,
       S1532.TOX_EQ_VAL13 S1532T13,
       S1532.TOX_EQ_VAL14 S1532T14,
       S1532.TOX_EQ_VAL15 S1532T15,
       S1532.TOX_EQ_VAL16 S1532T16,
       S1532.TOX_EQ_VAL17 S1532T17,

       S1533.TOX_EQ_NA_IND S1533NA,
       S1533.TOX_EQ_VAL1 S1533T1,
       S1533.TOX_EQ_VAL2 S1533T2,
       S1533.TOX_EQ_VAL3 S1533T3,
       S1533.TOX_EQ_VAL4 S1533T4,
       S1533.TOX_EQ_VAL5 S1533T5,
       S1533.TOX_EQ_VAL6 S1533T6,
       S1533.TOX_EQ_VAL7 S1533T7,
       S1533.TOX_EQ_VAL8 S1533T8,
       S1533.TOX_EQ_VAL9 S1533T9,
       S1533.TOX_EQ_VAL10 S1533T10,
       S1533.TOX_EQ_VAL11 S1533T11,
       S1533.TOX_EQ_VAL12 S1533T12,
       S1533.TOX_EQ_VAL13 S1533T13,
       S1533.TOX_EQ_VAL14 S1533T14,
       S1533.TOX_EQ_VAL15 S1533T15,
       S1533.TOX_EQ_VAL16 S1533T16,
       S1533.TOX_EQ_VAL17 S1533T17

  FROM TRI_REPORT R INNER JOIN TRI_SUB S ON R.FK_GUID = S.PK_GUID
       INNER JOIN TRI_FAC F ON F.FK_GUID = S.PK_GUID
       INNER JOIN TRI_CHEM C ON C.FK_GUID = R.PK_GUID
       LEFT OUTER JOIN TRI_ONSITE_RELEASE_Q REL ON REL.FK_GUID = R.PK_GUID
                                              AND REL.EI_MEDIUM_CODE = 'AIR FUG'
       LEFT OUTER JOIN TRI_ONSITE_RELEASE_Q REL2 ON REL2.FK_GUID = R.PK_GUID
                                               AND REL2.EI_MEDIUM_CODE = 'AIR STACK'
       LEFT OUTER JOIN (
      SELECT FK_GUID
         ,TOX_EQ_VAL1
         ,TOX_EQ_VAL2
         ,TOX_EQ_VAL3
         ,TOX_EQ_VAL4
         ,TOX_EQ_VAL5
         ,TOX_EQ_VAL6
         ,TOX_EQ_VAL7
         ,TOX_EQ_VAL8
         ,TOX_EQ_VAL9
         ,TOX_EQ_VAL10
         ,TOX_EQ_VAL11
         ,TOX_EQ_VAL12
         ,TOX_EQ_VAL13
         ,TOX_EQ_VAL14
         ,TOX_EQ_VAL15
         ,TOX_EQ_VAL16
         ,TOX_EQ_VAL17
         ,TOX_EQ_NA_IND
         ,NUM
        FROM V_FORM_S1_PG1_53
      WHERE NUM = 1) S1531 ON S1531.FK_GUID = R.PK_GUID
       LEFT OUTER JOIN (
      SELECT FK_GUID
         ,TOX_EQ_VAL1
         ,TOX_EQ_VAL2
         ,TOX_EQ_VAL3
         ,TOX_EQ_VAL4
         ,TOX_EQ_VAL5
         ,TOX_EQ_VAL6
         ,TOX_EQ_VAL7
         ,TOX_EQ_VAL8
         ,TOX_EQ_VAL9
         ,TOX_EQ_VAL10
         ,TOX_EQ_VAL11
         ,TOX_EQ_VAL12
         ,TOX_EQ_VAL13
         ,TOX_EQ_VAL14
         ,TOX_EQ_VAL15
         ,TOX_EQ_VAL16
         ,TOX_EQ_VAL17
         ,TOX_EQ_NA_IND
         ,NUM
        FROM V_FORM_S1_PG1_53
      WHERE NUM = 2) S1532 ON S1532.FK_GUID = R.PK_GUID
       LEFT OUTER JOIN (
      SELECT FK_GUID
         ,TOX_EQ_VAL1
         ,TOX_EQ_VAL2
         ,TOX_EQ_VAL3
         ,TOX_EQ_VAL4
         ,TOX_EQ_VAL5
         ,TOX_EQ_VAL6
         ,TOX_EQ_VAL7
         ,TOX_EQ_VAL8
         ,TOX_EQ_VAL9
         ,TOX_EQ_VAL10
         ,TOX_EQ_VAL11
         ,TOX_EQ_VAL12
         ,TOX_EQ_VAL13
         ,TOX_EQ_VAL14
         ,TOX_EQ_VAL15
         ,TOX_EQ_VAL16
         ,TOX_EQ_VAL17
         ,TOX_EQ_NA_IND
         ,NUM
        FROM V_FORM_S1_PG1_53
      WHERE NUM = 3) S1533 ON S1533.FK_GUID = R.PK_GUID 
/

CREATE FORCE VIEW "V_FORM_S1_PG2" ( "PK_GUID_SUB", "PK_GUID_REP", "FAC_ID", "CHEM_TXT", "S1541NA", "S1541T1", "S1541T2", "S1541T3", "S1541T4", "S1541T5", "S1541T6", "S1541T7", "S1541T8", "S1541T9", "S1541T10", "S1541T11", "S1541T12", "S1541T13", "S1541T14", "S1541T15", "S1541T16", "S1541T17", "S1542NA", "S1542T1", "S1542T2", "S1542T3", "S1542T4", "S1542T5", "S1542T6", "S1542T7", "S1542T8", "S1542T9", "S1542T10", "S1542T11", "S1542T12", "S1542T13", "S1542T14", "S1542T15", "S1542T16", "S1542T17", "S1551ANA", "S1551AT1", "S1551AT2", "S1551AT3", "S1551AT4", "S1551AT5", "S1551AT6", "S1551AT7", "S1551AT8", "S1551AT9", "S1551AT10", "S1551AT11", "S1551AT12", "S1551AT13", "S1551AT14", "S1551AT15", "S1551AT16", "S1551AT17", "S1551BNA", "S1551BT1", "S1551BT2", "S1551BT3", "S1551BT4", "S1551BT5", "S1551BT6", "S1551BT7", "S1551BT8", "S1551BT9", "S1551BT10", "S1551BT11", "S1551BT12", "S1551BT13", "S1551BT14", "S1551BT15", "S1551BT16", "S1551BT17", "S1552NA", "S1552T1", "S1552T2", "S1552T3", "S1552T4", "S1552T5", "S1552T6", "S1552T7", "S1552T8", "S1552T9", "S1552T10", "S1552T11", "S1552T12", "S1552T13", "S1552T14", "S1552T15", "S1552T16", "S1552T17", "S1553ANA", "S1553AT1", "S1553AT2", "S1553AT3", "S1553AT4", "S1553AT5", "S1553AT6", "S1553AT7", "S1553AT8", "S1553AT9", "S1553AT10", "S1553AT11", "S1553AT12", "S1553AT13", "S1553AT14", "S1553AT15", "S1553AT16", "S1553AT17", "S1553BNA", "S1553BT1", "S1553BT2", "S1553BT3", "S1553BT4", "S1553BT5", "S1553BT6", "S1553BT7", "S1553BT8", "S1553BT9", "S1553BT10", "S1553BT11", "S1553BT12", "S1553BT13", "S1553BT14", "S1553BT15", "S1553BT16", "S1553BT17", "S1554NA", "S1554T1", "S1554T2", "S1554T3", "S1554T4", "S1554T5", "S1554T6", "S1554T7", "S1554T8", "S1554T9", "S1554T10", "S1554T11", "S1554T12", "S1554T13", "S1554T14", "S1554T15", "S1554T16", "S1554T17" )
AS
SELECT
       S.PK_GUID AS PK_GUID_SUB,
       R.PK_GUID AS PK_GUID_REP,
       F.FAC_ID,
       C.CHEM_TXT,

       S1541.TOX_EQ_NA_IND S1541NA,
       S1541.TOX_EQ_VAL1 S1541T1,
       S1541.TOX_EQ_VAL2 S1541T2,
       S1541.TOX_EQ_VAL3 S1541T3,
       S1541.TOX_EQ_VAL4 S1541T4,
       S1541.TOX_EQ_VAL5 S1541T5,
       S1541.TOX_EQ_VAL6 S1541T6,
       S1541.TOX_EQ_VAL7 S1541T7,
       S1541.TOX_EQ_VAL8 S1541T8,
       S1541.TOX_EQ_VAL9 S1541T9,
       S1541.TOX_EQ_VAL10 S1541T10,
       S1541.TOX_EQ_VAL11 S1541T11,
       S1541.TOX_EQ_VAL12 S1541T12,
       S1541.TOX_EQ_VAL13 S1541T13,
       S1541.TOX_EQ_VAL14 S1541T14,
       S1541.TOX_EQ_VAL15 S1541T15,
       S1541.TOX_EQ_VAL16 S1541T16,
       S1541.TOX_EQ_VAL17 S1541T17,

       S1542.TOX_EQ_NA_IND S1542NA,
       S1542.TOX_EQ_VAL1 S1542T1,
       S1542.TOX_EQ_VAL2 S1542T2,
       S1542.TOX_EQ_VAL3 S1542T3,
       S1542.TOX_EQ_VAL4 S1542T4,
       S1542.TOX_EQ_VAL5 S1542T5,
       S1542.TOX_EQ_VAL6 S1542T6,
       S1542.TOX_EQ_VAL7 S1542T7,
       S1542.TOX_EQ_VAL8 S1542T8,
       S1542.TOX_EQ_VAL9 S1542T9,
       S1542.TOX_EQ_VAL10 S1542T10,
       S1542.TOX_EQ_VAL11 S1542T11,
       S1542.TOX_EQ_VAL12 S1542T12,
       S1542.TOX_EQ_VAL13 S1542T13,
       S1542.TOX_EQ_VAL14 S1542T14,
       S1542.TOX_EQ_VAL15 S1542T15,
       S1542.TOX_EQ_VAL16 S1542T16,
       S1542.TOX_EQ_VAL17 S1542T17,

       S1551A.TOX_EQ_NA_IND S1551ANA,
       S1551A.TOX_EQ_VAL1 S1551AT1,
       S1551A.TOX_EQ_VAL2 S1551AT2,
       S1551A.TOX_EQ_VAL3 S1551AT3,
       S1551A.TOX_EQ_VAL4 S1551AT4,
       S1551A.TOX_EQ_VAL5 S1551AT5,
       S1551A.TOX_EQ_VAL6 S1551AT6,
       S1551A.TOX_EQ_VAL7 S1551AT7,
       S1551A.TOX_EQ_VAL8 S1551AT8,
       S1551A.TOX_EQ_VAL9 S1551AT9,
       S1551A.TOX_EQ_VAL10 S1551AT10,
       S1551A.TOX_EQ_VAL11 S1551AT11,
       S1551A.TOX_EQ_VAL12 S1551AT12,
       S1551A.TOX_EQ_VAL13 S1551AT13,
       S1551A.TOX_EQ_VAL14 S1551AT14,
       S1551A.TOX_EQ_VAL15 S1551AT15,
       S1551A.TOX_EQ_VAL16 S1551AT16,
       S1551A.TOX_EQ_VAL17 S1551AT17,

       S1551B.TOX_EQ_NA_IND S1551BNA,
       S1551B.TOX_EQ_VAL1 S1551BT1,
       S1551B.TOX_EQ_VAL2 S1551BT2,
       S1551B.TOX_EQ_VAL3 S1551BT3,
       S1551B.TOX_EQ_VAL4 S1551BT4,
       S1551B.TOX_EQ_VAL5 S1551BT5,
       S1551B.TOX_EQ_VAL6 S1551BT6,
       S1551B.TOX_EQ_VAL7 S1551BT7,
       S1551B.TOX_EQ_VAL8 S1551BT8,
       S1551B.TOX_EQ_VAL9 S1551BT9,
       S1551B.TOX_EQ_VAL10 S1551BT10,
       S1551B.TOX_EQ_VAL11 S1551BT11,
       S1551B.TOX_EQ_VAL12 S1551BT12,
       S1551B.TOX_EQ_VAL13 S1551BT13,
       S1551B.TOX_EQ_VAL14 S1551BT14,
       S1551B.TOX_EQ_VAL15 S1551BT15,
       S1551B.TOX_EQ_VAL16 S1551BT16,
       S1551B.TOX_EQ_VAL17 S1551BT17,

       S1552.TOX_EQ_NA_IND S1552NA,
       S1552.TOX_EQ_VAL1 S1552T1,
       S1552.TOX_EQ_VAL2 S1552T2,
       S1552.TOX_EQ_VAL3 S1552T3,
       S1552.TOX_EQ_VAL4 S1552T4,
       S1552.TOX_EQ_VAL5 S1552T5,
       S1552.TOX_EQ_VAL6 S1552T6,
       S1552.TOX_EQ_VAL7 S1552T7,
       S1552.TOX_EQ_VAL8 S1552T8,
       S1552.TOX_EQ_VAL9 S1552T9,
       S1552.TOX_EQ_VAL10 S1552T10,
       S1552.TOX_EQ_VAL11 S1552T11,
       S1552.TOX_EQ_VAL12 S1552T12,
       S1552.TOX_EQ_VAL13 S1552T13,
       S1552.TOX_EQ_VAL14 S1552T14,
       S1552.TOX_EQ_VAL15 S1552T15,
       S1552.TOX_EQ_VAL16 S1552T16,
       S1552.TOX_EQ_VAL17 S1552T17,

       S1553A.TOX_EQ_NA_IND S1553ANA,
       S1553A.TOX_EQ_VAL1 S1553AT1,
       S1553A.TOX_EQ_VAL2 S1553AT2,
       S1553A.TOX_EQ_VAL3 S1553AT3,
       S1553A.TOX_EQ_VAL4 S1553AT4,
       S1553A.TOX_EQ_VAL5 S1553AT5,
       S1553A.TOX_EQ_VAL6 S1553AT6,
       S1553A.TOX_EQ_VAL7 S1553AT7,
       S1553A.TOX_EQ_VAL8 S1553AT8,
       S1553A.TOX_EQ_VAL9 S1553AT9,
       S1553A.TOX_EQ_VAL10 S1553AT10,
       S1553A.TOX_EQ_VAL11 S1553AT11,
       S1553A.TOX_EQ_VAL12 S1553AT12,
       S1553A.TOX_EQ_VAL13 S1553AT13,
       S1553A.TOX_EQ_VAL14 S1553AT14,
       S1553A.TOX_EQ_VAL15 S1553AT15,
       S1553A.TOX_EQ_VAL16 S1553AT16,
       S1553A.TOX_EQ_VAL17 S1553AT17,

       S1553B.TOX_EQ_NA_IND S1553BNA,
       S1553B.TOX_EQ_VAL1 S1553BT1,
       S1553B.TOX_EQ_VAL2 S1553BT2,
       S1553B.TOX_EQ_VAL3 S1553BT3,
       S1553B.TOX_EQ_VAL4 S1553BT4,
       S1553B.TOX_EQ_VAL5 S1553BT5,
       S1553B.TOX_EQ_VAL6 S1553BT6,
       S1553B.TOX_EQ_VAL7 S1553BT7,
       S1553B.TOX_EQ_VAL8 S1553BT8,
       S1553B.TOX_EQ_VAL9 S1553BT9,
       S1553B.TOX_EQ_VAL10 S1553BT10,
       S1553B.TOX_EQ_VAL11 S1553BT11,
       S1553B.TOX_EQ_VAL12 S1553BT12,
       S1553B.TOX_EQ_VAL13 S1553BT13,
       S1553B.TOX_EQ_VAL14 S1553BT14,
       S1553B.TOX_EQ_VAL15 S1553BT15,
       S1553B.TOX_EQ_VAL16 S1553BT16,
       S1553B.TOX_EQ_VAL17 S1553BT17,

       S1554.TOX_EQ_NA_IND S1554NA,
       S1554.TOX_EQ_VAL1 S1554T1,
       S1554.TOX_EQ_VAL2 S1554T2,
       S1554.TOX_EQ_VAL3 S1554T3,
       S1554.TOX_EQ_VAL4 S1554T4,
       S1554.TOX_EQ_VAL5 S1554T5,
       S1554.TOX_EQ_VAL6 S1554T6,
       S1554.TOX_EQ_VAL7 S1554T7,
       S1554.TOX_EQ_VAL8 S1554T8,
       S1554.TOX_EQ_VAL9 S1554T9,
       S1554.TOX_EQ_VAL10 S1554T10,
       S1554.TOX_EQ_VAL11 S1554T11,
       S1554.TOX_EQ_VAL12 S1554T12,
       S1554.TOX_EQ_VAL13 S1554T13,
       S1554.TOX_EQ_VAL14 S1554T14,
       S1554.TOX_EQ_VAL15 S1554T15,
       S1554.TOX_EQ_VAL16 S1554T16,
       S1554.TOX_EQ_VAL17 S1554T17

  FROM TRI_REPORT R INNER JOIN TRI_SUB S ON R.FK_GUID = S.PK_GUID
       INNER JOIN TRI_FAC F ON F.FK_GUID = S.PK_GUID
       INNER JOIN TRI_CHEM C ON C.FK_GUID = R.PK_GUID

       LEFT OUTER JOIN TRI_ONSITE_RELEASE_Q S1541 ON S1541.FK_GUID = R.PK_GUID
                                               AND S1541.EI_MEDIUM_CODE = 'UNINJ I'
       LEFT OUTER JOIN TRI_ONSITE_RELEASE_Q S1542 ON S1542.FK_GUID = R.PK_GUID
                                               AND S1542.EI_MEDIUM_CODE = 'UNINJ IIV'
       LEFT OUTER JOIN TRI_ONSITE_RELEASE_Q S1551A ON S1551A.FK_GUID = R.PK_GUID
                                               AND S1551A.EI_MEDIUM_CODE = 'RCRA C'
       LEFT OUTER JOIN TRI_ONSITE_RELEASE_Q S1551B ON S1551B.FK_GUID = R.PK_GUID
                                               AND S1551B.EI_MEDIUM_CODE = 'OTH LANDF'
       LEFT OUTER JOIN TRI_ONSITE_RELEASE_Q S1552 ON S1552.FK_GUID = R.PK_GUID
                                               AND S1552.EI_MEDIUM_CODE = 'LAND TREA'
       LEFT OUTER JOIN TRI_ONSITE_RELEASE_Q S1553A ON S1553A.FK_GUID = R.PK_GUID
                                               AND S1553A.EI_MEDIUM_CODE = 'SI 5.5.3A'
       LEFT OUTER JOIN TRI_ONSITE_RELEASE_Q S1553B ON S1553B.FK_GUID = R.PK_GUID
                                               AND S1553B.EI_MEDIUM_CODE = 'SI 5.5.3B'
       LEFT OUTER JOIN TRI_ONSITE_RELEASE_Q S1554 ON S1554.FK_GUID = R.PK_GUID
                                               AND S1554.EI_MEDIUM_CODE = 'OTH DISP' 
/

CREATE FORCE VIEW "V_FORM_S1_PG3_62" ( "PK_GUID", "LOC_NUM", "TRANSFER_LOC_SEQ_CL", "TOX_EQ_VAL1", "TOX_EQ_VAL2", "TOX_EQ_VAL3", "TOX_EQ_VAL4", "TOX_EQ_VAL5", "TOX_EQ_VAL6", "TOX_EQ_VAL7", "TOX_EQ_VAL8", "TOX_EQ_VAL9", "TOX_EQ_VAL10", "TOX_EQ_VAL11", "TOX_EQ_VAL12", "TOX_EQ_VAL13", "TOX_EQ_VAL14", "TOX_EQ_VAL15", "TOX_EQ_VAL16", "TOX_EQ_VAL17", "TOX_EQ_NA_IND", "NUM" )
AS
SELECT
       R.PK_GUID
      ,
  (
  SELECT COUNT(*)
  FROM TRI_TRANSFER_LOC T2
  WHERE T2.FK_GUID = T.FK_GUID
  AND T2.POTW_IND = 'N'
  AND T2.TRANSFER_LOC_SEQ_CL <= T.TRANSFER_LOC_SEQ_CL
  ) LOC_NUM
      ,T.TRANSFER_LOC_SEQ_CL
      ,TOX_EQ_VAL1
      ,TOX_EQ_VAL2
      ,TOX_EQ_VAL3
      ,TOX_EQ_VAL4
      ,TOX_EQ_VAL5
      ,TOX_EQ_VAL6
      ,TOX_EQ_VAL7
      ,TOX_EQ_VAL8
      ,TOX_EQ_VAL9
      ,TOX_EQ_VAL10
      ,TOX_EQ_VAL11
      ,TOX_EQ_VAL12
      ,TOX_EQ_VAL13
      ,TOX_EQ_VAL14
      ,TOX_EQ_VAL15
      ,TOX_EQ_VAL16
      ,TOX_EQ_VAL17
      ,TOX_EQ_NA_IND
,
       (SELECT COUNT (*)
          FROM TRI_TRANSFER_Q TQ2
         WHERE TQ2.FK_GUID = TQ.FK_GUID
           AND TQ2.PK_GUID <= TQ.PK_GUID) NUM
FROM TRI_REPORT R 
LEFT OUTER JOIN TRI_TRANSFER_LOC T ON T.FK_GUID = R.PK_GUID
LEFT OUTER JOIN TRI_TRANSFER_Q TQ ON TQ.FK_GUID = T.PK_GUID
WHERE POTW_IND = 'N' 
/

CREATE FORCE VIEW "V_FORM_S1_PG3" ( "PK_GUID_SUB", "PK_GUID_REP", "FAC_ID", "CHEM_TXT", "S161A3NA", "S161A3T1", "S161A3T2", "S161A3T3", "S161A3T4", "S161A3T5", "S161A3T6", "S161A3T7", "S161A3T8", "S161A3T9", "S161A3T10", "S161A3T11", "S161A3T12", "S161A3T13", "S161A3T14", "S161A3T15", "S161A3T16", "S161A3T17", "S1621_TRANS_LOC_SEQ", "S1621N1NA", "S1621N1T1", "S1621N1T2", "S1621N1T3", "S1621N1T4", "S1621N1T5", "S1621N1T6", "S1621N1T7", "S1621N1T8", "S1621N1T9", "S1621N1T10", "S1621N1T11", "S1621N1T12", "S1621N1T13", "S1621N1T14", "S1621N1T15", "S1621N1T16", "S1621N1T17", "S1621N2NA", "S1621N2T1", "S1621N2T2", "S1621N2T3", "S1621N2T4", "S1621N2T5", "S1621N2T6", "S1621N2T7", "S1621N2T8", "S1621N2T9", "S1621N2T10", "S1621N2T11", "S1621N2T12", "S1621N2T13", "S1621N2T14", "S1621N2T15", "S1621N2T16", "S1621N2T17", "S1621N3NA", "S1621N3T1", "S1621N3T2", "S1621N3T3", "S1621N3T4", "S1621N3T5", "S1621N3T6", "S1621N3T7", "S1621N3T8", "S1621N3T9", "S1621N3T10", "S1621N3T11", "S1621N3T12", "S1621N3T13", "S1621N3T14", "S1621N3T15", "S1621N3T16", "S1621N3T17", "S1621N4NA", "S1621N4T1", "S1621N4T2", "S1621N4T3", "S1621N4T4", "S1621N4T5", "S1621N4T6", "S1621N4T7", "S1621N4T8", "S1621N4T9", "S1621N4T10", "S1621N4T11", "S1621N4T12", "S1621N4T13", "S1621N4T14", "S1621N4T15", "S1621N4T16", "S1621N4T17", "S1622_TRANS_LOC_SEQ", "S1622N1NA", "S1622N1T1", "S1622N1T2", "S1622N1T3", "S1622N1T4", "S1622N1T5", "S1622N1T6", "S1622N1T7", "S1622N1T8", "S1622N1T9", "S1622N1T10", "S1622N1T11", "S1622N1T12", "S1622N1T13", "S1622N1T14", "S1622N1T15", "S1622N1T16", "S1622N1T17", "S1622N2NA", "S1622N2T1", "S1622N2T2", "S1622N2T3", "S1622N2T4", "S1622N2T5", "S1622N2T6", "S1622N2T7", "S1622N2T8", "S1622N2T9", "S1622N2T10", "S1622N2T11", "S1622N2T12", "S1622N2T13", "S1622N2T14", "S1622N2T15", "S1622N2T16", "S1622N2T17", "S1622N3NA", "S1622N3T1", "S1622N3T2", "S1622N3T3", "S1622N3T4", "S1622N3T5", "S1622N3T6", "S1622N3T7", "S1622N3T8", "S1622N3T9", "S1622N3T10", "S1622N3T11", "S1622N3T12", "S1622N3T13", "S1622N3T14", "S1622N3T15", "S1622N3T16", "S1622N3T17", "S1622N4NA", "S1622N4T1", "S1622N4T2", "S1622N4T3", "S1622N4T4", "S1622N4T5", "S1622N4T6", "S1622N4T7", "S1622N4T8", "S1622N4T9", "S1622N4T10", "S1622N4T11", "S1622N4T12", "S1622N4T13", "S1622N4T14", "S1622N4T15", "S1622N4T16", "S1622N4T17" )
AS
SELECT
       S.PK_GUID AS PK_GUID_SUB,
       R.PK_GUID AS PK_GUID_REP,
       F.FAC_ID,
       C.CHEM_TXT,

       R.TOX_EQ_NA_IND_POTW S161A3NA,
       R.TOX_EQ_VAL1_POTW S161A3T1,
       R.TOX_EQ_VAL2_POTW S161A3T2,
       R.TOX_EQ_VAL3_POTW S161A3T3,
       R.TOX_EQ_VAL4_POTW S161A3T4,
       R.TOX_EQ_VAL5_POTW S161A3T5,
       R.TOX_EQ_VAL6_POTW S161A3T6,
       R.TOX_EQ_VAL7_POTW S161A3T7,
       R.TOX_EQ_VAL8_POTW S161A3T8,
       R.TOX_EQ_VAL9_POTW S161A3T9,
       R.TOX_EQ_VAL10_POTW S161A3T10,
       R.TOX_EQ_VAL11_POTW S161A3T11,
       R.TOX_EQ_VAL12_POTW S161A3T12,
       R.TOX_EQ_VAL13_POTW S161A3T13,
       R.TOX_EQ_VAL14_POTW S161A3T14,
       R.TOX_EQ_VAL15_POTW S161A3T15,
       R.TOX_EQ_VAL16_POTW S161A3T16,
       R.TOX_EQ_VAL17_POTW S161A3T17,

       S1621N1.TRANSFER_LOC_SEQ_CL S1621_TRANS_LOC_SEQ,

       S1621N1.TOX_EQ_NA_IND S1621N1NA,
       S1621N1.TOX_EQ_VAL1 S1621N1T1,
       S1621N1.TOX_EQ_VAL2 S1621N1T2,
       S1621N1.TOX_EQ_VAL3 S1621N1T3,
       S1621N1.TOX_EQ_VAL4 S1621N1T4,
       S1621N1.TOX_EQ_VAL5 S1621N1T5,
       S1621N1.TOX_EQ_VAL6 S1621N1T6,
       S1621N1.TOX_EQ_VAL7 S1621N1T7,
       S1621N1.TOX_EQ_VAL8 S1621N1T8,
       S1621N1.TOX_EQ_VAL9 S1621N1T9,
       S1621N1.TOX_EQ_VAL10 S1621N1T10,
       S1621N1.TOX_EQ_VAL11 S1621N1T11,
       S1621N1.TOX_EQ_VAL12 S1621N1T12,
       S1621N1.TOX_EQ_VAL13 S1621N1T13,
       S1621N1.TOX_EQ_VAL14 S1621N1T14,
       S1621N1.TOX_EQ_VAL15 S1621N1T15,
       S1621N1.TOX_EQ_VAL16 S1621N1T16,
       S1621N1.TOX_EQ_VAL17 S1621N1T17,

       S1621N2.TOX_EQ_NA_IND S1621N2NA,
       S1621N2.TOX_EQ_VAL1 S1621N2T1,
       S1621N2.TOX_EQ_VAL2 S1621N2T2,
       S1621N2.TOX_EQ_VAL3 S1621N2T3,
       S1621N2.TOX_EQ_VAL4 S1621N2T4,
       S1621N2.TOX_EQ_VAL5 S1621N2T5,
       S1621N2.TOX_EQ_VAL6 S1621N2T6,
       S1621N2.TOX_EQ_VAL7 S1621N2T7,
       S1621N2.TOX_EQ_VAL8 S1621N2T8,
       S1621N2.TOX_EQ_VAL9 S1621N2T9,
       S1621N2.TOX_EQ_VAL10 S1621N2T10,
       S1621N2.TOX_EQ_VAL11 S1621N2T11,
       S1621N2.TOX_EQ_VAL12 S1621N2T12,
       S1621N2.TOX_EQ_VAL13 S1621N2T13,
       S1621N2.TOX_EQ_VAL14 S1621N2T14,
       S1621N2.TOX_EQ_VAL15 S1621N2T15,
       S1621N2.TOX_EQ_VAL16 S1621N2T16,
       S1621N2.TOX_EQ_VAL17 S1621N2T17,

       S1621N3.TOX_EQ_NA_IND S1621N3NA,
       S1621N3.TOX_EQ_VAL1 S1621N3T1,
       S1621N3.TOX_EQ_VAL2 S1621N3T2,
       S1621N3.TOX_EQ_VAL3 S1621N3T3,
       S1621N3.TOX_EQ_VAL4 S1621N3T4,
       S1621N3.TOX_EQ_VAL5 S1621N3T5,
       S1621N3.TOX_EQ_VAL6 S1621N3T6,
       S1621N3.TOX_EQ_VAL7 S1621N3T7,
       S1621N3.TOX_EQ_VAL8 S1621N3T8,
       S1621N3.TOX_EQ_VAL9 S1621N3T9,
       S1621N3.TOX_EQ_VAL10 S1621N3T10,
       S1621N3.TOX_EQ_VAL11 S1621N3T11,
       S1621N3.TOX_EQ_VAL12 S1621N3T12,
       S1621N3.TOX_EQ_VAL13 S1621N3T13,
       S1621N3.TOX_EQ_VAL14 S1621N3T14,
       S1621N3.TOX_EQ_VAL15 S1621N3T15,
       S1621N3.TOX_EQ_VAL16 S1621N3T16,
       S1621N3.TOX_EQ_VAL17 S1621N3T17,

       S1621N4.TOX_EQ_NA_IND S1621N4NA,
       S1621N4.TOX_EQ_VAL1 S1621N4T1,
       S1621N4.TOX_EQ_VAL2 S1621N4T2,
       S1621N4.TOX_EQ_VAL3 S1621N4T3,
       S1621N4.TOX_EQ_VAL4 S1621N4T4,
       S1621N4.TOX_EQ_VAL5 S1621N4T5,
       S1621N4.TOX_EQ_VAL6 S1621N4T6,
       S1621N4.TOX_EQ_VAL7 S1621N4T7,
       S1621N4.TOX_EQ_VAL8 S1621N4T8,
       S1621N4.TOX_EQ_VAL9 S1621N4T9,
       S1621N4.TOX_EQ_VAL10 S1621N4T10,
       S1621N4.TOX_EQ_VAL11 S1621N4T11,
       S1621N4.TOX_EQ_VAL12 S1621N4T12,
       S1621N4.TOX_EQ_VAL13 S1621N4T13,
       S1621N4.TOX_EQ_VAL14 S1621N4T14,
       S1621N4.TOX_EQ_VAL15 S1621N4T15,
       S1621N4.TOX_EQ_VAL16 S1621N4T16,
       S1621N4.TOX_EQ_VAL17 S1621N4T17,

       S1622N1.TRANSFER_LOC_SEQ_CL S1622_TRANS_LOC_SEQ,

       S1622N1.TOX_EQ_NA_IND S1622N1NA,
       S1622N1.TOX_EQ_VAL1 S1622N1T1,
       S1622N1.TOX_EQ_VAL2 S1622N1T2,
       S1622N1.TOX_EQ_VAL3 S1622N1T3,
       S1622N1.TOX_EQ_VAL4 S1622N1T4,
       S1622N1.TOX_EQ_VAL5 S1622N1T5,
       S1622N1.TOX_EQ_VAL6 S1622N1T6,
       S1622N1.TOX_EQ_VAL7 S1622N1T7,
       S1622N1.TOX_EQ_VAL8 S1622N1T8,
       S1622N1.TOX_EQ_VAL9 S1622N1T9,
       S1622N1.TOX_EQ_VAL10 S1622N1T10,
       S1622N1.TOX_EQ_VAL11 S1622N1T11,
       S1622N1.TOX_EQ_VAL12 S1622N1T12,
       S1622N1.TOX_EQ_VAL13 S1622N1T13,
       S1622N1.TOX_EQ_VAL14 S1622N1T14,
       S1622N1.TOX_EQ_VAL15 S1622N1T15,
       S1622N1.TOX_EQ_VAL16 S1622N1T16,
       S1622N1.TOX_EQ_VAL17 S1622N1T17,

       S1622N2.TOX_EQ_NA_IND S1622N2NA,
       S1622N2.TOX_EQ_VAL1 S1622N2T1,
       S1622N2.TOX_EQ_VAL2 S1622N2T2,
       S1622N2.TOX_EQ_VAL3 S1622N2T3,
       S1622N2.TOX_EQ_VAL4 S1622N2T4,
       S1622N2.TOX_EQ_VAL5 S1622N2T5,
       S1622N2.TOX_EQ_VAL6 S1622N2T6,
       S1622N2.TOX_EQ_VAL7 S1622N2T7,
       S1622N2.TOX_EQ_VAL8 S1622N2T8,
       S1622N2.TOX_EQ_VAL9 S1622N2T9,
       S1622N2.TOX_EQ_VAL10 S1622N2T10,
       S1622N2.TOX_EQ_VAL11 S1622N2T11,
       S1622N2.TOX_EQ_VAL12 S1622N2T12,
       S1622N2.TOX_EQ_VAL13 S1622N2T13,
       S1622N2.TOX_EQ_VAL14 S1622N2T14,
       S1622N2.TOX_EQ_VAL15 S1622N2T15,
       S1622N2.TOX_EQ_VAL16 S1622N2T16,
       S1622N2.TOX_EQ_VAL17 S1622N2T17,

       S1622N3.TOX_EQ_NA_IND S1622N3NA,
       S1622N3.TOX_EQ_VAL1 S1622N3T1,
       S1622N3.TOX_EQ_VAL2 S1622N3T2,
       S1622N3.TOX_EQ_VAL3 S1622N3T3,
       S1622N3.TOX_EQ_VAL4 S1622N3T4,
       S1622N3.TOX_EQ_VAL5 S1622N3T5,
       S1622N3.TOX_EQ_VAL6 S1622N3T6,
       S1622N3.TOX_EQ_VAL7 S1622N3T7,
       S1622N3.TOX_EQ_VAL8 S1622N3T8,
       S1622N3.TOX_EQ_VAL9 S1622N3T9,
       S1622N3.TOX_EQ_VAL10 S1622N3T10,
       S1622N3.TOX_EQ_VAL11 S1622N3T11,
       S1622N3.TOX_EQ_VAL12 S1622N3T12,
       S1622N3.TOX_EQ_VAL13 S1622N3T13,
       S1622N3.TOX_EQ_VAL14 S1622N3T14,
       S1622N3.TOX_EQ_VAL15 S1622N3T15,
       S1622N3.TOX_EQ_VAL16 S1622N3T16,
       S1622N3.TOX_EQ_VAL17 S1622N3T17,

       S1622N4.TOX_EQ_NA_IND S1622N4NA,
       S1622N4.TOX_EQ_VAL1 S1622N4T1,
       S1622N4.TOX_EQ_VAL2 S1622N4T2,
       S1622N4.TOX_EQ_VAL3 S1622N4T3,
       S1622N4.TOX_EQ_VAL4 S1622N4T4,
       S1622N4.TOX_EQ_VAL5 S1622N4T5,
       S1622N4.TOX_EQ_VAL6 S1622N4T6,
       S1622N4.TOX_EQ_VAL7 S1622N4T7,
       S1622N4.TOX_EQ_VAL8 S1622N4T8,
       S1622N4.TOX_EQ_VAL9 S1622N4T9,
       S1622N4.TOX_EQ_VAL10 S1622N4T10,
       S1622N4.TOX_EQ_VAL11 S1622N4T11,
       S1622N4.TOX_EQ_VAL12 S1622N4T12,
       S1622N4.TOX_EQ_VAL13 S1622N4T13,
       S1622N4.TOX_EQ_VAL14 S1622N4T14,
       S1622N4.TOX_EQ_VAL15 S1622N4T15,
       S1622N4.TOX_EQ_VAL16 S1622N4T16,
       S1622N4.TOX_EQ_VAL17 S1622N4T17

  FROM TRI_REPORT R INNER JOIN TRI_SUB S ON R.FK_GUID = S.PK_GUID
       INNER JOIN TRI_FAC F ON F.FK_GUID = S.PK_GUID
       INNER JOIN TRI_CHEM C ON C.FK_GUID = R.PK_GUID

       LEFT OUTER JOIN V_FORM_S1_PG3_62 S1621N1 ON
                S1621N1.PK_GUID = R.PK_GUID
           AND  S1621N1.LOC_NUM = 1
           AND  S1621N1.NUM = 1

       LEFT OUTER JOIN V_FORM_S1_PG3_62 S1621N2 ON
                S1621N2.PK_GUID = R.PK_GUID
           AND  S1621N2.LOC_NUM = 1
           AND  S1621N2.NUM = 2

       LEFT OUTER JOIN V_FORM_S1_PG3_62 S1621N3 ON
                S1621N3.PK_GUID = R.PK_GUID
           AND  S1621N3.LOC_NUM = 1
           AND  S1621N3.NUM = 3

       LEFT OUTER JOIN V_FORM_S1_PG3_62 S1621N4 ON
                S1621N4.PK_GUID = R.PK_GUID
           AND  S1621N4.LOC_NUM = 1
           AND  S1621N4.NUM = 4

       LEFT OUTER JOIN V_FORM_S1_PG3_62 S1622N1 ON
                S1622N1.PK_GUID = R.PK_GUID
           AND  S1622N1.LOC_NUM = 2
           AND  S1622N1.NUM = 1

       LEFT OUTER JOIN V_FORM_S1_PG3_62 S1622N2 ON
                S1622N2.PK_GUID = R.PK_GUID
           AND  S1622N2.LOC_NUM = 2
           AND  S1622N2.NUM = 2

       LEFT OUTER JOIN V_FORM_S1_PG3_62 S1622N3 ON
                S1622N3.PK_GUID = R.PK_GUID
           AND  S1622N3.LOC_NUM = 2
           AND  S1622N3.NUM = 3

       LEFT OUTER JOIN V_FORM_S1_PG3_62 S1622N4 ON
                S1622N4.PK_GUID = R.PK_GUID
           AND  S1622N4.LOC_NUM = 2
           AND  S1622N4.NUM = 4 
/

CREATE FORCE VIEW "V_FORM_S1_PG4" ( "PK_GUID_SUB", "PK_GUID_REP", "FAC_ID", "CHEM_TXT", "S181ANA", "S181AT1", "S181AT2", "S181AT3", "S181AT4", "S181AT5", "S181AT6", "S181AT7", "S181AT8", "S181AT9", "S181AT10", "S181AT11", "S181AT12", "S181AT13", "S181AT14", "S181AT15", "S181AT16", "S181AT17", "S181BNA", "S181BT1", "S181BT2", "S181BT3", "S181BT4", "S181BT5", "S181BT6", "S181BT7", "S181BT8", "S181BT9", "S181BT10", "S181BT11", "S181BT12", "S181BT13", "S181BT14", "S181BT15", "S181BT16", "S181BT17", "S181CNA", "S181CT1", "S181CT2", "S181CT3", "S181CT4", "S181CT5", "S181CT6", "S181CT7", "S181CT8", "S181CT9", "S181CT10", "S181CT11", "S181CT12", "S181CT13", "S181CT14", "S181CT15", "S181CT16", "S181CT17", "S181DNA", "S181DT1", "S181DT2", "S181DT3", "S181DT4", "S181DT5", "S181DT6", "S181DT7", "S181DT8", "S181DT9", "S181DT10", "S181DT11", "S181DT12", "S181DT13", "S181DT14", "S181DT15", "S181DT16", "S181DT17", "S182NA", "S182T1", "S182T2", "S182T3", "S182T4", "S182T5", "S182T6", "S182T7", "S182T8", "S182T9", "S182T10", "S182T11", "S182T12", "S182T13", "S182T14", "S182T15", "S182T16", "S182T17", "S183NA", "S183T1", "S183T2", "S183T3", "S183T4", "S183T5", "S183T6", "S183T7", "S183T8", "S183T9", "S183T10", "S183T11", "S183T12", "S183T13", "S183T14", "S183T15", "S183T16", "S183T17", "S184NA", "S184T1", "S184T2", "S184T3", "S184T4", "S184T5", "S184T6", "S184T7", "S184T8", "S184T9", "S184T10", "S184T11", "S184T12", "S184T13", "S184T14", "S184T15", "S184T16", "S184T17", "S185NA", "S185T1", "S185T2", "S185T3", "S185T4", "S185T5", "S185T6", "S185T7", "S185T8", "S185T9", "S185T10", "S185T11", "S185T12", "S185T13", "S185T14", "S185T15", "S185T16", "S185T17", "S186NA", "S186T1", "S186T2", "S186T3", "S186T4", "S186T5", "S186T6", "S186T7", "S186T8", "S186T9", "S186T10", "S186T11", "S186T12", "S186T13", "S186T14", "S186T15", "S186T16", "S186T17", "S187NA", "S187T1", "S187T2", "S187T3", "S187T4", "S187T5", "S187T6", "S187T7", "S187T8", "S187T9", "S187T10", "S187T11", "S187T12", "S187T13", "S187T14", "S187T15", "S187T16", "S187T17", "S188NA", "S188T1", "S188T2", "S188T3", "S188T4", "S188T5", "S188T6", "S188T7", "S188T8", "S188T9", "S188T10", "S188T11", "S188T12", "S188T13", "S188T14", "S188T15", "S188T16", "S188T17" )
AS
SELECT
       S.PK_GUID AS PK_GUID_SUB,
       R.PK_GUID AS PK_GUID_REP,
       F.FAC_ID,
       C.CHEM_TXT,

       S181A.TOX_EQ_NA_IND S181ANA,
       S181A.TOX_EQ_VAL1 S181AT1,
       S181A.TOX_EQ_VAL2 S181AT2,
       S181A.TOX_EQ_VAL3 S181AT3,
       S181A.TOX_EQ_VAL4 S181AT4,
       S181A.TOX_EQ_VAL5 S181AT5,
       S181A.TOX_EQ_VAL6 S181AT6,
       S181A.TOX_EQ_VAL7 S181AT7,
       S181A.TOX_EQ_VAL8 S181AT8,
       S181A.TOX_EQ_VAL9 S181AT9,
       S181A.TOX_EQ_VAL10 S181AT10,
       S181A.TOX_EQ_VAL11 S181AT11,
       S181A.TOX_EQ_VAL12 S181AT12,
       S181A.TOX_EQ_VAL13 S181AT13,
       S181A.TOX_EQ_VAL14 S181AT14,
       S181A.TOX_EQ_VAL15 S181AT15,
       S181A.TOX_EQ_VAL16 S181AT16,
       S181A.TOX_EQ_VAL17 S181AT17,

       S181B.TOX_EQ_NA_IND S181BNA,
       S181B.TOX_EQ_VAL1 S181BT1,
       S181B.TOX_EQ_VAL2 S181BT2,
       S181B.TOX_EQ_VAL3 S181BT3,
       S181B.TOX_EQ_VAL4 S181BT4,
       S181B.TOX_EQ_VAL5 S181BT5,
       S181B.TOX_EQ_VAL6 S181BT6,
       S181B.TOX_EQ_VAL7 S181BT7,
       S181B.TOX_EQ_VAL8 S181BT8,
       S181B.TOX_EQ_VAL9 S181BT9,
       S181B.TOX_EQ_VAL10 S181BT10,
       S181B.TOX_EQ_VAL11 S181BT11,
       S181B.TOX_EQ_VAL12 S181BT12,
       S181B.TOX_EQ_VAL13 S181BT13,
       S181B.TOX_EQ_VAL14 S181BT14,
       S181B.TOX_EQ_VAL15 S181BT15,
       S181B.TOX_EQ_VAL16 S181BT16,
       S181B.TOX_EQ_VAL17 S181BT17,

       S181C.TOX_EQ_NA_IND S181CNA,
       S181C.TOX_EQ_VAL1 S181CT1,
       S181C.TOX_EQ_VAL2 S181CT2,
       S181C.TOX_EQ_VAL3 S181CT3,
       S181C.TOX_EQ_VAL4 S181CT4,
       S181C.TOX_EQ_VAL5 S181CT5,
       S181C.TOX_EQ_VAL6 S181CT6,
       S181C.TOX_EQ_VAL7 S181CT7,
       S181C.TOX_EQ_VAL8 S181CT8,
       S181C.TOX_EQ_VAL9 S181CT9,
       S181C.TOX_EQ_VAL10 S181CT10,
       S181C.TOX_EQ_VAL11 S181CT11,
       S181C.TOX_EQ_VAL12 S181CT12,
       S181C.TOX_EQ_VAL13 S181CT13,
       S181C.TOX_EQ_VAL14 S181CT14,
       S181C.TOX_EQ_VAL15 S181CT15,
       S181C.TOX_EQ_VAL16 S181CT16,
       S181C.TOX_EQ_VAL17 S181CT17,

       S181D.TOX_EQ_NA_IND S181DNA,
       S181D.TOX_EQ_VAL1 S181DT1,
       S181D.TOX_EQ_VAL2 S181DT2,
       S181D.TOX_EQ_VAL3 S181DT3,
       S181D.TOX_EQ_VAL4 S181DT4,
       S181D.TOX_EQ_VAL5 S181DT5,
       S181D.TOX_EQ_VAL6 S181DT6,
       S181D.TOX_EQ_VAL7 S181DT7,
       S181D.TOX_EQ_VAL8 S181DT8,
       S181D.TOX_EQ_VAL9 S181DT9,
       S181D.TOX_EQ_VAL10 S181DT10,
       S181D.TOX_EQ_VAL11 S181DT11,
       S181D.TOX_EQ_VAL12 S181DT12,
       S181D.TOX_EQ_VAL13 S181DT13,
       S181D.TOX_EQ_VAL14 S181DT14,
       S181D.TOX_EQ_VAL15 S181DT15,
       S181D.TOX_EQ_VAL16 S181DT16,
       S181D.TOX_EQ_VAL17 S181DT17,

       S182.TOX_EQ_NA_IND S182NA,
       S182.TOX_EQ_VAL1 S182T1,
       S182.TOX_EQ_VAL2 S182T2,
       S182.TOX_EQ_VAL3 S182T3,
       S182.TOX_EQ_VAL4 S182T4,
       S182.TOX_EQ_VAL5 S182T5,
       S182.TOX_EQ_VAL6 S182T6,
       S182.TOX_EQ_VAL7 S182T7,
       S182.TOX_EQ_VAL8 S182T8,
       S182.TOX_EQ_VAL9 S182T9,
       S182.TOX_EQ_VAL10 S182T10,
       S182.TOX_EQ_VAL11 S182T11,
       S182.TOX_EQ_VAL12 S182T12,
       S182.TOX_EQ_VAL13 S182T13,
       S182.TOX_EQ_VAL14 S182T14,
       S182.TOX_EQ_VAL15 S182T15,
       S182.TOX_EQ_VAL16 S182T16,
       S182.TOX_EQ_VAL17 S182T17,

       S183.TOX_EQ_NA_IND S183NA,
       S183.TOX_EQ_VAL1 S183T1,
       S183.TOX_EQ_VAL2 S183T2,
       S183.TOX_EQ_VAL3 S183T3,
       S183.TOX_EQ_VAL4 S183T4,
       S183.TOX_EQ_VAL5 S183T5,
       S183.TOX_EQ_VAL6 S183T6,
       S183.TOX_EQ_VAL7 S183T7,
       S183.TOX_EQ_VAL8 S183T8,
       S183.TOX_EQ_VAL9 S183T9,
       S183.TOX_EQ_VAL10 S183T10,
       S183.TOX_EQ_VAL11 S183T11,
       S183.TOX_EQ_VAL12 S183T12,
       S183.TOX_EQ_VAL13 S183T13,
       S183.TOX_EQ_VAL14 S183T14,
       S183.TOX_EQ_VAL15 S183T15,
       S183.TOX_EQ_VAL16 S183T16,
       S183.TOX_EQ_VAL17 S183T17,

       S184.TOX_EQ_NA_IND S184NA,
       S184.TOX_EQ_VAL1 S184T1,
       S184.TOX_EQ_VAL2 S184T2,
       S184.TOX_EQ_VAL3 S184T3,
       S184.TOX_EQ_VAL4 S184T4,
       S184.TOX_EQ_VAL5 S184T5,
       S184.TOX_EQ_VAL6 S184T6,
       S184.TOX_EQ_VAL7 S184T7,
       S184.TOX_EQ_VAL8 S184T8,
       S184.TOX_EQ_VAL9 S184T9,
       S184.TOX_EQ_VAL10 S184T10,
       S184.TOX_EQ_VAL11 S184T11,
       S184.TOX_EQ_VAL12 S184T12,
       S184.TOX_EQ_VAL13 S184T13,
       S184.TOX_EQ_VAL14 S184T14,
       S184.TOX_EQ_VAL15 S184T15,
       S184.TOX_EQ_VAL16 S184T16,
       S184.TOX_EQ_VAL17 S184T17,

       S185.TOX_EQ_NA_IND S185NA,
       S185.TOX_EQ_VAL1 S185T1,
       S185.TOX_EQ_VAL2 S185T2,
       S185.TOX_EQ_VAL3 S185T3,
       S185.TOX_EQ_VAL4 S185T4,
       S185.TOX_EQ_VAL5 S185T5,
       S185.TOX_EQ_VAL6 S185T6,
       S185.TOX_EQ_VAL7 S185T7,
       S185.TOX_EQ_VAL8 S185T8,
       S185.TOX_EQ_VAL9 S185T9,
       S185.TOX_EQ_VAL10 S185T10,
       S185.TOX_EQ_VAL11 S185T11,
       S185.TOX_EQ_VAL12 S185T12,
       S185.TOX_EQ_VAL13 S185T13,
       S185.TOX_EQ_VAL14 S185T14,
       S185.TOX_EQ_VAL15 S185T15,
       S185.TOX_EQ_VAL16 S185T16,
       S185.TOX_EQ_VAL17 S185T17,

       S186.TOX_EQ_NA_IND S186NA,
       S186.TOX_EQ_VAL1 S186T1,
       S186.TOX_EQ_VAL2 S186T2,
       S186.TOX_EQ_VAL3 S186T3,
       S186.TOX_EQ_VAL4 S186T4,
       S186.TOX_EQ_VAL5 S186T5,
       S186.TOX_EQ_VAL6 S186T6,
       S186.TOX_EQ_VAL7 S186T7,
       S186.TOX_EQ_VAL8 S186T8,
       S186.TOX_EQ_VAL9 S186T9,
       S186.TOX_EQ_VAL10 S186T10,
       S186.TOX_EQ_VAL11 S186T11,
       S186.TOX_EQ_VAL12 S186T12,
       S186.TOX_EQ_VAL13 S186T13,
       S186.TOX_EQ_VAL14 S186T14,
       S186.TOX_EQ_VAL15 S186T15,
       S186.TOX_EQ_VAL16 S186T16,
       S186.TOX_EQ_VAL17 S186T17,

       S187.TOX_EQ_NA_IND S187NA,
       S187.TOX_EQ_VAL1 S187T1,
       S187.TOX_EQ_VAL2 S187T2,
       S187.TOX_EQ_VAL3 S187T3,
       S187.TOX_EQ_VAL4 S187T4,
       S187.TOX_EQ_VAL5 S187T5,
       S187.TOX_EQ_VAL6 S187T6,
       S187.TOX_EQ_VAL7 S187T7,
       S187.TOX_EQ_VAL8 S187T8,
       S187.TOX_EQ_VAL9 S187T9,
       S187.TOX_EQ_VAL10 S187T10,
       S187.TOX_EQ_VAL11 S187T11,
       S187.TOX_EQ_VAL12 S187T12,
       S187.TOX_EQ_VAL13 S187T13,
       S187.TOX_EQ_VAL14 S187T14,
       S187.TOX_EQ_VAL15 S187T15,
       S187.TOX_EQ_VAL16 S187T16,
       S187.TOX_EQ_VAL17 S187T17,

       R.TOX_EQ_NA_IND_ONETIME S188NA,
       R.TOX_EQ_VAL1_ONETIME S188T1,
       R.TOX_EQ_VAL2_ONETIME S188T2,
       R.TOX_EQ_VAL3_ONETIME S188T3,
       R.TOX_EQ_VAL4_ONETIME S188T4,
       R.TOX_EQ_VAL5_ONETIME S188T5,
       R.TOX_EQ_VAL6_ONETIME S188T6,
       R.TOX_EQ_VAL7_ONETIME S188T7,
       R.TOX_EQ_VAL8_ONETIME S188T8,
       R.TOX_EQ_VAL9_ONETIME S188T9,
       R.TOX_EQ_VAL10_ONETIME S188T10,
       R.TOX_EQ_VAL11_ONETIME S188T11,
       R.TOX_EQ_VAL12_ONETIME S188T12,
       R.TOX_EQ_VAL13_ONETIME S188T13,
       R.TOX_EQ_VAL14_ONETIME S188T14,
       R.TOX_EQ_VAL15_ONETIME S188T15,
       R.TOX_EQ_VAL16_ONETIME S188T16,
       R.TOX_EQ_VAL17_ONETIME S188T17

  FROM TRI_REPORT R INNER JOIN TRI_SUB S ON R.FK_GUID = S.PK_GUID
       INNER JOIN TRI_FAC F ON F.FK_GUID = S.PK_GUID
       INNER JOIN TRI_CHEM C ON C.FK_GUID = R.PK_GUID

       LEFT OUTER JOIN TRI_ONSITE_UIC_DISP_QTY S181A ON
                S181A.FK_GUID = R.PK_GUID
            AND S181A.YEAR_OFFSET_ME = 0

       LEFT OUTER JOIN TRI_ONSITE_DISP_QTY S181B ON
                S181B.FK_GUID = R.PK_GUID
            AND S181B.YEAR_OFFSET_ME = 0

       LEFT OUTER JOIN TRI_OFFSITE_UIC_DISP_QTY S181C ON
                S181C.FK_GUID = R.PK_GUID
            AND S181C.YEAR_OFFSET_ME = 0

       LEFT OUTER JOIN TRI_OFFSITE_DISP_QTY S181D ON
                S181D.FK_GUID = R.PK_GUID
            AND S181D.YEAR_OFFSET_ME = 0

       LEFT OUTER JOIN TRI_ONSITE_ENERGY_RCV_QTY S182 ON
                S182.FK_GUID = R.PK_GUID
            AND S182.YEAR_OFFSET_ME = 0

       LEFT OUTER JOIN TRI_OFFSITE_ENERGY_REC_QTY S183 ON
                S183.FK_GUID = R.PK_GUID
            AND S183.YEAR_OFFSET_ME = 0

       LEFT OUTER JOIN TRI_ONSITE_RECYCLED_Q S184 ON
                S184.FK_GUID = R.PK_GUID
            AND S184.YEAR_OFFSET_ME = 0

       LEFT OUTER JOIN TRI_OFFSITE_RECYCLED_Q S185 ON
                S185.FK_GUID = R.PK_GUID
            AND S185.YEAR_OFFSET_ME = 0

       LEFT OUTER JOIN TRI_ONSITE_TREATED_Q S186 ON
                S186.FK_GUID = R.PK_GUID
            AND S186.YEAR_OFFSET_ME = 0

       LEFT OUTER JOIN TRI_OFFSITE_TREATED_Q S187 ON
                S187.FK_GUID = R.PK_GUID
            AND S187.YEAR_OFFSET_ME = 0 
/

CREATE FORCE VIEW "V_MAN_SUB_DTL" ( "TRIFID", "REPORTINGYEAR", "STATERECEIVEDDATE", "SUBMISSIONMETHOD" )
AS
SELECT
/*******************************************************************************
Full Name:          V_TRI_MANAGE_FACILITIES_MANUAL_SUBMISSION_DETAIL
Condensed Name:     V_MAN_SUB_DTL
Author:             TK Conrad
Create date:        2007-05-18
Description:        Fills the fields for manual submissions within the detail of 
                    the TRI Manage Facilities page
Conversion Author:  Suresh Sikharam
Conversion Date:    03-04-2008
*******************************************************************************/
       T.TRIFID AS TRIFID
       ,manual.Reporting_Year_NR AS ReportingYear
       ,manual.State_Received_DT AS StateReceivedDate
       ,manual.Submission_Method_DS AS SubmissionMethod
  FROM App_ManualSubmissionLog manual
  JOIN App_FI_TRIFID T ON manual.TRIFID_ID_FK = T.TRIFID_ID 
/

CREATE FORCE VIEW "V_MNG_FAC_DTL" ( "TRIFID", "REPORTINGYEAR", "SUBMITTEDFACILITYNAME", "EPARECEIVEDDATE", "SUBMISSIONMETHOD", "STATUS", "TRI_SUB_ID" )
AS
SELECT

UPPER (F.FAC_ID) TRIFID
,R.SUB_REP_YEAR AS ReportingYear
,F.FAC_SITE AS SubmittedFacilityName
-- ,S.INSERTED_DATE AS EPAReceivedDate
,COALESCE(to_date(substr(R.REPORT_REC_DATE, 1, instr(R.REPORT_REC_DATE, ' ', 1,1)), 'MM/DD/YYYY'), S.INSERTED_DATE) AS EPAReceivedDate
,TRI_CALC_SUB_METHOD(S.TRI_SUB_ID) AS SubmissionMethod
-- ,R.REPORT_SUB_METH_CODE AS SubmissionMethod
,TRI_CONV_EPA_PRCSSTATCD_DESC(R.REPORT_EPA_PROCESSING_STATUS_C) AS Status
,S.TRI_SUB_ID AS TRI_SUB_ID

FROM TRI_REPORT R
INNER JOIN TRI_SUB S ON R.FK_GUID = S.PK_GUID
INNER JOIN TRI_FAC F ON F.FK_GUID = S.PK_GUID 
/

CREATE FORCE VIEW "V_MNG_FAC_LIST" ( "TRIFID", "DELETED", "FACILITYNAME", "ADDRESS", "EPA_ID", "FS_ID" )
AS
SELECT 
/*******************************************************************************
Full Name:          V_TRI_MANAGE_FACILITIES_LIST
Condensed Name:     V_MNG_FAC_LIST
Author:             TK Conrad
Create date:        2007-05-18
Description:        Fills the fields on the top portion of the TRI Manage Facilities page
Conversion Author:  Suresh Sikharam
Conversion Date:    03-03-2008
*******************************************************************************/
       DISTINCT
       T.TRIFID AS TRIFID
       ,CASE WHEN D.TRIFID_DELETE_ID IS NULL THEN '' ELSE '(deleted)' END AS Deleted
       ,COALESCE(F.FAC_SITE, '*NEW FACILITY* ' || NVL(TC.Comment_DS, '')) AS FacilityName
       ,COALESCE (F.LOC_ADD_TXT || ', ', '')
       || COALESCE (F.SUPP_LOC_TXT || ', ', '')
       || COALESCE (F.LOCALITY || ', ', '')
       || F.STATE AS Address
       ,T.EPAID AS EPA_ID
       ,T.AgencyID AS FS_ID
  FROM App_FI_TRIFID T
  LEFT JOIN App_FI_TRIFID_Comment TC ON T.TRIFID_ID = TC.TRIFID_ID_FK
  LEFT JOIN TRI_FAC F ON UPPER(F.FAC_ID) = UPPER(T.TRIFID)
  LEFT JOIN App_FI_TRIFID_Delete D ON T.TRIFID_ID = D.TRIFID_ID_FK 
/

CREATE FORCE VIEW "V_TRI_FAC_SUB_SUMMARY" ( "FAC_ID", "SUB_REP_YEAR", "SUB_PK_GUID", "INSERTED_DATE", "NUM_OF_CHEMS" )
AS
SELECT   UPPER (FAC_ID), SUB_REP_YEAR, S.PK_GUID SUB_PK_GUID,
            INSERTED_DATE, COUNT (*) AS NUM_OF_CHEMS
       FROM TRI_REPORT R INNER JOIN TRI_SUB S ON R.FK_GUID = S.PK_GUID
            INNER JOIN TRI_FAC F ON F.FK_GUID = S.PK_GUID
   GROUP BY UPPER (FAC_ID), SUB_REP_YEAR, S.PK_GUID, INSERTED_DATE
   ORDER BY INSERTED_DATE DESC 
/

CREATE FORCE VIEW "V_TRI_PAGE1" ( "PK_GUID_SUB", "PK_GUID_REP", "FAC_ID", "CHEM_TXT", "R0REVCD1", "R0REVCD2", "R0WITHDCD1", "R0WITHDCD2", "R1", "R21", "R22", "R31", "R33", "R41TRI_ID", "R41NAME", "R41STREET", "R41_CITYSTATE", "R41MAIL_NAME", "R41MAIL_STREET", "R41MAILCITYSTATE", "R41MAILCOUNTRY", "R42A", "R42B", "R42C", "R42D", "R43NAME", "R43EMAIL", "R43TEL", "R44NAME", "R44TEL", "R44EMAIL", "R45A", "R45B", "R45C", "R45D", "R45E", "R45F", "R471", "R472", "R51", "R52" )
AS
  SELECT S.PK_GUID AS PK_GUID_SUB,
    R.PK_GUID      AS PK_GUID_REP,
    FAC_ID,
    CHEM_TXT,
    R.CHEM_RPT_REV_CD_1 R0REVCD1,
    R.CHEM_RPT_REV_CD_2 R0REVCD2,
    R.CHEM_RPT_WD_CD_1 R0WITHDCD1,
    R.CHEM_RPT_WD_CD_2 R0WITHDCD2,
    SUB_REP_YEAR R1,
    CHEM_TRADE_SECRET_IND R21,
    CASE CHEM_TRADE_SECRET_IND
      WHEN 'Y'
      THEN SUB_SANITIZED_IND
      ELSE NULL
    END R22,
    NVL(CERTIFIER,'')
    || ' '
    || NVL(CERTIFIER_TIT_TXT,'') AS R31,
    CERT_SIGNED_DATE R33,
    FAC_ID R41TRI_ID,
    FAC_SITE R41NAME,
    NVL(F.LOC_ADD_TXT,'')
    || ' '
    || NVL(F.SUPP_LOC_TXT,'') R41STREET,
    NVL(F.LOCALITY,'')
    || '/'
    || NVL(F.COUNTY,'')
    || '/'
    || NVL(F.STATE,'')
    || '/'
    || NVL(F.ADD_POSTAL_CODE,'') R41_CITYSTATE,
    F.MAIL_FAC_SITE R41MAIL_NAME,
    NVL(F.MAIL_ADD_TXT,'')
    || ' '
    || NVL(F.SUPP_MAIL_ADD,'') R41MAIL_STREET,
    NVL(F.MAIL_ADD_CITY,'')
    || '/'
    || NVL(F.MAIL_ADD_STATE,'')
    || '/'
    || NVL(F.MAIL_ADD_POSTAL_CODE,'') R41MAILCITYSTATE,
    MAIL_ADD_COUNTRY R41MAILCOUNTRY,
    CASE SUB_PARTIAL_FAC_ID WHEN 'N' THEN 'Y' ELSE 'N' END R42A,
    SUB_PARTIAL_FAC_ID R42B,
    SUB_FEDERAL_FAC_ID R42C,
    SUB_CO_FAC_INDIC R42D,
    TECH_CONT R43NAME,
    TECH_CONT_EMAIL_ADDRES R43EMAIL,
    TECH_CONT_PHONE_TXT R43TEL,
    PUB_CONT R44NAME,
    PUB_CONT_PHONE_TXT R44TEL,
    PUB_CONT_EMAIL_ADDRES R44EMAIL,
    (SELECT FAC_NAICS
    FROM TRI_FAC_NAICS S
    WHERE NAICS_PRIMARY_IND = 'Primary'
    AND FK_GUID             = F.PK_GUID
    ) R45A,
    (SELECT FAC_NAICS
    FROM TRI_FAC_NAICS S
    WHERE NAICS_PRIMARY_IND <> 'Primary'
    AND FK_GUID              = F.PK_GUID
    AND (SELECT COUNT (*)
      FROM TRI_FAC_NAICS S2
      WHERE S.FK_GUID           = S2.FK_GUID
      AND S2.PK_GUID           <= S.PK_GUID
      AND S2.NAICS_PRIMARY_IND <> 'Primary') = 1
    ) R45B,
    (SELECT FAC_NAICS
    FROM TRI_FAC_NAICS S
    WHERE NAICS_PRIMARY_IND <> 'Primary'
    AND FK_GUID              = F.PK_GUID
    AND (SELECT COUNT (*)
      FROM TRI_FAC_NAICS S2
      WHERE S.FK_GUID           = S2.FK_GUID
      AND S2.PK_GUID           <= S.PK_GUID
      AND S2.NAICS_PRIMARY_IND <> 'Primary') = 2
    ) R45C,
    (SELECT FAC_NAICS
    FROM TRI_FAC_NAICS S
    WHERE NAICS_PRIMARY_IND <> 'Primary'
    AND FK_GUID              = F.PK_GUID
    AND (SELECT COUNT (*)
      FROM TRI_FAC_NAICS S2
      WHERE S.FK_GUID           = S2.FK_GUID
      AND S2.PK_GUID           <= S.PK_GUID
      AND S2.NAICS_PRIMARY_IND <> 'Primary') = 3
    ) R45D,
    (SELECT FAC_NAICS
    FROM TRI_FAC_NAICS S
    WHERE NAICS_PRIMARY_IND <> 'Primary'
    AND FK_GUID              = F.PK_GUID
    AND (SELECT COUNT (*)
      FROM TRI_FAC_NAICS S2
      WHERE S.FK_GUID           = S2.FK_GUID
      AND S2.PK_GUID           <= S.PK_GUID
      AND S2.NAICS_PRIMARY_IND <> 'Primary') = 4
    ) R45E,
    (SELECT FAC_NAICS
    FROM TRI_FAC_NAICS S
    WHERE NAICS_PRIMARY_IND <> 'Primary'
    AND FK_GUID              = F.PK_GUID
    AND (SELECT COUNT (*)
      FROM TRI_FAC_NAICS S2
      WHERE S.FK_GUID           = S2.FK_GUID
      AND S2.PK_GUID           <= S.PK_GUID
      AND S2.NAICS_PRIMARY_IND <> 'Primary') = 5
    ) R45F,
    --       LAT_DEGREE_ME R46LATDEG,
    --       LAT_MINUTE_ME R46LATMIN,
    --       LAT_SECOND_ME R46LATSEC,
    --       LON_DEGREE_ME R46LONGDEG,
    --       LON_MINUTE_ME R46LONGMIN,
    --       LON_SECOND_ME R46LONGSEC,
    (
    SELECT R47
    FROM V_TRI_PG1_47 M
    WHERE NUM     = 1
    AND M.PK_GUID = R.PK_GUID
    ) R471,
    (SELECT R47 FROM V_TRI_PG1_47 M WHERE NUM = 2 AND M.PK_GUID = R.PK_GUID
    ) R472,
    --    (SELECT R48 FROM V_TRI_PG1_48 M WHERE NUM = 1 AND M.PK_GUID = R.PK_GUID) R481,
    --    (SELECT R48 FROM V_TRI_PG1_48 M WHERE NUM = 2 AND M.PK_GUID = R.PK_GUID) R482,
    --    (SELECT R49 FROM V_TRI_PG1_49 M WHERE NUM = 1 AND M.PK_GUID = R.PK_GUID) R491,
    --    (SELECT R49 FROM V_TRI_PG1_49 M WHERE NUM = 2 AND M.PK_GUID = R.PK_GUID) R492,
    --    (SELECT R410 FROM V_TRI_PG1_410 M WHERE NUM = 1 AND M.PK_GUID = R.PK_GUID) R4101,
    --    (SELECT R410 FROM V_TRI_PG1_410 M WHERE NUM = 2 AND M.PK_GUID = R.PK_GUID) R4102,
    PARENT_COMPANY_TXT R51,
    PARENT_DUN_CODE R52
  FROM TRI_REPORT R
  INNER JOIN TRI_SUB S
  ON R.FK_GUID = S.PK_GUID
  INNER JOIN TRI_FAC F
  ON F.FK_GUID = S.PK_GUID
  INNER JOIN TRI_CHEM C
  ON C.FK_GUID = R.PK_GUID
  /

CREATE FORCE VIEW "V_TRI_PAGE2" ( "PK_GUID_SUB", "PK_GUID_REP", "FAC_ID", "CHEM_TXT", "R11", "R12", "R13", "DIOXIN_DIST1", "DIOXIN_DIST2", "DIOXIN_DIST3", "DIOXIN_DIST4", "DIOXIN_DIST5", "DIOXIN_DIST6", "DIOXIN_DIST7", "DIOXIN_DIST8", "DIOXIN_DIST9", "DIOXIN_DIST10", "DIOXIN_DIST11", "DIOXIN_DIST12", "DIOXIN_DIST13", "DIOXIN_DIST14", "DIOXIN_DIST15", "DIOXIN_DIST16", "DIOXIN_DIST17", "R31A", "R31B", "R31C", "R31D", "R31E", "R31F", "R32A", "R32B", "R32C", "R32D", "R32E", "R33A", "R33B", "R33C", "R41", "R51A", "R51B", "R51C", "R52A", "R52B", "R52C", "R531STREAM", "R531A", "R531B", "R531C", "R532STREAM", "R532A", "R532B", "R532C", "R533STREAM", "R533A", "R533B", "R533C" )
AS
SELECT
       S.PK_GUID AS PK_GUID_SUB,
       R.PK_GUID AS PK_GUID_REP,
       FAC_ID,
       CHEM_TXT,
       CAS_CLBER R11,
       CHEM_TXT R12,
       CHEM_MIXTURE_TXT R13,
       DIOXIN_DIST1,
       DIOXIN_DIST2,
       DIOXIN_DIST3,
       DIOXIN_DIST4,
       DIOXIN_DIST5,
       DIOXIN_DIST6,
       DIOXIN_DIST7,
       DIOXIN_DIST8,
       DIOXIN_DIST9,
       DIOXIN_DIST10,
       DIOXIN_DIST11,
       DIOXIN_DIST12,
       DIOXIN_DIST13,
       DIOXIN_DIST14,
       DIOXIN_DIST15,
       DIOXIN_DIST16,
       DIOXIN_DIST17,
       CHEM_PRODUCED_IND R31A,
       CHEM_IMPORTED_IND R31B,
       CHEM_USED_PROCED_ID R31C,
       CHEM_SALES_DIST_ID R31D,
       CHEM_BYPRODUCT_IND R31E,
       CHEM_MANUFACTURE_IMPURITY R31F,
       CHEM_REACTANT_IND R32A,
       CHEM_FORMULATION_COMP R32B,
       CHEM_ARTICLE_COMP_ID R32C,
       CHEM_REP_IND R32D,
       CHEM_PROC_IMPURITY_ID R32E,
       CHEM_PROCING_AID_ID R33A,
       CHEM_MANUFACTURE_AID_ID R33B,
       CHEM_ANC_USAGE_IND R33C,
       MAX_CHEM_AMOUNT_CODE R41,
       COALESCE (REL.WASTE_Q_RANGE_CODE, REL.WASTE_Q_ME) R51A,
       REL.Q_BASIS_EST_CD R51B,
       REL.RELEASE_STORM_WATER R51C,
       COALESCE (REL2.WASTE_Q_RANGE_CODE, REL2.WASTE_Q_ME) R52A,
       REL2.Q_BASIS_EST_CD R52B,
       REL2.RELEASE_STORM_WATER R52C,
    R531.STREAM R531STREAM,
    R531.A R531A,
    R531.B R531B,
    R531.C R531C,
       R532.STREAM R532STREAM,
    R532.A R532A,
    R532.B R532B,
    R532.C R532C,
       R533.STREAM R533STREAM,
    R533.A R533A,
    R533.B R533B,
    R533.C R533C
  FROM TRI_REPORT R INNER JOIN TRI_SUB S ON R.FK_GUID = S.PK_GUID
       INNER JOIN TRI_FAC F ON F.FK_GUID = S.PK_GUID
       INNER JOIN TRI_CHEM C ON C.FK_GUID = R.PK_GUID
       LEFT OUTER JOIN TRI_ONSITE_RELEASE_Q REL ON REL.FK_GUID = R.PK_GUID
                                              AND REL.EI_MEDIUM_CODE = 'AIR FUG'
       LEFT OUTER JOIN TRI_ONSITE_RELEASE_Q REL2 ON REL2.FK_GUID = R.PK_GUID
                                               AND REL2.EI_MEDIUM_CODE = 'AIR STACK'
       LEFT OUTER JOIN (SELECT FK_GUID, STREAM, A, B, C FROM V_TRI_PG2_53 WHERE NUM = 1) R531 ON R531.FK_GUID = R.PK_GUID
       LEFT OUTER JOIN (SELECT FK_GUID, STREAM, A, B, C FROM V_TRI_PG2_53 WHERE NUM = 2) R532 ON R532.FK_GUID = R.PK_GUID
       LEFT OUTER JOIN (SELECT FK_GUID, STREAM, A, B, C FROM V_TRI_PG2_53 WHERE NUM = 3) R533 ON R533.FK_GUID = R.PK_GUID 
/

CREATE FORCE VIEW "V_TRI_PAGE3_XFR" ( "PK_GUID_SUB", "PK_GUID_REP", "R62RCRAID", "R62NAME", "R62ADDRESS", "R62CITY", "R62STATE", "R62COUNTY", "R62ZIP", "R62LOCATIONCONTROL", "R62A1", "R62B1", "R62C1", "R62A2", "R62B2", "R62C2", "R62A3", "R62B3", "R62C3", "R62A4", "R62B4", "R62C4" )
AS
  SELECT S.PK_GUID        AS PK_GUID_SUB ,
    R.PK_GUID             AS PK_GUID_REP ,
    TL.RCRA_ID_CLBER      AS R62RCRAID ,
    TL.FAC_SITE           AS R62NAME ,
    TL.LOC_ADD_TXT        AS R62ADDRESS ,
    TL.LOCALITY           AS R62CITY ,
    TL.STATE              AS R62STATE ,
    TL.COUNTY             AS R62COUNTY ,
    TL.ADD_POSTAL_CODE    AS R62ZIP ,
    TL.CONTROLLED_LOC_IND AS R62LOCATIONCONTROL ,
    MAX(
    CASE
      WHEN XFR.NUM = 1
      THEN XFR.R62A
      ELSE ''
    END) AS R62A1 ,
    MAX(
    CASE
      WHEN XFR.NUM = 1
      THEN XFR.R62B
      ELSE ''
    END) AS R62B1 ,
    MAX(
    CASE
      WHEN XFR.NUM = 1
      THEN XFR.R62C
      ELSE ''
    END) AS R62C1 ,
    MAX(
    CASE
      WHEN XFR.NUM = 2
      THEN XFR.R62A
      ELSE ''
    END) AS R62A2 ,
    MAX(
    CASE
      WHEN XFR.NUM = 2
      THEN XFR.R62B
      ELSE ''
    END) AS R62B2 ,
    MAX(
    CASE
      WHEN XFR.NUM = 2
      THEN XFR.R62C
      ELSE ''
    END) AS R62C2 ,
    MAX(
    CASE
      WHEN XFR.NUM = 3
      THEN XFR.R62A
      ELSE ''
    END) AS R62A3 ,
    MAX(
    CASE
      WHEN XFR.NUM = 3
      THEN XFR.R62B
      ELSE ''
    END) AS R62B3 ,
    MAX(
    CASE
      WHEN XFR.NUM = 3
      THEN XFR.R62C
      ELSE ''
    END) AS R62C3 ,
    MAX(
    CASE
      WHEN XFR.NUM = 4
      THEN XFR.R62A
      ELSE ''
    END) AS R62A4 ,
    MAX(
    CASE
      WHEN XFR.NUM = 4
      THEN XFR.R62B
      ELSE ''
    END) AS R62B4 ,
    MAX(
    CASE
      WHEN XFR.NUM = 4
      THEN XFR.R62C
      ELSE ''
    END) AS R62C4
  FROM TRI_SUB S
  JOIN TRI_FAC F
  ON F.FK_GUID = S.PK_GUID
  JOIN TRI_REPORT R
  ON R.FK_GUID = S.PK_GUID
  JOIN TRI_CHEM C
  ON C.FK_GUID = R.PK_GUID
  JOIN TRI_TRANSFER_LOC TL
  ON TL.FK_GUID = R.PK_GUID
  LEFT JOIN
    (SELECT TQ.FK_GUID ,
      TQ.TRANSFER_SEQ_CLBER ,
      COALESCE(TQ.WASTE_Q_ME, TQ.WASTE_Q_RANGE_CODE) R62A ,
      TQ.Q_BASIS_EST_CODE R62B ,
      TQ.WASTE_MANAGEMENT_CODE R62C ,
      (SELECT COUNT(*)
      FROM TRI_TRANSFER_Q TQ2
      WHERE TQ2.FK_GUID = TQ.FK_GUID
      AND TQ2.PK_GUID  <= TQ.PK_GUID
      ) AS NUM
    FROM TRI_TRANSFER_Q TQ
    ) XFR
  ON XFR.FK_GUID    = TL.PK_GUID
  WHERE TL.POTW_IND = 'N'
  GROUP BY S.PK_GUID ,
    R.PK_GUID ,
--    F.FAC_ID ,
--    C.CHEM_TXT ,
    TO_NUMBER(TL.TRANSFER_LOC_SEQ_CL),
    TL.RCRA_ID_CLBER ,
    TL.FAC_SITE ,
    TL.LOC_ADD_TXT ,
    TL.LOCALITY ,
    TL.STATE ,
    TL.COUNTY ,
    TL.ADD_POSTAL_CODE ,
    TL.CONTROLLED_LOC_IND
ORDER BY TO_NUMBER(TL.TRANSFER_LOC_SEQ_CL)
/

CREATE FORCE VIEW "V_TRI_PAGE3" ( "PK_GUID_SUB", "PK_GUID_REP", "FAC_ID", "CHEM_TXT", "R541A", "R541B", "R542A", "R542B", "R551AA", "R551AB", "R551BA", "R551BB", "R552AA", "R552AB", "R5553AA", "R5553AB", "R553BA", "R553BB", "R554A", "R554B", "R61A1", "R61A2", "R61B1NAME", "R61B1ADDRESS", "R61B1CITY", "R61B1STATE", "R61B1COUNTY", "R61B1ZIP", "R61B2NAME", "R61B2ADDRESS", "R61B2CITY", "R61B2STATE", "R61B2COUNTY", "R61B2ZIP", "R621RCRAID", "R621NAME", "R621ADDRESS", "R621CITY", "R621STATE", "R621COUNTY", "R621ZIP", "R621LOCATIONCONTROL", "R621A1", "R621B1", "R621C1", "R621A2", "R621B2", "R621C2", "R621A3", "R621B3", "R621C3", "R621A4", "R621B4", "R621C4", "R622RCRAID", "R622NAME", "R622ADDRESS", "R622CITY", "R622STATE", "R622COUNTY", "R622ZIP", "R622LOCATIONCONTROL", "R622A1", "R622B1", "R622C1", "R622A2", "R622B2", "R622C2", "R622A3", "R622B3", "R622C3", "R622A4", "R622B4", "R622C4" )
AS
SELECT
       S.PK_GUID AS PK_GUID_SUB,
       R.PK_GUID AS PK_GUID_REP,
       F.FAC_ID,
       C.CHEM_TXT,
       COALESCE (REL1.WASTE_Q_RANGE_CODE, REL1.WASTE_Q_ME) R541A,
       REL1.Q_BASIS_EST_CD R541B,
       COALESCE (REL2.WASTE_Q_RANGE_CODE, REL2.WASTE_Q_ME) R542A,
       REL2.Q_BASIS_EST_CD R542B,
       COALESCE (REL3.WASTE_Q_RANGE_CODE, REL3.WASTE_Q_ME) R551AA,
       REL3.Q_BASIS_EST_CD R551AB,
       COALESCE (REL4.WASTE_Q_RANGE_CODE, REL4.WASTE_Q_ME) R551BA,
       REL4.Q_BASIS_EST_CD R551BB,
       COALESCE (REL5.WASTE_Q_RANGE_CODE, REL5.WASTE_Q_ME) R552AA,
       REL5.Q_BASIS_EST_CD R552AB,
       COALESCE (REL6.WASTE_Q_RANGE_CODE, REL6.WASTE_Q_ME) R5553AA,
       REL6.Q_BASIS_EST_CD R5553AB,
       COALESCE (REL7.WASTE_Q_RANGE_CODE, REL7.WASTE_Q_ME) R553BA,
       REL7.Q_BASIS_EST_CD R553BB,
       COALESCE (REL8.WASTE_Q_RANGE_CODE, REL8.WASTE_Q_ME) R554A,
       REL8.Q_BASIS_EST_CD R554B,
       COALESCE (R.WASTE_Q_ME, R.WASTE_Q_RANGE_CODE) R61A1,
       R.Q_BASIS_EST_CODE R61A2,
       POTW1.FAC_SITE R61B1NAME,
       POTW1.LOC_ADD_TXT R61B1ADDRESS,
       POTW1.LOCALITY R61B1CITY,
       POTW1.STATE R61B1STATE,
       POTW1.COUNTY R61B1COUNTY,
       POTW1.ADD_POSTAL_CODE R61B1ZIP,
       POTW2.FAC_SITE R61B2NAME,
       POTW2.LOC_ADD_TXT R61B2ADDRESS,
       POTW2.LOCALITY R61B2CITY,
       POTW2.STATE R61B2STATE,
       POTW2.COUNTY R61B2COUNTY,
       POTW2.ADD_POSTAL_CODE R61B2ZIP,
       SITE1.RCRA_ID_CLBER R621RCRAID,
       SITE1.FAC_SITE R621NAME,
       SITE1.LOC_ADD_TXT R621ADDRESS,
       SITE1.LOCALITY R621CITY,
       SITE1.STATE R621STATE,
       SITE1.COUNTY R621COUNTY,
       SITE1.ADD_POSTAL_CODE R621ZIP,
       SITE1.CONTROLLED_LOC_IND R621LOCATIONCONTROL,
       R621A1,
       R621B1,
       R621C1,
       R621A2,
       R621B2,
       R621C2,
       R621A3,
       R621B3,
       R621C3,
       R621A4,
       R621B4,
       R621C4,
       SITE2.RCRA_ID_CLBER R622RCRAID,
       SITE2.FAC_SITE R622NAME,
       SITE2.LOC_ADD_TXT R622ADDRESS,
       SITE2.LOCALITY R622CITY,
       SITE2.STATE R622STATE,
       SITE2.COUNTY R622COUNTY,
       SITE2.ADD_POSTAL_CODE R622ZIP,
       SITE2.CONTROLLED_LOC_IND R622LOCATIONCONTROL,
       R622A1,
       R622B1,
       R622C1,
       R622A2,
       R622B2,
       R622C2,
       R622A3,
       R622B3,
       R622C3,
       R622A4,
       R622B4,
       R622C4
  FROM TRI_REPORT R INNER JOIN TRI_SUB S ON R.FK_GUID = S.PK_GUID
       INNER JOIN TRI_FAC F ON F.FK_GUID = S.PK_GUID
       INNER JOIN TRI_CHEM C ON C.FK_GUID = R.PK_GUID
       LEFT OUTER JOIN (SELECT FK_GUID,
                               FAC_SITE,
                               LOC_ADD_TXT,
                               LOCALITY,
                               STATE,
                               COUNTY,
                               ADD_POSTAL_CODE
                          FROM TRI_TRANSFER_LOC T
                         WHERE POTW_IND = 'Y'
                           AND (SELECT COUNT (*)
                                  FROM TRI_TRANSFER_LOC T2
                                 WHERE T.FK_GUID = T2.FK_GUID
                                   AND T2.POTW_IND = 'Y'
                                   AND TO_NUMBER(T2.TRANSFER_LOC_SEQ_CL) <= TO_NUMBER(T.TRANSFER_LOC_SEQ_CL)) = 1) POTW1 ON POTW1.FK_GUID = R.PK_GUID
--                                 AND T2.FAC_SITE + T2.LOC_ADD_TXT <= T.FAC_SITE + T.LOC_ADD_TXT) = 1) POTW1 ON POTW1.FK_GUID = R.PK_GUID
       LEFT OUTER JOIN (SELECT FK_GUID,
                               FAC_SITE,
                               LOC_ADD_TXT,
                               LOCALITY,
                               STATE,
                               COUNTY,
                               ADD_POSTAL_CODE
                          FROM TRI_TRANSFER_LOC T
                         WHERE POTW_IND = 'Y'
                           AND (SELECT COUNT (*)
                                  FROM TRI_TRANSFER_LOC T2
                                 WHERE T.FK_GUID = T2.FK_GUID
                                   AND T2.POTW_IND = 'Y'
                                   AND TO_NUMBER(T2.TRANSFER_LOC_SEQ_CL) <= TO_NUMBER(T.TRANSFER_LOC_SEQ_CL)) = 2) POTW2 ON POTW2.FK_GUID = R.PK_GUID
--                                 AND T2.FAC_SITE + T2.LOC_ADD_TXT <= T.FAC_SITE + T.LOC_ADD_TXT) = 1) POTW1 ON POTW1.FK_GUID = R.PK_GUID
       LEFT OUTER JOIN (SELECT FK_GUID,
                               RCRA_ID_CLBER,
                               FAC_SITE,
                               LOC_ADD_TXT,
                               LOCALITY,
                               STATE,
                               COUNTY,
                               ADD_POSTAL_CODE,
                               CONTROLLED_LOC_IND,
                               (SELECT R62A
                                  FROM V_TRI_PG4_62L TQ
                                 WHERE TQ.FK_GUID = T.PK_GUID
                                   AND NUM = 1) R621A1,
                               (SELECT R62B
                                  FROM V_TRI_PG4_62L TQ
                                 WHERE TQ.FK_GUID = T.PK_GUID
                                   AND NUM = 1) R621B1,
                               (SELECT R62C
                                  FROM V_TRI_PG4_62L TQ
                                 WHERE TQ.FK_GUID = T.PK_GUID
                                   AND NUM = 1) R621C1,
                               (SELECT R62A
                                  FROM V_TRI_PG4_62L TQ
                                 WHERE TQ.FK_GUID = T.PK_GUID
                                   AND NUM = 2) R621A2,
                               (SELECT R62B
                                  FROM V_TRI_PG4_62L TQ
                                 WHERE TQ.FK_GUID = T.PK_GUID
                                   AND NUM = 2) R621B2,
                               (SELECT R62C
                                  FROM V_TRI_PG4_62L TQ
                                 WHERE TQ.FK_GUID = T.PK_GUID
                                   AND NUM = 2) R621C2,
                               (SELECT R62A
                                  FROM V_TRI_PG4_62L TQ
                                 WHERE TQ.FK_GUID = T.PK_GUID
                                   AND NUM = 3) R621A3,
                               (SELECT R62B
                                  FROM V_TRI_PG4_62L TQ
                                 WHERE TQ.FK_GUID = T.PK_GUID
                                   AND NUM = 3) R621B3,
                               (SELECT R62C
                                  FROM V_TRI_PG4_62L TQ
                                 WHERE TQ.FK_GUID = T.PK_GUID
                                   AND NUM = 3) R621C3,
                               (SELECT R62A
                                  FROM V_TRI_PG4_62L TQ
                                 WHERE TQ.FK_GUID = T.PK_GUID
                                   AND NUM = 4) R621A4,
                               (SELECT R62B
                                  FROM V_TRI_PG4_62L TQ
                                 WHERE TQ.FK_GUID = T.PK_GUID
                                   AND NUM = 4) R621B4,
                               (SELECT R62C
                                  FROM V_TRI_PG4_62L TQ
                                 WHERE TQ.FK_GUID = T.PK_GUID
                                   AND NUM = 4) R621C4
                          FROM TRI_TRANSFER_LOC T
                         WHERE POTW_IND = 'N'
                           AND (SELECT COUNT (*)
                                  FROM TRI_TRANSFER_LOC T2
                                 WHERE T.FK_GUID = T2.FK_GUID
                                   AND T2.POTW_IND = 'N'
                                   AND TO_NUMBER(T2.TRANSFER_LOC_SEQ_CL) <= TO_NUMBER(T.TRANSFER_LOC_SEQ_CL)) = 1) SITE1 ON SITE1.FK_GUID = R.PK_GUID
--                                 AND T2.FAC_SITE + T2.LOC_ADD_TXT <= T.FAC_SITE + T.LOC_ADD_TXT) = 1) POTW1 ON POTW1.FK_GUID = R.PK_GUID
       LEFT OUTER JOIN (SELECT FK_GUID,
                               RCRA_ID_CLBER,
                               FAC_SITE,
                               LOC_ADD_TXT,
                               LOCALITY,
                               STATE,
                               COUNTY,
                               ADD_POSTAL_CODE,
                               CONTROLLED_LOC_IND,
                               (SELECT R62A
                                  FROM V_TRI_PG4_62L TQ
                                 WHERE TQ.FK_GUID = T.PK_GUID
                                   AND NUM = 1) R622A1,
                               (SELECT R62B
                                  FROM V_TRI_PG4_62L TQ
                                 WHERE TQ.FK_GUID = T.PK_GUID
                                   AND NUM = 1) R622B1,
                               (SELECT R62C
                                  FROM V_TRI_PG4_62L TQ
                                 WHERE TQ.FK_GUID = T.PK_GUID
                                   AND NUM = 1) R622C1,
                               (SELECT R62A
                                  FROM V_TRI_PG4_62L TQ
                                 WHERE TQ.FK_GUID = T.PK_GUID
                                   AND NUM = 2) R622A2,
                               (SELECT R62B
                                  FROM V_TRI_PG4_62L TQ
                                 WHERE TQ.FK_GUID = T.PK_GUID
                                   AND NUM = 2) R622B2,
                               (SELECT R62C
                                  FROM V_TRI_PG4_62L TQ
                                 WHERE TQ.FK_GUID = T.PK_GUID
                                   AND NUM = 2) R622C2,
                               (SELECT R62A
                                  FROM V_TRI_PG4_62L TQ
                                 WHERE TQ.FK_GUID = T.PK_GUID
                                   AND NUM = 3) R622A3,
                               (SELECT R62B
                                  FROM V_TRI_PG4_62L TQ
                                 WHERE TQ.FK_GUID = T.PK_GUID
                                   AND NUM = 3) R622B3,
                               (SELECT R62C
                                  FROM V_TRI_PG4_62L TQ
                                 WHERE TQ.FK_GUID = T.PK_GUID
                                   AND NUM = 3) R622C3,
                               (SELECT R62A
                                  FROM V_TRI_PG4_62L TQ
                                 WHERE TQ.FK_GUID = T.PK_GUID
                                   AND NUM = 4) R622A4,
                               (SELECT R62B
                                  FROM V_TRI_PG4_62L TQ
                                 WHERE TQ.FK_GUID = T.PK_GUID
                                   AND NUM = 4) R622B4,
                               (SELECT R62C
                                  FROM V_TRI_PG4_62L TQ
                                 WHERE TQ.FK_GUID = T.PK_GUID
                                   AND NUM = 4) R622C4
                          FROM TRI_TRANSFER_LOC T
                         WHERE POTW_IND = 'N'
                           AND (SELECT COUNT (*)
                                  FROM TRI_TRANSFER_LOC T2
                                 WHERE T.FK_GUID = T2.FK_GUID
                                   AND T2.POTW_IND = 'N'
                                   AND TO_NUMBER(T2.TRANSFER_LOC_SEQ_CL) <= TO_NUMBER(T.TRANSFER_LOC_SEQ_CL)) = 2) SITE2 ON SITE2.FK_GUID = R.PK_GUID
--                                 AND T2.FAC_SITE + T2.LOC_ADD_TXT <= T.FAC_SITE + T.LOC_ADD_TXT) = 2) SITE2 ON SITE2.FK_GUID = R.PK_GUID
       LEFT OUTER JOIN TRI_ONSITE_RELEASE_Q REL1 ON REL1.FK_GUID = R.PK_GUID
                                               AND REL1.EI_MEDIUM_CODE = 'UNINJ I'
       LEFT OUTER JOIN TRI_ONSITE_RELEASE_Q REL2 ON REL2.FK_GUID = R.PK_GUID
                                               AND REL2.EI_MEDIUM_CODE = 'UNINJ IIV'
       LEFT OUTER JOIN TRI_ONSITE_RELEASE_Q REL3 ON REL3.FK_GUID = R.PK_GUID
                                               AND REL3.EI_MEDIUM_CODE = 'RCRA C'
       LEFT OUTER JOIN TRI_ONSITE_RELEASE_Q REL4 ON REL4.FK_GUID = R.PK_GUID
                                               AND REL4.EI_MEDIUM_CODE = 'OTH LANDF'
       LEFT OUTER JOIN TRI_ONSITE_RELEASE_Q REL5 ON REL5.FK_GUID = R.PK_GUID
                                               AND REL5.EI_MEDIUM_CODE = 'LAND TREA'
       LEFT OUTER JOIN TRI_ONSITE_RELEASE_Q REL6 ON REL6.FK_GUID = R.PK_GUID
                                               AND REL6.EI_MEDIUM_CODE = 'SI 5.5.3A'
       LEFT OUTER JOIN TRI_ONSITE_RELEASE_Q REL7 ON REL7.FK_GUID = R.PK_GUID
                                               AND REL7.EI_MEDIUM_CODE = 'SI 5.5.3B'
       LEFT OUTER JOIN TRI_ONSITE_RELEASE_Q REL8 ON REL8.FK_GUID = R.PK_GUID
                                               AND REL8.EI_MEDIUM_CODE = 'OTH DISP' 
/

CREATE FORCE VIEW "V_TRI_PAGE4" ( "PK_GUID_SUB", "PK_GUID_REP", "FAC_ID", "CHEM_TXT", "R7A1A", "R7A1B1", "R7A1B2", "R7A1B3", "R7A1B4", "R7A1B5", "R7A1B6", "R7A1B7", "R7A1B8", "R7A1C", "R7A1D", "R7A1E", "R7A2A", "R7A2B1", "R7A2B2", "R7A2B3", "R7A2B4", "R7A2B5", "R7A2B6", "R7A2B7", "R7A2B8", "R7A2C", "R7A2D", "R7A2E", "R7A3A", "R7A3B1", "R7A3B2", "R7A3B3", "R7A3B4", "R7A3B5", "R7A3B6", "R7A3B7", "R7A3B8", "R7A3C", "R7A3D", "R7A3E", "R7A4A", "R7A4B1", "R7A4B2", "R7A4B3", "R7A4B4", "R7A4B5", "R7A4B6", "R7A4B7", "R7A4B8", "R7A4C", "R7A4D", "R7A4E", "R7A5A", "R7A5B1", "R7A5B2", "R7A5B3", "R7A5B4", "R7A5B5", "R7A5B6", "R7A5B7", "R7A5B8", "R7A5C", "R7A5D", "R7A5E" )
AS
SELECT
S.PK_GUID AS PK_GUID_SUB,
R7A1.FK_GUID AS PK_GUID_REP,
F.FAC_ID,
C.CHEM_TXT,
R7A1.R7AA R7A1A,
R7A1.R7AB1 R7A1B1,
R7A1.R7AB2 R7A1B2,
R7A1.R7AB3 R7A1B3,
R7A1.R7AB4 R7A1B4,
R7A1.R7AB5 R7A1B5,
R7A1.R7AB6 R7A1B6,
R7A1.R7AB7 R7A1B7,
R7A1.R7AB8 R7A1B8,
R7A1.R7AC R7A1C,
R7A1.R7AD R7A1D,
R7A1.R7AE R7A1E,
R7A2.R7AA R7A2A,
R7A2.R7AB1 R7A2B1,
R7A2.R7AB2 R7A2B2,
R7A2.R7AB3 R7A2B3,
R7A2.R7AB4 R7A2B4,
R7A2.R7AB5 R7A2B5,
R7A2.R7AB6 R7A2B6,
R7A2.R7AB7 R7A2B7,
R7A2.R7AB8 R7A2B8,
R7A2.R7AC R7A2C,
R7A2.R7AD R7A2D,
R7A2.R7AE R7A2E,
R7A3.R7AA R7A3A,
R7A3.R7AB1 R7A3B1,
R7A3.R7AB2 R7A3B2,
R7A3.R7AB3 R7A3B3,
R7A3.R7AB4 R7A3B4,
R7A3.R7AB5 R7A3B5,
R7A3.R7AB6 R7A3B6,
R7A3.R7AB7 R7A3B7,
R7A3.R7AB8 R7A3B8,
R7A3.R7AC R7A3C,
R7A3.R7AD R7A3D,
R7A3.R7AE R7A3E,
R7A4.R7AA R7A4A,
R7A4.R7AB1 R7A4B1,
R7A4.R7AB2 R7A4B2,
R7A4.R7AB3 R7A4B3,
R7A4.R7AB4 R7A4B4,
R7A4.R7AB5 R7A4B5,
R7A4.R7AB6 R7A4B6,
R7A4.R7AB7 R7A4B7,
R7A4.R7AB8 R7A4B8,
R7A4.R7AC R7A4C,
R7A4.R7AD R7A4D,
R7A4.R7AE R7A4E,
R7A5.R7AA R7A5A,
R7A5.R7AB1 R7A5B1,
R7A5.R7AB2 R7A5B2,
R7A5.R7AB3 R7A5B3,
R7A5.R7AB4 R7A5B4,
R7A5.R7AB5 R7A5B5,
R7A5.R7AB6 R7A5B6,
R7A5.R7AB7 R7A5B7,
R7A5.R7AB8 R7A5B8,
R7A5.R7AC R7A5C,
R7A5.R7AD R7A5D,
R7A5.R7AE R7A5E
FROM
(SELECT FK_GUID, R7AA, R7AB1, R7AB2, R7AB3, R7AB4, R7AB5, R7AB6, R7AB7, R7AB8, R7AC, R7AD, R7AE
  FROM V_TRI_PG4_7A WHERE NUM = 1) R7A1
LEFT OUTER JOIN
(SELECT FK_GUID, R7AA, R7AB1, R7AB2, R7AB3, R7AB4, R7AB5, R7AB6, R7AB7, R7AB8, R7AC, R7AD, R7AE
  FROM V_TRI_PG4_7A WHERE NUM = 2) R7A2
  ON R7A1.FK_GUID = R7A2.FK_GUID
LEFT OUTER JOIN
(SELECT FK_GUID, R7AA, R7AB1, R7AB2, R7AB3, R7AB4, R7AB5, R7AB6, R7AB7, R7AB8, R7AC, R7AD, R7AE
  FROM V_TRI_PG4_7A WHERE NUM = 3) R7A3
  ON R7A1.FK_GUID = R7A3.FK_GUID
LEFT OUTER JOIN
(SELECT FK_GUID, R7AA, R7AB1, R7AB2, R7AB3, R7AB4, R7AB5, R7AB6, R7AB7, R7AB8, R7AC, R7AD, R7AE
  FROM V_TRI_PG4_7A WHERE NUM = 4) R7A4
  ON R7A1.FK_GUID = R7A4.FK_GUID
LEFT OUTER JOIN
(SELECT FK_GUID, R7AA, R7AB1, R7AB2, R7AB3, R7AB4, R7AB5, R7AB6, R7AB7, R7AB8, R7AC, R7AD, R7AE
  FROM V_TRI_PG4_7A WHERE NUM = 5) R7A5
  ON R7A1.FK_GUID = R7A5.FK_GUID
LEFT JOIN TRI_REPORT R
 JOIN TRI_SUB S ON R.FK_GUID = S.PK_GUID
 JOIN TRI_FAC F ON F.FK_GUID = S.PK_GUID
 JOIN TRI_CHEM C ON C.FK_GUID = R.PK_GUID
ON R7A1.FK_GUID = R.PK_GUID 
/

CREATE FORCE VIEW "V_TRI_PAGE5" ( "PK_GUID_SUB", "PK_GUID_REP", "FAC_ID", "CHEM_TXT", "R7B1", "R7B2", "R7B3", "R7C1", "R7C2", "R7C3", "R7C4", "R7C5", "R7C6", "R7C7", "R7C8", "R7C9", "R7C10", "R81AA", "R81AB", "R81AC", "R81AD", "R81BA", "R81BB", "R81BC", "R81BD", "R81CBA", "R81CB", "R81CC", "R81CD", "R81DA", "R81DB", "R81DC", "R81DD", "R82A", "R82B", "R82C", "R82D", "R83A", "R83B", "R83C", "R83D", "R84A", "R84B", "R84C", "R84D", "R85A", "R85B", "R85C", "R85D", "R86A", "R86B", "R86C", "R86D", "R87A", "R87B", "R87C", "R87D", "R88", "R89", "R8101SOURCE", "R8101A", "R8101B", "R8101C", "R8102SOURCE", "R8102A", "R8102B", "R8102C", "R8103SOURCE", "R8103A", "R8103B", "R8103C", "R8104SOURCE", "R8104A", "R8104B", "R8104C", "R811", "R811_TEXT" )
AS
  SELECT S.PK_GUID AS PK_GUID_SUB,
    R.PK_GUID      AS PK_GUID_REP,
    F.FAC_ID,
    C.CHEM_TXT,
    (SELECT ENERGY_RCV_METH_CODE
    FROM V_TRI_PG5_7B M
    WHERE NUM     = 1
    AND M.PK_GUID = R.PK_GUID
    ) R7B1,
    (SELECT ENERGY_RCV_METH_CODE
    FROM V_TRI_PG5_7B M
    WHERE NUM     = 2
    AND M.PK_GUID = R.PK_GUID
    ) R7B2,
    (SELECT ENERGY_RCV_METH_CODE
    FROM V_TRI_PG5_7B M
    WHERE NUM     = 3
    AND M.PK_GUID = R.PK_GUID
    ) R7B3,
    (SELECT ONSITE_RECYCG_METH_CODE
    FROM V_TRI_PG5_7C M
    WHERE NUM     = 1
    AND M.PK_GUID = R.PK_GUID
    ) R7C1,
    (SELECT ONSITE_RECYCG_METH_CODE
    FROM V_TRI_PG5_7C M
    WHERE NUM     = 2
    AND M.PK_GUID = R.PK_GUID
    ) R7C2,
    (SELECT ONSITE_RECYCG_METH_CODE
    FROM V_TRI_PG5_7C M
    WHERE NUM     = 3
    AND M.PK_GUID = R.PK_GUID
    ) R7C3,
    (SELECT ONSITE_RECYCG_METH_CODE
    FROM V_TRI_PG5_7C M
    WHERE NUM     = 4
    AND M.PK_GUID = R.PK_GUID
    ) R7C4,
    (SELECT ONSITE_RECYCG_METH_CODE
    FROM V_TRI_PG5_7C M
    WHERE NUM     = 5
    AND M.PK_GUID = R.PK_GUID
    ) R7C5,
    (SELECT ONSITE_RECYCG_METH_CODE
    FROM V_TRI_PG5_7C M
    WHERE NUM     = 6
    AND M.PK_GUID = R.PK_GUID
    ) R7C6,
    (SELECT ONSITE_RECYCG_METH_CODE
    FROM V_TRI_PG5_7C M
    WHERE NUM     = 7
    AND M.PK_GUID = R.PK_GUID
    ) R7C7,
    (SELECT ONSITE_RECYCG_METH_CODE
    FROM V_TRI_PG5_7C M
    WHERE NUM     = 8
    AND M.PK_GUID = R.PK_GUID
    ) R7C8,
    (SELECT ONSITE_RECYCG_METH_CODE
    FROM V_TRI_PG5_7C M
    WHERE NUM     = 9
    AND M.PK_GUID = R.PK_GUID
    ) R7C9,
    (SELECT ONSITE_RECYCG_METH_CODE
    FROM V_TRI_PG5_7C M
    WHERE NUM     = 10
    AND M.PK_GUID = R.PK_GUID
    ) R7C10,
    (SELECT TOTAL_Q
    FROM TRI_ONSITE_UIC_DISP_QTY X
    WHERE X.FK_GUID    = R.PK_GUID
    AND YEAR_OFFSET_ME = -1
    ) R81AA,
    (SELECT TOTAL_Q
    FROM TRI_ONSITE_UIC_DISP_QTY X
    WHERE X.FK_GUID    = R.PK_GUID
    AND YEAR_OFFSET_ME = 0
    ) R81AB,
    (SELECT TOTAL_Q
    FROM TRI_ONSITE_UIC_DISP_QTY X
    WHERE X.FK_GUID    = R.PK_GUID
    AND YEAR_OFFSET_ME = 1
    ) R81AC,
    (SELECT TOTAL_Q
    FROM TRI_ONSITE_UIC_DISP_QTY X
    WHERE X.FK_GUID    = R.PK_GUID
    AND YEAR_OFFSET_ME = 2
    ) R81AD,
    (SELECT TOTAL_Q
    FROM TRI_ONSITE_DISP_QTY X
    WHERE X.FK_GUID    = R.PK_GUID
    AND YEAR_OFFSET_ME = -1
    ) R81BA,
    (SELECT TOTAL_Q
    FROM TRI_ONSITE_DISP_QTY X
    WHERE X.FK_GUID    = R.PK_GUID
    AND YEAR_OFFSET_ME = 0
    ) R81BB,
    (SELECT TOTAL_Q
    FROM TRI_ONSITE_DISP_QTY X
    WHERE X.FK_GUID    = R.PK_GUID
    AND YEAR_OFFSET_ME = 1
    ) R81BC,
    (SELECT TOTAL_Q
    FROM TRI_ONSITE_DISP_QTY X
    WHERE X.FK_GUID    = R.PK_GUID
    AND YEAR_OFFSET_ME = 2
    ) R81BD,
    (SELECT TOTAL_Q
    FROM TRI_OFFSITE_UIC_DISP_QTY X
    WHERE X.FK_GUID    = R.PK_GUID
    AND YEAR_OFFSET_ME = -1
    ) R81CBA,
    (SELECT TOTAL_Q
    FROM TRI_OFFSITE_UIC_DISP_QTY X
    WHERE X.FK_GUID    = R.PK_GUID
    AND YEAR_OFFSET_ME = 0
    ) R81CB,
    (SELECT TOTAL_Q
    FROM TRI_OFFSITE_UIC_DISP_QTY X
    WHERE X.FK_GUID    = R.PK_GUID
    AND YEAR_OFFSET_ME = 1
    ) R81CC,
    (SELECT TOTAL_Q
    FROM TRI_OFFSITE_UIC_DISP_QTY X
    WHERE X.FK_GUID    = R.PK_GUID
    AND YEAR_OFFSET_ME = 2
    ) R81CD,
    (SELECT TOTAL_Q
    FROM TRI_OFFSITE_DISP_QTY X
    WHERE X.FK_GUID    = R.PK_GUID
    AND YEAR_OFFSET_ME = -1
    ) R81DA,
    (SELECT TOTAL_Q
    FROM TRI_OFFSITE_DISP_QTY X
    WHERE X.FK_GUID    = R.PK_GUID
    AND YEAR_OFFSET_ME = 0
    ) R81DB,
    (SELECT TOTAL_Q
    FROM TRI_OFFSITE_DISP_QTY X
    WHERE X.FK_GUID    = R.PK_GUID
    AND YEAR_OFFSET_ME = 1
    ) R81DC,
    (SELECT TOTAL_Q
    FROM TRI_OFFSITE_DISP_QTY X
    WHERE X.FK_GUID    = R.PK_GUID
    AND YEAR_OFFSET_ME = 2
    ) R81DD,
    (SELECT TOTAL_Q
    FROM TRI_ONSITE_ENERGY_RCV_QTY X
    WHERE X.FK_GUID    = R.PK_GUID
    AND YEAR_OFFSET_ME = -1
    ) R82A,
    (SELECT TOTAL_Q
    FROM TRI_ONSITE_ENERGY_RCV_QTY X
    WHERE X.FK_GUID    = R.PK_GUID
    AND YEAR_OFFSET_ME = 0
    ) R82B,
    (SELECT TOTAL_Q
    FROM TRI_ONSITE_ENERGY_RCV_QTY X
    WHERE X.FK_GUID    = R.PK_GUID
    AND YEAR_OFFSET_ME = 1
    ) R82C,
    (SELECT TOTAL_Q
    FROM TRI_ONSITE_ENERGY_RCV_QTY X
    WHERE X.FK_GUID    = R.PK_GUID
    AND YEAR_OFFSET_ME = 2
    ) R82D,
    (SELECT TOTAL_Q
    FROM TRI_OFFSITE_ENERGY_REC_QTY X
    WHERE X.FK_GUID    = R.PK_GUID
    AND YEAR_OFFSET_ME = -1
    ) R83A,
    (SELECT TOTAL_Q
    FROM TRI_OFFSITE_ENERGY_REC_QTY X
    WHERE X.FK_GUID    = R.PK_GUID
    AND YEAR_OFFSET_ME = 0
    ) R83B,
    (SELECT TOTAL_Q
    FROM TRI_OFFSITE_ENERGY_REC_QTY X
    WHERE X.FK_GUID    = R.PK_GUID
    AND YEAR_OFFSET_ME = 1
    ) R83C,
    (SELECT TOTAL_Q
    FROM TRI_OFFSITE_ENERGY_REC_QTY X
    WHERE X.FK_GUID    = R.PK_GUID
    AND YEAR_OFFSET_ME = 2
    ) R83D,
    (SELECT TOTAL_Q
    FROM TRI_ONSITE_RECYCLED_Q X
    WHERE X.FK_GUID    = R.PK_GUID
    AND YEAR_OFFSET_ME = -1
    ) R84A,
    (SELECT TOTAL_Q
    FROM TRI_ONSITE_RECYCLED_Q X
    WHERE X.FK_GUID    = R.PK_GUID
    AND YEAR_OFFSET_ME = 0
    ) R84B,
    (SELECT TOTAL_Q
    FROM TRI_ONSITE_RECYCLED_Q X
    WHERE X.FK_GUID    = R.PK_GUID
    AND YEAR_OFFSET_ME = 1
    ) R84C,
    (SELECT TOTAL_Q
    FROM TRI_ONSITE_RECYCLED_Q X
    WHERE X.FK_GUID    = R.PK_GUID
    AND YEAR_OFFSET_ME = 2
    ) R84D,
    (SELECT TOTAL_Q
    FROM TRI_OFFSITE_RECYCLED_Q X
    WHERE X.FK_GUID    = R.PK_GUID
    AND YEAR_OFFSET_ME = -1
    ) R85A,
    (SELECT TOTAL_Q
    FROM TRI_OFFSITE_RECYCLED_Q X
    WHERE X.FK_GUID    = R.PK_GUID
    AND YEAR_OFFSET_ME = 0
    ) R85B,
    (SELECT TOTAL_Q
    FROM TRI_OFFSITE_RECYCLED_Q X
    WHERE X.FK_GUID    = R.PK_GUID
    AND YEAR_OFFSET_ME = 1
    ) R85C,
    (SELECT TOTAL_Q
    FROM TRI_OFFSITE_RECYCLED_Q X
    WHERE X.FK_GUID    = R.PK_GUID
    AND YEAR_OFFSET_ME = 2
    ) R85D,
    (SELECT TOTAL_Q
    FROM TRI_ONSITE_TREATED_Q X
    WHERE X.FK_GUID    = R.PK_GUID
    AND YEAR_OFFSET_ME = -1
    ) R86A,
    (SELECT TOTAL_Q
    FROM TRI_ONSITE_TREATED_Q X
    WHERE X.FK_GUID    = R.PK_GUID
    AND YEAR_OFFSET_ME = 0
    ) R86B,
    (SELECT TOTAL_Q
    FROM TRI_ONSITE_TREATED_Q X
    WHERE X.FK_GUID    = R.PK_GUID
    AND YEAR_OFFSET_ME = 1
    ) R86C,
    (SELECT TOTAL_Q
    FROM TRI_ONSITE_TREATED_Q X
    WHERE X.FK_GUID    = R.PK_GUID
    AND YEAR_OFFSET_ME = 2
    ) R86D,
    (SELECT TOTAL_Q
    FROM TRI_OFFSITE_TREATED_Q X
    WHERE X.FK_GUID    = R.PK_GUID
    AND YEAR_OFFSET_ME = -1
    ) R87A,
    (SELECT TOTAL_Q
    FROM TRI_OFFSITE_TREATED_Q X
    WHERE X.FK_GUID    = R.PK_GUID
    AND YEAR_OFFSET_ME = 0
    ) R87B,
    (SELECT TOTAL_Q
    FROM TRI_OFFSITE_TREATED_Q X
    WHERE X.FK_GUID    = R.PK_GUID
    AND YEAR_OFFSET_ME = 1
    ) R87C,
    (SELECT TOTAL_Q
    FROM TRI_OFFSITE_TREATED_Q X
    WHERE X.FK_GUID    = R.PK_GUID
    AND YEAR_OFFSET_ME = 2
    ) R87D,
    ONE_TIME_RELEASE_Q R88,
    PRODUCTION_RATIO_ME R89,
    R8101.R810VALUE R8101SOURCE,
    R8101.R810A R8101A,
    R8101.R810B R8101B,
    R8101.R810C R8101C,
    R8102.R810VALUE R8102SOURCE,
    R8102.R810A R8102A,
    R8102.R810B R8102B,
    R8102.R810C R8102C,
    R8103.R810VALUE R8103SOURCE,
    R8103.R810A R8103A,
    R8103.R810B R8103B,
    R8103.R810C R8103C,
    R8104.R810VALUE R8104SOURCE,
    R8104.R810A R8104A,
    R8104.R810B R8104B,
    R8104.R810C R8104C,
    SUB_ADDITIONAL_DATA_ID R811,
    OPT_INF_TXT R811_TEXT
  FROM TRI_REPORT R
  LEFT OUTER JOIN
    (SELECT PK_GUID,
      R810VALUE,
      R810A,
      R810B,
      R810C
    FROM V_TRI_PG5_810
    WHERE NUM = 1
    ) R8101
  ON R8101.PK_GUID = R.PK_GUID
  LEFT OUTER JOIN
    (SELECT PK_GUID,
      R810VALUE,
      R810A,
      R810B,
      R810C
    FROM V_TRI_PG5_810
    WHERE NUM = 2
    ) R8102
  ON R8102.PK_GUID = R.PK_GUID
  LEFT OUTER JOIN
    (SELECT PK_GUID,
      R810VALUE,
      R810A,
      R810B,
      R810C
    FROM V_TRI_PG5_810
    WHERE NUM = 3
    ) R8103
  ON R8103.PK_GUID = R.PK_GUID
  LEFT OUTER JOIN
    (SELECT PK_GUID,
      R810VALUE,
      R810A,
      R810B,
      R810C
    FROM V_TRI_PG5_810
    WHERE NUM = 4
    ) R8104
  ON R8104.PK_GUID = R.PK_GUID
  JOIN TRI_SUB S
  ON R.FK_GUID = S.PK_GUID
  JOIN TRI_FAC F
  ON F.FK_GUID = S.PK_GUID
  JOIN TRI_CHEM C
  ON C.FK_GUID = R.PK_GUID
/

CREATE FORCE VIEW "V_TRI_PG1_410" ( "PK_GUID", "R410", "NUM" )
AS
SELECT 
/*******************************************************************************
Full Name:          ??
Condensed Name:     V_TRI_PG1_410
Author:             ??
Create date:        ??
Description:        ??
Conversion Author:  Suresh Sikharam
Conversion Date:    03-03-2008
*******************************************************************************/
       R.PK_GUID, UIC_ID_CLBER R410,
       (SELECT COUNT (*)
          FROM TRI_UIC_ID FD2
         WHERE FD2.FK_GUID = FD.FK_GUID
           AND FD2.PK_GUID <= FD.PK_GUID) NUM
  FROM TRI_REPORT R INNER JOIN TRI_SUB S ON R.FK_GUID = S.PK_GUID
 INNER JOIN TRI_FAC F ON F.FK_GUID = S.PK_GUID
 INNER JOIN TRI_UIC_ID FD ON FD.FK_GUID = F.PK_GUID 
/

CREATE FORCE VIEW "V_TRI_PG1_47" ( "PK_GUID", "R47", "NUM" )
AS
SELECT
/*******************************************************************************
Full Name:          ??
Condensed Name:     V_TRI_PG1_47
Author:             ??
Create date:        ??
Description:        ??
Conversion Author:  Suresh Sikharam
Conversion Date:    02-29-2008
*******************************************************************************/

       R.PK_GUID, FAC_DUN_CODE R47,
       (SELECT COUNT (*)
          FROM TRI_FAC_DUN FD2
         WHERE FD2.FK_GUID = FD.FK_GUID
           AND FD2.PK_GUID <= FD.PK_GUID) NUM
  FROM TRI_REPORT R INNER JOIN TRI_SUB S ON R.FK_GUID = S.PK_GUID
 INNER JOIN TRI_FAC F ON F.FK_GUID = S.PK_GUID
 INNER JOIN TRI_FAC_DUN FD ON FD.FK_GUID = F.PK_GUID 
/

CREATE FORCE VIEW "V_TRI_PG1_48" ( "PK_GUID", "R48", "NUM" )
AS
SELECT
/*******************************************************************************
Full Name:          ??
Condensed Name:     V_TRI_PG1_48
Author:             ??
Create date:        ??
Description:        ??
Conversion Author:  Suresh Sikharam
Conversion Date:    02-29-2008
*******************************************************************************/
       R.PK_GUID, RCRA_ID_CLBER R48,
       (SELECT COUNT (*)
          FROM TRI_RCRA_ID FR2
         WHERE FR2.FK_GUID = FR.FK_GUID
           AND FR2.PK_GUID <= FR.PK_GUID) NUM
  FROM TRI_REPORT R INNER JOIN TRI_SUB S ON R.FK_GUID = S.PK_GUID
 INNER JOIN TRI_FAC F ON F.FK_GUID = S.PK_GUID
 INNER JOIN TRI_RCRA_ID FR ON FR.FK_GUID = F.PK_GUID 
/

CREATE FORCE VIEW "V_TRI_PG1_49" ( "PK_GUID", "R49", "NUM" )
AS
SELECT
/*******************************************************************************
Full Name:          ??
Condensed Name:     V_TRI_PG1_49
Author:             ??
Create date:        ??
Description:        ??
Conversion Author:  Suresh Sikharam
Conversion Date:    02-29-2008
*******************************************************************************/
       R.PK_GUID, NPDES_ID_CLBER R49,
       (SELECT COUNT (*)
          FROM TRI_NPDES_ID FD2
         WHERE FD2.FK_GUID = FD.FK_GUID
           AND FD2.PK_GUID <= FD.PK_GUID) NUM
  FROM TRI_REPORT R INNER JOIN TRI_SUB S ON R.FK_GUID = S.PK_GUID
 INNER JOIN TRI_FAC F ON F.FK_GUID = S.PK_GUID
 INNER JOIN TRI_NPDES_ID FD ON FD.FK_GUID = F.PK_GUID 
/

CREATE FORCE VIEW "V_TRI_PG2_53" ( "FK_GUID", "STREAM", "A", "B", "C", "NUM" )
AS
SELECT 
/*******************************************************************************
Full Name:          ??
Condensed Name:     V_TRI_PG2_53
Author:             ??
Create date:        ??
Description:        ??
Conversion Author:  Suresh Sikharam
Conversion Date:    03-03-2008
*******************************************************************************/
       FK_GUID,
       STREAM,
       COALESCE (WASTE_Q_RANGE_CODE, WASTE_Q_ME) A,
       Q_BASIS_EST_CD B,
       RELEASE_STORM_WATER C,
       (SELECT COUNT (*)
          FROM TRI_ONSITE_RELEASE_Q REL2
         WHERE REL2.EI_MEDIUM_CODE = 'WATER'
           AND REL2.FK_GUID = REL.FK_GUID
           AND REL2.PK_GUID <= REL.PK_GUID) NUM
  FROM TRI_ONSITE_RELEASE_Q REL
 WHERE EI_MEDIUM_CODE = 'WATER' 
/

CREATE FORCE VIEW "V_TRI_PG4_62L" ( "FK_GUID", "R62A", "R62B", "R62C", "NUM" )
AS
SELECT 
/*******************************************************************************
Full Name:          ??
Condensed Name:     V_TRI_PG4_62L
Author:             ??
Create date:        ??
Description:        ??
Conversion Author:  Suresh Sikharam
Conversion Date:    03-03-2008
*******************************************************************************/
       TQ.FK_GUID,
       COALESCE (TQ.WASTE_Q_ME, TQ.WASTE_Q_RANGE_CODE) R62A,
       TQ.Q_BASIS_EST_CODE R62B,
       TQ.WASTE_MANAGEMENT_CODE R62C,
       (SELECT COUNT (*)
          FROM TRI_TRANSFER_Q TQ2
         WHERE TQ2.FK_GUID = TQ.FK_GUID
           AND TQ2.PK_GUID <= TQ.PK_GUID) NUM
  FROM TRI_REPORT R 
  LEFT OUTER JOIN TRI_TRANSFER_LOC T ON T.FK_GUID = R.PK_GUID
  LEFT OUTER JOIN TRI_TRANSFER_Q TQ ON TQ.FK_GUID = T.PK_GUID
 WHERE POTW_IND = 'N' 
/

CREATE FORCE VIEW "V_TRI_PG4_7A" ( "FK_GUID", "R7AA", "R7AB1", "R7AB2", "R7AB3", "R7AB4", "R7AB5", "R7AB6", "R7AB7", "R7AB8", "R7AC", "R7AD", "R7AE", "NUM" )
AS
SELECT

 FK_GUID
, R7AA
, CASE WHEN R7AB0 IS NULL THEN R7AB1 ELSE R7AB0 END AS R7AB1
, CASE WHEN R7AB0 IS NULL THEN R7AB2 ELSE R7AB1 END AS R7AB2
, CASE WHEN R7AB0 IS NULL THEN R7AB3 ELSE R7AB2 END AS R7AB3
, CASE WHEN R7AB0 IS NULL THEN R7AB4 ELSE R7AB3 END AS R7AB4
, CASE WHEN R7AB0 IS NULL THEN R7AB5 ELSE R7AB4 END AS R7AB5
, CASE WHEN R7AB0 IS NULL THEN R7AB6 ELSE R7AB5 END AS R7AB6
, CASE WHEN R7AB0 IS NULL THEN R7AB7 ELSE R7AB6 END AS R7AB7
, CASE WHEN R7AB0 IS NULL THEN R7AB8 ELSE R7AB7 END AS R7AB8
, R7AC
, R7AD
, R7AE
, NUM

FROM
(
SELECT W.FK_GUID,
       WASTE_STREAM_TYPE_CODE R7AA,
    (SELECT WASTE_TREAT_METH_CODE  FROM TRI_WASTE_TREAT_METH WM WHERE WM.FK_GUID = W.PK_GUID AND WASTE_TREAT_SEQ_CL = 0) R7AB0,
    (SELECT WASTE_TREAT_METH_CODE  FROM TRI_WASTE_TREAT_METH WM WHERE WM.FK_GUID = W.PK_GUID AND WASTE_TREAT_SEQ_CL = 1) R7AB1,
    (SELECT WASTE_TREAT_METH_CODE  FROM TRI_WASTE_TREAT_METH WM WHERE WM.FK_GUID = W.PK_GUID AND WASTE_TREAT_SEQ_CL = 2) R7AB2,
    (SELECT WASTE_TREAT_METH_CODE  FROM TRI_WASTE_TREAT_METH WM WHERE WM.FK_GUID = W.PK_GUID AND WASTE_TREAT_SEQ_CL = 3) R7AB3,
    (SELECT WASTE_TREAT_METH_CODE  FROM TRI_WASTE_TREAT_METH WM WHERE WM.FK_GUID = W.PK_GUID AND WASTE_TREAT_SEQ_CL = 4) R7AB4,
    (SELECT WASTE_TREAT_METH_CODE  FROM TRI_WASTE_TREAT_METH WM WHERE WM.FK_GUID = W.PK_GUID AND WASTE_TREAT_SEQ_CL = 5) R7AB5,
    (SELECT WASTE_TREAT_METH_CODE  FROM TRI_WASTE_TREAT_METH WM WHERE WM.FK_GUID = W.PK_GUID AND WASTE_TREAT_SEQ_CL = 6) R7AB6,
    (SELECT WASTE_TREAT_METH_CODE  FROM TRI_WASTE_TREAT_METH WM WHERE WM.FK_GUID = W.PK_GUID AND WASTE_TREAT_SEQ_CL = 7) R7AB7,
    (SELECT WASTE_TREAT_METH_CODE  FROM TRI_WASTE_TREAT_METH WM WHERE WM.FK_GUID = W.PK_GUID AND WASTE_TREAT_SEQ_CL = 8) R7AB8,
       INFLUENT_CONC_RANGE_C R7AC,
--       TREAT_EFF_EST_PCT R7AD,
       TREAT_EFF_RANGE_CD R7AD,
       OPERATING_DATA_IND R7AE,
    (SELECT COUNT(*) FROM TRI_WASTE_TREAT_DTL W2 WHERE W2.FK_GUID = W.FK_GUID AND W2.PK_GUID <= W.PK_GUID) NUM
  FROM TRI_REPORT R
       INNER JOIN TRI_WASTE_TREAT_DTL W ON W.FK_GUID = R.PK_GUID
) G1 
/

CREATE FORCE VIEW "V_TRI_PG5_7B" ( "PK_GUID", "ENERGY_RCV_METH_CODE", "NUM" )
AS
SELECT 
/*******************************************************************************
Full Name:          ??
Condensed Name:     V_TRI_PG5_7B
Author:             ??
Create date:        ??
Description:        ??
Conversion Author:  Suresh Sikharam
Conversion Date:    03-03-2008
*******************************************************************************/
       FK_GUID PK_GUID,
       E.ENERGY_RCV_METH_CODE,
       (SELECT COUNT (*)
          FROM TRI_ONSITE_RCV_PROC E2
         WHERE E2.FK_GUID = E.FK_GUID
           AND E2.PK_GUID <= E.PK_GUID) NUM
  FROM TRI_ONSITE_RCV_PROC E 
/

CREATE FORCE VIEW "V_TRI_PG5_7C" ( "PK_GUID", "ONSITE_RECYCG_METH_CODE", "NUM" )
AS
SELECT 
/*******************************************************************************
Full Name:          ??
Condensed Name:     V_TRI_PG5_7C
Author:             ??
Create date:        ??
Description:        ??
Conversion Author:  Suresh Sikharam
Conversion Date:    03-03-2008
*******************************************************************************/
       FK_GUID PK_GUID,
       E.ONSITE_RECYCG_METH_CODE,
       (SELECT COUNT (*)
          FROM TRI_ONSITE_RECYCG_PROC E2
         WHERE E2.FK_GUID = E.FK_GUID
           AND E2.PK_GUID <= E.PK_GUID) NUM
  FROM TRI_ONSITE_RECYCG_PROC E 
/

CREATE FORCE VIEW "V_TRI_PG5_810" ( "PK_GUID", "R810VALUE", "R810A", "R810B", "R810C", "NUM" )
AS
SELECT R.PK_GUID,
       SRC_RED_ACT_CODE R810VALUE,
  (SELECT SRC_RED_METH_CODE FROM V_TRI_PG5_810A M WHERE M.FK_GUID = S.PK_GUID AND NUM = 1)  R810A,
  (SELECT SRC_RED_METH_CODE FROM V_TRI_PG5_810A M WHERE M.FK_GUID = S.PK_GUID AND NUM = 2)  R810B,
  (SELECT SRC_RED_METH_CODE FROM V_TRI_PG5_810A M WHERE M.FK_GUID = S.PK_GUID AND NUM = 3) R810C,
    (SELECT COUNT (*)
             FROM TRI_SRC_RED_ACT S2
            WHERE S2.FK_GUID = S.FK_GUID
              AND S2.PK_GUID <= S.PK_GUID) NUM
  FROM TRI_REPORT R INNER JOIN TRI_SRC_RED_ACT S ON S.FK_GUID = R.PK_GUID
  ORDER BY SRC_RED_SEQ_CL 
/

CREATE FORCE VIEW "V_TRI_PG5_810A" ( "FK_GUID", "SRC_RED_METH_CODE", "NUM" )
AS
SELECT 
/*******************************************************************************
Full Name:          ??
Condensed Name:     V_TRI_PG5_810A
Author:             ??
Create date:        ??
Description:        ??
Conversion Author:  Suresh Sikharam
Conversion Date:    03-03-2008
*******************************************************************************/
       FK_GUID, SRC_RED_METH_CODE, 
      (SELECT COUNT(*) NUM 
         FROM TRI_SRC_RED_METH_CD M2 
        WHERE M2.FK_GUID = M.FK_GUID AND M.SRC_RED_METH_CODE < M2.SRC_RED_METH_CODE) || 1 NUM
FROM TRI_SRC_RED_METH_CD M 
/



CREATE OR REPLACE FORCE VIEW "V_TRI_FORM_R_SHORT_XFR" ("FK_GUID", "AMT_LBS", "WASTE_MANAGEMENT_CODE", "NUM") AS 
  SELECT

 TL.FK_GUID
, COALESCE(TQ.WASTE_Q_RANGE_CODE, TQ.WASTE_Q_ME) AMT_LBS
, TQ.WASTE_MANAGEMENT_CODE
,
 (
 SELECT COUNT(*)
 FROM
  TRI_TRANSFER_LOC TL2
  JOIN TRI_TRANSFER_Q TQ2 ON TQ2.FK_GUID = TL2.PK_GUID
 WHERE
  TL2.FK_GUID = TL.FK_GUID
  AND
  TQ2.PK_GUID >= TQ.PK_GUID
 ) NUM

FROM TRI_TRANSFER_LOC TL
JOIN TRI_TRANSFER_Q TQ ON TQ.FK_GUID = TL.PK_GUID
WHERE TL.POTW_IND = 'N'
AND
 (
 TQ.WASTE_Q_RANGE_CODE IS NOT NULL
 OR
 TQ.WASTE_Q_ME IS NOT NULL
 )
/ 
 


  CREATE OR REPLACE FORCE VIEW "V_TRI_FORM_R_SHORT" ("REPORT_ID", "TRI_REPORT_NUMBER", "SUB_REP_YEAR", "CHEM_NAME", "CAS_NUMBER", "SUB_PARTIAL_FAC_ID", "SUB_FEDERAL_FAC_ID", "CDX_YN", "HARD_COPY_YN", "DISKETTE_YN", "TRIFID", "FACILITY", "STREET_ADDRESS_1", "STREET_ADDRESS_2", "CITY", "ZIP_CODE", "COUNTY", "FACILITY_NAME_MAILING", "MAILING_ADDRESS_1", "MAILING_ADDRESS_2", "MAILING_CITY", "MAILING_STATE", "MAILING_ZIP", "NAICS_CODE", "TECHNICAL_CONTACT", "TECHNICAL_CONTACT_PHONE", "PARENT_COMPANY", "AIR_FUG_51", "AIR_STACK_52", "WATER_531", "WATER_532", "STREAM_531", "STREAM_532", "UNINJ_I_541", "UNINJ_IIV_542", "RCRA_C_551A", "OTH_LANDF_551B", "LAND_TREA_552", "SI_5_5_3_A", "SI_5_5_3_B", "OTH_DISP", "POTW_61A1", "POTW_NAME_61B", "AMT_6201", "WC_6201", "AMT_6202", "WC_6202", "AMT_6203", "WC_6203", "AMT_6204", "WC_6204", "AMT_6205", "WC_6205", "AMT_6206", "WC_6206", "AMT_6207", "WC_6207", "AMT_6208", "WC_6208", "AMT_6209", "WC_6209", "AMT_6210", "WC_6210", "AMT_6211", "WC_6211", "AMT_6212", "WC_6212", "AMT_6213", "WC_6213", "AMT_6214", "WC_6214", "AMT_6215", "WC_6215", "AMT_6216", "WC_6216", "AMT_6217", "WC_6217", "AMT_6218", "WC_6218", "AMT_6219", "WC_6219", "AMT_6220", "WC_6220", "AMT_6221", "WC_6221", "AMT_6222", "WC_6222", "AMT_6223", "WC_6223", "AMT_6224", "WC_6224", "ER_7B1", "ER_7B2", "OR_7C1", "OR_7C2", "SR_81A1", "SR_81A2", "SR_81A3", "SR_81A4", "SR_81B1", "SR_81B2", "SR_81B3", "SR_81B4", "SR_81C1", "SR_81C2", "SR_81C3", "SR_81C4", "SR_81D1", "SR_81D2", "SR_81D3", "SR_81D4", "SR_OFFTOTAL_1", "SR_OFFTOTAL_2", "SR_OFFTOTAL_3", "SR_OFFTOTAL_4", "SR_821", "SR_822", "SR_823", "SR_824", "SR_831", "SR_832", "SR_833", "SR_834", "SR_841", "SR_842", "SR_843", "SR_844", "SR_851", "SR_852", "SR_853", "SR_854", "SR_861", "SR_862", "SR_863", "SR_864", "SR_871", "SR_872", "SR_873", "SR_874", "SR88", "SR89", "R8101", "R8101A", "R8101B", "R8101C", "R8102", "R8102A", "R8102B", "R8102C", "R8103", "R8103A", "R8103B", "R8103C", "R8104", "R8104A", "R8104B", "R8104C", "R811", "CERT_SIGNED_DATE", "DATE_RECEIVED", "REVISION_IND") AS 
  SELECT DISTINCT    R.PK_GUID AS REPORT_ID, R.REPORT_ID TRI_REPORT_NUMBER, R.SUB_REP_YEAR, C.CHEM_TXT AS CHEM_NAME, C.CAS_CLBER AS CAS_NUMBER, R.SUB_PARTIAL_FAC_ID, 
                      R.SUB_FEDERAL_FAC_ID, CASE WHEN TRI_CALC_SUB_METHOD(S.TRI_SUB_ID) IN ('CDX', 'TRIME-WEB') THEN 'Y' ELSE 'N' END AS CDX_YN, 
                      CASE WHEN TRI_CALC_SUB_METHOD(S.TRI_SUB_ID) = 'PAPER' THEN 'Y' ELSE 'N' END AS HARD_COPY_YN, 
                      CASE WHEN TRI_CALC_SUB_METHOD(S.TRI_SUB_ID) = 'DISK' THEN 'Y' ELSE 'N' END AS DISKETTE_YN, F.FAC_ID AS TRIFID, F.FAC_SITE AS FACILITY, 
                      F.LOC_ADD_TXT AS STREET_ADDRESS_1, F.SUPP_LOC_TXT AS STREET_ADDRESS_2, F.LOCALITY AS CITY, F.ADD_POSTAL_CODE AS ZIP_CODE, F.COUNTY, 
                      F.MAIL_FAC_SITE AS FACILITY_NAME_MAILING, F.MAIL_ADD_TXT AS MAILING_ADDRESS_1, F.SUPP_MAIL_ADD AS MAILING_ADDRESS_2, 
                      F.MAIL_ADD_CITY AS MAILING_CITY, F.MAIL_ADD_STATE_CODE AS MAILING_STATE, F.MAIL_ADD_POSTAL_CODE AS MAILING_ZIP, FN.FAC_NAICS AS NAICS_CODE, 
                      R.TECH_CONT AS TECHNICAL_CONTACT, R.TECH_CONT_PHONE_TXT AS TECHNICAL_CONTACT_PHONE, F.PARENT_COMPANY_TXT AS PARENT_COMPANY, 
                      TRI_RANGECODECONVERSION(AIR_FUG.WASTE_Q_ME, AIR_FUG.WASTE_Q_RANGE_CODE) AS AIR_FUG_51, 
                      TRI_RANGECODECONVERSION(AIR_STACK.WASTE_Q_ME, AIR_STACK.WASTE_Q_RANGE_CODE) AS AIR_STACK_52, WATER_1.A AS WATER_531, 
                      WATER_2.A AS WATER_532, WATER_1.STREAM AS STREAM_531, WATER_2.STREAM AS STREAM_532, TRI_RANGECODECONVERSION(UNINJ_I.WASTE_Q_ME, 
                      UNINJ_I.WASTE_Q_RANGE_CODE) AS UNINJ_I_541, TRI_RANGECODECONVERSION(UNINJ_IIV.WASTE_Q_ME, UNINJ_IIV.WASTE_Q_RANGE_CODE) 
                      AS UNINJ_IIV_542, TRI_RANGECODECONVERSION(RCRA_C.WASTE_Q_ME, RCRA_C.WASTE_Q_RANGE_CODE) AS RCRA_C_551A, 
                      TRI_RANGECODECONVERSION(OTH_LANDF.WASTE_Q_ME, OTH_LANDF.WASTE_Q_RANGE_CODE) AS OTH_LANDF_551B, 
                      TRI_RANGECODECONVERSION(LAND_TREA.WASTE_Q_ME, LAND_TREA.WASTE_Q_RANGE_CODE) AS LAND_TREA_552, 
                      TRI_RANGECODECONVERSION(SI_5_5_3_A.WASTE_Q_ME, SI_5_5_3_A.WASTE_Q_RANGE_CODE) AS SI_5_5_3_A, 
                      TRI_RANGECODECONVERSION(SI_5_5_3_B.WASTE_Q_ME, SI_5_5_3_B.WASTE_Q_RANGE_CODE) AS SI_5_5_3_B, 
                      TRI_RANGECODECONVERSION(OTH_DISP.WASTE_Q_ME, OTH_DISP.WASTE_Q_RANGE_CODE) AS OTH_DISP, 
                      TRI_RANGECODECONVERSION(R.WASTE_Q_ME, R.WASTE_Q_RANGE_CODE) AS POTW_61A1, TL_POTW.FAC_SITE AS POTW_NAME_61B, TRANS_6201.AMT_LBS AS AMT_6201, 
                      TRANS_6201.WASTE_MANAGEMENT_CODE AS WC_6201, TRANS_6202.AMT_LBS AS AMT_6202, TRANS_6202.WASTE_MANAGEMENT_CODE AS WC_6202, 
                      TRANS_6203.AMT_LBS AS AMT_6203, TRANS_6203.WASTE_MANAGEMENT_CODE AS WC_6203, TRANS_6204.AMT_LBS AS AMT_6204, 
                      TRANS_6204.WASTE_MANAGEMENT_CODE AS WC_6204, TRANS_6205.AMT_LBS AS AMT_6205, TRANS_6205.WASTE_MANAGEMENT_CODE AS WC_6205, 
                      TRANS_6206.AMT_LBS AS AMT_6206, TRANS_6206.WASTE_MANAGEMENT_CODE AS WC_6206, TRANS_6207.AMT_LBS AS AMT_6207, 
                      TRANS_6207.WASTE_MANAGEMENT_CODE AS WC_6207, TRANS_6208.AMT_LBS AS AMT_6208, TRANS_6208.WASTE_MANAGEMENT_CODE AS WC_6208, 
                      TRANS_6209.AMT_LBS AS AMT_6209, TRANS_6209.WASTE_MANAGEMENT_CODE AS WC_6209, TRANS_6210.AMT_LBS AS AMT_6210, 
                      TRANS_6210.WASTE_MANAGEMENT_CODE AS WC_6210, TRANS_6211.AMT_LBS AS AMT_6211, TRANS_6211.WASTE_MANAGEMENT_CODE AS WC_6211, 
                      TRANS_6212.AMT_LBS AS AMT_6212, TRANS_6212.WASTE_MANAGEMENT_CODE AS WC_6212, TRANS_6213.AMT_LBS AS AMT_6213, 
                      TRANS_6213.WASTE_MANAGEMENT_CODE AS WC_6213, TRANS_6214.AMT_LBS AS AMT_6214, TRANS_6214.WASTE_MANAGEMENT_CODE AS WC_6214, 
                      TRANS_6215.AMT_LBS AS AMT_6215, TRANS_6215.WASTE_MANAGEMENT_CODE AS WC_6215, TRANS_6216.AMT_LBS AS AMT_6216, 
                      TRANS_6216.WASTE_MANAGEMENT_CODE AS WC_6216, TRANS_6217.AMT_LBS AS AMT_6217, TRANS_6217.WASTE_MANAGEMENT_CODE AS WC_6217, 
                      TRANS_6218.AMT_LBS AS AMT_6218, TRANS_6218.WASTE_MANAGEMENT_CODE AS WC_6218, TRANS_6219.AMT_LBS AS AMT_6219, 
                      TRANS_6219.WASTE_MANAGEMENT_CODE AS WC_6219, TRANS_6220.AMT_LBS AS AMT_6220, TRANS_6220.WASTE_MANAGEMENT_CODE AS WC_6220, 
                      TRANS_6221.AMT_LBS AS AMT_6221, TRANS_6221.WASTE_MANAGEMENT_CODE AS WC_6221, TRANS_6222.AMT_LBS AS AMT_6222, 
                      TRANS_6222.WASTE_MANAGEMENT_CODE AS WC_6222, TRANS_6223.AMT_LBS AS AMT_6223, TRANS_6223.WASTE_MANAGEMENT_CODE AS WC_6223, 
                      TRANS_6224.AMT_LBS AS AMT_6224, TRANS_6224.WASTE_MANAGEMENT_CODE AS WC_6224, ENERGY_RCV_7B1.ENERGY_RCV_METH_CODE AS ER_7B1, 
                      ENERGY_RCV_7B2.ENERGY_RCV_METH_CODE AS ER_7B2, ONSITE_RCY_7C1.ONSITE_RECYCG_METH_CODE AS OR_7C1, 
                      ONSITE_RCY_7C2.ONSITE_RECYCG_METH_CODE AS OR_7C2, ONS_UIC_1.TOTAL_Q AS SR_81A1, ONS_UIC_2.TOTAL_Q AS SR_81A2, 
                      ONS_UIC_3.TOTAL_Q AS SR_81A3, ONS_UIC_4.TOTAL_Q AS SR_81A4, ONS_DISP_1.TOTAL_Q AS SR_81B1, ONS_DISP_2.TOTAL_Q AS SR_81B2, 
                      ONS_DISP_3.TOTAL_Q AS SR_81B3, ONS_DISP_4.TOTAL_Q AS SR_81B4, OFF_UIC_1.TOTAL_Q AS SR_81C1, OFF_UIC_2.TOTAL_Q AS SR_81C2, 
                      OFF_UIC_3.TOTAL_Q AS SR_81C3, OFF_UIC_4.TOTAL_Q AS SR_81C4, OFF_DISP_1.TOTAL_Q AS SR_81D1, OFF_DISP_2.TOTAL_Q AS SR_81D2, 
                      OFF_DISP_3.TOTAL_Q AS SR_81D3, OFF_DISP_4.TOTAL_Q AS SR_81D4, NULL AS SR_OFFTOTAL_1, NULL AS SR_OFFTOTAL_2, NULL AS SR_OFFTOTAL_3, NULL AS SR_OFFTOTAL_4, ONS_ERCV_1.TOTAL_Q AS SR_821, ONS_ERCV_2.TOTAL_Q AS SR_822, 
                      ONS_ERCV_3.TOTAL_Q AS SR_823, ONS_ERCV_4.TOTAL_Q AS SR_824, OFF_ERCV_1.TOTAL_Q AS SR_831, OFF_ERCV_2.TOTAL_Q AS SR_832, 
                      OFF_ERCV_3.TOTAL_Q AS SR_833, OFF_ERCV_4.TOTAL_Q AS SR_834, ONS_RECY_1.TOTAL_Q AS SR_841, ONS_RECY_2.TOTAL_Q AS SR_842, 
                      ONS_RECY_3.TOTAL_Q AS SR_843, ONS_RECY_4.TOTAL_Q AS SR_844, OFF_RECY_1.TOTAL_Q AS SR_851, OFF_RECY_2.TOTAL_Q AS SR_852, 
                      OFF_RECY_3.TOTAL_Q AS SR_853, OFF_RECY_4.TOTAL_Q AS SR_854, ONS_TRE_1.TOTAL_Q AS SR_861, ONS_TRE_2.TOTAL_Q AS SR_862, 
                      ONS_TRE_3.TOTAL_Q AS SR_863, ONS_TRE_4.TOTAL_Q AS SR_864, OFF_TRE_1.TOTAL_Q AS SR_871, OFF_TRE_2.TOTAL_Q AS SR_872, 
                      OFF_TRE_3.TOTAL_Q AS SR_873, OFF_TRE_4.TOTAL_Q AS SR_874, R.ONE_TIME_RELEASE_Q AS SR88, R.PRODUCTION_RATIO_ME AS SR89, 
                      SRA_1.R810VALUE AS R8101, SRA_1.R810A AS R8101A, SRA_1.R810B AS R8101B, SRA_1.R810C AS R8101C, SRA_2.R810VALUE AS R8102, 
                      SRA_2.R810A AS R8102A, SRA_2.R810B AS R8102B, SRA_2.R810C AS R8102C, SRA_3.R810VALUE AS R8103, SRA_3.R810A AS R8103A, SRA_3.R810B AS R8103B, 
                      SRA_3.R810C AS R8103C, SRA_4.R810VALUE AS R8104, SRA_4.R810A AS R8104A, SRA_4.R810B AS R8104B, SRA_4.R810C AS R8104C, 
                      R.SUB_ADDITIONAL_DATA_ID AS R811, R.CERT_SIGNED_DATE AS CERT_SIGNED_DATE, TO_CHAR(S.INSERTED_DATE,'MM/DD/YYYY') AS DATE_RECEIVED, R.REVISION_IND
FROM         TRI_SUB S INNER JOIN
                      TRI_FAC F ON S.PK_GUID = F.FK_GUID INNER JOIN
                      TRI_REPORT R ON S.PK_GUID = R.FK_GUID INNER JOIN
                      TRI_CHEM C ON R.PK_GUID = C.FK_GUID LEFT OUTER JOIN
                      V_TRI_PG5_810 SRA_1 ON R.PK_GUID = SRA_1.PK_GUID AND SRA_1.NUM = 1 LEFT OUTER JOIN
                      V_TRI_PG5_810 SRA_2 ON R.PK_GUID = SRA_2.PK_GUID AND SRA_2.NUM = 2 LEFT OUTER JOIN
                      V_TRI_PG5_810 SRA_3 ON R.PK_GUID = SRA_3.PK_GUID AND SRA_3.NUM = 3 LEFT OUTER JOIN
                      V_TRI_PG5_810 SRA_4 ON R.PK_GUID = SRA_4.PK_GUID AND SRA_4.NUM = 4 LEFT OUTER JOIN
                      TRI_ONSITE_UIC_DISP_QTY ONS_UIC_1 ON R.PK_GUID = ONS_UIC_1.FK_GUID AND ONS_UIC_1.YEAR_OFFSET_ME = - 1 LEFT OUTER JOIN
                      TRI_ONSITE_UIC_DISP_QTY ONS_UIC_2 ON R.PK_GUID = ONS_UIC_2.FK_GUID AND ONS_UIC_2.YEAR_OFFSET_ME = 0 LEFT OUTER JOIN
                      TRI_ONSITE_UIC_DISP_QTY ONS_UIC_3 ON R.PK_GUID = ONS_UIC_3.FK_GUID AND ONS_UIC_3.YEAR_OFFSET_ME = 1 LEFT OUTER JOIN
                      TRI_ONSITE_UIC_DISP_QTY ONS_UIC_4 ON R.PK_GUID = ONS_UIC_4.FK_GUID AND ONS_UIC_4.YEAR_OFFSET_ME = 2 LEFT OUTER JOIN
                      TRI_ONSITE_DISP_QTY ONS_DISP_1 ON R.PK_GUID = ONS_DISP_1.FK_GUID AND ONS_DISP_1.YEAR_OFFSET_ME = - 1 LEFT OUTER JOIN
                      TRI_ONSITE_DISP_QTY ONS_DISP_2 ON R.PK_GUID = ONS_DISP_2.FK_GUID AND ONS_DISP_2.YEAR_OFFSET_ME = 0 LEFT OUTER JOIN
                      TRI_ONSITE_DISP_QTY ONS_DISP_3 ON R.PK_GUID = ONS_DISP_3.FK_GUID AND ONS_DISP_3.YEAR_OFFSET_ME = 1 LEFT OUTER JOIN
                      TRI_ONSITE_DISP_QTY ONS_DISP_4 ON R.PK_GUID = ONS_DISP_4.FK_GUID AND ONS_DISP_4.YEAR_OFFSET_ME = 2 LEFT OUTER JOIN
                      TRI_OFFSITE_UIC_DISP_QTY OFF_UIC_1 ON R.PK_GUID = OFF_UIC_1.FK_GUID AND OFF_UIC_1.YEAR_OFFSET_ME = - 1 LEFT OUTER JOIN
                      TRI_OFFSITE_UIC_DISP_QTY OFF_UIC_2 ON R.PK_GUID = OFF_UIC_2.FK_GUID AND OFF_UIC_2.YEAR_OFFSET_ME = 0 LEFT OUTER JOIN
                      TRI_OFFSITE_UIC_DISP_QTY OFF_UIC_3 ON R.PK_GUID = OFF_UIC_3.FK_GUID AND OFF_UIC_3.YEAR_OFFSET_ME = 1 LEFT OUTER JOIN
                      TRI_OFFSITE_UIC_DISP_QTY OFF_UIC_4 ON R.PK_GUID = OFF_UIC_4.FK_GUID AND OFF_UIC_4.YEAR_OFFSET_ME = 2 LEFT OUTER JOIN
                      TRI_OFFSITE_DISP_QTY OFF_DISP_1 ON R.PK_GUID = OFF_DISP_1.FK_GUID AND OFF_DISP_1.YEAR_OFFSET_ME = - 1 LEFT OUTER JOIN
                      TRI_OFFSITE_DISP_QTY OFF_DISP_2 ON R.PK_GUID = OFF_DISP_2.FK_GUID AND OFF_DISP_2.YEAR_OFFSET_ME = 0 LEFT OUTER JOIN
                      TRI_OFFSITE_DISP_QTY OFF_DISP_3 ON R.PK_GUID = OFF_DISP_3.FK_GUID AND OFF_DISP_3.YEAR_OFFSET_ME = 1 LEFT OUTER JOIN
                      TRI_OFFSITE_DISP_QTY OFF_DISP_4 ON R.PK_GUID = OFF_DISP_4.FK_GUID AND OFF_DISP_4.YEAR_OFFSET_ME = 2 LEFT OUTER JOIN
                      TRI_ONSITE_ENERGY_RCV_QTY ONS_ERCV_1 ON R.PK_GUID = ONS_ERCV_1.FK_GUID AND ONS_ERCV_1.YEAR_OFFSET_ME = - 1 LEFT OUTER JOIN
                      TRI_ONSITE_ENERGY_RCV_QTY ONS_ERCV_2 ON R.PK_GUID = ONS_ERCV_2.FK_GUID AND ONS_ERCV_2.YEAR_OFFSET_ME = 0 LEFT OUTER JOIN
                      TRI_ONSITE_ENERGY_RCV_QTY ONS_ERCV_3 ON R.PK_GUID = ONS_ERCV_3.FK_GUID AND ONS_ERCV_3.YEAR_OFFSET_ME = 1 LEFT OUTER JOIN
                      TRI_ONSITE_ENERGY_RCV_QTY ONS_ERCV_4 ON R.PK_GUID = ONS_ERCV_4.FK_GUID AND ONS_ERCV_4.YEAR_OFFSET_ME = 2 LEFT OUTER JOIN
                      TRI_OFFSITE_ENERGY_REC_QTY OFF_ERCV_1 ON R.PK_GUID = OFF_ERCV_1.FK_GUID AND OFF_ERCV_1.YEAR_OFFSET_ME = - 1 LEFT OUTER JOIN
                      TRI_OFFSITE_ENERGY_REC_QTY OFF_ERCV_2 ON R.PK_GUID = OFF_ERCV_2.FK_GUID AND OFF_ERCV_2.YEAR_OFFSET_ME = 0 LEFT OUTER JOIN
                      TRI_OFFSITE_ENERGY_REC_QTY OFF_ERCV_3 ON R.PK_GUID = OFF_ERCV_3.FK_GUID AND OFF_ERCV_3.YEAR_OFFSET_ME = 1 LEFT OUTER JOIN
                      TRI_OFFSITE_ENERGY_REC_QTY OFF_ERCV_4 ON R.PK_GUID = OFF_ERCV_4.FK_GUID AND OFF_ERCV_4.YEAR_OFFSET_ME = 2 LEFT OUTER JOIN
                      TRI_ONSITE_RECYCLED_Q ONS_RECY_1 ON R.PK_GUID = ONS_RECY_1.FK_GUID AND ONS_RECY_1.YEAR_OFFSET_ME = - 1 LEFT OUTER JOIN
                      TRI_ONSITE_RECYCLED_Q ONS_RECY_2 ON R.PK_GUID = ONS_RECY_2.FK_GUID AND ONS_RECY_2.YEAR_OFFSET_ME = 0 LEFT OUTER JOIN
                      TRI_ONSITE_RECYCLED_Q ONS_RECY_3 ON R.PK_GUID = ONS_RECY_3.FK_GUID AND ONS_RECY_3.YEAR_OFFSET_ME = 1 LEFT OUTER JOIN
                      TRI_ONSITE_RECYCLED_Q ONS_RECY_4 ON R.PK_GUID = ONS_RECY_4.FK_GUID AND ONS_RECY_4.YEAR_OFFSET_ME = 2 LEFT OUTER JOIN
                      TRI_OFFSITE_RECYCLED_Q OFF_RECY_1 ON R.PK_GUID = OFF_RECY_1.FK_GUID AND OFF_RECY_1.YEAR_OFFSET_ME = - 1 LEFT OUTER JOIN
                      TRI_OFFSITE_RECYCLED_Q OFF_RECY_2 ON R.PK_GUID = OFF_RECY_2.FK_GUID AND OFF_RECY_2.YEAR_OFFSET_ME = 0 LEFT OUTER JOIN
                      TRI_OFFSITE_RECYCLED_Q OFF_RECY_3 ON R.PK_GUID = OFF_RECY_3.FK_GUID AND OFF_RECY_3.YEAR_OFFSET_ME = 1 LEFT OUTER JOIN
                      TRI_OFFSITE_RECYCLED_Q OFF_RECY_4 ON R.PK_GUID = OFF_RECY_4.FK_GUID AND OFF_RECY_4.YEAR_OFFSET_ME = 2 LEFT OUTER JOIN
                      TRI_ONSITE_TREATED_Q ONS_TRE_1 ON R.PK_GUID = ONS_TRE_1.FK_GUID AND ONS_TRE_1.YEAR_OFFSET_ME = - 1 LEFT OUTER JOIN
                      TRI_ONSITE_TREATED_Q ONS_TRE_2 ON R.PK_GUID = ONS_TRE_2.FK_GUID AND ONS_TRE_2.YEAR_OFFSET_ME = 0 LEFT OUTER JOIN
                      TRI_ONSITE_TREATED_Q ONS_TRE_3 ON R.PK_GUID = ONS_TRE_3.FK_GUID AND ONS_TRE_3.YEAR_OFFSET_ME = 1 LEFT OUTER JOIN
                      TRI_ONSITE_TREATED_Q ONS_TRE_4 ON R.PK_GUID = ONS_TRE_4.FK_GUID AND ONS_TRE_4.YEAR_OFFSET_ME = 2 LEFT OUTER JOIN
                      TRI_OFFSITE_TREATED_Q OFF_TRE_1 ON R.PK_GUID = OFF_TRE_1.FK_GUID AND OFF_TRE_1.YEAR_OFFSET_ME = - 1 LEFT OUTER JOIN
                      TRI_OFFSITE_TREATED_Q OFF_TRE_2 ON R.PK_GUID = OFF_TRE_2.FK_GUID AND OFF_TRE_2.YEAR_OFFSET_ME = 0 LEFT OUTER JOIN
                      TRI_OFFSITE_TREATED_Q OFF_TRE_3 ON R.PK_GUID = OFF_TRE_3.FK_GUID AND OFF_TRE_3.YEAR_OFFSET_ME = 1 LEFT OUTER JOIN
                      TRI_OFFSITE_TREATED_Q OFF_TRE_4 ON R.PK_GUID = OFF_TRE_4.FK_GUID AND OFF_TRE_4.YEAR_OFFSET_ME = 2 LEFT OUTER JOIN
                      V_TRI_PG5_7B ENERGY_RCV_7B1 ON R.PK_GUID = ENERGY_RCV_7B1.PK_GUID AND ENERGY_RCV_7B1.NUM = 1 LEFT OUTER JOIN
                      V_TRI_PG5_7B ENERGY_RCV_7B2 ON R.PK_GUID = ENERGY_RCV_7B2.PK_GUID AND ENERGY_RCV_7B1.NUM = 2 LEFT OUTER JOIN
                      V_TRI_PG5_7C ONSITE_RCY_7C1 ON R.PK_GUID = ONSITE_RCY_7C1.PK_GUID AND ONSITE_RCY_7C1.NUM = 1 LEFT OUTER JOIN
                      V_TRI_PG5_7C ONSITE_RCY_7C2 ON R.PK_GUID = ONSITE_RCY_7C2.PK_GUID AND ONSITE_RCY_7C1.NUM = 2 LEFT OUTER JOIN
                      TRI_TRANSFER_LOC TL_POTW ON R.PK_GUID = TL_POTW.FK_GUID AND TL_POTW.POTW_IND = 'Y' LEFT OUTER JOIN
                      TRI_ONSITE_RELEASE_Q AIR_FUG ON R.PK_GUID = AIR_FUG.FK_GUID AND AIR_FUG.EI_MEDIUM_CODE = 'AIR FUG' LEFT OUTER JOIN
                      TRI_ONSITE_RELEASE_Q AIR_STACK ON R.PK_GUID = AIR_STACK.FK_GUID AND AIR_STACK.EI_MEDIUM_CODE = 'AIR STACK' LEFT OUTER JOIN
                      V_TRI_PG2_53 WATER_1 ON WATER_1.FK_GUID = R.PK_GUID AND WATER_1.NUM = 1 LEFT OUTER JOIN
                      V_TRI_PG2_53 WATER_2 ON WATER_2.FK_GUID = R.PK_GUID AND WATER_2.NUM = 1 LEFT OUTER JOIN
                      TRI_ONSITE_RELEASE_Q UNINJ_I ON R.PK_GUID = UNINJ_I.FK_GUID AND UNINJ_I.EI_MEDIUM_CODE = 'UNINJ I' LEFT OUTER JOIN
                      TRI_ONSITE_RELEASE_Q UNINJ_IIV ON R.PK_GUID = UNINJ_IIV.FK_GUID AND UNINJ_I.EI_MEDIUM_CODE = 'UNINJ IIV' LEFT OUTER JOIN
                      TRI_ONSITE_RELEASE_Q RCRA_C ON R.PK_GUID = RCRA_C.FK_GUID AND RCRA_C.EI_MEDIUM_CODE = 'RCRA C' LEFT OUTER JOIN
                      TRI_ONSITE_RELEASE_Q OTH_LANDF ON R.PK_GUID = OTH_LANDF.FK_GUID AND OTH_LANDF.EI_MEDIUM_CODE = 'OTH LANDF' LEFT OUTER JOIN
                      TRI_ONSITE_RELEASE_Q LAND_TREA ON R.PK_GUID = LAND_TREA.FK_GUID AND LAND_TREA.EI_MEDIUM_CODE = 'LAND TREA' LEFT OUTER JOIN
                      TRI_ONSITE_RELEASE_Q SI_5_5_3_A ON R.PK_GUID = SI_5_5_3_A.FK_GUID AND SI_5_5_3_A.EI_MEDIUM_CODE = 'SI 5.5.3A' LEFT OUTER JOIN
                      TRI_ONSITE_RELEASE_Q SI_5_5_3_B ON R.PK_GUID = SI_5_5_3_B.FK_GUID AND SI_5_5_3_B.EI_MEDIUM_CODE = 'SI 5.5.3B' LEFT OUTER JOIN
                      TRI_ONSITE_RELEASE_Q OTH_DISP ON R.PK_GUID = OTH_DISP.FK_GUID AND OTH_DISP.EI_MEDIUM_CODE = 'OTH DISP' LEFT OUTER JOIN
                      TRI_FAC_NAICS FN ON F.PK_GUID = FN.FK_GUID AND FN.NAICS_PRIMARY_IND = 'Primary' LEFT OUTER JOIN
                      V_TRI_FORM_R_SHORT_XFR TRANS_6201 ON TRANS_6201.FK_GUID = R.PK_GUID AND TRANS_6201.NUM = 1 LEFT OUTER JOIN
                      V_TRI_FORM_R_SHORT_XFR TRANS_6202 ON TRANS_6202.FK_GUID = R.PK_GUID AND TRANS_6202.NUM = 2 LEFT OUTER JOIN
                      V_TRI_FORM_R_SHORT_XFR TRANS_6203 ON TRANS_6203.FK_GUID = R.PK_GUID AND TRANS_6203.NUM = 3 LEFT OUTER JOIN
                      V_TRI_FORM_R_SHORT_XFR TRANS_6204 ON TRANS_6204.FK_GUID = R.PK_GUID AND TRANS_6204.NUM = 4 LEFT OUTER JOIN
                      V_TRI_FORM_R_SHORT_XFR TRANS_6205 ON TRANS_6205.FK_GUID = R.PK_GUID AND TRANS_6205.NUM = 5 LEFT OUTER JOIN
                      V_TRI_FORM_R_SHORT_XFR TRANS_6206 ON TRANS_6206.FK_GUID = R.PK_GUID AND TRANS_6206.NUM = 6 LEFT OUTER JOIN
                      V_TRI_FORM_R_SHORT_XFR TRANS_6207 ON TRANS_6207.FK_GUID = R.PK_GUID AND TRANS_6207.NUM = 7 LEFT OUTER JOIN
                      V_TRI_FORM_R_SHORT_XFR TRANS_6208 ON TRANS_6208.FK_GUID = R.PK_GUID AND TRANS_6208.NUM = 8 LEFT OUTER JOIN
                      V_TRI_FORM_R_SHORT_XFR TRANS_6209 ON TRANS_6209.FK_GUID = R.PK_GUID AND TRANS_6209.NUM = 9 LEFT OUTER JOIN
                      V_TRI_FORM_R_SHORT_XFR TRANS_6210 ON TRANS_6210.FK_GUID = R.PK_GUID AND TRANS_6210.NUM = 10 LEFT OUTER JOIN
                      V_TRI_FORM_R_SHORT_XFR TRANS_6211 ON TRANS_6211.FK_GUID = R.PK_GUID AND TRANS_6211.NUM = 11 LEFT OUTER JOIN
                      V_TRI_FORM_R_SHORT_XFR TRANS_6212 ON TRANS_6212.FK_GUID = R.PK_GUID AND TRANS_6212.NUM = 12 LEFT OUTER JOIN
                      V_TRI_FORM_R_SHORT_XFR TRANS_6213 ON TRANS_6213.FK_GUID = R.PK_GUID AND TRANS_6213.NUM = 13 LEFT OUTER JOIN
                      V_TRI_FORM_R_SHORT_XFR TRANS_6214 ON TRANS_6214.FK_GUID = R.PK_GUID AND TRANS_6214.NUM = 14 LEFT OUTER JOIN
                      V_TRI_FORM_R_SHORT_XFR TRANS_6215 ON TRANS_6215.FK_GUID = R.PK_GUID AND TRANS_6215.NUM = 15 LEFT OUTER JOIN
                      V_TRI_FORM_R_SHORT_XFR TRANS_6216 ON TRANS_6216.FK_GUID = R.PK_GUID AND TRANS_6216.NUM = 16 LEFT OUTER JOIN
                      V_TRI_FORM_R_SHORT_XFR TRANS_6217 ON TRANS_6217.FK_GUID = R.PK_GUID AND TRANS_6217.NUM = 17 LEFT OUTER JOIN
                      V_TRI_FORM_R_SHORT_XFR TRANS_6218 ON TRANS_6218.FK_GUID = R.PK_GUID AND TRANS_6218.NUM = 18 LEFT OUTER JOIN
                      V_TRI_FORM_R_SHORT_XFR TRANS_6219 ON TRANS_6219.FK_GUID = R.PK_GUID AND TRANS_6219.NUM = 19 LEFT OUTER JOIN
                      V_TRI_FORM_R_SHORT_XFR TRANS_6220 ON TRANS_6220.FK_GUID = R.PK_GUID AND TRANS_6220.NUM = 20 LEFT OUTER JOIN
                      V_TRI_FORM_R_SHORT_XFR TRANS_6221 ON TRANS_6221.FK_GUID = R.PK_GUID AND TRANS_6221.NUM = 21 LEFT OUTER JOIN
                      V_TRI_FORM_R_SHORT_XFR TRANS_6222 ON TRANS_6222.FK_GUID = R.PK_GUID AND TRANS_6222.NUM = 22 LEFT OUTER JOIN
                      V_TRI_FORM_R_SHORT_XFR TRANS_6223 ON TRANS_6223.FK_GUID = R.PK_GUID AND TRANS_6223.NUM = 23 LEFT OUTER JOIN
                      V_TRI_FORM_R_SHORT_XFR TRANS_6224 ON TRANS_6224.FK_GUID = R.PK_GUID AND TRANS_6224.NUM = 24
/                      
















CREATE SEQUENCE "ID_SEQ"
 INCREMENT BY 1
 START WITH 10775
 NOMAXVALUE
 MINVALUE 0
 NOCYCLE
 NOCACHE
 ORDER
/

CREATE PACKAGE "PKG_TRI_UTILS" 
AS
  TYPE ret_cursor is ref cursor;
END; 
/

CREATE PROCEDURE "TRI_DELETEFACILITY" 
  (TRIPK IN NUMBER)
IS
/*******************************************************************************
Procedure overview:
-----------------
This procedure deletes data from App_FI_TRIFID and is used by TRI application

Purpose:
Deletes TRIFID data

Modification History:
When            Who                     What
-----------     ----------------------  ----------------------------------------
2007-05-23      Mark Chmarny            Initial Version
03/04/2008      SSIKHARAM               Converted SQL server version to Oracle

*******************************************************************************/

BEGIN

  DELETE 
    FROM App_FI_TRIFID
   WHERE TRIFID_ID = TRIPK;
   
EXCEPTION
  WHEN OTHERS THEN
    RAISE;      
END; 
/

CREATE PROCEDURE "TRI_DEL_TRIFID_DELETE" 
  (RecordId IN NUMBER)
IS
/*******************************************************************************
Procedure overview:
-----------------
This procedure deletes record from App_FI_TRIFID_Delete table and is used by
TRI application

Purpose:
Deletes record from App_FI_TRIFID_Delete table

Modification History:
When            Who                     What
-----------     ----------------------  ----------------------------------------
2007-08-27     TK Conrad (Windsor       Initial Version
               Solutions, Inc)
03/04/2008     SSIKHARAM                Converted SQL server version to Oracle

*******************************************************************************/

BEGIN

  DELETE 
    FROM App_FI_TRIFID_Delete 
   WHERE TRIFID_DELETE_ID = RecordId;

EXCEPTION
  WHEN OTHERS THEN
    RAISE;
END; 
/

CREATE PROCEDURE "TRI_GETFACILITYMANAGERDATA" 
  ( SORT IN VARCHAR2 DEFAULT NULL
    ,ret_cursor OUT PKG_TRI_UTILS.ret_cursor
  )
IS
/*******************************************************************************
Procedure overview:
-----------------
This procedure gets manager data for TRIFID and is used by TRI application

Purpose:
Gets Manager Data by TRIFID

Modification History:
When            Who                     What
-----------     ----------------------  ----------------------------------------
2007-05-23      Mark Chmarny            Initial Version
03/05/2008      SSIKHARAM               Re authored and converted from SQL server 
                                        version to Oracle
10/07/2008      SSIKHARAM               updated with changes made by TK                                          
*******************************************************************************/
  
  thesql long;

BEGIN  
  
  thesql := 'SELECT TRIFID, Deleted, FacilityName, Address, EPA_ID, FS_ID FROM V_MNG_FAC_LIST ORDER BY ';
  thesql := thesql || CASE (UPPER(SORT))
                        WHEN 'TA' THEN 'TRIFID '
                        WHEN 'TD' THEN 'TRIFID DESC '
                        WHEN 'FA' THEN 'FacilityName '
                        WHEN 'FD' THEN 'FacilityName DESC '
                        WHEN 'EA' THEN 'EPA_ID '
                        WHEN 'ED' THEN 'EPA_ID DESC '
                        WHEN 'SA' THEN 'FS_ID '
                        WHEN 'SD' THEN 'FS_ID DESC '
                      ELSE 'TRIFID '
                      END;
                          
  OPEN ret_cursor for thesql; 
      
EXCEPTION
  WHEN OTHERS THEN
    RAISE; 
END; 
/

CREATE PROCEDURE "TRI_GETFACILITYMANAGERDETAIL" 
  ( TRIID IN VARCHAR2
    ,AGENCYID OUT VARCHAR2
    ,EPAID OUT VARCHAR2
    ,COMMENT OUT VARCHAR2
    ,ISUPDATABLE OUT NUMBER
    ,TRIPK OUT NUMBER
    ,INACTIVEDATE OUT DATE
    ,AGENCYNAME OUT VARCHAR2
  )
IS
/*******************************************************************************
Procedure overview:
-----------------
This procedure gets manager data for TRIFID and is used by TRI application

Purpose:
Gets Manager Data by TRIFID

Modification History:
When            Who                     What
-----------     ----------------------  ----------------------------------------
2007-05-23      Mark Chmarny            Initial Version
03/05/2008      SSIKHARAM               Re authored and converted from SQL server 
                                        version to Oracle
10/07/2008      SSIKHARAM               updated with changes made by TK                                        
*******************************************************************************/

  V_AGENCYID VARCHAR2(100);
  V_EPAID VARCHAR2(100);    
  V_COMMENT VARCHAR2(100);
  V_TRIPK NUMBER;
  V_INACTIVEDATE DATE;
  V_AGENCYNAME VARCHAR2(100);
  V_COUNT NUMBER(10);  
  
BEGIN

  -- Assign the PK from the existent record
  SELECT TRIFID_ID,AgencyID,EPAID,Inactive_DT, AgencyName
    INTO v_tripk, v_agencyid, v_epaid, v_inactivedate, v_agencyname
    FROM App_FI_TRIFID 
   WHERE TRIFID = TRIID;
  
  AGENCYID := v_agencyid;
  TRIPK := v_tripk;
  INACTIVEDATE := v_inactivedate;
  EPAID := v_epaid;
  AGENCYNAME := v_agencyname;
  
  -- If there is no record Pk the rest does not matter
  IF (v_tripk IS NULL) THEN
    RAISE_APPLICATION_ERROR(-20001, 'Unable to find TRIFID');
  END IF;  

  SELECT Comment_DS 
    INTO v_comment
    FROM V_FAC_IDENT
   WHERE TRIFID = TRIID;
  
  COMMENT := v_comment;
  
  SELECT COUNT(*)
    INTO v_count
    FROM V_MNG_FAC_DTL
   WHERE TRIFID = TRIID;
  
  IF v_count <> 0 THEN
    ISUPDATABLE := 0;
  ELSE
    ISUPDATABLE := 1;
  END IF;  
  
EXCEPTION
  WHEN OTHERS THEN
    RAISE;
END; 
/

CREATE PROCEDURE "TRI_GETFACILITYMNGDETAILDATA" 
  ( TID IN VARCHAR2
    ,IDX IN NUMBER   --0 or 1 only (0 for subid results and 1 for chemid details
    ,ret_cursor OUT PKG_TRI_UTILS.ret_cursor   
  )
IS
/*******************************************************************************
Procedure overview:
-----------------
This procedure gets manager data for TRIFID and is used by TRI application

Purpose:
Gets Manager Data by TRIFID

Modification History:
When            Who                     What
-----------     ----------------------  ----------------------------------------
2007-05-23      Mark Chmarny            Initial Version
03/04/2008      SSIKHARAM               Converted SQL server version to Oracle
10/07/2008      SSIKHARAM               updated the procedures with TK's changes  
*******************************************************************************/
  
BEGIN

  IF IDX NOT IN (0,1) THEN
    RAISE_APPLICATION_ERROR(-20001, 'AN INVALID PARAMETER IS PASSED.  PLEASE PASS 0 or 1 FOR IDX.');
  END IF;
  
  --ORDER BY TRIFID, ReportingYear DESC
  IF IDX = 0 THEN
    OPEN ret_cursor FOR
      SELECT DISTINCT G.TRIFID
             ,G.ReportingYear
             ,G.SubmittedFacilityName
             ,G.EPAReceivedDate
             ,TO_CHAR(G.EPAReceivedDate, 'MMDDYYYY') as EPAReceivedDateDisplay             
             ,G.SubmissionMethod
             ,G.Status
        FROM V_MNG_FAC_DTL G
       WHERE TRIFID = to_char(TID)
         AND NOT EXISTS
             (
             SELECT 1
               FROM App_FI_TRIFID_Delete D
               JOIN App_FI_TRIFID T 
                 ON T.TRIFID_ID = D.TRIFID_ID_FK
              WHERE T.TRIFID = G.TRIFID
                AND D.TRI_SUB_ID = G.TRI_SUB_ID
             );
  ELSIF IDX = 1 THEN
    OPEN ret_cursor FOR
      SELECT DISTINCT TRIFID
             ,ReportingYear
             ,StateReceivedDate
             ,SubmissionMethod
        FROM V_MAN_SUB_DTL 
       WHERE TRIFID = TO_CHAR(TID)
       ORDER BY TRIFID, ReportingYear DESC;
  END IF;  
   
EXCEPTION
  WHEN OTHERS THEN
    RAISE;
END; 
/

CREATE PROCEDURE "TRI_GETMANUALSUBMISSIONDATA" 
  ( TID IN VARCHAR2
    ,YEAR IN VARCHAR2
    ,ret_cursor OUT PKG_TRI_UTILS.ret_cursor
  )
IS
/*******************************************************************************
Procedure overview:
-----------------
This procedure gets summary data by TRIFID and is used by TRI application

Purpose:
Gets Summary Data by TRIFID

Modification History:
When            Who                     What
-----------     ----------------------  ----------------------------------------
2007-05-23      Mark Chmarny            Initial Version
03/04/2008      SSIKHARAM               Converted SQL server version to Oracle

*******************************************************************************/
    
BEGIN

  OPEN ret_cursor FOR
    SELECT TRIFID
           ,ReportingYear
           ,StateReceivedDate
           ,SubmissionMethod
      FROM V_MAN_SUB_DTL
     WHERE TRIFID = TO_CHAR(TID)
       AND ReportingYear = TO_CHAR(YEAR);                
   
EXCEPTION
  WHEN OTHERS THEN
    RAISE;
END; 
/

CREATE PROCEDURE "TRI_GETTRIFID_DELETE" 
  (  TRIFID IN VARCHAR2
     ,ret_cursor OUT PKG_TRI_UTILS.ret_cursor
  )
IS
/*******************************************************************************
Procedure overview:
-----------------
This procedure fetches TRIFID data and is used by TRI application

Purpose:
Fetch TRIFID data

Modification History:
When            Who                     What
-----------     ----------------------  ----------------------------------------
2007-08-27      TK Conrad (Windsor      Initial Version
                Solutions, Inc.)
03/05/2008      SSIKHARAM               Re-authored and converted from SQL server 
                                        version to Oracle
*******************************************************************************/
  
BEGIN

  OPEN ret_cursor FOR
    SELECT F.FAC_ID AS TRIFID 
           ,F.FAC_SITE AS FACNAME
           ,S.INSERTED_DATE AS ReceivedOn
           ,D.Last_Updated_DT AS DeletedOn
           ,D.TRIFID_DELETE_ID AS RecordId
      FROM TRI_FAC F
     INNER JOIN  TRI_SUB S ON F.FK_GUID = S.PK_GUID 
     INNER JOIN  App_FI_TRIFID_Delete D ON S.TRI_SUB_ID = D.TRI_SUB_ID
     WHERE F.FAC_ID = TO_CHAR(TRIFID)
     ORDER BY D.Last_Updated_DT DESC;

EXCEPTION
  WHEN OTHERS THEN
    RAISE;
END; 
/

CREATE PROCEDURE "TRI_INSERT_APP_FI_TRIFID" 
AS
/*******************************************************************************
Procedure overview:
-----------------
This procedure adds new recrods into App_FI_TRIFID table and is used by
TRI application

Purpose:
Loads the App_FI_TRIFID table as a bulk operation

-- =============================================
-- Author:    TK Conrad
-- CREATE date: 2008-05-02
-- Description:  Loads the App_FI_TRIFID table as a bulk operation
-- =============================================

Modification History:
When            Who                     What
-----------     ----------------------  ----------------------------------------
2007-04-30     TK Conrad                Initial Version
03/04/2008     SSIKHARAM                Converted SQL server version to Oracle
10/07/2008      SSIKHARAM               updated the procedures with TK's changes 
*******************************************************************************/

 UserID  varchar(25) default 'System';

BEGIN

  INSERT INTO App_FI_TRIFID
             (TRIFID
             ,AgencyID
             ,EPAID
             ,Inactive_DT
             ,Last_Updated_User_ID
             ,Last_Updated_DT)
  SELECT
              F.FAC_ID
             ,NULL
             ,NULL
             ,NULL
             ,UserID
             ,SYSDATE
  FROM TRI_FAC F
  JOIN TRI_SUB S ON S.PK_GUID = F.FK_GUID
  WHERE NOT EXISTS
    (
    SELECT * FROM App_FI_TRIFID FI2
    WHERE FI2.TRIFID = F.FAC_ID
    )
  GROUP BY F.FAC_ID;

--SET @Err = @@ERROR
--IF @Err <> 0
--  BEGIN
--    ROLLBACK TRAN
--    RAISERROR('An error occurred while attempting to insert a new TRIFID into App_FI_TRIFID table.', 16, 1)
--    RETURN @Err
--  END

--COMMIT TRAN

--END

EXCEPTION
  WHEN OTHERS THEN
    RAISE;
END; 
/

CREATE PROCEDURE "TRI_INSERT_APP_FI_TRIFID_BULK" 
  ( SUB_ID IN VARCHAR2 
    ,UserId IN VARCHAR2
  )
IS
/*******************************************************************************
Procedure overview:
-----------------
This procedure adds new recrods into App_FI_TRIFID table and is used by
TRI application

Purpose:
Loads the App_FI_TRIFID table as a bulk operation

Modification History:
When            Who                     What
-----------     ----------------------  ----------------------------------------
2007-04-30     TK Conrad                Initial Version
03/04/2008     SSIKHARAM                Converted SQL server version to Oracle

*******************************************************************************/

BEGIN

  INSERT 
    INTO App_FI_TRIFID
         (TRIFID
         ,AgencyID
         ,EPAID
         ,Inactive_DT
         ,Last_Updated_User_ID
         ,Last_Updated_DT)
  SELECT F.FAC_ID
         ,NULL
         ,NULL
         ,NULL
         ,UserID
         ,SYSDATE
    FROM TRI_FAC F
    JOIN TRI_SUB S ON S.PK_GUID = F.FK_GUID
   WHERE NOT EXISTS
         (
         SELECT 1 
           FROM App_FI_TRIFID FI2
          WHERE FI2.TRIFID = F.FAC_ID
         )
   GROUP BY F.FAC_ID;

   --COMMIT;

--SET @Err = @@ERROR
--IF @Err <> 0
--  BEGIN
--    ROLLBACK TRAN
--    RAISERROR('An error occurred while attempting to insert a new TRIFID into App_FI_TRIFID table.', 16, 1)
--    RETURN @Err
--  END

--COMMIT TRAN

EXCEPTION
  WHEN OTHERS THEN
    RAISE;
END; 
/

CREATE PROCEDURE "TRI_INSERT_EMAILLOG" 
  ( SUB_ID IN VARCHAR2
    ,USERID IN VARCHAR2
  )
IS
/*******************************************************************************
Procedure overview:
-----------------
This procedure creates the e-mail log and is used by TRI application

Purpose:
Inserts a new record in the email log table indicating that an email has
been sent to the technical contact indicating that the EPA submission was
received by Washington Ecology. Gets fired off immediately after emails
have been sent out.

Modification History:
When            Who                     What
-----------     ----------------------  ----------------------------------------
2007-04-30     TK Conrad                Initial Version
03/04/2008     SSIKHARAM                Converted SQL server version to Oracle

*******************************************************************************/
  V_USERID VARCHAR2(25);

BEGIN

  IF USERID IS NULL THEN 
    V_USERID := 'TRI_Loader';
  ELSE
    V_USERID := USERID; 
  END IF;

  INSERT 
    INTO App_EmailLog
         (TRI_SUB_ID
         ,Sent_DT
         ,Contact_Email_DS
         ,Last_Updated_User_ID
         ,Last_Updated_DT)
  SELECT DISTINCT
         s.PK_GUID -- <PK_GUID, varchar(36)>
        ,SYSDATE -- GetDate()
        ,LOWER(r.TECH_CONT_EMAIL_ADDRES) -- R.
        ,V_USERID -- 'TRI Update 20080206'
        ,SYSDATE -- GetDate()
   FROM TRI_SUB s
   JOIN TRI_REPORT r ON r.FK_GUID = s.PK_GUID
  WHERE s.TRI_SUB_ID = SUB_ID
    AND NOT EXISTS
        (
        SELECT 1 FROM App_EmailLog e2
        WHERE e2.TRI_SUB_ID = SUB_ID
        )
    AND INSTR(NVL(r.TECH_CONT_EMAIL_ADDRES, 0), '@',1,1) > 0 ;

  --COMMIT;
  
--SET @Err = @@ERROR
--IF @Err <> 0
--  BEGIN
--  ROLLBACK TRAN
--  RAISERROR('An error occurred during insert', 16, 1)
--  RETURN @Err
--  END
--ELSE
--  COMMIT TRAN

EXCEPTION
  WHEN OTHERS THEN
    RAISE;
END; 
/

CREATE PROCEDURE "TRI_INS_APP_FI_TRIFID_DELETE" 
  ( TRIFID IN    VARCHAR2 
    ,COMMENT IN VARCHAR2
    ,USERID IN VARCHAR2 
  )
IS
/*******************************************************************************
Procedure overview:
-----------------
This procedure inserts a record into App_FI_TRIFID table and is used by
TRI application

Purpose:
Inserts a record into the App_FI_TRIFID table

Modification History:
When            Who                     What
-----------     ----------------------  ----------------------------------------
2007-04-30     TK Conrad                Initial Version
03/05/2008     SSIKHARAM                Re-authored and converted SQL server 
                                        version to Oracle
*******************************************************************************/

  V_TRIFID_ID NUMBER(10);
  
BEGIN

-- check to see whether a record already exists
  SELECT COUNT(*) 
    INTO V_TRIFID_ID
    FROM App_FI_TRIFID
   WHERE TRIFID = TRIFID;

  IF v_trifid_id <> 0 THEN
    RAISE_APPLICATION_ERROR(-20001, 'TRIFID already exists. Please choose '|| ''''||'Update'||''''||' Instead.');
  END IF;

  INSERT 
    INTO App_FI_TRIFID
         (TRIFID
         ,Inactive_DT
         ,Last_Updated_User_ID
         ,Last_Updated_DT)
  VALUES (TRIFID
         ,NULL
         ,USERID
         ,SYSDATE);

  --COMMIT;
           
  --SET @TRIFID_ID = SCOPE_IDENTITY()
  SELECT MAX(TRIFID) 
    INTO V_TRIFID_ID 
    FROM APP_FI_TRIFID;

  INSERT 
    INTO App_FI_TRIFID_Comment
         (TRIFID_ID_FK
         ,Comment_DS
         ,Last_Updated_User_ID
         ,Last_Updated_DT)
  VALUES (V_TRIFID_ID 
         ,COMMENT 
         ,USERID
         ,SYSDATE
         );
  
  --COMMIT;
          
EXCEPTION
  WHEN OTHERS THEN
    RAISE;
END; 
/

CREATE PROCEDURE "TRI_INS_TRIFID_DELETE" 
  ( TRIFID IN    VARCHAR2 
    ,REPORT_YEAR IN VARCHAR2
    ,REC_DATE IN DATE
    ,UserId IN VARCHAR2 
  )
IS
/*******************************************************************************
Procedure overview:
-----------------
This procedure adds a new recrod to App_FI_TRIFID_Delete table and is used by
TRI application

Purpose:
Adds new record to App_FI_TRIFID_Delete

Modification History:
When            Who                     What
-----------     ----------------------  ----------------------------------------
2007-08-27     TK Conrad (Windsor       Initial Version
               Solutions, Inc.)
03/05/2008     SSIKHARAM                Converted SQL server version to Oracle

*******************************************************************************/

BEGIN

  INSERT INTO App_FI_TRIFID_Delete
         (TRIFID_ID_FK
         ,TRI_SUB_ID
         ,Last_Updated_User_ID
         ,Last_Updated_DT)

  SELECT DISTINCT    T.TRIFID_ID
          ,  S.TRI_SUB_ID
          ,  UserId
          ,  sysdate
    FROM App_FI_TRIFID T 
   INNER JOIN  TRI_FAC F ON T.TRIFID = F.FAC_ID
   INNER JOIN  TRI_SUB S ON S.PK_GUID = F.FK_GUID  
   INNER JOIN  TRI_REPORT R ON S.PK_GUID = R.FK_GUID
   WHERE F.FAC_ID = TRIFID 
     AND R.SUB_REP_YEAR = REPORT_YEAR
     --AND DATEDIFF(minute, S.INSERTED_DATE, P_REC_DATE) = 0;
     AND TRUNC(S.INSERTED_DATE) = TRUNC(REC_DATE);
  
  --  IF SCOPE_IDENTITY() = 0
  --    BEGIN
  --      RAISERROR('No record found', 16, 1);
  --      RETURN;
  --    END

  IF SQL%NOTFOUND THEN
    RAISE_APPLICATION_ERROR(-20001, 'No record found: ');
  END IF;

EXCEPTION
  WHEN OTHERS THEN
    RAISE;
END; 
/

CREATE PROCEDURE "TRI_PROCESSPOST_TRI_LOADER" 
IS
/*******************************************************************************
Procedure overview:
-----------------
This procedure call all update procedures to be run after TRI data load
and is used by TRI application

Purpose:
Calls all update procedures to be run immediately after loading TRI data.

Modification History:
When            Who                     What
-----------     ----------------------  ----------------------------------------
2007-06-06      TK Conrad               Initial Version
03/10/2008      SSIKHARAM               Re-authored and converted SQL server 
                                        version to Oracle
10/07/2008      SSIKHARAM               updated the procedures with TK's changes  
                                        removed the tri_normalize_submissions call 
                                        changed the reference from 
                                        TRI_Insert_App_FI_TRIFID_bulk to
                                        TRI_Insert_App_FI_TRIFID                                      
*******************************************************************************/
  
  v_rc number(10);
  v_userid VARCHAR2(255);
  
BEGIN
  
  -- Set defaults
    v_userid := 'TRI_Loader';
  
  -- Insert new TRIFIDs from recently-processed submission into App_FI_TRIFID
  BEGIN
    --TRI_TEST.TRI_Insert_App_FI_TRIFID_bulk( SUB_ID,V_USERID);
    TRI_Insert_App_FI_TRIFID;    
  EXCEPTION
    WHEN OTHERS THEN
      RAISE; --_APPLICATION_ERROR(-20002, 'Insert into App_FI_TRIFID procedure failed'||SQLCODE||' '||SQLERRM);
  END;
  
--  TKC 7/9  Removing the reference to loading the "agency" ID table
/*
  EXEC @RC = dbo.TRI_Insert_App_FI_LinkTRIFID_Agency
     @SUB_ID
    ,@UserId
*/

  
EXCEPTION
  WHEN OTHERS THEN
    RAISE; --_APPLICATION_ERROR(-20004, 'An Error Occurred in P_TRI_ProcessPost_TRI_Loader procedure'||SQLCODE||' '||SQLERRM);
END; 
/

CREATE PROCEDURE "TRI_SETFACILITY" 
  ( TRIPK IN NUMBER
    ,TRIID IN VARCHAR2
    ,AGENCYID IN VARCHAR2
    ,EPAID IN VARCHAR2
    ,AGENCYNAME IN VARCHAR2
    ,COMMENT IN VARCHAR2 DEFAULT NULL
    ,USERID IN VARCHAR2
    ,INACTIVEDATE IN DATE DEFAULT NULL
  )
IS
/*******************************************************************************
Procedure overview:
-----------------
This procedure updates the app_FI_TRIFID table and either insert or update the
App_FI_TRIFID_Comment table and is used by TRI application

Purpose:
updates a record into the App_FI_TRIFID table or insert or update the 
app_FI_TRIFID_Comment table

Modification History:
When            Who                     What
-----------     ----------------------  ----------------------------------------
2007-04-30     TK Conrad                Initial Version
03/04/2008     SSIKHARAM                Converted SQL server version to Oracle
10/07/2008     SSIKHARAM                updated the procedures with TK's changes 
                                        added agencyname parameter
*******************************************************************************/

  v_exists  number(10) default 0;
  NO_RECORD_FOUND EXCEPTION;

BEGIN

  SELECT COUNT(*) INTO v_exists FROM App_FI_TRIFID WHERE TRIFID_ID = TRIPK;
  
  -- check to see whether record exists
  IF v_exists = 0 THEN
    RAISE NO_RECORD_FOUND; --_APPLICATION_ERROR(-20001, 'Unable to find record with that PK' || SQLCODE || ' '||SQLERRM);
  END IF; 

  -- Update the Id
  UPDATE App_FI_TRIFID 
     SET TRIFID = TRIID,
         AgencyID = AGENCYID,
         EPAID = EPAID,
         AGENCYNAME = AGENCYNAME,
         Last_Updated_User_ID = USERID,
         Last_Updated_DT = SYSDATE,
         Inactive_DT = INACTIVEDATE
   WHERE TRIFID_ID = TRIPK;


  IF (COMMENT IS NULL) THEN
  
    DELETE 
      FROM App_FI_TRIFID_Comment
     WHERE TRIFID_ID_FK = TRIPK;
    
  ELSE
    v_exists := 0;
    SELECT COUNT(*) INTO v_exists FROM App_FI_TRIFID_Comment WHERE TRIFID_ID_FK = TRIPK;
    
    IF v_exists <> 0 THEN

      UPDATE App_FI_TRIFID_Comment
         SET Comment_DS = COMMENT,
             Last_Updated_User_ID = USERID,
             Last_Updated_DT = SYSDATE
       WHERE TRIFID_ID_FK = TRIPK;

    ELSE

      INSERT INTO App_FI_TRIFID_Comment
             (TRIFID_ID_FK
             ,Comment_DS
             ,Last_Updated_User_ID
             ,Last_Updated_DT)
         VALUES
             (TRIPK
             ,COMMENT
             ,USERID
             ,SYSDATE);
     
     END IF;
 
  END IF;
    
  --COMMIT;
     
EXCEPTION
  WHEN OTHERS THEN  
    RAISE;
END; 
/

CREATE PROCEDURE "TRI_SETFACILITYMANAGERDETAIL" 
  ( TRIIDORIGINAL IN VARCHAR2 DEFAULT NULL
    ,TRIIDNEW IN VARCHAR2
    ,EPAID IN VARCHAR2
    ,AGENCYID IN VARCHAR2
    ,COMMENT IN VARCHAR2 DEFAULT NULL
    ,USERID IN VARCHAR2
  )
IS
/*******************************************************************************
Procedure overview:
-----------------
This procedure updates or inserts into the App_FI_LinkTRIFID_Agency table and 
is used by TRI application

Purpose:
Inserts new association into App_FI_LinkTRIFID_Agency

Modification History:
When            Who                     What
-----------     ----------------------  ----------------------------------------
2007-05-23      Mark Chmarny            Initial Version
03/04/2008      SSIKHARAM               Converted SQL server version to Oracle

*******************************************************************************/

  -- Holds the PK to the main TRI Id row
  v_trifid_id APP_FI_TRIFID.TRIFID_ID%TYPE;
  v_trifid APP_FI_TRIFID.TRIFID%TYPE;
  v_exists NUMBER(10) DEFAULT 0;
  
BEGIN

  -- ********************************************************
  -- 1. Get the TRI Id
  -- ********************************************************

  -- Check if this is an Add or an Update based on 
  -- presense of the otriOriginal Id
  IF (TRIIDORIGINAL IS NULL) THEN
  
      -- Check that the new Id does not already 
      -- exists in the tri table
      SELECT COUNT(*) 
        INTO v_exists 
        FROM App_FI_TRIFID
       WHERE TRIFID = TRIIDNEW;
      
      IF v_exists <> 0 THEN
        RAISE_APPLICATION_ERROR(-20001, 'TRIFID Already Exists.' || SQLCODE || ' ' || SQLERRM);
      END IF;
      
      -- Insert new tri id to the master tri table
      INSERT 
        INTO App_FI_TRIFID
             (TRIFID
             ,AgencyID
             ,EPAID
             ,Inactive_DT
             ,Last_Updated_User_ID
             ,Last_Updated_DT)
      VALUES
             (TRIIDNEW
             ,AGENCYID
             ,EPAID
             ,NULL
             ,USERID
             ,SYSDATE);
            
      -- Assign the resulting Id as PK
      --SELECT @trifId = SCOPE_IDENTITY();
      
      --The following is a replacement for the above code. need to check
      BEGIN
        SELECT TRIFID INTO v_trifid FROM App_FI_TRIFID;
      EXCEPTION
        WHEN TOO_MANY_ROWS THEN
          RAISE; --_APPLICATION_ERROR(-20002, 'TOO MANY ROWS ARE RETRIEVED FOR TRIFID' || SQLCODE || ' ' ||SQLERRM);
      END;
      
  ELSE 
  
    -- Id already exists, must be an update
    -- Assign the PK from the existent record
--    SELECT @trifId = TRIFID_ID 
--    FROM App_FI_TRIFID 
--    WHERE TRIFID = @triIdOriginal;
    
    BEGIN
      SELECT TRIFID_ID INTO v_trifid_id FROM App_FI_TRIFID;
    EXCEPTION
      WHEN TOO_MANY_ROWS THEN
        RAISE;
    END;
    -- If the PK is still null after the update throw an exception
    IF (v_trifid_id IS NULL) THEN      
      RAISE_APPLICATION_ERROR(-20002, 'Unable to find a record with this TRIFID: ' || v_trifid_id);
    END IF;
    
  END IF;
  -- ********************************************************
  -- 2. Get the TRI Id
  -- ********************************************************

/*
  IF (@comment IS NOT NULL)
  
  BEGIN

    

  END;

  -- Update
  UPDATE App_FI_TRIFID SET TRIFID = @triIdNew WHERE TRIFID_ID = @trifId;

  -- Insert
  INSERT INTO App_FI_LinkTRIFID_Agency
         (TRIFID_ID_FK
         ,Agency_ID
         ,Agency_Type_FK
         ,Last_Updated_User_ID
         ,Last_Updated_DT)
     VALUES
         (@trifId
         ,<Agency_ID, varchar(100),>
         ,<Agency_Type_FK, int,>
         ,<Last_Updated_User_ID, varchar(25),>
         ,<Last_Updated_DT, datetime,>)
*/

  --COMMIT;   

EXCEPTION
  WHEN OTHERS THEN
    RAISE;
END; 
/

CREATE PROCEDURE "TRI_SETNEWFACILITY" 
  ( TRIID IN VARCHAR2
    ,AGENCYID IN VARCHAR2
    ,EPAID IN VARCHAR2
    ,COMMENT IN VARCHAR2
    ,USERID IN VARCHAR2
    ,AGENCYNAME IN VARCHAR2
    ,INACTIVEDATE IN DATE DEFAULT NULL
    ,TRIPK OUT NUMBER
  )
IS
/*******************************************************************************
Procedure overview:
-----------------
This procedure inserts into the App_FI_TRIFID, App_FI_TRIFID_Comment tables and
is used by TRI application

Purpose:
Inserts a record into the App_FI_TRIFID, App_FI_TRIFID_Comment tables

Modification History:
When            Who                     What
-----------     ----------------------  ----------------------------------------
2007-04-30      TK Conrad               Initial Version
03/04/2008      SSIKHARAM               Converted SQL server version to Oracle
10/07/2008     SSIKHARAM                updated the procedures with TK's changes 
                                        added agencyname parameter
*******************************************************************************/
 
  v_trifid APP_FI_TRIFID.TRIFID%TYPE;
  v_exists NUMBER(10) DEFAULT 0;
 
BEGIN

-- check to see whether a record already exists
  SELECT COUNT(*) INTO v_exists FROM App_FI_TRIFID WHERE TRIFID = TRIID;
  
  IF v_exists <> 0 THEN
    RAISE_APPLICATION_ERROR(-20001, 'TRIFID already exists. Please choose ''Update'' instead.');
  END IF;  

  INSERT INTO App_FI_TRIFID
         (TRIFID
         ,AgencyID
         ,EPAID
         ,AGENCYNAME
         ,Inactive_DT
         ,Last_Updated_User_ID
         ,Last_Updated_DT)
  VALUES
         (TRIID
         ,AGENCYID
         ,EPAID
         ,AGENCYNAME
         ,INACTIVEDATE
         ,USERID
         ,SYSDATE);
  
  --SET @triPk = SCOPE_IDENTITY();
  --The following is a replacement for the above code. need to check
  BEGIN
    SELECT MAX(TRIFID) INTO v_trifid FROM App_FI_TRIFID;
  EXCEPTION
    WHEN TOO_MANY_ROWS THEN
      RAISE; --_APPLICATION_ERROR(-20002, 'TOO MANY ROWS ARE RETRIEVED FOR TRIFID' || SQLCODE || ' ' ||SQLERRM);
  END;
            
  INSERT INTO App_FI_TRIFID_Comment
         (TRIFID_ID_FK
         ,Comment_DS
         ,Last_Updated_User_ID
         ,Last_Updated_DT)
  VALUES
         (TRIPK
         ,COMMENT
         ,USERID
         ,SYSDATE
         );

-- TKC 6/12/2007: Need to make sure we insert placeholder records in the linker table for a brand-new facility
-- TKC 7/9/2007:  No longer need to insert into this table

/*
  INSERT INTO App_FI_LinkTRIFID_Agency
         ([TRIFID_ID_FK]
         ,[Agency_ID]
         ,[Agency_Type_FK]
         ,[Last_Updated_User_ID]
         ,[Last_Updated_DT])
  SELECT
        @triPk
         ,''
         ,AT.Agency_Type_ID
         ,@userID
         ,GetDate()

  FROM App_FI_AgencyType AT
*/

  --COMMIT;
  
EXCEPTION
  WHEN OTHERS THEN
    RAISE;
END; 
/

CREATE PROCEDURE "TRI_SETRECEIPT" 
  ( TRIID IN VARCHAR2
    ,REPYEARORIG IN VARCHAR2 DEFAULT NULL
    ,REPYEAR IN VARCHAR2
    ,STATERECDATE IN DATE
   ,SUBISPAPER IN NUMBER
   ,USERID IN VARCHAR2
  )
IS
/*******************************************************************************
Procedure overview:
-----------------
This procedure inserts a manual submission log entry and is used by TRI application

Purpose:
Inserts a manual submission log entry

Modification History:
When            Who                     What
-----------     ----------------------  ----------------------------------------
2007-04-30      TK Conrad               Initial Version
03/10/2008      SSIKHARAM               Re-authored and converted SQL server 
                                        version to Oracle
*******************************************************************************/

  v_subMethod VARCHAR2(10);
  v_trifid_id number(10);
  v_count number(10);
  SUBMISSION_EXISTS EXCEPTION;
BEGIN

  IF (SUBISPAPER = 1) THEN
    v_subMethod := 'Paper';
  ELSE
    v_subMethod := 'Diskette';
  END IF;

  -- Lookup the FK to dbo.App_FI_TRIFID based upon the passed-in @triId
  BEGIN
    SELECT TRIFID_ID INTO v_trifid_id FROM App_FI_TRIFID WHERE TRIFID = TRIID;
  EXCEPTION
    WHEN TOO_MANY_ROWS THEN
      RAISE; --_APPLICATION_ERROR(-20001, 'TOO_MANY_ROWS ARE RETRIEVED FOR TRIID: '||P_TRIID || ' ' ||SQLCODE||SQLERRM);
    WHEN OTHERS THEN
      RAISE; --_APPLICATION_ERROR(-20002, 'AN ERROR OCCURRED WHILE SELECTING TRIFID_ID FOR TRIID: '||P_TRIID || ' ' ||SQLCODE||SQLERRM);      
  END;
  
  SELECT COUNT(*) 
    INTO v_count
    FROM App_ManualSubmissionLog 
  WHERE TRIFID_ID_FK = v_trifid_id AND Reporting_Year_NR = REPYEARORIG;
  
  IF v_count <> 0 THEN
    SELECT COUNT(*) 
      INTO v_count
   FROM App_ManualSubmissionLog 
   WHERE TRIFID_ID_FK = v_trifid_id 
       AND Reporting_Year_NR = REPYEAR
      AND REPYEARORIG <> REPYEAR;
    
    IF v_count <> 0 THEN
     --RAISE_APPLICATION_ERROR(-20003, 'A submission for that reporting year already exists. Please enter a new reporting year or go back to the previous screen to edit an existing year.');
       RAISE SUBMISSION_EXISTS;
    ELSE
      BEGIN
        UPDATE App_ManualSubmissionLog
           SET Reporting_Year_NR = REPYEAR
               ,State_Received_DT = STATERECDATE
               ,Submission_Method_DS = v_subMethod
               ,Last_Updated_User_ID = USERID
               ,Last_Updated_DT = SYSDATE
         WHERE TRIFID_ID_FK = v_trifid_id 
           AND Reporting_Year_NR = REPYEARORIG;
       EXCEPTION
         WHEN OTHERS THEN
           RAISE; --_APPLICATION_ERROR(-20004, 'AN ERROR OCCURRED DURING UPDATING App_ManualSubmissionLog table.');
       END;        
    END IF;
  ELSE
    BEGIN
      INSERT INTO App_ManualSubmissionLog
             (TRIFID_ID_FK
             ,Reporting_Year_NR
             ,State_Received_DT
             ,Submission_Method_DS
             ,Last_Updated_User_ID
             ,Last_Updated_DT)
         VALUES
             (v_trifid_id
             ,REPYEAR
             ,STATERECDATE
             ,v_subMethod
             ,USERID
             ,SYSDATE);   
    EXCEPTION
      WHEN OTHERS THEN
        RAISE; --_APPLICATION_ERROR(-20005, 'AN ERROR OCCURRED DURING INSERTING INTO App_ManualSubmissionLog table.');
    END;                    
  END IF;

EXCEPTION
  WHEN OTHERS THEN
    RAISE; --_APPLICATION_ERROR(-20003, 'An error occurred in P_TRI_Update_TRI_RPT_Defaults procedure.'||SQLCODE||' '||SQLERRM);
END; 
/

CREATE PROCEDURE "TRI_UPDATE_FSID" 
  ( PK IN NUMBER 
    ,FSID IN NUMBER 
  )
IS
/*******************************************************************************
Procedure overview:
-----------------
This procedure inserts a record into App_FI_TRIFID table and is used by
TRI application

Purpose:
Inserts a record into the App_FI_TRIFID table

Modification History:
When            Who                     What
-----------     ----------------------  ----------------------------------------
????-??-??     ??                       Initial Version
03/05/2008     SSIKHARAM                Re-authored and converted SQL server 
                                        version to Oracle
*******************************************************************************/

BEGIN

  UPDATE App_FI_TRIFID
     SET AgencyID = TO_CHAR(FSID)
         ,Last_Updated_DT = SYSDATE
   WHERE TRIFID_ID = PK;
   
   --COMMIT;   
         
EXCEPTION
  WHEN OTHERS THEN
    RAISE;
END; 
/

CREATE PROCEDURE "TRI_UPDATE_TRI_RPT_DEFAULTS" 
  ( SUB_ID IN VARCHAR2
  )
IS
/*******************************************************************************
Procedure overview:
-----------------
This procedure loads defaults for values in TRI_REPORT not supplied by TRI
submission from EPA and is used by TRI application

Purpose:
Loads defaults for values in TRI_REPORT not supplied by TRI submission from EPA

Modification History:
When            Who                     What
-----------     ----------------------  ----------------------------------------
2007-06-06      TK Conrad               Initial Version
03/06/2008      SSIKHARAM               Re-authored and converted SQL server 
                                        version to Oracle
10/07/2008     SSIKHARAM                updated the procedures with TK's changes 
                                        All update prcedures are commented to 
                                        essentially make this procedure do nothing                                        
*******************************************************************************/

BEGIN

  --THE PROCEDURE DOES NOTHING
  NULL;
  -- Update REPORT_EPA_PROCESSING_STATUS_CODE
--  BEGIN
--    UPDATE TRI_REPORT R
--       SET R.REPORT_EPA_PROCESSING_STATUS_C = '1'
--     WHERE R.FK_GUID = (SELECT S.PK_GUID
--                          FROM TRI_SUB S 
--                         WHERE S.PK_GUID = R.FK_GUID)
--       AND NVL(R.REPORT_EPA_PROCESSING_STATUS_C, NULL) = NULL;
--  EXCEPTION
--    WHEN OTHERS THEN
--      RAISE;
--  END;
--  
--  -- Update REPORT_SUB_METH_CODE
--  BEGIN
--  UPDATE TRI_REPORT R
--     SET R.REPORT_SUB_METH_CODE = 'TRIME_WEB'
--   WHERE R.FK_GUID = (SELECT S.PK_GUID
--                        FROM TRI_SUB S 
--                       WHERE S.PK_GUID = R.FK_GUID)
--     AND NVL(R.REPORT_SUB_METH_CODE, NULL) = NULL;
--  EXCEPTION
--    WHEN OTHERS THEN
--      RAISE; --_APPLICATION_ERROR(-20001, 'An error occurred while attempting to insert a new TRIFID into App_FI_TRIFID table.'||SQLCODE||' '||SQLERRM);
--  END;
  
  --COMMIT;
  
EXCEPTION
  WHEN OTHERS THEN
    RAISE;
END; 
/

CREATE PROCEDURE "TRI_GET_AUTHORIZATION_ROLES"
(
  V_USERNAME IN VARCHAR2  
, V_PASSWORD IN VARCHAR2  
, V_ROLE OUT VARCHAR2  
) 
AS 

 E_USERNAME_INVALID EXCEPTION;
 E_USERNAME_BLANK EXCEPTION;
 E_PASSWORD_INVALID EXCEPTION;
 E_PASSWORD_BLANK EXCEPTION;

BEGIN

  IF (V_USERNAME = 'tmorris' OR V_USERNAME = 'tconrad') AND V_PASSWORD != 'memorial' THEN RAISE E_PASSWORD_INVALID;
  ELSE IF NOT (V_USERNAME = 'tmorris' OR V_USERNAME = 'tconrad') THEN RAISE E_USERNAME_INVALID;
  ELSE IF V_USERNAME IS NULL THEN RAISE E_USERNAME_BLANK;
  ELSE IF V_PASSWORD IS NULL THEN RAISE E_PASSWORD_BLANK;
  END IF;
  END IF;
  END IF;
  END IF;

  V_ROLE := CASE
  WHEN V_USERNAME = 'tmorris' AND V_PASSWORD = 'memorial' THEN 'ADMIN'
  WHEN V_USERNAME = 'tconrad' AND V_PASSWORD = 'memorial' THEN 'USER'
  ELSE null
  END;


EXCEPTION
WHEN E_USERNAME_INVALID THEN RAISE_APPLICATION_ERROR(-20001, 'Username not found.');
WHEN E_USERNAME_BLANK THEN RAISE_APPLICATION_ERROR(-20002, 'Username cannot be blank.');
WHEN E_PASSWORD_INVALID THEN RAISE_APPLICATION_ERROR(-20003, 'Password entered is invalid.');
WHEN E_PASSWORD_BLANK THEN RAISE_APPLICATION_ERROR(-20004, 'Password cannot be blank.');
WHEN OTHERS THEN RAISE_APPLICATION_ERROR(-20002, 'An unspecified error has occurred, please try again.');

END;
/

CREATE FUNCTION "ISNUMERIC" 
  ( P_IN IN VARCHAR2)
RETURN NUMBER
IS  
/*******************************************************************************
Author:             Suresh Sikharam (Windsor Solutions, Inc.)
Create date:        02-29-2008
Description:        Checks to see if the input value is a numeric (returns 1)
                    or non-numeric (returns 0) 
*******************************************************************************/
  V_RETURN NUMBER(10);

BEGIN

  V_RETURN := TO_NUMBER(P_IN);

RETURN V_RETURN;

EXCEPTION
  WHEN INVALID_NUMBER THEN
    V_RETURN := 0;
    RETURN V_RETURN;
END; 
/

CREATE FUNCTION "TRI_CALC_REV_IND" 
(
  CHEM_RPT_REV_CD_1 IN VARCHAR2
, CHEM_RPT_REV_CD_2 IN VARCHAR2
, CHEM_RPT_WD_CD_1 IN VARCHAR2
, CHEM_RPT_WD_CD_2 IN VARCHAR2
, REVISION_IND IN VARCHAR2
) RETURN VARCHAR2 IS
REV_IND char(1);

BEGIN


 REV_IND := CASE
  WHEN COALESCE(CHEM_RPT_REV_CD_1, CHEM_RPT_REV_CD_2, CHEM_RPT_WD_CD_1, CHEM_RPT_WD_CD_2) IS NOT NULL THEN 'Y'
  ELSE CASE
   WHEN REVISION_IND = 'Y' THEN 'Y'
  ELSE 'N'
  END
 END;

  RETURN REV_IND;
END TRI_CALC_REV_IND; 
/

CREATE FUNCTION "TRI_CALC_SUB_METHOD" 
(
  TRI_SUB_ID IN VARCHAR2
) RETURN VARCHAR2 IS
SUB_METH varchar2(255);

BEGIN  
  SUB_METH := CASE
    WHEN TRI_SUB_ID LIKE 'TRIDPC%' THEN 'PAPER'
    WHEN TRI_SUB_ID LIKE 'DISK_%' THEN 'DISK'
    WHEN TRI_SUB_ID LIKE 'TRI0001%' THEN 'CDX'
    WHEN TRI_SUB_ID LIKE 'TRI0002%' THEN 'TRIME-WEB'
  ELSE 'UNDETERMINED'
  END;

  RETURN SUB_METH;
END TRI_CALC_SUB_METHOD; 
/

CREATE FUNCTION "TRI_CONVERT_LBS_GRAMS" 
  ( P_POUNDS IN VARCHAR2)
RETURN VARCHAR2
IS  
/*******************************************************************************
Author:             TK Conrad
ALTER date:         2007-07-03
Description:        Converts pounds to grams
Update 2007-07-12:  This routine now just returns
                    the same value as passed in, as it is assumed now
                    that the values are stored in grams already.
                    Leaving this function in place in case this turns
                    out not to be the case.
Conversion Author:  Suresh Sikharam
Conversion Date:    02-29-2008
*******************************************************************************/
  -- Declare the return variable here
  v_return VARCHAR2(255);
  
BEGIN

  -- Add the T-SQL statements to compute the return value here
  IF P_POUNDS IS NULL THEN
    V_RETURN := NULL;
  ELSE
    V_RETURN := P_POUNDS;
--    SET @Result = CONVERT(VARCHAR, CONVERT(FLOAT, @pounds) * 453.59237) -- constant from Google search
  END IF;
  -- Return the result of the function
  RETURN V_RETURN;

EXCEPTION 
  WHEN OTHERS THEN
    V_RETURN := 'An error occurred: ' || SQLCODE ||' '|| SUBSTR(SQLERRM,1,89);
    RETURN V_RETURN;
END; 
/

CREATE FUNCTION "TRI_CONV_EPA_PRCSSTATCD_DESC" 
  (P_RPT_EPA_PRCS_STAT_CODE IN VARCHAR2)
RETURN VARCHAR2
IS
/*******************************************************************************
Author:             TK Conrad
Create date:        2007-06-06
Description:        Returns the correct value for 
                    TRI_REPORT.REPORT_EPA_PROCESSING_STATUS_CODE
                    based upon the TRI 2.0 schema documentation:
                    -1 = Unknown
                    0 = Inactive Submission
                    1 = Active Submission
                    2 = Submission Needs Manual Review
                    3 = Hold Active 
                    4 = Hold Inactive 
                    5 = Withdrawn Submission
                    6 = Withdrawal Request Pending

                    If the actual value is blank, NULL, or not covered by the 
                    table, return 'Undetermined'.
Conversion Author:  Suresh Sikharam
Conversion Date:    02-29-2008
*******************************************************************************/
  -- Declare the return variable here
  v_return VARCHAR2(100);
  
BEGIN

  IF (P_RPT_EPA_PRCS_STAT_CODE IS NULL) THEN
    V_RETURN := 'Undetermined';
  ELSE
    V_RETURN := CASE P_RPT_EPA_PRCS_STAT_CODE    
                  WHEN '-1' THEN 'Unknown'
                  WHEN '0' THEN 'Inactive Submission'
                  WHEN '1' THEN 'Active Submission'
                  WHEN '2' THEN 'Submission Needs Manual Review'
                  WHEN '3' THEN 'Hold Active'
                  WHEN '4' THEN 'Hold Inactive'
                  WHEN '5' THEN 'Withdrawn Submission'
                  WHEN '6' THEN 'Withdrawal Request Pending'
                ELSE 'Undetermined'
                END;
  END IF;       
RETURN V_RETURN;
EXCEPTION
  WHEN OTHERS THEN
    V_RETURN := 'An error occurred: ' || SQLCODE ||' '|| SUBSTR(SQLERRM,1,89);
    RETURN V_RETURN;
END; 
/

CREATE FUNCTION "TRI_RANGECODECONVERSION" 
  (P_WASTEQME IN VARCHAR2
   ,P_WASTEQRANGECODE IN VARCHAR2
  )
RETURN VARCHAR2
IS  
/*******************************************************************************
Author:             TK Conrad
Create date:        2007-05-02
Description:        Returns the correct waste quantity measure value based on 
                    receiving the actual value and the range code.
                    If the actual value is blank, convert the range code value 
                    to a measurement.
Conversion Author:  Suresh Sikharam
Conversion Date:    02-29-2008
*******************************************************************************/
  -- Declare the return variable here
  v_return VARCHAR2(100);
  
BEGIN

  -- Add the T-SQL statements to compute the return value here
  IF P_WASTEQME IS NULL THEN
    IF P_WASTEQRANGECODE IS NULL THEN
      V_RETURN := NULL;
    ELSE
      V_RETURN := CASE P_WASTEQRANGECODE
                    WHEN 'A' THEN '5'
                    WHEN 'B' THEN '250'
                    WHEN 'C' THEN '750'
                  END;
    END IF;
  ELSE
    V_RETURN := P_WASTEQME;
  END IF;  

  RETURN V_RETURN;

EXCEPTION
  WHEN OTHERS THEN
    V_RETURN := 'An error occurred: ' || SQLCODE ||' '|| SUBSTR(SQLERRM,1,89);
    RETURN V_RETURN;
END; 
/


CREATE UNIQUE INDEX "PK_APP_COORDINATOR"
 ON "APP_COORDINATOR"("ID")
/

CREATE UNIQUE INDEX "PK_APP_EMAILLOG"
 ON "APP_EMAILLOG"("EMAIL_LOG_ID")
/

CREATE UNIQUE INDEX "PK_APP_FI_TRIFID_COMMENT"
 ON "APP_FI_TRIFID_COMMENT"("TRIFID_COMMENT_ID")
/

CREATE UNIQUE INDEX "PK_APP_FI_TRIFID_DELETE"
 ON "APP_FI_TRIFID_DELETE"("TRIFID_DELETE_ID")
/

CREATE UNIQUE INDEX "PK_APP_FI_TRIFID"
 ON "APP_FI_TRIFID"("TRIFID_ID")
/

CREATE UNIQUE INDEX "IX_APP_FI_TRIFID_UNIQUECONSTRA"
 ON "APP_FI_TRIFID"("TRIFID")
/

CREATE UNIQUE INDEX "IX_APP_LOOKUP_CTY_REG"
 ON "APP_LOOKUP_CTY_REG"("COUNTY")
/

CREATE UNIQUE INDEX "PK_APP_LOOKUP_CTY_REG"
 ON "APP_LOOKUP_CTY_REG"("ID")
/

CREATE UNIQUE INDEX "IX_APP_MANUALSUBMISSIONLOG"
 ON "APP_MANUALSUBMISSIONLOG"("TRIFID_ID_FK", "REPORTING_YEAR_NR")
/

CREATE UNIQUE INDEX "PK_APP_MANUALSUBMISSIONLOG"
 ON "APP_MANUALSUBMISSIONLOG"("MANUAL_SUBMISSION_LOG_ID")
/

CREATE UNIQUE INDEX "PK_TRI_CHEM"
 ON "TRI_CHEM"("PK_GUID")
/

CREATE INDEX "IX_TRI_CHEM"
 ON "TRI_CHEM"("FK_GUID")
/

CREATE INDEX "IX_TRI_FAC_DUN"
 ON "TRI_FAC_DUN"("FK_GUID")
/

CREATE UNIQUE INDEX "PK_TRI_FAC_DUN"
 ON "TRI_FAC_DUN"("PK_GUID")
/

CREATE UNIQUE INDEX "PK_TRI_FAC_NAICS"
 ON "TRI_FAC_NAICS"("PK_GUID")
/

CREATE INDEX "IX_TRI_FAC_NAICS"
 ON "TRI_FAC_NAICS"("FK_GUID")
/

CREATE UNIQUE INDEX "PK_TRI_FAC_SIC"
 ON "TRI_FAC_SIC"("PK_GUID")
/

CREATE INDEX "IX_TRI_FAC_SIC"
 ON "TRI_FAC_SIC"("FK_GUID")
/

CREATE INDEX "IX_TRI_FAC"
 ON "TRI_FAC"("FK_GUID")
/

CREATE UNIQUE INDEX "PK_TRI_FAC"
 ON "TRI_FAC"("PK_GUID")
/

CREATE INDEX "IX_TRI_NPDES_ID"
 ON "TRI_NPDES_ID"("FK_GUID")
/

CREATE UNIQUE INDEX "PK_TRI_NPDES_ID"
 ON "TRI_NPDES_ID"("PK_GUID")
/

CREATE INDEX "IX_TRI_OFFSITE_DISP_QTY"
 ON "TRI_OFFSITE_DISP_QTY"("FK_GUID")
/

CREATE UNIQUE INDEX "PK_TRI_OFFSITE_DISP_QTY"
 ON "TRI_OFFSITE_DISP_QTY"("PK_GUID")
/

CREATE INDEX "IX_TRI_OFFSITE_ENERGY_REC_QTY"
 ON "TRI_OFFSITE_ENERGY_REC_QTY"("FK_GUID")
/

CREATE UNIQUE INDEX "PK_TRI_OFFSITE_ENERGY_REC_QTY"
 ON "TRI_OFFSITE_ENERGY_REC_QTY"("PK_GUID")
/

CREATE INDEX "IX_TRI_OFFSITE_RECYCLED_Q"
 ON "TRI_OFFSITE_RECYCLED_Q"("FK_GUID")
/

CREATE UNIQUE INDEX "PK_TRI_OFFSITE_RECYCLED_Q"
 ON "TRI_OFFSITE_RECYCLED_Q"("PK_GUID")
/

CREATE INDEX "IX_TRI_OFFSITE_TREATED_Q"
 ON "TRI_OFFSITE_TREATED_Q"("FK_GUID")
/

CREATE UNIQUE INDEX "PK_TRI_OFFSITE_TREATED_Q"
 ON "TRI_OFFSITE_TREATED_Q"("PK_GUID")
/

CREATE UNIQUE INDEX "PK_TRI_OFFSITE_UIC_DISP_QTY"
 ON "TRI_OFFSITE_UIC_DISP_QTY"("PK_GUID")
/

CREATE INDEX "IX_TRI_OFFSITE_UIC_DISP_QTY"
 ON "TRI_OFFSITE_UIC_DISP_QTY"("FK_GUID")
/

CREATE UNIQUE INDEX "PK_TRI_ONSITE_DISP_QTY"
 ON "TRI_ONSITE_DISP_QTY"("PK_GUID")
/

CREATE INDEX "IX_TRI_ONSITE_DISP_QTY"
 ON "TRI_ONSITE_DISP_QTY"("FK_GUID")
/

CREATE UNIQUE INDEX "PK_TRI_ONSITE_ENERGY_RCV_QTY"
 ON "TRI_ONSITE_ENERGY_RCV_QTY"("PK_GUID")
/

CREATE INDEX "IX_TRI_ONSITE_ENERGY_RCV_QTY"
 ON "TRI_ONSITE_ENERGY_RCV_QTY"("FK_GUID")
/

CREATE UNIQUE INDEX "PK_TRI_ONSITE_RCV_PROC"
 ON "TRI_ONSITE_RCV_PROC"("PK_GUID")
/

CREATE INDEX "IX_TRI_ONSITE_RCV_PROC"
 ON "TRI_ONSITE_RCV_PROC"("FK_GUID")
/

CREATE UNIQUE INDEX "PK_TRI_ONSITE_RECYCG_PROC"
 ON "TRI_ONSITE_RECYCG_PROC"("PK_GUID")
/

CREATE INDEX "IX_TRI_ONSITE_RECYCG_PROC"
 ON "TRI_ONSITE_RECYCG_PROC"("FK_GUID")
/

CREATE INDEX "IX_TRI_ONSITE_RECYCLED_Q"
 ON "TRI_ONSITE_RECYCLED_Q"("FK_GUID")
/

CREATE UNIQUE INDEX "PK_TRI_ONSITE_RECYCLED_Q"
 ON "TRI_ONSITE_RECYCLED_Q"("PK_GUID")
/

CREATE INDEX "IX_TRI_ONSITE_RELEASE_Q"
 ON "TRI_ONSITE_RELEASE_Q"("FK_GUID")
/

CREATE UNIQUE INDEX "PK_TRI_ONSITE_RELEASE_Q"
 ON "TRI_ONSITE_RELEASE_Q"("PK_GUID")
/

CREATE UNIQUE INDEX "PK_TRI_ONSITE_TREATED_Q"
 ON "TRI_ONSITE_TREATED_Q"("PK_GUID")
/

CREATE INDEX "IX_TRI_ONSITE_TREATED_Q"
 ON "TRI_ONSITE_TREATED_Q"("FK_GUID")
/

CREATE INDEX "IX_TRI_ONSITE_UIC_DISP_QTY"
 ON "TRI_ONSITE_UIC_DISP_QTY"("FK_GUID")
/

CREATE UNIQUE INDEX "PK_TRI_ONSITE_UIC_DISP_QTY"
 ON "TRI_ONSITE_UIC_DISP_QTY"("PK_GUID")
/

CREATE INDEX "IX_TRI_RCRA_ID"
 ON "TRI_RCRA_ID"("FK_GUID")
/

CREATE UNIQUE INDEX "PK_TRI_RCRA_ID"
 ON "TRI_RCRA_ID"("PK_GUID")
/

CREATE UNIQUE INDEX "PK_TRI_REPLACED_REPORT_ID"
 ON "TRI_REPLACED_REPORT_ID"("PK_GUID")
/

CREATE INDEX "IX_TRI_REPLACED_REPORT_ID"
 ON "TRI_REPLACED_REPORT_ID"("FK_GUID")
/

CREATE UNIQUE INDEX "PK_TRI_REPORT_VALIDATION"
 ON "TRI_REPORT_VALIDATION"("PK_GUID")
/

CREATE INDEX "IX_TRI_REPORT_VALIDATION"
 ON "TRI_REPORT_VALIDATION"("FK_GUID")
/

CREATE UNIQUE INDEX "PK_TRI_REPORT"
 ON "TRI_REPORT"("PK_GUID")
/

CREATE INDEX "IX_TRI_REPORT"
 ON "TRI_REPORT"("FK_GUID")
/

CREATE UNIQUE INDEX "PK_TRI_SRC_RED_ACT"
 ON "TRI_SRC_RED_ACT"("PK_GUID")
/

CREATE INDEX "IX_TRI_SRC_RED_ACT"
 ON "TRI_SRC_RED_ACT"("FK_GUID")
/

CREATE INDEX "IX_TRI_SRC_RED_METH_CD"
 ON "TRI_SRC_RED_METH_CD"("FK_GUID")
/

CREATE UNIQUE INDEX "PK_TRI_SRC_RED_METH_CD"
 ON "TRI_SRC_RED_METH_CD"("PK_GUID")
/

CREATE UNIQUE INDEX "PK_TRI_SUB"
 ON "TRI_SUB"("PK_GUID")
/

CREATE UNIQUE INDEX "UK_TRI_SUB"
 ON "TRI_SUB"("TRI_SUB_ID")
/

CREATE INDEX "IX_TRI_TRANSFER_LOC"
 ON "TRI_TRANSFER_LOC"("FK_GUID")
/

CREATE UNIQUE INDEX "PK_TRI_TRANSFER_LOC"
 ON "TRI_TRANSFER_LOC"("PK_GUID")
/

CREATE UNIQUE INDEX "PK_TRI_TRANSFER_Q"
 ON "TRI_TRANSFER_Q"("PK_GUID")
/

CREATE INDEX "IX_TRI_TRANSFER_Q"
 ON "TRI_TRANSFER_Q"("FK_GUID")
/

CREATE UNIQUE INDEX "PK_TRI_UIC_ID"
 ON "TRI_UIC_ID"("PK_GUID")
/

CREATE INDEX "IX_TRI_UIC_ID"
 ON "TRI_UIC_ID"("FK_GUID")
/

CREATE UNIQUE INDEX "PK_TRI_WASTE_TREAT_DTL"
 ON "TRI_WASTE_TREAT_DTL"("PK_GUID")
/

CREATE INDEX "IX_TRI_WASTE_TREAT_DTL"
 ON "TRI_WASTE_TREAT_DTL"("FK_GUID")
/

CREATE INDEX "IX_TRI_WASTE_TREAT_METH"
 ON "TRI_WASTE_TREAT_METH"("FK_GUID")
/

CREATE UNIQUE INDEX "PK_TRI_WASTE_TREAT_METH"
 ON "TRI_WASTE_TREAT_METH"("PK_GUID")
/

ALTER TABLE "APP_COORDINATOR"
 ADD ( CONSTRAINT "PK_APP_COORDINATOR"
 PRIMARY KEY ("ID")
 NOT DEFERRABLE INITIALLY IMMEDIATE )
/

ALTER TABLE "APP_EMAILLOG"
 ADD ( CONSTRAINT "PK_APP_EMAILLOG"
 PRIMARY KEY ("EMAIL_LOG_ID")
 NOT DEFERRABLE INITIALLY IMMEDIATE )
/

ALTER TABLE "APP_FI_TRIFID_COMMENT"
 ADD ( CONSTRAINT "PK_APP_FI_TRIFID_COMMENT"
 PRIMARY KEY ("TRIFID_COMMENT_ID")
 NOT DEFERRABLE INITIALLY IMMEDIATE )
/

ALTER TABLE "APP_FI_TRIFID_DELETE"
 ADD ( CONSTRAINT "PK_APP_FI_TRIFID_DELETE"
 PRIMARY KEY ("TRIFID_DELETE_ID")
 NOT DEFERRABLE INITIALLY IMMEDIATE )
/

ALTER TABLE "APP_FI_TRIFID"
 ADD ( CONSTRAINT "PK_APP_FI_TRIFID"
 PRIMARY KEY ("TRIFID_ID")
 NOT DEFERRABLE INITIALLY IMMEDIATE )
/

ALTER TABLE "APP_LOOKUP_CTY_REG"
 ADD ( CONSTRAINT "PK_APP_LOOKUP_CTY_REG"
 PRIMARY KEY ("ID")
 NOT DEFERRABLE INITIALLY IMMEDIATE )
/

ALTER TABLE "APP_MANUALSUBMISSIONLOG"
 ADD ( CONSTRAINT "PK_APP_MANUALSUBMISSIONLOG"
 PRIMARY KEY ("MANUAL_SUBMISSION_LOG_ID")
 NOT DEFERRABLE INITIALLY IMMEDIATE )
/

ALTER TABLE "TRI_FAC_DUN"
 ADD ( CONSTRAINT "PK_TRI_FAC_DUN"
 PRIMARY KEY ("PK_GUID")
 NOT DEFERRABLE INITIALLY IMMEDIATE )
/

ALTER TABLE "TRI_FAC_NAICS"
 ADD ( CONSTRAINT "PK_TRI_FAC_NAICS"
 PRIMARY KEY ("PK_GUID")
 NOT DEFERRABLE INITIALLY IMMEDIATE )
/

ALTER TABLE "TRI_FAC_SIC"
 ADD ( CONSTRAINT "PK_TRI_FAC_SIC"
 PRIMARY KEY ("PK_GUID")
 NOT DEFERRABLE INITIALLY IMMEDIATE )
/

ALTER TABLE "TRI_FAC"
 ADD ( CONSTRAINT "PK_TRI_FAC"
 PRIMARY KEY ("PK_GUID")
 NOT DEFERRABLE INITIALLY IMMEDIATE )
/

ALTER TABLE "TRI_NPDES_ID"
 ADD ( CONSTRAINT "PK_TRI_NPDES_ID"
 PRIMARY KEY ("PK_GUID")
 NOT DEFERRABLE INITIALLY IMMEDIATE )
/

ALTER TABLE "TRI_OFFSITE_DISP_QTY"
 ADD ( CONSTRAINT "PK_TRI_OFFSITE_DISP_QTY"
 PRIMARY KEY ("PK_GUID")
 NOT DEFERRABLE INITIALLY IMMEDIATE )
/

ALTER TABLE "TRI_OFFSITE_ENERGY_REC_QTY"
 ADD ( CONSTRAINT "PK_TRI_OFFSITE_ENERGY_REC_QTY"
 PRIMARY KEY ("PK_GUID")
 NOT DEFERRABLE INITIALLY IMMEDIATE )
/

ALTER TABLE "TRI_OFFSITE_RECYCLED_Q"
 ADD ( CONSTRAINT "PK_TRI_OFFSITE_RECYCLED_Q"
 PRIMARY KEY ("PK_GUID")
 NOT DEFERRABLE INITIALLY IMMEDIATE )
/

ALTER TABLE "TRI_OFFSITE_TREATED_Q"
 ADD ( CONSTRAINT "PK_TRI_OFFSITE_TREATED_Q"
 PRIMARY KEY ("PK_GUID")
 NOT DEFERRABLE INITIALLY IMMEDIATE )
/

ALTER TABLE "TRI_OFFSITE_UIC_DISP_QTY"
 ADD ( CONSTRAINT "PK_TRI_OFFSITE_UIC_DISP_QTY"
 PRIMARY KEY ("PK_GUID")
 NOT DEFERRABLE INITIALLY IMMEDIATE )
/

ALTER TABLE "TRI_ONSITE_DISP_QTY"
 ADD ( CONSTRAINT "PK_TRI_ONSITE_DISP_QTY"
 PRIMARY KEY ("PK_GUID")
 NOT DEFERRABLE INITIALLY IMMEDIATE )
/

ALTER TABLE "TRI_ONSITE_ENERGY_RCV_QTY"
 ADD ( CONSTRAINT "PK_TRI_ONSITE_ENERGY_RCV_QTY"
 PRIMARY KEY ("PK_GUID")
 NOT DEFERRABLE INITIALLY IMMEDIATE )
/

ALTER TABLE "TRI_ONSITE_RCV_PROC"
 ADD ( CONSTRAINT "PK_TRI_ONSITE_RCV_PROC"
 PRIMARY KEY ("PK_GUID")
 NOT DEFERRABLE INITIALLY IMMEDIATE )
/

ALTER TABLE "TRI_ONSITE_RECYCG_PROC"
 ADD ( CONSTRAINT "PK_TRI_ONSITE_RECYCG_PROC"
 PRIMARY KEY ("PK_GUID")
 NOT DEFERRABLE INITIALLY IMMEDIATE )
/

ALTER TABLE "TRI_ONSITE_RECYCLED_Q"
 ADD ( CONSTRAINT "PK_TRI_ONSITE_RECYCLED_Q"
 PRIMARY KEY ("PK_GUID")
 NOT DEFERRABLE INITIALLY IMMEDIATE )
/

ALTER TABLE "TRI_ONSITE_RELEASE_Q"
 ADD ( CONSTRAINT "PK_TRI_ONSITE_RELEASE_Q"
 PRIMARY KEY ("PK_GUID")
 NOT DEFERRABLE INITIALLY IMMEDIATE )
/

ALTER TABLE "TRI_ONSITE_TREATED_Q"
 ADD ( CONSTRAINT "PK_TRI_ONSITE_TREATED_Q"
 PRIMARY KEY ("PK_GUID")
 NOT DEFERRABLE INITIALLY IMMEDIATE )
/

ALTER TABLE "TRI_ONSITE_UIC_DISP_QTY"
 ADD ( CONSTRAINT "PK_TRI_ONSITE_UIC_DISP_QTY"
 PRIMARY KEY ("PK_GUID")
 NOT DEFERRABLE INITIALLY IMMEDIATE )
/

ALTER TABLE "TRI_RCRA_ID"
 ADD ( CONSTRAINT "PK_TRI_RCRA_ID"
 PRIMARY KEY ("PK_GUID")
 NOT DEFERRABLE INITIALLY IMMEDIATE )
/

ALTER TABLE "TRI_REPLACED_REPORT_ID"
 ADD ( CONSTRAINT "PK_TRI_REPLACED_REPORT_ID"
 PRIMARY KEY ("PK_GUID")
 NOT DEFERRABLE INITIALLY IMMEDIATE )
/

ALTER TABLE "TRI_REPORT_VALIDATION"
 ADD ( CONSTRAINT "PK_TRI_REPORT_VALIDATION"
 PRIMARY KEY ("PK_GUID")
 NOT DEFERRABLE INITIALLY IMMEDIATE )
/

ALTER TABLE "TRI_REPORT"
 ADD ( CONSTRAINT "PK_TRI_REPORT"
 PRIMARY KEY ("PK_GUID")
 NOT DEFERRABLE INITIALLY IMMEDIATE )
/

ALTER TABLE "TRI_SRC_RED_ACT"
 ADD ( CONSTRAINT "PK_TRI_SRC_RED_ACT"
 PRIMARY KEY ("PK_GUID")
 NOT DEFERRABLE INITIALLY IMMEDIATE )
/

ALTER TABLE "TRI_SRC_RED_METH_CD"
 ADD ( CONSTRAINT "PK_TRI_SRC_RED_METH_CD"
 PRIMARY KEY ("PK_GUID")
 NOT DEFERRABLE INITIALLY IMMEDIATE )
/

ALTER TABLE "TRI_SUB"
 ADD ( CONSTRAINT "PK_TRI_SUB"
 PRIMARY KEY ("PK_GUID")
 NOT DEFERRABLE INITIALLY IMMEDIATE )
/

ALTER TABLE "TRI_TRANSFER_LOC"
 ADD ( CONSTRAINT "PK_TRI_TRANSFER_LOC"
 PRIMARY KEY ("PK_GUID")
 NOT DEFERRABLE INITIALLY IMMEDIATE )
/

ALTER TABLE "TRI_TRANSFER_Q"
 ADD ( CONSTRAINT "PK_TRI_TRANSFER_Q"
 PRIMARY KEY ("PK_GUID")
 NOT DEFERRABLE INITIALLY IMMEDIATE )
/

ALTER TABLE "TRI_UIC_ID"
 ADD ( CONSTRAINT "PK_TRI_UIC_ID"
 PRIMARY KEY ("PK_GUID")
 NOT DEFERRABLE INITIALLY IMMEDIATE )
/

ALTER TABLE "TRI_WASTE_TREAT_DTL"
 ADD ( CONSTRAINT "PK_TRI_WASTE_TREAT_DTL"
 PRIMARY KEY ("PK_GUID")
 NOT DEFERRABLE INITIALLY IMMEDIATE )
/

ALTER TABLE "TRI_WASTE_TREAT_METH"
 ADD ( CONSTRAINT "PK_TRI_WASTE_TREAT_METH"
 PRIMARY KEY ("PK_GUID")
 NOT DEFERRABLE INITIALLY IMMEDIATE )
/

ALTER TABLE "APP_FI_TRIFID_COMMENT"
 ADD ( CONSTRAINT "FK_APP_TRIFID_COMMENT_APP_TRIF"
 FOREIGN KEY("TRIFID_ID_FK")
 REFERENCES "APP_FI_TRIFID"("TRIFID_ID")
 ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/

ALTER TABLE "APP_FI_TRIFID_DELETE"
 ADD ( CONSTRAINT "FK_APP_FI_TRIFID_DELETE_APP_FI"
 FOREIGN KEY("TRIFID_ID_FK")
 REFERENCES "APP_FI_TRIFID"("TRIFID_ID")
 ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/

ALTER TABLE "APP_MANUALSUBMISSIONLOG"
 ADD ( CONSTRAINT "FK_APP_MANUALSUBMISSIONLOG_APP"
 FOREIGN KEY("TRIFID_ID_FK")
 REFERENCES "APP_FI_TRIFID"("TRIFID_ID")
 ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/

ALTER TABLE "TRI_CHEM"
 ADD ( CONSTRAINT "FK_CHEM_REPORT"
 FOREIGN KEY("FK_GUID")
 REFERENCES "TRI_REPORT"("PK_GUID")
 ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/

ALTER TABLE "TRI_FAC_DUN"
 ADD ( CONSTRAINT "FK_FACDUN_FAC"
 FOREIGN KEY("FK_GUID")
 REFERENCES "TRI_FAC"("PK_GUID")
 ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/

ALTER TABLE "TRI_FAC_NAICS"
 ADD ( CONSTRAINT "FK_FACNAICS_FAC"
 FOREIGN KEY("FK_GUID")
 REFERENCES "TRI_FAC"("PK_GUID")
 ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/

ALTER TABLE "TRI_FAC_SIC"
 ADD ( CONSTRAINT "FK_FACSIC_FAC"
 FOREIGN KEY("FK_GUID")
 REFERENCES "TRI_FAC"("PK_GUID")
 ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/

ALTER TABLE "TRI_FAC"
 ADD ( CONSTRAINT "FK_FAC_SUB"
 FOREIGN KEY("FK_GUID")
 REFERENCES "TRI_SUB"("PK_GUID")
 ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/

ALTER TABLE "TRI_NPDES_ID"
 ADD ( CONSTRAINT "FK_NPDESID_FAC"
 FOREIGN KEY("FK_GUID")
 REFERENCES "TRI_FAC"("PK_GUID")
 ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/

ALTER TABLE "TRI_OFFSITE_DISP_QTY"
 ADD ( CONSTRAINT "FK_OFFSITEDISPQTY_REPORT"
 FOREIGN KEY("FK_GUID")
 REFERENCES "TRI_REPORT"("PK_GUID")
 ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/

ALTER TABLE "TRI_OFFSITE_ENERGY_REC_QTY"
 ADD ( CONSTRAINT "FK_OFFSITEENERGYRECQTY_REPORT"
 FOREIGN KEY("FK_GUID")
 REFERENCES "TRI_REPORT"("PK_GUID")
 ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/

ALTER TABLE "TRI_OFFSITE_RECYCLED_Q"
 ADD ( CONSTRAINT "FK_OFFSITERECYCLEDQ_REPORT"
 FOREIGN KEY("FK_GUID")
 REFERENCES "TRI_REPORT"("PK_GUID")
 ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/

ALTER TABLE "TRI_OFFSITE_TREATED_Q"
 ADD ( CONSTRAINT "FK_OFFSITETREATEDQ_REPORT"
 FOREIGN KEY("FK_GUID")
 REFERENCES "TRI_REPORT"("PK_GUID")
 ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/

ALTER TABLE "TRI_OFFSITE_UIC_DISP_QTY"
 ADD ( CONSTRAINT "FK_OFFSITEUICDISPQTY_REPORT"
 FOREIGN KEY("FK_GUID")
 REFERENCES "TRI_REPORT"("PK_GUID")
 ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/

ALTER TABLE "TRI_ONSITE_DISP_QTY"
 ADD ( CONSTRAINT "FK_ONSITEDISPQTY_REPORT"
 FOREIGN KEY("FK_GUID")
 REFERENCES "TRI_REPORT"("PK_GUID")
 ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/

ALTER TABLE "TRI_ONSITE_ENERGY_RCV_QTY"
 ADD ( CONSTRAINT "FK_ONSITEENERGYRCVQTY_REPORT"
 FOREIGN KEY("FK_GUID")
 REFERENCES "TRI_REPORT"("PK_GUID")
 ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/

ALTER TABLE "TRI_ONSITE_RCV_PROC"
 ADD ( CONSTRAINT "FK_ONSITERCVPROC_REPORT"
 FOREIGN KEY("FK_GUID")
 REFERENCES "TRI_REPORT"("PK_GUID")
 ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/

ALTER TABLE "TRI_ONSITE_RECYCG_PROC"
 ADD ( CONSTRAINT "FK_ONSITERECYCGPROC_REPORT"
 FOREIGN KEY("FK_GUID")
 REFERENCES "TRI_REPORT"("PK_GUID")
 ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/

ALTER TABLE "TRI_ONSITE_RECYCLED_Q"
 ADD ( CONSTRAINT "FK_ONSITERECYCLEDQ_REPORT"
 FOREIGN KEY("FK_GUID")
 REFERENCES "TRI_REPORT"("PK_GUID")
 ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/

ALTER TABLE "TRI_ONSITE_RELEASE_Q"
 ADD ( CONSTRAINT "FK_ONSITERELEASEQ_REPORT"
 FOREIGN KEY("FK_GUID")
 REFERENCES "TRI_REPORT"("PK_GUID")
 ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/

ALTER TABLE "TRI_ONSITE_TREATED_Q"
 ADD ( CONSTRAINT "FK_ONSITETREATEDQ_REPORT"
 FOREIGN KEY("FK_GUID")
 REFERENCES "TRI_REPORT"("PK_GUID")
 ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/

ALTER TABLE "TRI_ONSITE_UIC_DISP_QTY"
 ADD ( CONSTRAINT "FK_ONSITEUICDISPQTY_REPORT"
 FOREIGN KEY("FK_GUID")
 REFERENCES "TRI_REPORT"("PK_GUID")
 ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/

ALTER TABLE "TRI_RCRA_ID"
 ADD ( CONSTRAINT "FK_RCRAID_FAC"
 FOREIGN KEY("FK_GUID")
 REFERENCES "TRI_FAC"("PK_GUID")
 ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/

ALTER TABLE "TRI_REPLACED_REPORT_ID"
 ADD ( CONSTRAINT "FK_REPLACEDREPORTID_REPORT"
 FOREIGN KEY("FK_GUID")
 REFERENCES "TRI_REPORT"("PK_GUID")
 ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/

ALTER TABLE "TRI_REPORT_VALIDATION"
 ADD ( CONSTRAINT "FK_TRI_REPORT_VALIDATION_TRI_R"
 FOREIGN KEY("FK_GUID")
 REFERENCES "TRI_REPORT"("PK_GUID")
 ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/

ALTER TABLE "TRI_REPORT"
 ADD ( CONSTRAINT "FK_REPORT_SUB"
 FOREIGN KEY("FK_GUID")
 REFERENCES "TRI_SUB"("PK_GUID")
 ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/

ALTER TABLE "TRI_SRC_RED_ACT"
 ADD ( CONSTRAINT "FK_SRCREDACT_REPORT"
 FOREIGN KEY("FK_GUID")
 REFERENCES "TRI_REPORT"("PK_GUID")
 ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/

ALTER TABLE "TRI_SRC_RED_METH_CD"
 ADD ( CONSTRAINT "FK_SRCREDMETHCD_SRCREDACT"
 FOREIGN KEY("FK_GUID")
 REFERENCES "TRI_SRC_RED_ACT"("PK_GUID")
 ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/

ALTER TABLE "TRI_TRANSFER_LOC"
 ADD ( CONSTRAINT "FK_TRANSFERLOC_REPORT"
 FOREIGN KEY("FK_GUID")
 REFERENCES "TRI_REPORT"("PK_GUID")
 ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/

ALTER TABLE "TRI_TRANSFER_Q"
 ADD ( CONSTRAINT "FK_TRANSFERQ_TRANSFERLOC"
 FOREIGN KEY("FK_GUID")
 REFERENCES "TRI_TRANSFER_LOC"("PK_GUID")
 ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/

ALTER TABLE "TRI_UIC_ID"
 ADD ( CONSTRAINT "FK_UICID_FAC"
 FOREIGN KEY("FK_GUID")
 REFERENCES "TRI_FAC"("PK_GUID")
 ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/

ALTER TABLE "TRI_WASTE_TREAT_DTL"
 ADD ( CONSTRAINT "FK_WASTETREATDTL_REPORT"
 FOREIGN KEY("FK_GUID")
 REFERENCES "TRI_REPORT"("PK_GUID")
 ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/

ALTER TABLE "TRI_WASTE_TREAT_METH"
 ADD ( CONSTRAINT "FK_WASTETREATMETH_WTDTL"
 FOREIGN KEY("FK_GUID")
 REFERENCES "TRI_WASTE_TREAT_DTL"("PK_GUID")
 ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE VALIDATE )
/

GRANT SELECT, INSERT, UPDATE, DELETE ON "APP_COORDINATOR" TO "OPENNODE"
/
GRANT SELECT, INSERT, UPDATE, DELETE ON "APP_EMAILLOG" TO "OPENNODE"
/
GRANT SELECT, INSERT, UPDATE, DELETE ON "APP_FI_TRIFID_COMMENT" TO "OPENNODE"
/
GRANT SELECT, INSERT, UPDATE, DELETE ON "APP_FI_TRIFID_DELETE" TO "OPENNODE"
/
GRANT SELECT, INSERT, UPDATE, DELETE ON "APP_FI_TRIFID" TO "OPENNODE"
/
GRANT SELECT, INSERT, UPDATE, DELETE ON "APP_LOOKUP_CTY_REG" TO "OPENNODE"
/
GRANT SELECT, INSERT, UPDATE, DELETE ON "APP_MANUALSUBMISSIONLOG" TO "OPENNODE"
/
GRANT SELECT, INSERT, UPDATE, DELETE ON "TRI_CHEM" TO "OPENNODE"
/
GRANT SELECT, INSERT, UPDATE, DELETE ON "TRI_FAC_DUN" TO "OPENNODE"
/
GRANT SELECT, INSERT, UPDATE, DELETE ON "TRI_FAC_NAICS" TO "OPENNODE"
/
GRANT SELECT, INSERT, UPDATE, DELETE ON "TRI_FAC_SIC" TO "OPENNODE"
/
GRANT SELECT, INSERT, UPDATE, DELETE ON "TRI_FAC" TO "OPENNODE"
/
GRANT SELECT, INSERT, UPDATE, DELETE ON "TRI_NPDES_ID" TO "OPENNODE"
/
GRANT SELECT, INSERT, UPDATE, DELETE ON "TRI_OFFSITE_DISP_QTY" TO "OPENNODE"
/
GRANT SELECT, INSERT, UPDATE, DELETE ON "TRI_OFFSITE_ENERGY_REC_QTY" TO "OPENNODE"
/
GRANT SELECT, INSERT, UPDATE, DELETE ON "TRI_OFFSITE_RECYCLED_Q" TO "OPENNODE"
/
GRANT SELECT, INSERT, UPDATE, DELETE ON "TRI_OFFSITE_TREATED_Q" TO "OPENNODE"
/
GRANT SELECT, INSERT, UPDATE, DELETE ON "TRI_OFFSITE_UIC_DISP_QTY" TO "OPENNODE"
/
GRANT SELECT, INSERT, UPDATE, DELETE ON "TRI_ONSITE_DISP_QTY" TO "OPENNODE"
/
GRANT SELECT, INSERT, UPDATE, DELETE ON "TRI_ONSITE_ENERGY_RCV_QTY" TO "OPENNODE"
/
GRANT SELECT, INSERT, UPDATE, DELETE ON "TRI_ONSITE_RCV_PROC" TO "OPENNODE"
/
GRANT SELECT, INSERT, UPDATE, DELETE ON "TRI_ONSITE_RECYCG_PROC" TO "OPENNODE"
/
GRANT SELECT, INSERT, UPDATE, DELETE ON "TRI_ONSITE_RECYCLED_Q" TO "OPENNODE"
/
GRANT SELECT, INSERT, UPDATE, DELETE ON "TRI_ONSITE_RELEASE_Q" TO "OPENNODE"
/
GRANT SELECT, INSERT, UPDATE, DELETE ON "TRI_ONSITE_TREATED_Q" TO "OPENNODE"
/
GRANT SELECT, INSERT, UPDATE, DELETE ON "TRI_ONSITE_UIC_DISP_QTY" TO "OPENNODE"
/
GRANT SELECT, INSERT, UPDATE, DELETE ON "TRI_RCRA_ID" TO "OPENNODE"
/
GRANT SELECT, INSERT, UPDATE, DELETE ON "TRI_REPLACED_REPORT_ID" TO "OPENNODE"
/
GRANT SELECT, INSERT, UPDATE, DELETE ON "TRI_REPORT_VALIDATION" TO "OPENNODE"
/
GRANT SELECT, INSERT, UPDATE, DELETE ON "TRI_REPORT" TO "OPENNODE"
/
GRANT SELECT, INSERT, UPDATE, DELETE ON "TRI_SRC_RED_ACT" TO "OPENNODE"
/
GRANT SELECT, INSERT, UPDATE, DELETE ON "TRI_SRC_RED_METH_CD" TO "OPENNODE"
/
GRANT SELECT, INSERT, UPDATE, DELETE ON "TRI_SUB" TO "OPENNODE"
/
GRANT SELECT, INSERT, UPDATE, DELETE ON "TRI_TRANSFER_LOC" TO "OPENNODE"
/
GRANT SELECT, INSERT, UPDATE, DELETE ON "TRI_TRANSFER_Q" TO "OPENNODE"
/
GRANT SELECT, INSERT, UPDATE, DELETE ON "TRI_UIC_ID" TO "OPENNODE"
/
GRANT SELECT, INSERT, UPDATE, DELETE ON "TRI_WASTE_TREAT_DTL" TO "OPENNODE"
/
GRANT SELECT, INSERT, UPDATE, DELETE ON "TRI_WASTE_TREAT_METH" TO "OPENNODE"
/
CREATE TRIGGER "APP_EMAILLOG_BI" before insert on "APP_EMAILLOG"    for each row
begin     if inserting then       if :NEW."EMAIL_LOG_ID" is null then          select ID_SEQ.nextval into :NEW."EMAIL_LOG_ID" from dual;       end if;    end if; end; 
/

CREATE TRIGGER "APP_FI_TRIFID_COMMENT_BI" before insert on "APP_FI_TRIFID_COMMENT"    for each row
begin     if inserting then       if :NEW."TRIFID_COMMENT_ID" is null then          select ID_SEQ.nextval into :NEW."TRIFID_COMMENT_ID" from dual;       end if;    end if; end; 
/

CREATE TRIGGER "APP_FI_TRIFID_DELETE_BI" before insert on "APP_FI_TRIFID_DELETE"    for each row
begin     if inserting then       if :NEW."TRIFID_DELETE_ID" is null then          select ID_SEQ.nextval into :NEW."TRIFID_DELETE_ID" from dual;       end if;    end if; end; 
/

CREATE TRIGGER "APP_FI_TRIFID_BI" 

  BEFORE INSERT ON APP_FI_TRIFID 
  FOR EACH ROW
BEGIN 
  IF INSERTING THEN 
    IF :NEW.TRIFID_ID IS NULL THEN 
      SELECT ID_SEQ.NEXTVAL INTO :NEW.TRIFID_ID FROM dual; 
    END IF; 
  END IF; 
END; 
/

CREATE TRIGGER "APP_LOOKUP_CTY_REG_ID_TRIG"     before insert on "APP_LOOKUP_CTY_REG"    for each row begin     if inserting then       if :NEW."ID" is null then          select ID_SEQ.nextval into :NEW."ID" from dual;       end if;    end if; end; 
/

CREATE TRIGGER "APP_MANUALSUBMISSIONLOG_BI" before insert on "APP_MANUALSUBMISSIONLOG"    for each row
begin     if inserting then       if :NEW."MANUAL_SUBMISSION_LOG_ID" is null then          select ID_SEQ.nextval into :NEW."MANUAL_SUBMISSION_LOG_ID" from dual;       end if;    end if; end; 
/

CREATE TRIGGER "TRI_SUB_BI" 
  BEFORE INSERT ON TRI_SUB 
  FOR EACH ROW
BEGIN 
  IF INSERTING THEN 
    IF :NEW.PK_GUID IS NULL THEN 
      SELECT ID_SEQ.NEXTVAL INTO :NEW.PK_GUID FROM dual; 
    END IF; 
  END IF; 
END; 
/

