#region License
/*
Copyright (c) 2009, The Environmental Council of the States (ECOS)
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:

 * Redistributions of source code must retain the above copyright
   notice, this list of conditions and the following disclaimer.
 * Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in the
   documentation and/or other materials provided with the distribution.
 * Neither the name of the ECOS nor the names of its contributors may
   be used to endorse or promote products derived from this software
   without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
"AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
POSSIBILITY OF SUCH DAMAGE.
*/
#endregion

ï»¿//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Windsor.Node2008.WNOSPlugin.FRS23
{
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("FRS")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class FRS : System.Data.DataSet {
        
        private FRS_ADDDataTable tableFRS_ADD;
        
        private FRS_GEODataTable tableFRS_GEO;
        
        private FRS_ALT_NMDataTable tableFRS_ALT_NM;
        
        private FRS_EIDataTable tableFRS_EI;
        
        private FRS_EI_INDDataTable tableFRS_EI_IND;
        
        private FRS_EI_NAICSDataTable tableFRS_EI_NAICS;
        
        private FRS_EI_ORGDataTable tableFRS_EI_ORG;
        
        private FRS_EI_SICDataTable tableFRS_EI_SIC;
        
        private FRS_FACDataTable tableFRS_FAC;
        
        private FRS_FAC_INDDataTable tableFRS_FAC_IND;
        
        private FRS_FAC_NAICSDataTable tableFRS_FAC_NAICS;
        
        private FRS_FAC_ORGDataTable tableFRS_FAC_ORG;
        
        private FRS_FAC_SICDataTable tableFRS_FAC_SIC;
        
        private FRS_FAC_DELDataTable tableFRS_FAC_DEL;
        
        private System.Data.DataRelation relationFK_ADD_FAC;
        
        private System.Data.DataRelation relationFK_GEO_FAC;
        
        private System.Data.DataRelation relationFK_ALT_NM_FAC;
        
        private System.Data.DataRelation relationFK_EI_FAC;
        
        private System.Data.DataRelation relationFK_EIIND_EI;
        
        private System.Data.DataRelation relationFK_EINAICS_EI;
        
        private System.Data.DataRelation relationFK_EIORG_EI;
        
        private System.Data.DataRelation relationFK_EISIC_EI;
        
        private System.Data.DataRelation relationFK_FACIND_FAC;
        
        private System.Data.DataRelation relationFK_FACNAICS_FAC;
        
        private System.Data.DataRelation relationFK_FACORG_FAC;
        
        private System.Data.DataRelation relationFK_FACSIC_FAC;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public FRS() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected FRS(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["FRS_ADD"] != null)) {
                    base.Tables.Add(new FRS_ADDDataTable(ds.Tables["FRS_ADD"]));
                }
                if ((ds.Tables["FRS_GEO"] != null)) {
                    base.Tables.Add(new FRS_GEODataTable(ds.Tables["FRS_GEO"]));
                }
                if ((ds.Tables["FRS_ALT_NM"] != null)) {
                    base.Tables.Add(new FRS_ALT_NMDataTable(ds.Tables["FRS_ALT_NM"]));
                }
                if ((ds.Tables["FRS_EI"] != null)) {
                    base.Tables.Add(new FRS_EIDataTable(ds.Tables["FRS_EI"]));
                }
                if ((ds.Tables["FRS_EI_IND"] != null)) {
                    base.Tables.Add(new FRS_EI_INDDataTable(ds.Tables["FRS_EI_IND"]));
                }
                if ((ds.Tables["FRS_EI_NAICS"] != null)) {
                    base.Tables.Add(new FRS_EI_NAICSDataTable(ds.Tables["FRS_EI_NAICS"]));
                }
                if ((ds.Tables["FRS_EI_ORG"] != null)) {
                    base.Tables.Add(new FRS_EI_ORGDataTable(ds.Tables["FRS_EI_ORG"]));
                }
                if ((ds.Tables["FRS_EI_SIC"] != null)) {
                    base.Tables.Add(new FRS_EI_SICDataTable(ds.Tables["FRS_EI_SIC"]));
                }
                if ((ds.Tables["FRS_FAC"] != null)) {
                    base.Tables.Add(new FRS_FACDataTable(ds.Tables["FRS_FAC"]));
                }
                if ((ds.Tables["FRS_FAC_IND"] != null)) {
                    base.Tables.Add(new FRS_FAC_INDDataTable(ds.Tables["FRS_FAC_IND"]));
                }
                if ((ds.Tables["FRS_FAC_NAICS"] != null)) {
                    base.Tables.Add(new FRS_FAC_NAICSDataTable(ds.Tables["FRS_FAC_NAICS"]));
                }
                if ((ds.Tables["FRS_FAC_ORG"] != null)) {
                    base.Tables.Add(new FRS_FAC_ORGDataTable(ds.Tables["FRS_FAC_ORG"]));
                }
                if ((ds.Tables["FRS_FAC_SIC"] != null)) {
                    base.Tables.Add(new FRS_FAC_SICDataTable(ds.Tables["FRS_FAC_SIC"]));
                }
                if ((ds.Tables["FRS_FAC_DEL"] != null)) {
                    base.Tables.Add(new FRS_FAC_DELDataTable(ds.Tables["FRS_FAC_DEL"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FRS_ADDDataTable FRS_ADD {
            get {
                return this.tableFRS_ADD;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FRS_GEODataTable FRS_GEO {
            get {
                return this.tableFRS_GEO;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FRS_ALT_NMDataTable FRS_ALT_NM {
            get {
                return this.tableFRS_ALT_NM;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FRS_EIDataTable FRS_EI {
            get {
                return this.tableFRS_EI;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FRS_EI_INDDataTable FRS_EI_IND {
            get {
                return this.tableFRS_EI_IND;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FRS_EI_NAICSDataTable FRS_EI_NAICS {
            get {
                return this.tableFRS_EI_NAICS;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FRS_EI_ORGDataTable FRS_EI_ORG {
            get {
                return this.tableFRS_EI_ORG;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FRS_EI_SICDataTable FRS_EI_SIC {
            get {
                return this.tableFRS_EI_SIC;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FRS_FACDataTable FRS_FAC {
            get {
                return this.tableFRS_FAC;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FRS_FAC_INDDataTable FRS_FAC_IND {
            get {
                return this.tableFRS_FAC_IND;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FRS_FAC_NAICSDataTable FRS_FAC_NAICS {
            get {
                return this.tableFRS_FAC_NAICS;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FRS_FAC_ORGDataTable FRS_FAC_ORG {
            get {
                return this.tableFRS_FAC_ORG;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FRS_FAC_SICDataTable FRS_FAC_SIC {
            get {
                return this.tableFRS_FAC_SIC;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FRS_FAC_DELDataTable FRS_FAC_DEL {
            get {
                return this.tableFRS_FAC_DEL;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            FRS cln = ((FRS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["FRS_ADD"] != null)) {
                    base.Tables.Add(new FRS_ADDDataTable(ds.Tables["FRS_ADD"]));
                }
                if ((ds.Tables["FRS_GEO"] != null)) {
                    base.Tables.Add(new FRS_GEODataTable(ds.Tables["FRS_GEO"]));
                }
                if ((ds.Tables["FRS_ALT_NM"] != null)) {
                    base.Tables.Add(new FRS_ALT_NMDataTable(ds.Tables["FRS_ALT_NM"]));
                }
                if ((ds.Tables["FRS_EI"] != null)) {
                    base.Tables.Add(new FRS_EIDataTable(ds.Tables["FRS_EI"]));
                }
                if ((ds.Tables["FRS_EI_IND"] != null)) {
                    base.Tables.Add(new FRS_EI_INDDataTable(ds.Tables["FRS_EI_IND"]));
                }
                if ((ds.Tables["FRS_EI_NAICS"] != null)) {
                    base.Tables.Add(new FRS_EI_NAICSDataTable(ds.Tables["FRS_EI_NAICS"]));
                }
                if ((ds.Tables["FRS_EI_ORG"] != null)) {
                    base.Tables.Add(new FRS_EI_ORGDataTable(ds.Tables["FRS_EI_ORG"]));
                }
                if ((ds.Tables["FRS_EI_SIC"] != null)) {
                    base.Tables.Add(new FRS_EI_SICDataTable(ds.Tables["FRS_EI_SIC"]));
                }
                if ((ds.Tables["FRS_FAC"] != null)) {
                    base.Tables.Add(new FRS_FACDataTable(ds.Tables["FRS_FAC"]));
                }
                if ((ds.Tables["FRS_FAC_IND"] != null)) {
                    base.Tables.Add(new FRS_FAC_INDDataTable(ds.Tables["FRS_FAC_IND"]));
                }
                if ((ds.Tables["FRS_FAC_NAICS"] != null)) {
                    base.Tables.Add(new FRS_FAC_NAICSDataTable(ds.Tables["FRS_FAC_NAICS"]));
                }
                if ((ds.Tables["FRS_FAC_ORG"] != null)) {
                    base.Tables.Add(new FRS_FAC_ORGDataTable(ds.Tables["FRS_FAC_ORG"]));
                }
                if ((ds.Tables["FRS_FAC_SIC"] != null)) {
                    base.Tables.Add(new FRS_FAC_SICDataTable(ds.Tables["FRS_FAC_SIC"]));
                }
                if ((ds.Tables["FRS_FAC_DEL"] != null)) {
                    base.Tables.Add(new FRS_FAC_DELDataTable(ds.Tables["FRS_FAC_DEL"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableFRS_ADD = ((FRS_ADDDataTable)(base.Tables["FRS_ADD"]));
            if ((initTable == true)) {
                if ((this.tableFRS_ADD != null)) {
                    this.tableFRS_ADD.InitVars();
                }
            }
            this.tableFRS_GEO = ((FRS_GEODataTable)(base.Tables["FRS_GEO"]));
            if ((initTable == true)) {
                if ((this.tableFRS_GEO != null)) {
                    this.tableFRS_GEO.InitVars();
                }
            }
            this.tableFRS_ALT_NM = ((FRS_ALT_NMDataTable)(base.Tables["FRS_ALT_NM"]));
            if ((initTable == true)) {
                if ((this.tableFRS_ALT_NM != null)) {
                    this.tableFRS_ALT_NM.InitVars();
                }
            }
            this.tableFRS_EI = ((FRS_EIDataTable)(base.Tables["FRS_EI"]));
            if ((initTable == true)) {
                if ((this.tableFRS_EI != null)) {
                    this.tableFRS_EI.InitVars();
                }
            }
            this.tableFRS_EI_IND = ((FRS_EI_INDDataTable)(base.Tables["FRS_EI_IND"]));
            if ((initTable == true)) {
                if ((this.tableFRS_EI_IND != null)) {
                    this.tableFRS_EI_IND.InitVars();
                }
            }
            this.tableFRS_EI_NAICS = ((FRS_EI_NAICSDataTable)(base.Tables["FRS_EI_NAICS"]));
            if ((initTable == true)) {
                if ((this.tableFRS_EI_NAICS != null)) {
                    this.tableFRS_EI_NAICS.InitVars();
                }
            }
            this.tableFRS_EI_ORG = ((FRS_EI_ORGDataTable)(base.Tables["FRS_EI_ORG"]));
            if ((initTable == true)) {
                if ((this.tableFRS_EI_ORG != null)) {
                    this.tableFRS_EI_ORG.InitVars();
                }
            }
            this.tableFRS_EI_SIC = ((FRS_EI_SICDataTable)(base.Tables["FRS_EI_SIC"]));
            if ((initTable == true)) {
                if ((this.tableFRS_EI_SIC != null)) {
                    this.tableFRS_EI_SIC.InitVars();
                }
            }
            this.tableFRS_FAC = ((FRS_FACDataTable)(base.Tables["FRS_FAC"]));
            if ((initTable == true)) {
                if ((this.tableFRS_FAC != null)) {
                    this.tableFRS_FAC.InitVars();
                }
            }
            this.tableFRS_FAC_IND = ((FRS_FAC_INDDataTable)(base.Tables["FRS_FAC_IND"]));
            if ((initTable == true)) {
                if ((this.tableFRS_FAC_IND != null)) {
                    this.tableFRS_FAC_IND.InitVars();
                }
            }
            this.tableFRS_FAC_NAICS = ((FRS_FAC_NAICSDataTable)(base.Tables["FRS_FAC_NAICS"]));
            if ((initTable == true)) {
                if ((this.tableFRS_FAC_NAICS != null)) {
                    this.tableFRS_FAC_NAICS.InitVars();
                }
            }
            this.tableFRS_FAC_ORG = ((FRS_FAC_ORGDataTable)(base.Tables["FRS_FAC_ORG"]));
            if ((initTable == true)) {
                if ((this.tableFRS_FAC_ORG != null)) {
                    this.tableFRS_FAC_ORG.InitVars();
                }
            }
            this.tableFRS_FAC_SIC = ((FRS_FAC_SICDataTable)(base.Tables["FRS_FAC_SIC"]));
            if ((initTable == true)) {
                if ((this.tableFRS_FAC_SIC != null)) {
                    this.tableFRS_FAC_SIC.InitVars();
                }
            }
            this.tableFRS_FAC_DEL = ((FRS_FAC_DELDataTable)(base.Tables["FRS_FAC_DEL"]));
            if ((initTable == true)) {
                if ((this.tableFRS_FAC_DEL != null)) {
                    this.tableFRS_FAC_DEL.InitVars();
                }
            }
            this.relationFK_ADD_FAC = this.Relations["FK_ADD_FAC"];
            this.relationFK_GEO_FAC = this.Relations["FK_GEO_FAC"];
            this.relationFK_ALT_NM_FAC = this.Relations["FK_ALT_NM_FAC"];
            this.relationFK_EI_FAC = this.Relations["FK_EI_FAC"];
            this.relationFK_EIIND_EI = this.Relations["FK_EIIND_EI"];
            this.relationFK_EINAICS_EI = this.Relations["FK_EINAICS_EI"];
            this.relationFK_EIORG_EI = this.Relations["FK_EIORG_EI"];
            this.relationFK_EISIC_EI = this.Relations["FK_EISIC_EI"];
            this.relationFK_FACIND_FAC = this.Relations["FK_FACIND_FAC"];
            this.relationFK_FACNAICS_FAC = this.Relations["FK_FACNAICS_FAC"];
            this.relationFK_FACORG_FAC = this.Relations["FK_FACORG_FAC"];
            this.relationFK_FACSIC_FAC = this.Relations["FK_FACSIC_FAC"];
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "FRS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/FRS.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableFRS_ADD = new FRS_ADDDataTable();
            base.Tables.Add(this.tableFRS_ADD);
            this.tableFRS_GEO = new FRS_GEODataTable();
            base.Tables.Add(this.tableFRS_GEO);
            this.tableFRS_ALT_NM = new FRS_ALT_NMDataTable();
            base.Tables.Add(this.tableFRS_ALT_NM);
            this.tableFRS_EI = new FRS_EIDataTable();
            base.Tables.Add(this.tableFRS_EI);
            this.tableFRS_EI_IND = new FRS_EI_INDDataTable();
            base.Tables.Add(this.tableFRS_EI_IND);
            this.tableFRS_EI_NAICS = new FRS_EI_NAICSDataTable();
            base.Tables.Add(this.tableFRS_EI_NAICS);
            this.tableFRS_EI_ORG = new FRS_EI_ORGDataTable();
            base.Tables.Add(this.tableFRS_EI_ORG);
            this.tableFRS_EI_SIC = new FRS_EI_SICDataTable();
            base.Tables.Add(this.tableFRS_EI_SIC);
            this.tableFRS_FAC = new FRS_FACDataTable();
            base.Tables.Add(this.tableFRS_FAC);
            this.tableFRS_FAC_IND = new FRS_FAC_INDDataTable();
            base.Tables.Add(this.tableFRS_FAC_IND);
            this.tableFRS_FAC_NAICS = new FRS_FAC_NAICSDataTable();
            base.Tables.Add(this.tableFRS_FAC_NAICS);
            this.tableFRS_FAC_ORG = new FRS_FAC_ORGDataTable();
            base.Tables.Add(this.tableFRS_FAC_ORG);
            this.tableFRS_FAC_SIC = new FRS_FAC_SICDataTable();
            base.Tables.Add(this.tableFRS_FAC_SIC);
            this.tableFRS_FAC_DEL = new FRS_FAC_DELDataTable();
            base.Tables.Add(this.tableFRS_FAC_DEL);
            this.relationFK_ADD_FAC = new System.Data.DataRelation("FK_ADD_FAC", new System.Data.DataColumn[] {
                        this.tableFRS_FAC.ST_FAC_INDColumn}, new System.Data.DataColumn[] {
                        this.tableFRS_ADD.ST_FAC_INDColumn}, false);
            this.Relations.Add(this.relationFK_ADD_FAC);
            this.relationFK_GEO_FAC = new System.Data.DataRelation("FK_GEO_FAC", new System.Data.DataColumn[] {
                        this.tableFRS_FAC.ST_FAC_INDColumn}, new System.Data.DataColumn[] {
                        this.tableFRS_GEO.ST_FAC_INDColumn}, false);
            this.Relations.Add(this.relationFK_GEO_FAC);
            this.relationFK_ALT_NM_FAC = new System.Data.DataRelation("FK_ALT_NM_FAC", new System.Data.DataColumn[] {
                        this.tableFRS_FAC.ST_FAC_INDColumn}, new System.Data.DataColumn[] {
                        this.tableFRS_ALT_NM.ST_FAC_INDColumn}, false);
            this.Relations.Add(this.relationFK_ALT_NM_FAC);
            this.relationFK_EI_FAC = new System.Data.DataRelation("FK_EI_FAC", new System.Data.DataColumn[] {
                        this.tableFRS_FAC.ST_FAC_INDColumn}, new System.Data.DataColumn[] {
                        this.tableFRS_EI.ST_FAC_INDColumn}, false);
            this.Relations.Add(this.relationFK_EI_FAC);
            this.relationFK_EIIND_EI = new System.Data.DataRelation("FK_EIIND_EI", new System.Data.DataColumn[] {
                        this.tableFRS_EI.ST_EI_INDColumn}, new System.Data.DataColumn[] {
                        this.tableFRS_EI_IND.ST_EI_INDColumn}, false);
            this.Relations.Add(this.relationFK_EIIND_EI);
            this.relationFK_EINAICS_EI = new System.Data.DataRelation("FK_EINAICS_EI", new System.Data.DataColumn[] {
                        this.tableFRS_EI.ST_EI_INDColumn}, new System.Data.DataColumn[] {
                        this.tableFRS_EI_NAICS.ST_EI_INDColumn}, false);
            this.Relations.Add(this.relationFK_EINAICS_EI);
            this.relationFK_EIORG_EI = new System.Data.DataRelation("FK_EIORG_EI", new System.Data.DataColumn[] {
                        this.tableFRS_EI.ST_EI_INDColumn}, new System.Data.DataColumn[] {
                        this.tableFRS_EI_ORG.ST_EI_INDColumn}, false);
            this.Relations.Add(this.relationFK_EIORG_EI);
            this.relationFK_EISIC_EI = new System.Data.DataRelation("FK_EISIC_EI", new System.Data.DataColumn[] {
                        this.tableFRS_EI.ST_EI_INDColumn}, new System.Data.DataColumn[] {
                        this.tableFRS_EI_SIC.ST_EI_INDColumn}, false);
            this.Relations.Add(this.relationFK_EISIC_EI);
            this.relationFK_FACIND_FAC = new System.Data.DataRelation("FK_FACIND_FAC", new System.Data.DataColumn[] {
                        this.tableFRS_FAC.ST_FAC_INDColumn}, new System.Data.DataColumn[] {
                        this.tableFRS_FAC_IND.ST_FAC_INDColumn}, false);
            this.Relations.Add(this.relationFK_FACIND_FAC);
            this.relationFK_FACNAICS_FAC = new System.Data.DataRelation("FK_FACNAICS_FAC", new System.Data.DataColumn[] {
                        this.tableFRS_FAC.ST_FAC_INDColumn}, new System.Data.DataColumn[] {
                        this.tableFRS_FAC_NAICS.ST_FAC_INDColumn}, false);
            this.Relations.Add(this.relationFK_FACNAICS_FAC);
            this.relationFK_FACORG_FAC = new System.Data.DataRelation("FK_FACORG_FAC", new System.Data.DataColumn[] {
                        this.tableFRS_FAC.ST_FAC_INDColumn}, new System.Data.DataColumn[] {
                        this.tableFRS_FAC_ORG.ST_FAC_INDColumn}, false);
            this.Relations.Add(this.relationFK_FACORG_FAC);
            this.relationFK_FACSIC_FAC = new System.Data.DataRelation("FK_FACSIC_FAC", new System.Data.DataColumn[] {
                        this.tableFRS_FAC.ST_FAC_INDColumn}, new System.Data.DataColumn[] {
                        this.tableFRS_FAC_SIC.ST_FAC_INDColumn}, false);
            this.Relations.Add(this.relationFK_FACSIC_FAC);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeFRS_ADD() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeFRS_GEO() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeFRS_ALT_NM() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeFRS_EI() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeFRS_EI_IND() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeFRS_EI_NAICS() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeFRS_EI_ORG() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeFRS_EI_SIC() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeFRS_FAC() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeFRS_FAC_IND() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeFRS_FAC_NAICS() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeFRS_FAC_ORG() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeFRS_FAC_SIC() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeFRS_FAC_DEL() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            FRS ds = new FRS();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        public delegate void FRS_ADDRowChangeEventHandler(object sender, FRS_ADDRowChangeEvent e);
        
        public delegate void FRS_GEORowChangeEventHandler(object sender, FRS_GEORowChangeEvent e);
        
        public delegate void FRS_ALT_NMRowChangeEventHandler(object sender, FRS_ALT_NMRowChangeEvent e);
        
        public delegate void FRS_EIRowChangeEventHandler(object sender, FRS_EIRowChangeEvent e);
        
        public delegate void FRS_EI_INDRowChangeEventHandler(object sender, FRS_EI_INDRowChangeEvent e);
        
        public delegate void FRS_EI_NAICSRowChangeEventHandler(object sender, FRS_EI_NAICSRowChangeEvent e);
        
        public delegate void FRS_EI_ORGRowChangeEventHandler(object sender, FRS_EI_ORGRowChangeEvent e);
        
        public delegate void FRS_EI_SICRowChangeEventHandler(object sender, FRS_EI_SICRowChangeEvent e);
        
        public delegate void FRS_FACRowChangeEventHandler(object sender, FRS_FACRowChangeEvent e);
        
        public delegate void FRS_FAC_INDRowChangeEventHandler(object sender, FRS_FAC_INDRowChangeEvent e);
        
        public delegate void FRS_FAC_NAICSRowChangeEventHandler(object sender, FRS_FAC_NAICSRowChangeEvent e);
        
        public delegate void FRS_FAC_ORGRowChangeEventHandler(object sender, FRS_FAC_ORGRowChangeEvent e);
        
        public delegate void FRS_FAC_SICRowChangeEventHandler(object sender, FRS_FAC_SICRowChangeEvent e);
        
        public delegate void FRS_FAC_DELRowChangeEventHandler(object sender, FRS_FAC_DELRowChangeEvent e);
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FRS_ADDDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnST_FAC_IND;
            
            private System.Data.DataColumn columnAFFIL_TYPE;
            
            private System.Data.DataColumn columnMAIL_ADD;
            
            private System.Data.DataColumn columnSUPPLEM_ADD;
            
            private System.Data.DataColumn columnMAIL_ADD_CITY_NM;
            
            private System.Data.DataColumn columnMAIL_ADD_ST_CD;
            
            private System.Data.DataColumn columnMAIL_ADD_ST_NM;
            
            private System.Data.DataColumn columnMAIL_ADD_CO_NM;
            
            private System.Data.DataColumn columnMAIL_ADD_ZIP_CD;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_ADDDataTable() {
                this.TableName = "FRS_ADD";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FRS_ADDDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected FRS_ADDDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ST_FAC_INDColumn {
                get {
                    return this.columnST_FAC_IND;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AFFIL_TYPEColumn {
                get {
                    return this.columnAFFIL_TYPE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MAIL_ADDColumn {
                get {
                    return this.columnMAIL_ADD;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SUPPLEM_ADDColumn {
                get {
                    return this.columnSUPPLEM_ADD;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MAIL_ADD_CITY_NMColumn {
                get {
                    return this.columnMAIL_ADD_CITY_NM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MAIL_ADD_ST_CDColumn {
                get {
                    return this.columnMAIL_ADD_ST_CD;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MAIL_ADD_ST_NMColumn {
                get {
                    return this.columnMAIL_ADD_ST_NM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MAIL_ADD_CO_NMColumn {
                get {
                    return this.columnMAIL_ADD_CO_NM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MAIL_ADD_ZIP_CDColumn {
                get {
                    return this.columnMAIL_ADD_ZIP_CD;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_ADDRow this[int index] {
                get {
                    return ((FRS_ADDRow)(this.Rows[index]));
                }
            }
            
            public event FRS_ADDRowChangeEventHandler FRS_ADDRowChanging;
            
            public event FRS_ADDRowChangeEventHandler FRS_ADDRowChanged;
            
            public event FRS_ADDRowChangeEventHandler FRS_ADDRowDeleting;
            
            public event FRS_ADDRowChangeEventHandler FRS_ADDRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddFRS_ADDRow(FRS_ADDRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_ADDRow AddFRS_ADDRow(FRS_FACRow parentFRS_FACRowByFK_ADD_FAC, string AFFIL_TYPE, string MAIL_ADD, string SUPPLEM_ADD, string MAIL_ADD_CITY_NM, string MAIL_ADD_ST_CD, string MAIL_ADD_ST_NM, string MAIL_ADD_CO_NM, string MAIL_ADD_ZIP_CD) {
                FRS_ADDRow rowFRS_ADDRow = ((FRS_ADDRow)(this.NewRow()));
                rowFRS_ADDRow.ItemArray = new object[] {
                        parentFRS_FACRowByFK_ADD_FAC[0],
                        AFFIL_TYPE,
                        MAIL_ADD,
                        SUPPLEM_ADD,
                        MAIL_ADD_CITY_NM,
                        MAIL_ADD_ST_CD,
                        MAIL_ADD_ST_NM,
                        MAIL_ADD_CO_NM,
                        MAIL_ADD_ZIP_CD};
                this.Rows.Add(rowFRS_ADDRow);
                return rowFRS_ADDRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_ADDRow FindByST_FAC_IND(string ST_FAC_IND) {
                return ((FRS_ADDRow)(this.Rows.Find(new object[] {
                            ST_FAC_IND})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                FRS_ADDDataTable cln = ((FRS_ADDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new FRS_ADDDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnST_FAC_IND = base.Columns["ST_FAC_IND"];
                this.columnAFFIL_TYPE = base.Columns["AFFIL_TYPE"];
                this.columnMAIL_ADD = base.Columns["MAIL_ADD"];
                this.columnSUPPLEM_ADD = base.Columns["SUPPLEM_ADD"];
                this.columnMAIL_ADD_CITY_NM = base.Columns["MAIL_ADD_CITY_NM"];
                this.columnMAIL_ADD_ST_CD = base.Columns["MAIL_ADD_ST_CD"];
                this.columnMAIL_ADD_ST_NM = base.Columns["MAIL_ADD_ST_NM"];
                this.columnMAIL_ADD_CO_NM = base.Columns["MAIL_ADD_CO_NM"];
                this.columnMAIL_ADD_ZIP_CD = base.Columns["MAIL_ADD_ZIP_CD"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnST_FAC_IND = new System.Data.DataColumn("ST_FAC_IND", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnST_FAC_IND);
                this.columnAFFIL_TYPE = new System.Data.DataColumn("AFFIL_TYPE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAFFIL_TYPE);
                this.columnMAIL_ADD = new System.Data.DataColumn("MAIL_ADD", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAIL_ADD);
                this.columnSUPPLEM_ADD = new System.Data.DataColumn("SUPPLEM_ADD", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUPPLEM_ADD);
                this.columnMAIL_ADD_CITY_NM = new System.Data.DataColumn("MAIL_ADD_CITY_NM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAIL_ADD_CITY_NM);
                this.columnMAIL_ADD_ST_CD = new System.Data.DataColumn("MAIL_ADD_ST_CD", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAIL_ADD_ST_CD);
                this.columnMAIL_ADD_ST_NM = new System.Data.DataColumn("MAIL_ADD_ST_NM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAIL_ADD_ST_NM);
                this.columnMAIL_ADD_CO_NM = new System.Data.DataColumn("MAIL_ADD_CO_NM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAIL_ADD_CO_NM);
                this.columnMAIL_ADD_ZIP_CD = new System.Data.DataColumn("MAIL_ADD_ZIP_CD", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAIL_ADD_ZIP_CD);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnST_FAC_IND}, true));
                this.columnST_FAC_IND.AllowDBNull = false;
                this.columnST_FAC_IND.Unique = true;
                this.columnST_FAC_IND.MaxLength = 12;
                this.columnAFFIL_TYPE.MaxLength = 40;
                this.columnMAIL_ADD.MaxLength = 50;
                this.columnSUPPLEM_ADD.MaxLength = 50;
                this.columnMAIL_ADD_CITY_NM.MaxLength = 30;
                this.columnMAIL_ADD_ST_CD.MaxLength = 2;
                this.columnMAIL_ADD_ST_NM.MaxLength = 35;
                this.columnMAIL_ADD_CO_NM.MaxLength = 44;
                this.columnMAIL_ADD_ZIP_CD.MaxLength = 14;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_ADDRow NewFRS_ADDRow() {
                return ((FRS_ADDRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new FRS_ADDRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(FRS_ADDRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FRS_ADDRowChanged != null)) {
                    this.FRS_ADDRowChanged(this, new FRS_ADDRowChangeEvent(((FRS_ADDRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FRS_ADDRowChanging != null)) {
                    this.FRS_ADDRowChanging(this, new FRS_ADDRowChangeEvent(((FRS_ADDRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FRS_ADDRowDeleted != null)) {
                    this.FRS_ADDRowDeleted(this, new FRS_ADDRowChangeEvent(((FRS_ADDRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FRS_ADDRowDeleting != null)) {
                    this.FRS_ADDRowDeleting(this, new FRS_ADDRowChangeEvent(((FRS_ADDRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveFRS_ADDRow(FRS_ADDRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                FRS ds = new FRS();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FRS_ADDDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FRS_GEODataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnST_FAC_IND;
            
            private System.Data.DataColumn columnLAT_MEASURE;
            
            private System.Data.DataColumn columnLON_MEASURE;
            
            private System.Data.DataColumn columnHORIZ_ACCUR_MEASURE;
            
            private System.Data.DataColumn columnHORIZ_COLL_METH;
            
            private System.Data.DataColumn columnHORIZ_REF_DATUM_NM;
            
            private System.Data.DataColumn columnSRC_MAP_SCALE_NUM;
            
            private System.Data.DataColumn columnREF_POINT;
            
            private System.Data.DataColumn columnDATA_COLL_DATE;
            
            private System.Data.DataColumn columnGEO_TYPE_NM;
            
            private System.Data.DataColumn columnLOC_COMMENTS;
            
            private System.Data.DataColumn columnVERT_COLL_METH;
            
            private System.Data.DataColumn columnVERT_MEASURE;
            
            private System.Data.DataColumn columnVERT_ACCUR_MEASURE;
            
            private System.Data.DataColumn columnVERT_REF_DATUM_NM;
            
            private System.Data.DataColumn columnDATA_SRC_NM;
            
            private System.Data.DataColumn columnCOORD_DATA_SRC_NM;
            
            private System.Data.DataColumn columnSUB_ENT_IND;
            
            private System.Data.DataColumn columnSUB_ENT_TYPE_NM;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_GEODataTable() {
                this.TableName = "FRS_GEO";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FRS_GEODataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected FRS_GEODataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ST_FAC_INDColumn {
                get {
                    return this.columnST_FAC_IND;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LAT_MEASUREColumn {
                get {
                    return this.columnLAT_MEASURE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LON_MEASUREColumn {
                get {
                    return this.columnLON_MEASURE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn HORIZ_ACCUR_MEASUREColumn {
                get {
                    return this.columnHORIZ_ACCUR_MEASURE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn HORIZ_COLL_METHColumn {
                get {
                    return this.columnHORIZ_COLL_METH;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn HORIZ_REF_DATUM_NMColumn {
                get {
                    return this.columnHORIZ_REF_DATUM_NM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SRC_MAP_SCALE_NUMColumn {
                get {
                    return this.columnSRC_MAP_SCALE_NUM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn REF_POINTColumn {
                get {
                    return this.columnREF_POINT;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DATA_COLL_DATEColumn {
                get {
                    return this.columnDATA_COLL_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn GEO_TYPE_NMColumn {
                get {
                    return this.columnGEO_TYPE_NM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LOC_COMMENTSColumn {
                get {
                    return this.columnLOC_COMMENTS;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn VERT_COLL_METHColumn {
                get {
                    return this.columnVERT_COLL_METH;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn VERT_MEASUREColumn {
                get {
                    return this.columnVERT_MEASURE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn VERT_ACCUR_MEASUREColumn {
                get {
                    return this.columnVERT_ACCUR_MEASURE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn VERT_REF_DATUM_NMColumn {
                get {
                    return this.columnVERT_REF_DATUM_NM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DATA_SRC_NMColumn {
                get {
                    return this.columnDATA_SRC_NM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn COORD_DATA_SRC_NMColumn {
                get {
                    return this.columnCOORD_DATA_SRC_NM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SUB_ENT_INDColumn {
                get {
                    return this.columnSUB_ENT_IND;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SUB_ENT_TYPE_NMColumn {
                get {
                    return this.columnSUB_ENT_TYPE_NM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_GEORow this[int index] {
                get {
                    return ((FRS_GEORow)(this.Rows[index]));
                }
            }
            
            public event FRS_GEORowChangeEventHandler FRS_GEORowChanging;
            
            public event FRS_GEORowChangeEventHandler FRS_GEORowChanged;
            
            public event FRS_GEORowChangeEventHandler FRS_GEORowDeleting;
            
            public event FRS_GEORowChangeEventHandler FRS_GEORowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddFRS_GEORow(FRS_GEORow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_GEORow AddFRS_GEORow(
                        FRS_FACRow parentFRS_FACRowByFK_GEO_FAC, 
                        string LAT_MEASURE, 
                        string LON_MEASURE, 
                        string HORIZ_ACCUR_MEASURE, 
                        string HORIZ_COLL_METH, 
                        string HORIZ_REF_DATUM_NM, 
                        string SRC_MAP_SCALE_NUM, 
                        string REF_POINT, 
                        string DATA_COLL_DATE, 
                        string GEO_TYPE_NM, 
                        string LOC_COMMENTS, 
                        string VERT_COLL_METH, 
                        string VERT_MEASURE, 
                        string VERT_ACCUR_MEASURE, 
                        string VERT_REF_DATUM_NM, 
                        string DATA_SRC_NM, 
                        string COORD_DATA_SRC_NM, 
                        string SUB_ENT_IND, 
                        string SUB_ENT_TYPE_NM) {
                FRS_GEORow rowFRS_GEORow = ((FRS_GEORow)(this.NewRow()));
                rowFRS_GEORow.ItemArray = new object[] {
                        parentFRS_FACRowByFK_GEO_FAC[0],
                        LAT_MEASURE,
                        LON_MEASURE,
                        HORIZ_ACCUR_MEASURE,
                        HORIZ_COLL_METH,
                        HORIZ_REF_DATUM_NM,
                        SRC_MAP_SCALE_NUM,
                        REF_POINT,
                        DATA_COLL_DATE,
                        GEO_TYPE_NM,
                        LOC_COMMENTS,
                        VERT_COLL_METH,
                        VERT_MEASURE,
                        VERT_ACCUR_MEASURE,
                        VERT_REF_DATUM_NM,
                        DATA_SRC_NM,
                        COORD_DATA_SRC_NM,
                        SUB_ENT_IND,
                        SUB_ENT_TYPE_NM};
                this.Rows.Add(rowFRS_GEORow);
                return rowFRS_GEORow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_GEORow FindByST_FAC_IND(string ST_FAC_IND) {
                return ((FRS_GEORow)(this.Rows.Find(new object[] {
                            ST_FAC_IND})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                FRS_GEODataTable cln = ((FRS_GEODataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new FRS_GEODataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnST_FAC_IND = base.Columns["ST_FAC_IND"];
                this.columnLAT_MEASURE = base.Columns["LAT_MEASURE"];
                this.columnLON_MEASURE = base.Columns["LON_MEASURE"];
                this.columnHORIZ_ACCUR_MEASURE = base.Columns["HORIZ_ACCUR_MEASURE"];
                this.columnHORIZ_COLL_METH = base.Columns["HORIZ_COLL_METH"];
                this.columnHORIZ_REF_DATUM_NM = base.Columns["HORIZ_REF_DATUM_NM"];
                this.columnSRC_MAP_SCALE_NUM = base.Columns["SRC_MAP_SCALE_NUM"];
                this.columnREF_POINT = base.Columns["REF_POINT"];
                this.columnDATA_COLL_DATE = base.Columns["DATA_COLL_DATE"];
                this.columnGEO_TYPE_NM = base.Columns["GEO_TYPE_NM"];
                this.columnLOC_COMMENTS = base.Columns["LOC_COMMENTS"];
                this.columnVERT_COLL_METH = base.Columns["VERT_COLL_METH"];
                this.columnVERT_MEASURE = base.Columns["VERT_MEASURE"];
                this.columnVERT_ACCUR_MEASURE = base.Columns["VERT_ACCUR_MEASURE"];
                this.columnVERT_REF_DATUM_NM = base.Columns["VERT_REF_DATUM_NM"];
                this.columnDATA_SRC_NM = base.Columns["DATA_SRC_NM"];
                this.columnCOORD_DATA_SRC_NM = base.Columns["COORD_DATA_SRC_NM"];
                this.columnSUB_ENT_IND = base.Columns["SUB_ENT_IND"];
                this.columnSUB_ENT_TYPE_NM = base.Columns["SUB_ENT_TYPE_NM"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnST_FAC_IND = new System.Data.DataColumn("ST_FAC_IND", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnST_FAC_IND);
                this.columnLAT_MEASURE = new System.Data.DataColumn("LAT_MEASURE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLAT_MEASURE);
                this.columnLON_MEASURE = new System.Data.DataColumn("LON_MEASURE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLON_MEASURE);
                this.columnHORIZ_ACCUR_MEASURE = new System.Data.DataColumn("HORIZ_ACCUR_MEASURE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnHORIZ_ACCUR_MEASURE);
                this.columnHORIZ_COLL_METH = new System.Data.DataColumn("HORIZ_COLL_METH", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnHORIZ_COLL_METH);
                this.columnHORIZ_REF_DATUM_NM = new System.Data.DataColumn("HORIZ_REF_DATUM_NM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnHORIZ_REF_DATUM_NM);
                this.columnSRC_MAP_SCALE_NUM = new System.Data.DataColumn("SRC_MAP_SCALE_NUM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSRC_MAP_SCALE_NUM);
                this.columnREF_POINT = new System.Data.DataColumn("REF_POINT", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnREF_POINT);
                this.columnDATA_COLL_DATE = new System.Data.DataColumn("DATA_COLL_DATE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATA_COLL_DATE);
                this.columnGEO_TYPE_NM = new System.Data.DataColumn("GEO_TYPE_NM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnGEO_TYPE_NM);
                this.columnLOC_COMMENTS = new System.Data.DataColumn("LOC_COMMENTS", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOC_COMMENTS);
                this.columnVERT_COLL_METH = new System.Data.DataColumn("VERT_COLL_METH", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnVERT_COLL_METH);
                this.columnVERT_MEASURE = new System.Data.DataColumn("VERT_MEASURE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnVERT_MEASURE);
                this.columnVERT_ACCUR_MEASURE = new System.Data.DataColumn("VERT_ACCUR_MEASURE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnVERT_ACCUR_MEASURE);
                this.columnVERT_REF_DATUM_NM = new System.Data.DataColumn("VERT_REF_DATUM_NM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnVERT_REF_DATUM_NM);
                this.columnDATA_SRC_NM = new System.Data.DataColumn("DATA_SRC_NM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATA_SRC_NM);
                this.columnCOORD_DATA_SRC_NM = new System.Data.DataColumn("COORD_DATA_SRC_NM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOORD_DATA_SRC_NM);
                this.columnSUB_ENT_IND = new System.Data.DataColumn("SUB_ENT_IND", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUB_ENT_IND);
                this.columnSUB_ENT_TYPE_NM = new System.Data.DataColumn("SUB_ENT_TYPE_NM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUB_ENT_TYPE_NM);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnST_FAC_IND}, true));
                this.columnST_FAC_IND.AllowDBNull = false;
                this.columnST_FAC_IND.Unique = true;
                this.columnST_FAC_IND.MaxLength = 12;
                this.columnLAT_MEASURE.AllowDBNull = false;
                this.columnLAT_MEASURE.MaxLength = 10;
                this.columnLON_MEASURE.AllowDBNull = false;
                this.columnLON_MEASURE.MaxLength = 11;
                this.columnHORIZ_ACCUR_MEASURE.MaxLength = 6;
                this.columnHORIZ_COLL_METH.MaxLength = 60;
                this.columnHORIZ_REF_DATUM_NM.MaxLength = 7;
                this.columnSRC_MAP_SCALE_NUM.MaxLength = 10;
                this.columnREF_POINT.MaxLength = 60;
                this.columnDATA_COLL_DATE.MaxLength = 10;
                this.columnGEO_TYPE_NM.MaxLength = 6;
                this.columnLOC_COMMENTS.MaxLength = 150;
                this.columnVERT_COLL_METH.MaxLength = 60;
                this.columnVERT_MEASURE.MaxLength = 10;
                this.columnVERT_ACCUR_MEASURE.MaxLength = 8;
                this.columnVERT_REF_DATUM_NM.MaxLength = 17;
                this.columnDATA_SRC_NM.MaxLength = 50;
                this.columnCOORD_DATA_SRC_NM.MaxLength = 35;
                this.columnSUB_ENT_IND.MaxLength = 30;
                this.columnSUB_ENT_TYPE_NM.MaxLength = 30;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_GEORow NewFRS_GEORow() {
                return ((FRS_GEORow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new FRS_GEORow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(FRS_GEORow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FRS_GEORowChanged != null)) {
                    this.FRS_GEORowChanged(this, new FRS_GEORowChangeEvent(((FRS_GEORow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FRS_GEORowChanging != null)) {
                    this.FRS_GEORowChanging(this, new FRS_GEORowChangeEvent(((FRS_GEORow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FRS_GEORowDeleted != null)) {
                    this.FRS_GEORowDeleted(this, new FRS_GEORowChangeEvent(((FRS_GEORow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FRS_GEORowDeleting != null)) {
                    this.FRS_GEORowDeleting(this, new FRS_GEORowChangeEvent(((FRS_GEORow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveFRS_GEORow(FRS_GEORow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                FRS ds = new FRS();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FRS_GEODataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FRS_ALT_NMDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnST_FAC_IND;
            
            private System.Data.DataColumn columnALT_NM;
            
            private System.Data.DataColumn columnALT_NAME_TYPE;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_ALT_NMDataTable() {
                this.TableName = "FRS_ALT_NM";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FRS_ALT_NMDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected FRS_ALT_NMDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ST_FAC_INDColumn {
                get {
                    return this.columnST_FAC_IND;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ALT_NMColumn {
                get {
                    return this.columnALT_NM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ALT_NAME_TYPEColumn {
                get {
                    return this.columnALT_NAME_TYPE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_ALT_NMRow this[int index] {
                get {
                    return ((FRS_ALT_NMRow)(this.Rows[index]));
                }
            }
            
            public event FRS_ALT_NMRowChangeEventHandler FRS_ALT_NMRowChanging;
            
            public event FRS_ALT_NMRowChangeEventHandler FRS_ALT_NMRowChanged;
            
            public event FRS_ALT_NMRowChangeEventHandler FRS_ALT_NMRowDeleting;
            
            public event FRS_ALT_NMRowChangeEventHandler FRS_ALT_NMRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddFRS_ALT_NMRow(FRS_ALT_NMRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_ALT_NMRow AddFRS_ALT_NMRow(FRS_FACRow parentFRS_FACRowByFK_ALT_NM_FAC, string ALT_NM, string ALT_NAME_TYPE) {
                FRS_ALT_NMRow rowFRS_ALT_NMRow = ((FRS_ALT_NMRow)(this.NewRow()));
                rowFRS_ALT_NMRow.ItemArray = new object[] {
                        parentFRS_FACRowByFK_ALT_NM_FAC[0],
                        ALT_NM,
                        ALT_NAME_TYPE};
                this.Rows.Add(rowFRS_ALT_NMRow);
                return rowFRS_ALT_NMRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_ALT_NMRow FindByST_FAC_IND(string ST_FAC_IND) {
                return ((FRS_ALT_NMRow)(this.Rows.Find(new object[] {
                            ST_FAC_IND})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                FRS_ALT_NMDataTable cln = ((FRS_ALT_NMDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new FRS_ALT_NMDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnST_FAC_IND = base.Columns["ST_FAC_IND"];
                this.columnALT_NM = base.Columns["ALT_NM"];
                this.columnALT_NAME_TYPE = base.Columns["ALT_NAME_TYPE"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnST_FAC_IND = new System.Data.DataColumn("ST_FAC_IND", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnST_FAC_IND);
                this.columnALT_NM = new System.Data.DataColumn("ALT_NM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnALT_NM);
                this.columnALT_NAME_TYPE = new System.Data.DataColumn("ALT_NAME_TYPE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnALT_NAME_TYPE);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnST_FAC_IND}, true));
                this.columnST_FAC_IND.AllowDBNull = false;
                this.columnST_FAC_IND.Unique = true;
                this.columnST_FAC_IND.MaxLength = 12;
                this.columnALT_NM.AllowDBNull = false;
                this.columnALT_NM.MaxLength = 80;
                this.columnALT_NAME_TYPE.MaxLength = 25;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_ALT_NMRow NewFRS_ALT_NMRow() {
                return ((FRS_ALT_NMRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new FRS_ALT_NMRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(FRS_ALT_NMRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FRS_ALT_NMRowChanged != null)) {
                    this.FRS_ALT_NMRowChanged(this, new FRS_ALT_NMRowChangeEvent(((FRS_ALT_NMRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FRS_ALT_NMRowChanging != null)) {
                    this.FRS_ALT_NMRowChanging(this, new FRS_ALT_NMRowChangeEvent(((FRS_ALT_NMRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FRS_ALT_NMRowDeleted != null)) {
                    this.FRS_ALT_NMRowDeleted(this, new FRS_ALT_NMRowChangeEvent(((FRS_ALT_NMRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FRS_ALT_NMRowDeleting != null)) {
                    this.FRS_ALT_NMRowDeleting(this, new FRS_ALT_NMRowChangeEvent(((FRS_ALT_NMRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveFRS_ALT_NMRow(FRS_ALT_NMRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                FRS ds = new FRS();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FRS_ALT_NMDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FRS_EIDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnST_EI_IND;
            
            private System.Data.DataColumn columnST_FAC_IND;
            
            private System.Data.DataColumn columnINF_SYS_AC;
            
            private System.Data.DataColumn columnINF_SYS_IND;
            
            private System.Data.DataColumn columnENV_INT_TYPE;
            
            private System.Data.DataColumn columnFED_ST_INT;
            
            private System.Data.DataColumn columnENV_INT_START_DATE;
            
            private System.Data.DataColumn columnINT_START_DATE_QUAL;
            
            private System.Data.DataColumn columnENV_INT_END_DATE;
            
            private System.Data.DataColumn columnINT_END_DATE_QUAL;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_EIDataTable() {
                this.TableName = "FRS_EI";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FRS_EIDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected FRS_EIDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ST_EI_INDColumn {
                get {
                    return this.columnST_EI_IND;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ST_FAC_INDColumn {
                get {
                    return this.columnST_FAC_IND;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn INF_SYS_ACColumn {
                get {
                    return this.columnINF_SYS_AC;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn INF_SYS_INDColumn {
                get {
                    return this.columnINF_SYS_IND;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ENV_INT_TYPEColumn {
                get {
                    return this.columnENV_INT_TYPE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn FED_ST_INTColumn {
                get {
                    return this.columnFED_ST_INT;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ENV_INT_START_DATEColumn {
                get {
                    return this.columnENV_INT_START_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn INT_START_DATE_QUALColumn {
                get {
                    return this.columnINT_START_DATE_QUAL;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ENV_INT_END_DATEColumn {
                get {
                    return this.columnENV_INT_END_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn INT_END_DATE_QUALColumn {
                get {
                    return this.columnINT_END_DATE_QUAL;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_EIRow this[int index] {
                get {
                    return ((FRS_EIRow)(this.Rows[index]));
                }
            }
            
            public event FRS_EIRowChangeEventHandler FRS_EIRowChanging;
            
            public event FRS_EIRowChangeEventHandler FRS_EIRowChanged;
            
            public event FRS_EIRowChangeEventHandler FRS_EIRowDeleting;
            
            public event FRS_EIRowChangeEventHandler FRS_EIRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddFRS_EIRow(FRS_EIRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_EIRow AddFRS_EIRow(string ST_EI_IND, FRS_FACRow parentFRS_FACRowByFK_EI_FAC, string INF_SYS_AC, string INF_SYS_IND, string ENV_INT_TYPE, string FED_ST_INT, string ENV_INT_START_DATE, string INT_START_DATE_QUAL, string ENV_INT_END_DATE, string INT_END_DATE_QUAL) {
                FRS_EIRow rowFRS_EIRow = ((FRS_EIRow)(this.NewRow()));
                rowFRS_EIRow.ItemArray = new object[] {
                        ST_EI_IND,
                        parentFRS_FACRowByFK_EI_FAC[0],
                        INF_SYS_AC,
                        INF_SYS_IND,
                        ENV_INT_TYPE,
                        FED_ST_INT,
                        ENV_INT_START_DATE,
                        INT_START_DATE_QUAL,
                        ENV_INT_END_DATE,
                        INT_END_DATE_QUAL};
                this.Rows.Add(rowFRS_EIRow);
                return rowFRS_EIRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_EIRow FindByST_EI_IND(string ST_EI_IND) {
                return ((FRS_EIRow)(this.Rows.Find(new object[] {
                            ST_EI_IND})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                FRS_EIDataTable cln = ((FRS_EIDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new FRS_EIDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnST_EI_IND = base.Columns["ST_EI_IND"];
                this.columnST_FAC_IND = base.Columns["ST_FAC_IND"];
                this.columnINF_SYS_AC = base.Columns["INF_SYS_AC"];
                this.columnINF_SYS_IND = base.Columns["INF_SYS_IND"];
                this.columnENV_INT_TYPE = base.Columns["ENV_INT_TYPE"];
                this.columnFED_ST_INT = base.Columns["FED_ST_INT"];
                this.columnENV_INT_START_DATE = base.Columns["ENV_INT_START_DATE"];
                this.columnINT_START_DATE_QUAL = base.Columns["INT_START_DATE_QUAL"];
                this.columnENV_INT_END_DATE = base.Columns["ENV_INT_END_DATE"];
                this.columnINT_END_DATE_QUAL = base.Columns["INT_END_DATE_QUAL"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnST_EI_IND = new System.Data.DataColumn("ST_EI_IND", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnST_EI_IND);
                this.columnST_FAC_IND = new System.Data.DataColumn("ST_FAC_IND", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnST_FAC_IND);
                this.columnINF_SYS_AC = new System.Data.DataColumn("INF_SYS_AC", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnINF_SYS_AC);
                this.columnINF_SYS_IND = new System.Data.DataColumn("INF_SYS_IND", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnINF_SYS_IND);
                this.columnENV_INT_TYPE = new System.Data.DataColumn("ENV_INT_TYPE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnENV_INT_TYPE);
                this.columnFED_ST_INT = new System.Data.DataColumn("FED_ST_INT", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnFED_ST_INT);
                this.columnENV_INT_START_DATE = new System.Data.DataColumn("ENV_INT_START_DATE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnENV_INT_START_DATE);
                this.columnINT_START_DATE_QUAL = new System.Data.DataColumn("INT_START_DATE_QUAL", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnINT_START_DATE_QUAL);
                this.columnENV_INT_END_DATE = new System.Data.DataColumn("ENV_INT_END_DATE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnENV_INT_END_DATE);
                this.columnINT_END_DATE_QUAL = new System.Data.DataColumn("INT_END_DATE_QUAL", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnINT_END_DATE_QUAL);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnST_EI_IND}, true));
                this.columnST_EI_IND.AllowDBNull = false;
                this.columnST_EI_IND.Unique = true;
                this.columnST_EI_IND.MaxLength = 36;
                this.columnST_FAC_IND.AllowDBNull = false;
                this.columnST_FAC_IND.MaxLength = 12;
                this.columnINF_SYS_AC.MaxLength = 20;
                this.columnINF_SYS_IND.MaxLength = 30;
                this.columnENV_INT_TYPE.MaxLength = 60;
                this.columnFED_ST_INT.MaxLength = 1;
                this.columnENV_INT_START_DATE.MaxLength = 10;
                this.columnINT_START_DATE_QUAL.MaxLength = 50;
                this.columnENV_INT_END_DATE.MaxLength = 10;
                this.columnINT_END_DATE_QUAL.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_EIRow NewFRS_EIRow() {
                return ((FRS_EIRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new FRS_EIRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(FRS_EIRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FRS_EIRowChanged != null)) {
                    this.FRS_EIRowChanged(this, new FRS_EIRowChangeEvent(((FRS_EIRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FRS_EIRowChanging != null)) {
                    this.FRS_EIRowChanging(this, new FRS_EIRowChangeEvent(((FRS_EIRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FRS_EIRowDeleted != null)) {
                    this.FRS_EIRowDeleted(this, new FRS_EIRowChangeEvent(((FRS_EIRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FRS_EIRowDeleting != null)) {
                    this.FRS_EIRowDeleting(this, new FRS_EIRowChangeEvent(((FRS_EIRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveFRS_EIRow(FRS_EIRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                FRS ds = new FRS();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FRS_EIDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FRS_EI_INDDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnST_REC_IND;
            
            private System.Data.DataColumn columnST_EI_IND;
            
            private System.Data.DataColumn columnAFFIL_TYPE;
            
            private System.Data.DataColumn columnAFFIL_START_DATE;
            
            private System.Data.DataColumn columnAFFIL_END_DATE;
            
            private System.Data.DataColumn columnEMAIL_ADD;
            
            private System.Data.DataColumn columnTEL_NUM;
            
            private System.Data.DataColumn columnPH_EXT;
            
            private System.Data.DataColumn columnFAX_NUM;
            
            private System.Data.DataColumn columnALT_TEL_NUM;
            
            private System.Data.DataColumn columnIND_FULL_NM;
            
            private System.Data.DataColumn columnIND_TITLE;
            
            private System.Data.DataColumn columnMAIL_ADD;
            
            private System.Data.DataColumn columnSUPPLEM_ADD;
            
            private System.Data.DataColumn columnMAIL_ADD_CITY_NM;
            
            private System.Data.DataColumn columnMAIL_ADD_ST_CD;
            
            private System.Data.DataColumn columnMAIL_ADD_ST_NM;
            
            private System.Data.DataColumn columnMAIL_ADD_CO_NM;
            
            private System.Data.DataColumn columnMAIL_ADD_ZIP_CD;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_EI_INDDataTable() {
                this.TableName = "FRS_EI_IND";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FRS_EI_INDDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected FRS_EI_INDDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ST_REC_INDColumn {
                get {
                    return this.columnST_REC_IND;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ST_EI_INDColumn {
                get {
                    return this.columnST_EI_IND;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AFFIL_TYPEColumn {
                get {
                    return this.columnAFFIL_TYPE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AFFIL_START_DATEColumn {
                get {
                    return this.columnAFFIL_START_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AFFIL_END_DATEColumn {
                get {
                    return this.columnAFFIL_END_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EMAIL_ADDColumn {
                get {
                    return this.columnEMAIL_ADD;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TEL_NUMColumn {
                get {
                    return this.columnTEL_NUM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PH_EXTColumn {
                get {
                    return this.columnPH_EXT;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn FAX_NUMColumn {
                get {
                    return this.columnFAX_NUM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ALT_TEL_NUMColumn {
                get {
                    return this.columnALT_TEL_NUM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IND_FULL_NMColumn {
                get {
                    return this.columnIND_FULL_NM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IND_TITLEColumn {
                get {
                    return this.columnIND_TITLE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MAIL_ADDColumn {
                get {
                    return this.columnMAIL_ADD;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SUPPLEM_ADDColumn {
                get {
                    return this.columnSUPPLEM_ADD;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MAIL_ADD_CITY_NMColumn {
                get {
                    return this.columnMAIL_ADD_CITY_NM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MAIL_ADD_ST_CDColumn {
                get {
                    return this.columnMAIL_ADD_ST_CD;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MAIL_ADD_ST_NMColumn {
                get {
                    return this.columnMAIL_ADD_ST_NM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MAIL_ADD_CO_NMColumn {
                get {
                    return this.columnMAIL_ADD_CO_NM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MAIL_ADD_ZIP_CDColumn {
                get {
                    return this.columnMAIL_ADD_ZIP_CD;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_EI_INDRow this[int index] {
                get {
                    return ((FRS_EI_INDRow)(this.Rows[index]));
                }
            }
            
            public event FRS_EI_INDRowChangeEventHandler FRS_EI_INDRowChanging;
            
            public event FRS_EI_INDRowChangeEventHandler FRS_EI_INDRowChanged;
            
            public event FRS_EI_INDRowChangeEventHandler FRS_EI_INDRowDeleting;
            
            public event FRS_EI_INDRowChangeEventHandler FRS_EI_INDRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddFRS_EI_INDRow(FRS_EI_INDRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_EI_INDRow AddFRS_EI_INDRow(
                        string ST_REC_IND, 
                        FRS_EIRow parentFRS_EIRowByFK_EIIND_EI, 
                        string AFFIL_TYPE, 
                        string AFFIL_START_DATE, 
                        string AFFIL_END_DATE, 
                        string EMAIL_ADD, 
                        string TEL_NUM, 
                        string PH_EXT, 
                        string FAX_NUM, 
                        string ALT_TEL_NUM, 
                        string IND_FULL_NM, 
                        string IND_TITLE, 
                        string MAIL_ADD, 
                        string SUPPLEM_ADD, 
                        string MAIL_ADD_CITY_NM, 
                        string MAIL_ADD_ST_CD, 
                        string MAIL_ADD_ST_NM, 
                        string MAIL_ADD_CO_NM, 
                        string MAIL_ADD_ZIP_CD) {
                FRS_EI_INDRow rowFRS_EI_INDRow = ((FRS_EI_INDRow)(this.NewRow()));
                rowFRS_EI_INDRow.ItemArray = new object[] {
                        ST_REC_IND,
                        parentFRS_EIRowByFK_EIIND_EI[0],
                        AFFIL_TYPE,
                        AFFIL_START_DATE,
                        AFFIL_END_DATE,
                        EMAIL_ADD,
                        TEL_NUM,
                        PH_EXT,
                        FAX_NUM,
                        ALT_TEL_NUM,
                        IND_FULL_NM,
                        IND_TITLE,
                        MAIL_ADD,
                        SUPPLEM_ADD,
                        MAIL_ADD_CITY_NM,
                        MAIL_ADD_ST_CD,
                        MAIL_ADD_ST_NM,
                        MAIL_ADD_CO_NM,
                        MAIL_ADD_ZIP_CD};
                this.Rows.Add(rowFRS_EI_INDRow);
                return rowFRS_EI_INDRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_EI_INDRow FindByST_REC_IND(string ST_REC_IND) {
                return ((FRS_EI_INDRow)(this.Rows.Find(new object[] {
                            ST_REC_IND})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                FRS_EI_INDDataTable cln = ((FRS_EI_INDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new FRS_EI_INDDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnST_REC_IND = base.Columns["ST_REC_IND"];
                this.columnST_EI_IND = base.Columns["ST_EI_IND"];
                this.columnAFFIL_TYPE = base.Columns["AFFIL_TYPE"];
                this.columnAFFIL_START_DATE = base.Columns["AFFIL_START_DATE"];
                this.columnAFFIL_END_DATE = base.Columns["AFFIL_END_DATE"];
                this.columnEMAIL_ADD = base.Columns["EMAIL_ADD"];
                this.columnTEL_NUM = base.Columns["TEL_NUM"];
                this.columnPH_EXT = base.Columns["PH_EXT"];
                this.columnFAX_NUM = base.Columns["FAX_NUM"];
                this.columnALT_TEL_NUM = base.Columns["ALT_TEL_NUM"];
                this.columnIND_FULL_NM = base.Columns["IND_FULL_NM"];
                this.columnIND_TITLE = base.Columns["IND_TITLE"];
                this.columnMAIL_ADD = base.Columns["MAIL_ADD"];
                this.columnSUPPLEM_ADD = base.Columns["SUPPLEM_ADD"];
                this.columnMAIL_ADD_CITY_NM = base.Columns["MAIL_ADD_CITY_NM"];
                this.columnMAIL_ADD_ST_CD = base.Columns["MAIL_ADD_ST_CD"];
                this.columnMAIL_ADD_ST_NM = base.Columns["MAIL_ADD_ST_NM"];
                this.columnMAIL_ADD_CO_NM = base.Columns["MAIL_ADD_CO_NM"];
                this.columnMAIL_ADD_ZIP_CD = base.Columns["MAIL_ADD_ZIP_CD"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnST_REC_IND = new System.Data.DataColumn("ST_REC_IND", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnST_REC_IND);
                this.columnST_EI_IND = new System.Data.DataColumn("ST_EI_IND", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnST_EI_IND);
                this.columnAFFIL_TYPE = new System.Data.DataColumn("AFFIL_TYPE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAFFIL_TYPE);
                this.columnAFFIL_START_DATE = new System.Data.DataColumn("AFFIL_START_DATE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAFFIL_START_DATE);
                this.columnAFFIL_END_DATE = new System.Data.DataColumn("AFFIL_END_DATE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAFFIL_END_DATE);
                this.columnEMAIL_ADD = new System.Data.DataColumn("EMAIL_ADD", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMAIL_ADD);
                this.columnTEL_NUM = new System.Data.DataColumn("TEL_NUM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTEL_NUM);
                this.columnPH_EXT = new System.Data.DataColumn("PH_EXT", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPH_EXT);
                this.columnFAX_NUM = new System.Data.DataColumn("FAX_NUM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnFAX_NUM);
                this.columnALT_TEL_NUM = new System.Data.DataColumn("ALT_TEL_NUM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnALT_TEL_NUM);
                this.columnIND_FULL_NM = new System.Data.DataColumn("IND_FULL_NM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnIND_FULL_NM);
                this.columnIND_TITLE = new System.Data.DataColumn("IND_TITLE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnIND_TITLE);
                this.columnMAIL_ADD = new System.Data.DataColumn("MAIL_ADD", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAIL_ADD);
                this.columnSUPPLEM_ADD = new System.Data.DataColumn("SUPPLEM_ADD", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUPPLEM_ADD);
                this.columnMAIL_ADD_CITY_NM = new System.Data.DataColumn("MAIL_ADD_CITY_NM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAIL_ADD_CITY_NM);
                this.columnMAIL_ADD_ST_CD = new System.Data.DataColumn("MAIL_ADD_ST_CD", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAIL_ADD_ST_CD);
                this.columnMAIL_ADD_ST_NM = new System.Data.DataColumn("MAIL_ADD_ST_NM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAIL_ADD_ST_NM);
                this.columnMAIL_ADD_CO_NM = new System.Data.DataColumn("MAIL_ADD_CO_NM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAIL_ADD_CO_NM);
                this.columnMAIL_ADD_ZIP_CD = new System.Data.DataColumn("MAIL_ADD_ZIP_CD", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAIL_ADD_ZIP_CD);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnST_REC_IND}, true));
                this.columnST_REC_IND.AllowDBNull = false;
                this.columnST_REC_IND.Unique = true;
                this.columnST_REC_IND.MaxLength = 36;
                this.columnST_EI_IND.AllowDBNull = false;
                this.columnST_EI_IND.MaxLength = 36;
                this.columnAFFIL_TYPE.MaxLength = 40;
                this.columnAFFIL_START_DATE.MaxLength = 10;
                this.columnAFFIL_END_DATE.MaxLength = 10;
                this.columnEMAIL_ADD.MaxLength = 120;
                this.columnTEL_NUM.MaxLength = 30;
                this.columnPH_EXT.MaxLength = 5;
                this.columnFAX_NUM.MaxLength = 30;
                this.columnALT_TEL_NUM.MaxLength = 30;
                this.columnIND_FULL_NM.MaxLength = 70;
                this.columnIND_TITLE.MaxLength = 40;
                this.columnMAIL_ADD.MaxLength = 50;
                this.columnSUPPLEM_ADD.MaxLength = 50;
                this.columnMAIL_ADD_CITY_NM.MaxLength = 30;
                this.columnMAIL_ADD_ST_CD.MaxLength = 2;
                this.columnMAIL_ADD_ST_NM.MaxLength = 35;
                this.columnMAIL_ADD_CO_NM.MaxLength = 44;
                this.columnMAIL_ADD_ZIP_CD.MaxLength = 14;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_EI_INDRow NewFRS_EI_INDRow() {
                return ((FRS_EI_INDRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new FRS_EI_INDRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(FRS_EI_INDRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FRS_EI_INDRowChanged != null)) {
                    this.FRS_EI_INDRowChanged(this, new FRS_EI_INDRowChangeEvent(((FRS_EI_INDRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FRS_EI_INDRowChanging != null)) {
                    this.FRS_EI_INDRowChanging(this, new FRS_EI_INDRowChangeEvent(((FRS_EI_INDRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FRS_EI_INDRowDeleted != null)) {
                    this.FRS_EI_INDRowDeleted(this, new FRS_EI_INDRowChangeEvent(((FRS_EI_INDRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FRS_EI_INDRowDeleting != null)) {
                    this.FRS_EI_INDRowDeleting(this, new FRS_EI_INDRowChangeEvent(((FRS_EI_INDRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveFRS_EI_INDRow(FRS_EI_INDRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                FRS ds = new FRS();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FRS_EI_INDDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FRS_EI_NAICSDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnST_REC_IND;
            
            private System.Data.DataColumn columnST_EI_IND;
            
            private System.Data.DataColumn columnNAICS_CD;
            
            private System.Data.DataColumn columnNAICS_PRIM_IND;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_EI_NAICSDataTable() {
                this.TableName = "FRS_EI_NAICS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FRS_EI_NAICSDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected FRS_EI_NAICSDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ST_REC_INDColumn {
                get {
                    return this.columnST_REC_IND;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ST_EI_INDColumn {
                get {
                    return this.columnST_EI_IND;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NAICS_CDColumn {
                get {
                    return this.columnNAICS_CD;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NAICS_PRIM_INDColumn {
                get {
                    return this.columnNAICS_PRIM_IND;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_EI_NAICSRow this[int index] {
                get {
                    return ((FRS_EI_NAICSRow)(this.Rows[index]));
                }
            }
            
            public event FRS_EI_NAICSRowChangeEventHandler FRS_EI_NAICSRowChanging;
            
            public event FRS_EI_NAICSRowChangeEventHandler FRS_EI_NAICSRowChanged;
            
            public event FRS_EI_NAICSRowChangeEventHandler FRS_EI_NAICSRowDeleting;
            
            public event FRS_EI_NAICSRowChangeEventHandler FRS_EI_NAICSRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddFRS_EI_NAICSRow(FRS_EI_NAICSRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_EI_NAICSRow AddFRS_EI_NAICSRow(string ST_REC_IND, FRS_EIRow parentFRS_EIRowByFK_EINAICS_EI, string NAICS_CD, string NAICS_PRIM_IND) {
                FRS_EI_NAICSRow rowFRS_EI_NAICSRow = ((FRS_EI_NAICSRow)(this.NewRow()));
                rowFRS_EI_NAICSRow.ItemArray = new object[] {
                        ST_REC_IND,
                        parentFRS_EIRowByFK_EINAICS_EI[0],
                        NAICS_CD,
                        NAICS_PRIM_IND};
                this.Rows.Add(rowFRS_EI_NAICSRow);
                return rowFRS_EI_NAICSRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_EI_NAICSRow FindByST_REC_IND(string ST_REC_IND) {
                return ((FRS_EI_NAICSRow)(this.Rows.Find(new object[] {
                            ST_REC_IND})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                FRS_EI_NAICSDataTable cln = ((FRS_EI_NAICSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new FRS_EI_NAICSDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnST_REC_IND = base.Columns["ST_REC_IND"];
                this.columnST_EI_IND = base.Columns["ST_EI_IND"];
                this.columnNAICS_CD = base.Columns["NAICS_CD"];
                this.columnNAICS_PRIM_IND = base.Columns["NAICS_PRIM_IND"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnST_REC_IND = new System.Data.DataColumn("ST_REC_IND", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnST_REC_IND);
                this.columnST_EI_IND = new System.Data.DataColumn("ST_EI_IND", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnST_EI_IND);
                this.columnNAICS_CD = new System.Data.DataColumn("NAICS_CD", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAICS_CD);
                this.columnNAICS_PRIM_IND = new System.Data.DataColumn("NAICS_PRIM_IND", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAICS_PRIM_IND);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnST_REC_IND}, true));
                this.columnST_REC_IND.AllowDBNull = false;
                this.columnST_REC_IND.Unique = true;
                this.columnST_REC_IND.MaxLength = 36;
                this.columnST_EI_IND.AllowDBNull = false;
                this.columnST_EI_IND.MaxLength = 36;
                this.columnNAICS_CD.AllowDBNull = false;
                this.columnNAICS_CD.MaxLength = 6;
                this.columnNAICS_PRIM_IND.AllowDBNull = false;
                this.columnNAICS_PRIM_IND.MaxLength = 10;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_EI_NAICSRow NewFRS_EI_NAICSRow() {
                return ((FRS_EI_NAICSRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new FRS_EI_NAICSRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(FRS_EI_NAICSRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FRS_EI_NAICSRowChanged != null)) {
                    this.FRS_EI_NAICSRowChanged(this, new FRS_EI_NAICSRowChangeEvent(((FRS_EI_NAICSRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FRS_EI_NAICSRowChanging != null)) {
                    this.FRS_EI_NAICSRowChanging(this, new FRS_EI_NAICSRowChangeEvent(((FRS_EI_NAICSRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FRS_EI_NAICSRowDeleted != null)) {
                    this.FRS_EI_NAICSRowDeleted(this, new FRS_EI_NAICSRowChangeEvent(((FRS_EI_NAICSRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FRS_EI_NAICSRowDeleting != null)) {
                    this.FRS_EI_NAICSRowDeleting(this, new FRS_EI_NAICSRowChangeEvent(((FRS_EI_NAICSRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveFRS_EI_NAICSRow(FRS_EI_NAICSRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                FRS ds = new FRS();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FRS_EI_NAICSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FRS_EI_ORGDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnST_REC_IND;
            
            private System.Data.DataColumn columnST_EI_IND;
            
            private System.Data.DataColumn columnAFFIL_TYPE;
            
            private System.Data.DataColumn columnAFFIL_START_DATE;
            
            private System.Data.DataColumn columnAFFIL_END_DATE;
            
            private System.Data.DataColumn columnEMAIL_ADD;
            
            private System.Data.DataColumn columnTEL_NUM;
            
            private System.Data.DataColumn columnPH_EXT;
            
            private System.Data.DataColumn columnFAX_NUM;
            
            private System.Data.DataColumn columnALT_TEL_NUM;
            
            private System.Data.DataColumn columnORG_FORMAL_NM;
            
            private System.Data.DataColumn columnORG_DUNS_NUM;
            
            private System.Data.DataColumn columnORG_TYPE;
            
            private System.Data.DataColumn columnEMPLOYER_IND;
            
            private System.Data.DataColumn columnST_BUSINESS_IND;
            
            private System.Data.DataColumn columnULT_PARENT_NM;
            
            private System.Data.DataColumn columnULT_PARENT_DUNS_NUM;
            
            private System.Data.DataColumn columnMAIL_ADD;
            
            private System.Data.DataColumn columnSUPPLEM_ADD;
            
            private System.Data.DataColumn columnMAIL_ADD_CITY_NM;
            
            private System.Data.DataColumn columnMAIL_ADD_ST_CD;
            
            private System.Data.DataColumn columnMAIL_ADD_ST_NM;
            
            private System.Data.DataColumn columnMAIL_ADD_CO_NM;
            
            private System.Data.DataColumn columnMAIL_ADD_ZIP_CD;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_EI_ORGDataTable() {
                this.TableName = "FRS_EI_ORG";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FRS_EI_ORGDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected FRS_EI_ORGDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ST_REC_INDColumn {
                get {
                    return this.columnST_REC_IND;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ST_EI_INDColumn {
                get {
                    return this.columnST_EI_IND;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AFFIL_TYPEColumn {
                get {
                    return this.columnAFFIL_TYPE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AFFIL_START_DATEColumn {
                get {
                    return this.columnAFFIL_START_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AFFIL_END_DATEColumn {
                get {
                    return this.columnAFFIL_END_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EMAIL_ADDColumn {
                get {
                    return this.columnEMAIL_ADD;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TEL_NUMColumn {
                get {
                    return this.columnTEL_NUM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PH_EXTColumn {
                get {
                    return this.columnPH_EXT;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn FAX_NUMColumn {
                get {
                    return this.columnFAX_NUM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ALT_TEL_NUMColumn {
                get {
                    return this.columnALT_TEL_NUM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ORG_FORMAL_NMColumn {
                get {
                    return this.columnORG_FORMAL_NM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ORG_DUNS_NUMColumn {
                get {
                    return this.columnORG_DUNS_NUM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ORG_TYPEColumn {
                get {
                    return this.columnORG_TYPE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EMPLOYER_INDColumn {
                get {
                    return this.columnEMPLOYER_IND;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ST_BUSINESS_INDColumn {
                get {
                    return this.columnST_BUSINESS_IND;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ULT_PARENT_NMColumn {
                get {
                    return this.columnULT_PARENT_NM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ULT_PARENT_DUNS_NUMColumn {
                get {
                    return this.columnULT_PARENT_DUNS_NUM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MAIL_ADDColumn {
                get {
                    return this.columnMAIL_ADD;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SUPPLEM_ADDColumn {
                get {
                    return this.columnSUPPLEM_ADD;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MAIL_ADD_CITY_NMColumn {
                get {
                    return this.columnMAIL_ADD_CITY_NM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MAIL_ADD_ST_CDColumn {
                get {
                    return this.columnMAIL_ADD_ST_CD;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MAIL_ADD_ST_NMColumn {
                get {
                    return this.columnMAIL_ADD_ST_NM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MAIL_ADD_CO_NMColumn {
                get {
                    return this.columnMAIL_ADD_CO_NM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MAIL_ADD_ZIP_CDColumn {
                get {
                    return this.columnMAIL_ADD_ZIP_CD;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_EI_ORGRow this[int index] {
                get {
                    return ((FRS_EI_ORGRow)(this.Rows[index]));
                }
            }
            
            public event FRS_EI_ORGRowChangeEventHandler FRS_EI_ORGRowChanging;
            
            public event FRS_EI_ORGRowChangeEventHandler FRS_EI_ORGRowChanged;
            
            public event FRS_EI_ORGRowChangeEventHandler FRS_EI_ORGRowDeleting;
            
            public event FRS_EI_ORGRowChangeEventHandler FRS_EI_ORGRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddFRS_EI_ORGRow(FRS_EI_ORGRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_EI_ORGRow AddFRS_EI_ORGRow(
                        string ST_REC_IND, 
                        FRS_EIRow parentFRS_EIRowByFK_EIORG_EI, 
                        string AFFIL_TYPE, 
                        string AFFIL_START_DATE, 
                        string AFFIL_END_DATE, 
                        string EMAIL_ADD, 
                        string TEL_NUM, 
                        string PH_EXT, 
                        string FAX_NUM, 
                        string ALT_TEL_NUM, 
                        string ORG_FORMAL_NM, 
                        string ORG_DUNS_NUM, 
                        string ORG_TYPE, 
                        string EMPLOYER_IND, 
                        string ST_BUSINESS_IND, 
                        string ULT_PARENT_NM, 
                        string ULT_PARENT_DUNS_NUM, 
                        string MAIL_ADD, 
                        string SUPPLEM_ADD, 
                        string MAIL_ADD_CITY_NM, 
                        string MAIL_ADD_ST_CD, 
                        string MAIL_ADD_ST_NM, 
                        string MAIL_ADD_CO_NM, 
                        string MAIL_ADD_ZIP_CD) {
                FRS_EI_ORGRow rowFRS_EI_ORGRow = ((FRS_EI_ORGRow)(this.NewRow()));
                rowFRS_EI_ORGRow.ItemArray = new object[] {
                        ST_REC_IND,
                        parentFRS_EIRowByFK_EIORG_EI[0],
                        AFFIL_TYPE,
                        AFFIL_START_DATE,
                        AFFIL_END_DATE,
                        EMAIL_ADD,
                        TEL_NUM,
                        PH_EXT,
                        FAX_NUM,
                        ALT_TEL_NUM,
                        ORG_FORMAL_NM,
                        ORG_DUNS_NUM,
                        ORG_TYPE,
                        EMPLOYER_IND,
                        ST_BUSINESS_IND,
                        ULT_PARENT_NM,
                        ULT_PARENT_DUNS_NUM,
                        MAIL_ADD,
                        SUPPLEM_ADD,
                        MAIL_ADD_CITY_NM,
                        MAIL_ADD_ST_CD,
                        MAIL_ADD_ST_NM,
                        MAIL_ADD_CO_NM,
                        MAIL_ADD_ZIP_CD};
                this.Rows.Add(rowFRS_EI_ORGRow);
                return rowFRS_EI_ORGRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_EI_ORGRow FindByST_REC_IND(string ST_REC_IND) {
                return ((FRS_EI_ORGRow)(this.Rows.Find(new object[] {
                            ST_REC_IND})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                FRS_EI_ORGDataTable cln = ((FRS_EI_ORGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new FRS_EI_ORGDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnST_REC_IND = base.Columns["ST_REC_IND"];
                this.columnST_EI_IND = base.Columns["ST_EI_IND"];
                this.columnAFFIL_TYPE = base.Columns["AFFIL_TYPE"];
                this.columnAFFIL_START_DATE = base.Columns["AFFIL_START_DATE"];
                this.columnAFFIL_END_DATE = base.Columns["AFFIL_END_DATE"];
                this.columnEMAIL_ADD = base.Columns["EMAIL_ADD"];
                this.columnTEL_NUM = base.Columns["TEL_NUM"];
                this.columnPH_EXT = base.Columns["PH_EXT"];
                this.columnFAX_NUM = base.Columns["FAX_NUM"];
                this.columnALT_TEL_NUM = base.Columns["ALT_TEL_NUM"];
                this.columnORG_FORMAL_NM = base.Columns["ORG_FORMAL_NM"];
                this.columnORG_DUNS_NUM = base.Columns["ORG_DUNS_NUM"];
                this.columnORG_TYPE = base.Columns["ORG_TYPE"];
                this.columnEMPLOYER_IND = base.Columns["EMPLOYER_IND"];
                this.columnST_BUSINESS_IND = base.Columns["ST_BUSINESS_IND"];
                this.columnULT_PARENT_NM = base.Columns["ULT_PARENT_NM"];
                this.columnULT_PARENT_DUNS_NUM = base.Columns["ULT_PARENT_DUNS_NUM"];
                this.columnMAIL_ADD = base.Columns["MAIL_ADD"];
                this.columnSUPPLEM_ADD = base.Columns["SUPPLEM_ADD"];
                this.columnMAIL_ADD_CITY_NM = base.Columns["MAIL_ADD_CITY_NM"];
                this.columnMAIL_ADD_ST_CD = base.Columns["MAIL_ADD_ST_CD"];
                this.columnMAIL_ADD_ST_NM = base.Columns["MAIL_ADD_ST_NM"];
                this.columnMAIL_ADD_CO_NM = base.Columns["MAIL_ADD_CO_NM"];
                this.columnMAIL_ADD_ZIP_CD = base.Columns["MAIL_ADD_ZIP_CD"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnST_REC_IND = new System.Data.DataColumn("ST_REC_IND", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnST_REC_IND);
                this.columnST_EI_IND = new System.Data.DataColumn("ST_EI_IND", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnST_EI_IND);
                this.columnAFFIL_TYPE = new System.Data.DataColumn("AFFIL_TYPE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAFFIL_TYPE);
                this.columnAFFIL_START_DATE = new System.Data.DataColumn("AFFIL_START_DATE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAFFIL_START_DATE);
                this.columnAFFIL_END_DATE = new System.Data.DataColumn("AFFIL_END_DATE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAFFIL_END_DATE);
                this.columnEMAIL_ADD = new System.Data.DataColumn("EMAIL_ADD", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMAIL_ADD);
                this.columnTEL_NUM = new System.Data.DataColumn("TEL_NUM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTEL_NUM);
                this.columnPH_EXT = new System.Data.DataColumn("PH_EXT", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPH_EXT);
                this.columnFAX_NUM = new System.Data.DataColumn("FAX_NUM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnFAX_NUM);
                this.columnALT_TEL_NUM = new System.Data.DataColumn("ALT_TEL_NUM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnALT_TEL_NUM);
                this.columnORG_FORMAL_NM = new System.Data.DataColumn("ORG_FORMAL_NM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnORG_FORMAL_NM);
                this.columnORG_DUNS_NUM = new System.Data.DataColumn("ORG_DUNS_NUM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnORG_DUNS_NUM);
                this.columnORG_TYPE = new System.Data.DataColumn("ORG_TYPE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnORG_TYPE);
                this.columnEMPLOYER_IND = new System.Data.DataColumn("EMPLOYER_IND", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMPLOYER_IND);
                this.columnST_BUSINESS_IND = new System.Data.DataColumn("ST_BUSINESS_IND", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnST_BUSINESS_IND);
                this.columnULT_PARENT_NM = new System.Data.DataColumn("ULT_PARENT_NM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnULT_PARENT_NM);
                this.columnULT_PARENT_DUNS_NUM = new System.Data.DataColumn("ULT_PARENT_DUNS_NUM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnULT_PARENT_DUNS_NUM);
                this.columnMAIL_ADD = new System.Data.DataColumn("MAIL_ADD", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAIL_ADD);
                this.columnSUPPLEM_ADD = new System.Data.DataColumn("SUPPLEM_ADD", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUPPLEM_ADD);
                this.columnMAIL_ADD_CITY_NM = new System.Data.DataColumn("MAIL_ADD_CITY_NM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAIL_ADD_CITY_NM);
                this.columnMAIL_ADD_ST_CD = new System.Data.DataColumn("MAIL_ADD_ST_CD", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAIL_ADD_ST_CD);
                this.columnMAIL_ADD_ST_NM = new System.Data.DataColumn("MAIL_ADD_ST_NM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAIL_ADD_ST_NM);
                this.columnMAIL_ADD_CO_NM = new System.Data.DataColumn("MAIL_ADD_CO_NM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAIL_ADD_CO_NM);
                this.columnMAIL_ADD_ZIP_CD = new System.Data.DataColumn("MAIL_ADD_ZIP_CD", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAIL_ADD_ZIP_CD);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnST_REC_IND}, true));
                this.columnST_REC_IND.AllowDBNull = false;
                this.columnST_REC_IND.Unique = true;
                this.columnST_REC_IND.MaxLength = 36;
                this.columnST_EI_IND.AllowDBNull = false;
                this.columnST_EI_IND.MaxLength = 36;
                this.columnAFFIL_TYPE.MaxLength = 40;
                this.columnAFFIL_START_DATE.MaxLength = 10;
                this.columnAFFIL_END_DATE.MaxLength = 10;
                this.columnEMAIL_ADD.MaxLength = 120;
                this.columnTEL_NUM.MaxLength = 30;
                this.columnPH_EXT.MaxLength = 5;
                this.columnFAX_NUM.MaxLength = 30;
                this.columnALT_TEL_NUM.MaxLength = 30;
                this.columnORG_FORMAL_NM.MaxLength = 80;
                this.columnORG_DUNS_NUM.MaxLength = 9;
                this.columnORG_TYPE.MaxLength = 10;
                this.columnEMPLOYER_IND.MaxLength = 14;
                this.columnST_BUSINESS_IND.MaxLength = 30;
                this.columnULT_PARENT_NM.MaxLength = 50;
                this.columnULT_PARENT_DUNS_NUM.MaxLength = 9;
                this.columnMAIL_ADD.MaxLength = 50;
                this.columnSUPPLEM_ADD.MaxLength = 50;
                this.columnMAIL_ADD_CITY_NM.MaxLength = 30;
                this.columnMAIL_ADD_ST_CD.MaxLength = 2;
                this.columnMAIL_ADD_ST_NM.MaxLength = 35;
                this.columnMAIL_ADD_CO_NM.MaxLength = 44;
                this.columnMAIL_ADD_ZIP_CD.MaxLength = 14;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_EI_ORGRow NewFRS_EI_ORGRow() {
                return ((FRS_EI_ORGRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new FRS_EI_ORGRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(FRS_EI_ORGRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FRS_EI_ORGRowChanged != null)) {
                    this.FRS_EI_ORGRowChanged(this, new FRS_EI_ORGRowChangeEvent(((FRS_EI_ORGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FRS_EI_ORGRowChanging != null)) {
                    this.FRS_EI_ORGRowChanging(this, new FRS_EI_ORGRowChangeEvent(((FRS_EI_ORGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FRS_EI_ORGRowDeleted != null)) {
                    this.FRS_EI_ORGRowDeleted(this, new FRS_EI_ORGRowChangeEvent(((FRS_EI_ORGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FRS_EI_ORGRowDeleting != null)) {
                    this.FRS_EI_ORGRowDeleting(this, new FRS_EI_ORGRowChangeEvent(((FRS_EI_ORGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveFRS_EI_ORGRow(FRS_EI_ORGRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                FRS ds = new FRS();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FRS_EI_ORGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FRS_EI_SICDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnST_REC_IND;
            
            private System.Data.DataColumn columnST_EI_IND;
            
            private System.Data.DataColumn columnSIC_CD;
            
            private System.Data.DataColumn columnSIC_PRIM_IND;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_EI_SICDataTable() {
                this.TableName = "FRS_EI_SIC";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FRS_EI_SICDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected FRS_EI_SICDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ST_REC_INDColumn {
                get {
                    return this.columnST_REC_IND;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ST_EI_INDColumn {
                get {
                    return this.columnST_EI_IND;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SIC_CDColumn {
                get {
                    return this.columnSIC_CD;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SIC_PRIM_INDColumn {
                get {
                    return this.columnSIC_PRIM_IND;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_EI_SICRow this[int index] {
                get {
                    return ((FRS_EI_SICRow)(this.Rows[index]));
                }
            }
            
            public event FRS_EI_SICRowChangeEventHandler FRS_EI_SICRowChanging;
            
            public event FRS_EI_SICRowChangeEventHandler FRS_EI_SICRowChanged;
            
            public event FRS_EI_SICRowChangeEventHandler FRS_EI_SICRowDeleting;
            
            public event FRS_EI_SICRowChangeEventHandler FRS_EI_SICRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddFRS_EI_SICRow(FRS_EI_SICRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_EI_SICRow AddFRS_EI_SICRow(string ST_REC_IND, FRS_EIRow parentFRS_EIRowByFK_EISIC_EI, string SIC_CD, string SIC_PRIM_IND) {
                FRS_EI_SICRow rowFRS_EI_SICRow = ((FRS_EI_SICRow)(this.NewRow()));
                rowFRS_EI_SICRow.ItemArray = new object[] {
                        ST_REC_IND,
                        parentFRS_EIRowByFK_EISIC_EI[0],
                        SIC_CD,
                        SIC_PRIM_IND};
                this.Rows.Add(rowFRS_EI_SICRow);
                return rowFRS_EI_SICRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_EI_SICRow FindByST_REC_IND(string ST_REC_IND) {
                return ((FRS_EI_SICRow)(this.Rows.Find(new object[] {
                            ST_REC_IND})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                FRS_EI_SICDataTable cln = ((FRS_EI_SICDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new FRS_EI_SICDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnST_REC_IND = base.Columns["ST_REC_IND"];
                this.columnST_EI_IND = base.Columns["ST_EI_IND"];
                this.columnSIC_CD = base.Columns["SIC_CD"];
                this.columnSIC_PRIM_IND = base.Columns["SIC_PRIM_IND"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnST_REC_IND = new System.Data.DataColumn("ST_REC_IND", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnST_REC_IND);
                this.columnST_EI_IND = new System.Data.DataColumn("ST_EI_IND", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnST_EI_IND);
                this.columnSIC_CD = new System.Data.DataColumn("SIC_CD", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSIC_CD);
                this.columnSIC_PRIM_IND = new System.Data.DataColumn("SIC_PRIM_IND", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSIC_PRIM_IND);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnST_REC_IND}, true));
                this.columnST_REC_IND.AllowDBNull = false;
                this.columnST_REC_IND.Unique = true;
                this.columnST_REC_IND.MaxLength = 36;
                this.columnST_EI_IND.AllowDBNull = false;
                this.columnST_EI_IND.MaxLength = 36;
                this.columnSIC_CD.AllowDBNull = false;
                this.columnSIC_CD.MaxLength = 4;
                this.columnSIC_PRIM_IND.AllowDBNull = false;
                this.columnSIC_PRIM_IND.MaxLength = 10;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_EI_SICRow NewFRS_EI_SICRow() {
                return ((FRS_EI_SICRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new FRS_EI_SICRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(FRS_EI_SICRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FRS_EI_SICRowChanged != null)) {
                    this.FRS_EI_SICRowChanged(this, new FRS_EI_SICRowChangeEvent(((FRS_EI_SICRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FRS_EI_SICRowChanging != null)) {
                    this.FRS_EI_SICRowChanging(this, new FRS_EI_SICRowChangeEvent(((FRS_EI_SICRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FRS_EI_SICRowDeleted != null)) {
                    this.FRS_EI_SICRowDeleted(this, new FRS_EI_SICRowChangeEvent(((FRS_EI_SICRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FRS_EI_SICRowDeleting != null)) {
                    this.FRS_EI_SICRowDeleting(this, new FRS_EI_SICRowChangeEvent(((FRS_EI_SICRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveFRS_EI_SICRow(FRS_EI_SICRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                FRS ds = new FRS();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FRS_EI_SICDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FRS_FACDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnST_FAC_IND;
            
            private System.Data.DataColumn columnFAC_REG_IND;
            
            private System.Data.DataColumn columnFAC_SITENM;
            
            private System.Data.DataColumn columnFAC_SITETYPE_NM;
            
            private System.Data.DataColumn columnFED_FAC;
            
            private System.Data.DataColumn columnTRIB_LAND;
            
            private System.Data.DataColumn columnTRIB_LAND_NM;
            
            private System.Data.DataColumn columnCONG_DIST_NUM;
            
            private System.Data.DataColumn columnLEG_DIST_NUM;
            
            private System.Data.DataColumn columnHUC_CD;
            
            private System.Data.DataColumn columnLOC_ADD;
            
            private System.Data.DataColumn columnSUPPLEM_LOC;
            
            private System.Data.DataColumn columnLOCAL_NM;
            
            private System.Data.DataColumn columnCNTY_ST_FIPS_CD;
            
            private System.Data.DataColumn columnCNTY_NM;
            
            private System.Data.DataColumn columnST_CD;
            
            private System.Data.DataColumn columnST_NM;
            
            private System.Data.DataColumn columnCO_NM;
            
            private System.Data.DataColumn columnLOC_ZIP_CD;
            
            private System.Data.DataColumn columnLOC_DESC;
            
            private System.Data.DataColumn columnDATA_SRC_NM;
            
            private System.Data.DataColumn columnREPORTED_DATE;
            
            private System.Data.DataColumn columnST_FAC_SYS_AC;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_FACDataTable() {
                this.TableName = "FRS_FAC";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FRS_FACDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected FRS_FACDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ST_FAC_INDColumn {
                get {
                    return this.columnST_FAC_IND;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn FAC_REG_INDColumn {
                get {
                    return this.columnFAC_REG_IND;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn FAC_SITENMColumn {
                get {
                    return this.columnFAC_SITENM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn FAC_SITETYPE_NMColumn {
                get {
                    return this.columnFAC_SITETYPE_NM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn FED_FACColumn {
                get {
                    return this.columnFED_FAC;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TRIB_LANDColumn {
                get {
                    return this.columnTRIB_LAND;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TRIB_LAND_NMColumn {
                get {
                    return this.columnTRIB_LAND_NM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CONG_DIST_NUMColumn {
                get {
                    return this.columnCONG_DIST_NUM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LEG_DIST_NUMColumn {
                get {
                    return this.columnLEG_DIST_NUM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn HUC_CDColumn {
                get {
                    return this.columnHUC_CD;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LOC_ADDColumn {
                get {
                    return this.columnLOC_ADD;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SUPPLEM_LOCColumn {
                get {
                    return this.columnSUPPLEM_LOC;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LOCAL_NMColumn {
                get {
                    return this.columnLOCAL_NM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CNTY_ST_FIPS_CDColumn {
                get {
                    return this.columnCNTY_ST_FIPS_CD;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CNTY_NMColumn {
                get {
                    return this.columnCNTY_NM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ST_CDColumn {
                get {
                    return this.columnST_CD;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ST_NMColumn {
                get {
                    return this.columnST_NM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CO_NMColumn {
                get {
                    return this.columnCO_NM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LOC_ZIP_CDColumn {
                get {
                    return this.columnLOC_ZIP_CD;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LOC_DESCColumn {
                get {
                    return this.columnLOC_DESC;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DATA_SRC_NMColumn {
                get {
                    return this.columnDATA_SRC_NM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn REPORTED_DATEColumn {
                get {
                    return this.columnREPORTED_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ST_FAC_SYS_ACColumn {
                get {
                    return this.columnST_FAC_SYS_AC;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_FACRow this[int index] {
                get {
                    return ((FRS_FACRow)(this.Rows[index]));
                }
            }
            
            public event FRS_FACRowChangeEventHandler FRS_FACRowChanging;
            
            public event FRS_FACRowChangeEventHandler FRS_FACRowChanged;
            
            public event FRS_FACRowChangeEventHandler FRS_FACRowDeleting;
            
            public event FRS_FACRowChangeEventHandler FRS_FACRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddFRS_FACRow(FRS_FACRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_FACRow AddFRS_FACRow(
                        string ST_FAC_IND, 
                        string FAC_REG_IND, 
                        string FAC_SITENM, 
                        string FAC_SITETYPE_NM, 
                        string FED_FAC, 
                        string TRIB_LAND, 
                        string TRIB_LAND_NM, 
                        string CONG_DIST_NUM, 
                        string LEG_DIST_NUM, 
                        string HUC_CD, 
                        string LOC_ADD, 
                        string SUPPLEM_LOC, 
                        string LOCAL_NM, 
                        string CNTY_ST_FIPS_CD, 
                        string CNTY_NM, 
                        string ST_CD, 
                        string ST_NM, 
                        string CO_NM, 
                        string LOC_ZIP_CD, 
                        string LOC_DESC, 
                        string DATA_SRC_NM, 
                        string REPORTED_DATE, 
                        string ST_FAC_SYS_AC) {
                FRS_FACRow rowFRS_FACRow = ((FRS_FACRow)(this.NewRow()));
                rowFRS_FACRow.ItemArray = new object[] {
                        ST_FAC_IND,
                        FAC_REG_IND,
                        FAC_SITENM,
                        FAC_SITETYPE_NM,
                        FED_FAC,
                        TRIB_LAND,
                        TRIB_LAND_NM,
                        CONG_DIST_NUM,
                        LEG_DIST_NUM,
                        HUC_CD,
                        LOC_ADD,
                        SUPPLEM_LOC,
                        LOCAL_NM,
                        CNTY_ST_FIPS_CD,
                        CNTY_NM,
                        ST_CD,
                        ST_NM,
                        CO_NM,
                        LOC_ZIP_CD,
                        LOC_DESC,
                        DATA_SRC_NM,
                        REPORTED_DATE,
                        ST_FAC_SYS_AC};
                this.Rows.Add(rowFRS_FACRow);
                return rowFRS_FACRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_FACRow FindByST_FAC_IND(string ST_FAC_IND) {
                return ((FRS_FACRow)(this.Rows.Find(new object[] {
                            ST_FAC_IND})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                FRS_FACDataTable cln = ((FRS_FACDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new FRS_FACDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnST_FAC_IND = base.Columns["ST_FAC_IND"];
                this.columnFAC_REG_IND = base.Columns["FAC_REG_IND"];
                this.columnFAC_SITENM = base.Columns["FAC_SITENM"];
                this.columnFAC_SITETYPE_NM = base.Columns["FAC_SITETYPE_NM"];
                this.columnFED_FAC = base.Columns["FED_FAC"];
                this.columnTRIB_LAND = base.Columns["TRIB_LAND"];
                this.columnTRIB_LAND_NM = base.Columns["TRIB_LAND_NM"];
                this.columnCONG_DIST_NUM = base.Columns["CONG_DIST_NUM"];
                this.columnLEG_DIST_NUM = base.Columns["LEG_DIST_NUM"];
                this.columnHUC_CD = base.Columns["HUC_CD"];
                this.columnLOC_ADD = base.Columns["LOC_ADD"];
                this.columnSUPPLEM_LOC = base.Columns["SUPPLEM_LOC"];
                this.columnLOCAL_NM = base.Columns["LOCAL_NM"];
                this.columnCNTY_ST_FIPS_CD = base.Columns["CNTY_ST_FIPS_CD"];
                this.columnCNTY_NM = base.Columns["CNTY_NM"];
                this.columnST_CD = base.Columns["ST_CD"];
                this.columnST_NM = base.Columns["ST_NM"];
                this.columnCO_NM = base.Columns["CO_NM"];
                this.columnLOC_ZIP_CD = base.Columns["LOC_ZIP_CD"];
                this.columnLOC_DESC = base.Columns["LOC_DESC"];
                this.columnDATA_SRC_NM = base.Columns["DATA_SRC_NM"];
                this.columnREPORTED_DATE = base.Columns["REPORTED_DATE"];
                this.columnST_FAC_SYS_AC = base.Columns["ST_FAC_SYS_AC"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnST_FAC_IND = new System.Data.DataColumn("ST_FAC_IND", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnST_FAC_IND);
                this.columnFAC_REG_IND = new System.Data.DataColumn("FAC_REG_IND", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnFAC_REG_IND);
                this.columnFAC_SITENM = new System.Data.DataColumn("FAC_SITENM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnFAC_SITENM);
                this.columnFAC_SITETYPE_NM = new System.Data.DataColumn("FAC_SITETYPE_NM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnFAC_SITETYPE_NM);
                this.columnFED_FAC = new System.Data.DataColumn("FED_FAC", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnFED_FAC);
                this.columnTRIB_LAND = new System.Data.DataColumn("TRIB_LAND", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRIB_LAND);
                this.columnTRIB_LAND_NM = new System.Data.DataColumn("TRIB_LAND_NM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRIB_LAND_NM);
                this.columnCONG_DIST_NUM = new System.Data.DataColumn("CONG_DIST_NUM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCONG_DIST_NUM);
                this.columnLEG_DIST_NUM = new System.Data.DataColumn("LEG_DIST_NUM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLEG_DIST_NUM);
                this.columnHUC_CD = new System.Data.DataColumn("HUC_CD", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnHUC_CD);
                this.columnLOC_ADD = new System.Data.DataColumn("LOC_ADD", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOC_ADD);
                this.columnSUPPLEM_LOC = new System.Data.DataColumn("SUPPLEM_LOC", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUPPLEM_LOC);
                this.columnLOCAL_NM = new System.Data.DataColumn("LOCAL_NM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOCAL_NM);
                this.columnCNTY_ST_FIPS_CD = new System.Data.DataColumn("CNTY_ST_FIPS_CD", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCNTY_ST_FIPS_CD);
                this.columnCNTY_NM = new System.Data.DataColumn("CNTY_NM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCNTY_NM);
                this.columnST_CD = new System.Data.DataColumn("ST_CD", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnST_CD);
                this.columnST_NM = new System.Data.DataColumn("ST_NM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnST_NM);
                this.columnCO_NM = new System.Data.DataColumn("CO_NM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCO_NM);
                this.columnLOC_ZIP_CD = new System.Data.DataColumn("LOC_ZIP_CD", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOC_ZIP_CD);
                this.columnLOC_DESC = new System.Data.DataColumn("LOC_DESC", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOC_DESC);
                this.columnDATA_SRC_NM = new System.Data.DataColumn("DATA_SRC_NM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATA_SRC_NM);
                this.columnREPORTED_DATE = new System.Data.DataColumn("REPORTED_DATE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnREPORTED_DATE);
                this.columnST_FAC_SYS_AC = new System.Data.DataColumn("ST_FAC_SYS_AC", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnST_FAC_SYS_AC);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnST_FAC_IND}, true));
                this.columnST_FAC_IND.AllowDBNull = false;
                this.columnST_FAC_IND.Unique = true;
                this.columnST_FAC_IND.MaxLength = 12;
                this.columnFAC_REG_IND.MaxLength = 20;
                this.columnFAC_SITENM.AllowDBNull = false;
                this.columnFAC_SITENM.MaxLength = 80;
                this.columnFAC_SITETYPE_NM.MaxLength = 40;
                this.columnFED_FAC.MaxLength = 1;
                this.columnTRIB_LAND.MaxLength = 1;
                this.columnTRIB_LAND_NM.MaxLength = 200;
                this.columnCONG_DIST_NUM.MaxLength = 2;
                this.columnLEG_DIST_NUM.MaxLength = 2;
                this.columnHUC_CD.MaxLength = 8;
                this.columnLOC_ADD.MaxLength = 50;
                this.columnSUPPLEM_LOC.MaxLength = 50;
                this.columnLOCAL_NM.MaxLength = 60;
                this.columnCNTY_ST_FIPS_CD.MaxLength = 5;
                this.columnCNTY_NM.MaxLength = 35;
                this.columnST_CD.MaxLength = 2;
                this.columnST_NM.MaxLength = 35;
                this.columnCO_NM.MaxLength = 44;
                this.columnLOC_ZIP_CD.MaxLength = 14;
                this.columnLOC_DESC.MaxLength = 256;
                this.columnDATA_SRC_NM.AllowDBNull = false;
                this.columnDATA_SRC_NM.MaxLength = 50;
                this.columnREPORTED_DATE.AllowDBNull = false;
                this.columnREPORTED_DATE.MaxLength = 10;
                this.columnST_FAC_SYS_AC.AllowDBNull = false;
                this.columnST_FAC_SYS_AC.MaxLength = 20;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_FACRow NewFRS_FACRow() {
                return ((FRS_FACRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new FRS_FACRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(FRS_FACRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FRS_FACRowChanged != null)) {
                    this.FRS_FACRowChanged(this, new FRS_FACRowChangeEvent(((FRS_FACRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FRS_FACRowChanging != null)) {
                    this.FRS_FACRowChanging(this, new FRS_FACRowChangeEvent(((FRS_FACRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FRS_FACRowDeleted != null)) {
                    this.FRS_FACRowDeleted(this, new FRS_FACRowChangeEvent(((FRS_FACRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FRS_FACRowDeleting != null)) {
                    this.FRS_FACRowDeleting(this, new FRS_FACRowChangeEvent(((FRS_FACRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveFRS_FACRow(FRS_FACRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                FRS ds = new FRS();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FRS_FACDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FRS_FAC_INDDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnST_REC_IND;
            
            private System.Data.DataColumn columnST_FAC_IND;
            
            private System.Data.DataColumn columnAFFIL_TYPE;
            
            private System.Data.DataColumn columnAFFIL_START_DATE;
            
            private System.Data.DataColumn columnAFFIL_END_DATE;
            
            private System.Data.DataColumn columnEMAIL_ADD;
            
            private System.Data.DataColumn columnTEL_NUM;
            
            private System.Data.DataColumn columnPH_EXT;
            
            private System.Data.DataColumn columnFAX_NUM;
            
            private System.Data.DataColumn columnALT_TEL_NUM;
            
            private System.Data.DataColumn columnIND_FULL_NM;
            
            private System.Data.DataColumn columnIND_TITLE;
            
            private System.Data.DataColumn columnMAIL_ADD;
            
            private System.Data.DataColumn columnSUPPLEM_ADD;
            
            private System.Data.DataColumn columnMAIL_ADD_CITY_NM;
            
            private System.Data.DataColumn columnMAIL_ADD_ST_CD;
            
            private System.Data.DataColumn columnMAIL_ADD_ST_NM;
            
            private System.Data.DataColumn columnMAIL_ADD_CO_NM;
            
            private System.Data.DataColumn columnMAIL_ADD_ZIP_CD;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_FAC_INDDataTable() {
                this.TableName = "FRS_FAC_IND";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FRS_FAC_INDDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected FRS_FAC_INDDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ST_REC_INDColumn {
                get {
                    return this.columnST_REC_IND;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ST_FAC_INDColumn {
                get {
                    return this.columnST_FAC_IND;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AFFIL_TYPEColumn {
                get {
                    return this.columnAFFIL_TYPE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AFFIL_START_DATEColumn {
                get {
                    return this.columnAFFIL_START_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AFFIL_END_DATEColumn {
                get {
                    return this.columnAFFIL_END_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EMAIL_ADDColumn {
                get {
                    return this.columnEMAIL_ADD;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TEL_NUMColumn {
                get {
                    return this.columnTEL_NUM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PH_EXTColumn {
                get {
                    return this.columnPH_EXT;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn FAX_NUMColumn {
                get {
                    return this.columnFAX_NUM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ALT_TEL_NUMColumn {
                get {
                    return this.columnALT_TEL_NUM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IND_FULL_NMColumn {
                get {
                    return this.columnIND_FULL_NM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IND_TITLEColumn {
                get {
                    return this.columnIND_TITLE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MAIL_ADDColumn {
                get {
                    return this.columnMAIL_ADD;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SUPPLEM_ADDColumn {
                get {
                    return this.columnSUPPLEM_ADD;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MAIL_ADD_CITY_NMColumn {
                get {
                    return this.columnMAIL_ADD_CITY_NM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MAIL_ADD_ST_CDColumn {
                get {
                    return this.columnMAIL_ADD_ST_CD;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MAIL_ADD_ST_NMColumn {
                get {
                    return this.columnMAIL_ADD_ST_NM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MAIL_ADD_CO_NMColumn {
                get {
                    return this.columnMAIL_ADD_CO_NM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MAIL_ADD_ZIP_CDColumn {
                get {
                    return this.columnMAIL_ADD_ZIP_CD;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_FAC_INDRow this[int index] {
                get {
                    return ((FRS_FAC_INDRow)(this.Rows[index]));
                }
            }
            
            public event FRS_FAC_INDRowChangeEventHandler FRS_FAC_INDRowChanging;
            
            public event FRS_FAC_INDRowChangeEventHandler FRS_FAC_INDRowChanged;
            
            public event FRS_FAC_INDRowChangeEventHandler FRS_FAC_INDRowDeleting;
            
            public event FRS_FAC_INDRowChangeEventHandler FRS_FAC_INDRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddFRS_FAC_INDRow(FRS_FAC_INDRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_FAC_INDRow AddFRS_FAC_INDRow(
                        string ST_REC_IND, 
                        FRS_FACRow parentFRS_FACRowByFK_FACIND_FAC, 
                        string AFFIL_TYPE, 
                        string AFFIL_START_DATE, 
                        string AFFIL_END_DATE, 
                        string EMAIL_ADD, 
                        string TEL_NUM, 
                        string PH_EXT, 
                        string FAX_NUM, 
                        string ALT_TEL_NUM, 
                        string IND_FULL_NM, 
                        string IND_TITLE, 
                        string MAIL_ADD, 
                        string SUPPLEM_ADD, 
                        string MAIL_ADD_CITY_NM, 
                        string MAIL_ADD_ST_CD, 
                        string MAIL_ADD_ST_NM, 
                        string MAIL_ADD_CO_NM, 
                        string MAIL_ADD_ZIP_CD) {
                FRS_FAC_INDRow rowFRS_FAC_INDRow = ((FRS_FAC_INDRow)(this.NewRow()));
                rowFRS_FAC_INDRow.ItemArray = new object[] {
                        ST_REC_IND,
                        parentFRS_FACRowByFK_FACIND_FAC[0],
                        AFFIL_TYPE,
                        AFFIL_START_DATE,
                        AFFIL_END_DATE,
                        EMAIL_ADD,
                        TEL_NUM,
                        PH_EXT,
                        FAX_NUM,
                        ALT_TEL_NUM,
                        IND_FULL_NM,
                        IND_TITLE,
                        MAIL_ADD,
                        SUPPLEM_ADD,
                        MAIL_ADD_CITY_NM,
                        MAIL_ADD_ST_CD,
                        MAIL_ADD_ST_NM,
                        MAIL_ADD_CO_NM,
                        MAIL_ADD_ZIP_CD};
                this.Rows.Add(rowFRS_FAC_INDRow);
                return rowFRS_FAC_INDRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_FAC_INDRow FindByST_REC_IND(string ST_REC_IND) {
                return ((FRS_FAC_INDRow)(this.Rows.Find(new object[] {
                            ST_REC_IND})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                FRS_FAC_INDDataTable cln = ((FRS_FAC_INDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new FRS_FAC_INDDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnST_REC_IND = base.Columns["ST_REC_IND"];
                this.columnST_FAC_IND = base.Columns["ST_FAC_IND"];
                this.columnAFFIL_TYPE = base.Columns["AFFIL_TYPE"];
                this.columnAFFIL_START_DATE = base.Columns["AFFIL_START_DATE"];
                this.columnAFFIL_END_DATE = base.Columns["AFFIL_END_DATE"];
                this.columnEMAIL_ADD = base.Columns["EMAIL_ADD"];
                this.columnTEL_NUM = base.Columns["TEL_NUM"];
                this.columnPH_EXT = base.Columns["PH_EXT"];
                this.columnFAX_NUM = base.Columns["FAX_NUM"];
                this.columnALT_TEL_NUM = base.Columns["ALT_TEL_NUM"];
                this.columnIND_FULL_NM = base.Columns["IND_FULL_NM"];
                this.columnIND_TITLE = base.Columns["IND_TITLE"];
                this.columnMAIL_ADD = base.Columns["MAIL_ADD"];
                this.columnSUPPLEM_ADD = base.Columns["SUPPLEM_ADD"];
                this.columnMAIL_ADD_CITY_NM = base.Columns["MAIL_ADD_CITY_NM"];
                this.columnMAIL_ADD_ST_CD = base.Columns["MAIL_ADD_ST_CD"];
                this.columnMAIL_ADD_ST_NM = base.Columns["MAIL_ADD_ST_NM"];
                this.columnMAIL_ADD_CO_NM = base.Columns["MAIL_ADD_CO_NM"];
                this.columnMAIL_ADD_ZIP_CD = base.Columns["MAIL_ADD_ZIP_CD"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnST_REC_IND = new System.Data.DataColumn("ST_REC_IND", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnST_REC_IND);
                this.columnST_FAC_IND = new System.Data.DataColumn("ST_FAC_IND", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnST_FAC_IND);
                this.columnAFFIL_TYPE = new System.Data.DataColumn("AFFIL_TYPE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAFFIL_TYPE);
                this.columnAFFIL_START_DATE = new System.Data.DataColumn("AFFIL_START_DATE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAFFIL_START_DATE);
                this.columnAFFIL_END_DATE = new System.Data.DataColumn("AFFIL_END_DATE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAFFIL_END_DATE);
                this.columnEMAIL_ADD = new System.Data.DataColumn("EMAIL_ADD", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMAIL_ADD);
                this.columnTEL_NUM = new System.Data.DataColumn("TEL_NUM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTEL_NUM);
                this.columnPH_EXT = new System.Data.DataColumn("PH_EXT", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPH_EXT);
                this.columnFAX_NUM = new System.Data.DataColumn("FAX_NUM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnFAX_NUM);
                this.columnALT_TEL_NUM = new System.Data.DataColumn("ALT_TEL_NUM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnALT_TEL_NUM);
                this.columnIND_FULL_NM = new System.Data.DataColumn("IND_FULL_NM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnIND_FULL_NM);
                this.columnIND_TITLE = new System.Data.DataColumn("IND_TITLE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnIND_TITLE);
                this.columnMAIL_ADD = new System.Data.DataColumn("MAIL_ADD", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAIL_ADD);
                this.columnSUPPLEM_ADD = new System.Data.DataColumn("SUPPLEM_ADD", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUPPLEM_ADD);
                this.columnMAIL_ADD_CITY_NM = new System.Data.DataColumn("MAIL_ADD_CITY_NM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAIL_ADD_CITY_NM);
                this.columnMAIL_ADD_ST_CD = new System.Data.DataColumn("MAIL_ADD_ST_CD", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAIL_ADD_ST_CD);
                this.columnMAIL_ADD_ST_NM = new System.Data.DataColumn("MAIL_ADD_ST_NM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAIL_ADD_ST_NM);
                this.columnMAIL_ADD_CO_NM = new System.Data.DataColumn("MAIL_ADD_CO_NM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAIL_ADD_CO_NM);
                this.columnMAIL_ADD_ZIP_CD = new System.Data.DataColumn("MAIL_ADD_ZIP_CD", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAIL_ADD_ZIP_CD);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnST_REC_IND}, true));
                this.columnST_REC_IND.AllowDBNull = false;
                this.columnST_REC_IND.Unique = true;
                this.columnST_REC_IND.MaxLength = 36;
                this.columnST_FAC_IND.AllowDBNull = false;
                this.columnST_FAC_IND.MaxLength = 12;
                this.columnAFFIL_TYPE.MaxLength = 40;
                this.columnAFFIL_START_DATE.MaxLength = 10;
                this.columnAFFIL_END_DATE.MaxLength = 10;
                this.columnEMAIL_ADD.MaxLength = 120;
                this.columnTEL_NUM.MaxLength = 30;
                this.columnPH_EXT.MaxLength = 5;
                this.columnFAX_NUM.MaxLength = 30;
                this.columnALT_TEL_NUM.MaxLength = 30;
                this.columnIND_FULL_NM.MaxLength = 70;
                this.columnIND_TITLE.MaxLength = 40;
                this.columnMAIL_ADD.MaxLength = 50;
                this.columnSUPPLEM_ADD.MaxLength = 50;
                this.columnMAIL_ADD_CITY_NM.MaxLength = 30;
                this.columnMAIL_ADD_ST_CD.MaxLength = 2;
                this.columnMAIL_ADD_ST_NM.MaxLength = 35;
                this.columnMAIL_ADD_CO_NM.MaxLength = 44;
                this.columnMAIL_ADD_ZIP_CD.MaxLength = 14;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_FAC_INDRow NewFRS_FAC_INDRow() {
                return ((FRS_FAC_INDRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new FRS_FAC_INDRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(FRS_FAC_INDRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FRS_FAC_INDRowChanged != null)) {
                    this.FRS_FAC_INDRowChanged(this, new FRS_FAC_INDRowChangeEvent(((FRS_FAC_INDRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FRS_FAC_INDRowChanging != null)) {
                    this.FRS_FAC_INDRowChanging(this, new FRS_FAC_INDRowChangeEvent(((FRS_FAC_INDRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FRS_FAC_INDRowDeleted != null)) {
                    this.FRS_FAC_INDRowDeleted(this, new FRS_FAC_INDRowChangeEvent(((FRS_FAC_INDRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FRS_FAC_INDRowDeleting != null)) {
                    this.FRS_FAC_INDRowDeleting(this, new FRS_FAC_INDRowChangeEvent(((FRS_FAC_INDRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveFRS_FAC_INDRow(FRS_FAC_INDRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                FRS ds = new FRS();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FRS_FAC_INDDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FRS_FAC_NAICSDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnST_REC_IND;
            
            private System.Data.DataColumn columnST_FAC_IND;
            
            private System.Data.DataColumn columnNAICS_CD;
            
            private System.Data.DataColumn columnNAICS_PRIM_IND;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_FAC_NAICSDataTable() {
                this.TableName = "FRS_FAC_NAICS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FRS_FAC_NAICSDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected FRS_FAC_NAICSDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ST_REC_INDColumn {
                get {
                    return this.columnST_REC_IND;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ST_FAC_INDColumn {
                get {
                    return this.columnST_FAC_IND;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NAICS_CDColumn {
                get {
                    return this.columnNAICS_CD;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NAICS_PRIM_INDColumn {
                get {
                    return this.columnNAICS_PRIM_IND;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_FAC_NAICSRow this[int index] {
                get {
                    return ((FRS_FAC_NAICSRow)(this.Rows[index]));
                }
            }
            
            public event FRS_FAC_NAICSRowChangeEventHandler FRS_FAC_NAICSRowChanging;
            
            public event FRS_FAC_NAICSRowChangeEventHandler FRS_FAC_NAICSRowChanged;
            
            public event FRS_FAC_NAICSRowChangeEventHandler FRS_FAC_NAICSRowDeleting;
            
            public event FRS_FAC_NAICSRowChangeEventHandler FRS_FAC_NAICSRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddFRS_FAC_NAICSRow(FRS_FAC_NAICSRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_FAC_NAICSRow AddFRS_FAC_NAICSRow(string ST_REC_IND, FRS_FACRow parentFRS_FACRowByFK_FACNAICS_FAC, string NAICS_CD, string NAICS_PRIM_IND) {
                FRS_FAC_NAICSRow rowFRS_FAC_NAICSRow = ((FRS_FAC_NAICSRow)(this.NewRow()));
                rowFRS_FAC_NAICSRow.ItemArray = new object[] {
                        ST_REC_IND,
                        parentFRS_FACRowByFK_FACNAICS_FAC[0],
                        NAICS_CD,
                        NAICS_PRIM_IND};
                this.Rows.Add(rowFRS_FAC_NAICSRow);
                return rowFRS_FAC_NAICSRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_FAC_NAICSRow FindByST_REC_IND(string ST_REC_IND) {
                return ((FRS_FAC_NAICSRow)(this.Rows.Find(new object[] {
                            ST_REC_IND})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                FRS_FAC_NAICSDataTable cln = ((FRS_FAC_NAICSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new FRS_FAC_NAICSDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnST_REC_IND = base.Columns["ST_REC_IND"];
                this.columnST_FAC_IND = base.Columns["ST_FAC_IND"];
                this.columnNAICS_CD = base.Columns["NAICS_CD"];
                this.columnNAICS_PRIM_IND = base.Columns["NAICS_PRIM_IND"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnST_REC_IND = new System.Data.DataColumn("ST_REC_IND", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnST_REC_IND);
                this.columnST_FAC_IND = new System.Data.DataColumn("ST_FAC_IND", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnST_FAC_IND);
                this.columnNAICS_CD = new System.Data.DataColumn("NAICS_CD", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAICS_CD);
                this.columnNAICS_PRIM_IND = new System.Data.DataColumn("NAICS_PRIM_IND", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAICS_PRIM_IND);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnST_REC_IND}, true));
                this.columnST_REC_IND.AllowDBNull = false;
                this.columnST_REC_IND.Unique = true;
                this.columnST_REC_IND.MaxLength = 36;
                this.columnST_FAC_IND.AllowDBNull = false;
                this.columnST_FAC_IND.MaxLength = 12;
                this.columnNAICS_CD.AllowDBNull = false;
                this.columnNAICS_CD.MaxLength = 6;
                this.columnNAICS_PRIM_IND.AllowDBNull = false;
                this.columnNAICS_PRIM_IND.MaxLength = 10;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_FAC_NAICSRow NewFRS_FAC_NAICSRow() {
                return ((FRS_FAC_NAICSRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new FRS_FAC_NAICSRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(FRS_FAC_NAICSRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FRS_FAC_NAICSRowChanged != null)) {
                    this.FRS_FAC_NAICSRowChanged(this, new FRS_FAC_NAICSRowChangeEvent(((FRS_FAC_NAICSRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FRS_FAC_NAICSRowChanging != null)) {
                    this.FRS_FAC_NAICSRowChanging(this, new FRS_FAC_NAICSRowChangeEvent(((FRS_FAC_NAICSRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FRS_FAC_NAICSRowDeleted != null)) {
                    this.FRS_FAC_NAICSRowDeleted(this, new FRS_FAC_NAICSRowChangeEvent(((FRS_FAC_NAICSRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FRS_FAC_NAICSRowDeleting != null)) {
                    this.FRS_FAC_NAICSRowDeleting(this, new FRS_FAC_NAICSRowChangeEvent(((FRS_FAC_NAICSRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveFRS_FAC_NAICSRow(FRS_FAC_NAICSRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                FRS ds = new FRS();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FRS_FAC_NAICSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FRS_FAC_ORGDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnST_REC_IND;
            
            private System.Data.DataColumn columnST_FAC_IND;
            
            private System.Data.DataColumn columnAFFIL_TYPE;
            
            private System.Data.DataColumn columnAFFIL_START_DATE;
            
            private System.Data.DataColumn columnAFFIL_END_DATE;
            
            private System.Data.DataColumn columnEMAIL_ADD;
            
            private System.Data.DataColumn columnTEL_NUM;
            
            private System.Data.DataColumn columnPH_EXT;
            
            private System.Data.DataColumn columnFAX_NUM;
            
            private System.Data.DataColumn columnALT_TEL_NUM;
            
            private System.Data.DataColumn columnORG_FORMAL_NM;
            
            private System.Data.DataColumn columnORG_DUNS_NUM;
            
            private System.Data.DataColumn columnORG_TYPE;
            
            private System.Data.DataColumn columnEMPLOYER_IND;
            
            private System.Data.DataColumn columnST_BUSINESS_IND;
            
            private System.Data.DataColumn columnULT_PARENT_NM;
            
            private System.Data.DataColumn columnULT_PARENT_DUNS_NUM;
            
            private System.Data.DataColumn columnMAIL_ADD;
            
            private System.Data.DataColumn columnSUPPLEM_ADD;
            
            private System.Data.DataColumn columnMAIL_ADD_CITY_NM;
            
            private System.Data.DataColumn columnMAIL_ADD_ST_CD;
            
            private System.Data.DataColumn columnMAIL_ADD_ST_NM;
            
            private System.Data.DataColumn columnMAIL_ADD_CO_NM;
            
            private System.Data.DataColumn columnMAIL_ADD_ZIP_CD;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_FAC_ORGDataTable() {
                this.TableName = "FRS_FAC_ORG";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FRS_FAC_ORGDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected FRS_FAC_ORGDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ST_REC_INDColumn {
                get {
                    return this.columnST_REC_IND;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ST_FAC_INDColumn {
                get {
                    return this.columnST_FAC_IND;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AFFIL_TYPEColumn {
                get {
                    return this.columnAFFIL_TYPE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AFFIL_START_DATEColumn {
                get {
                    return this.columnAFFIL_START_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AFFIL_END_DATEColumn {
                get {
                    return this.columnAFFIL_END_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EMAIL_ADDColumn {
                get {
                    return this.columnEMAIL_ADD;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TEL_NUMColumn {
                get {
                    return this.columnTEL_NUM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PH_EXTColumn {
                get {
                    return this.columnPH_EXT;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn FAX_NUMColumn {
                get {
                    return this.columnFAX_NUM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ALT_TEL_NUMColumn {
                get {
                    return this.columnALT_TEL_NUM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ORG_FORMAL_NMColumn {
                get {
                    return this.columnORG_FORMAL_NM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ORG_DUNS_NUMColumn {
                get {
                    return this.columnORG_DUNS_NUM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ORG_TYPEColumn {
                get {
                    return this.columnORG_TYPE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EMPLOYER_INDColumn {
                get {
                    return this.columnEMPLOYER_IND;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ST_BUSINESS_INDColumn {
                get {
                    return this.columnST_BUSINESS_IND;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ULT_PARENT_NMColumn {
                get {
                    return this.columnULT_PARENT_NM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ULT_PARENT_DUNS_NUMColumn {
                get {
                    return this.columnULT_PARENT_DUNS_NUM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MAIL_ADDColumn {
                get {
                    return this.columnMAIL_ADD;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SUPPLEM_ADDColumn {
                get {
                    return this.columnSUPPLEM_ADD;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MAIL_ADD_CITY_NMColumn {
                get {
                    return this.columnMAIL_ADD_CITY_NM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MAIL_ADD_ST_CDColumn {
                get {
                    return this.columnMAIL_ADD_ST_CD;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MAIL_ADD_ST_NMColumn {
                get {
                    return this.columnMAIL_ADD_ST_NM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MAIL_ADD_CO_NMColumn {
                get {
                    return this.columnMAIL_ADD_CO_NM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MAIL_ADD_ZIP_CDColumn {
                get {
                    return this.columnMAIL_ADD_ZIP_CD;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_FAC_ORGRow this[int index] {
                get {
                    return ((FRS_FAC_ORGRow)(this.Rows[index]));
                }
            }
            
            public event FRS_FAC_ORGRowChangeEventHandler FRS_FAC_ORGRowChanging;
            
            public event FRS_FAC_ORGRowChangeEventHandler FRS_FAC_ORGRowChanged;
            
            public event FRS_FAC_ORGRowChangeEventHandler FRS_FAC_ORGRowDeleting;
            
            public event FRS_FAC_ORGRowChangeEventHandler FRS_FAC_ORGRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddFRS_FAC_ORGRow(FRS_FAC_ORGRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_FAC_ORGRow AddFRS_FAC_ORGRow(
                        string ST_REC_IND, 
                        FRS_FACRow parentFRS_FACRowByFK_FACORG_FAC, 
                        string AFFIL_TYPE, 
                        string AFFIL_START_DATE, 
                        string AFFIL_END_DATE, 
                        string EMAIL_ADD, 
                        string TEL_NUM, 
                        string PH_EXT, 
                        string FAX_NUM, 
                        string ALT_TEL_NUM, 
                        string ORG_FORMAL_NM, 
                        string ORG_DUNS_NUM, 
                        string ORG_TYPE, 
                        string EMPLOYER_IND, 
                        string ST_BUSINESS_IND, 
                        string ULT_PARENT_NM, 
                        string ULT_PARENT_DUNS_NUM, 
                        string MAIL_ADD, 
                        string SUPPLEM_ADD, 
                        string MAIL_ADD_CITY_NM, 
                        string MAIL_ADD_ST_CD, 
                        string MAIL_ADD_ST_NM, 
                        string MAIL_ADD_CO_NM, 
                        string MAIL_ADD_ZIP_CD) {
                FRS_FAC_ORGRow rowFRS_FAC_ORGRow = ((FRS_FAC_ORGRow)(this.NewRow()));
                rowFRS_FAC_ORGRow.ItemArray = new object[] {
                        ST_REC_IND,
                        parentFRS_FACRowByFK_FACORG_FAC[0],
                        AFFIL_TYPE,
                        AFFIL_START_DATE,
                        AFFIL_END_DATE,
                        EMAIL_ADD,
                        TEL_NUM,
                        PH_EXT,
                        FAX_NUM,
                        ALT_TEL_NUM,
                        ORG_FORMAL_NM,
                        ORG_DUNS_NUM,
                        ORG_TYPE,
                        EMPLOYER_IND,
                        ST_BUSINESS_IND,
                        ULT_PARENT_NM,
                        ULT_PARENT_DUNS_NUM,
                        MAIL_ADD,
                        SUPPLEM_ADD,
                        MAIL_ADD_CITY_NM,
                        MAIL_ADD_ST_CD,
                        MAIL_ADD_ST_NM,
                        MAIL_ADD_CO_NM,
                        MAIL_ADD_ZIP_CD};
                this.Rows.Add(rowFRS_FAC_ORGRow);
                return rowFRS_FAC_ORGRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_FAC_ORGRow FindByST_REC_IND(string ST_REC_IND) {
                return ((FRS_FAC_ORGRow)(this.Rows.Find(new object[] {
                            ST_REC_IND})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                FRS_FAC_ORGDataTable cln = ((FRS_FAC_ORGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new FRS_FAC_ORGDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnST_REC_IND = base.Columns["ST_REC_IND"];
                this.columnST_FAC_IND = base.Columns["ST_FAC_IND"];
                this.columnAFFIL_TYPE = base.Columns["AFFIL_TYPE"];
                this.columnAFFIL_START_DATE = base.Columns["AFFIL_START_DATE"];
                this.columnAFFIL_END_DATE = base.Columns["AFFIL_END_DATE"];
                this.columnEMAIL_ADD = base.Columns["EMAIL_ADD"];
                this.columnTEL_NUM = base.Columns["TEL_NUM"];
                this.columnPH_EXT = base.Columns["PH_EXT"];
                this.columnFAX_NUM = base.Columns["FAX_NUM"];
                this.columnALT_TEL_NUM = base.Columns["ALT_TEL_NUM"];
                this.columnORG_FORMAL_NM = base.Columns["ORG_FORMAL_NM"];
                this.columnORG_DUNS_NUM = base.Columns["ORG_DUNS_NUM"];
                this.columnORG_TYPE = base.Columns["ORG_TYPE"];
                this.columnEMPLOYER_IND = base.Columns["EMPLOYER_IND"];
                this.columnST_BUSINESS_IND = base.Columns["ST_BUSINESS_IND"];
                this.columnULT_PARENT_NM = base.Columns["ULT_PARENT_NM"];
                this.columnULT_PARENT_DUNS_NUM = base.Columns["ULT_PARENT_DUNS_NUM"];
                this.columnMAIL_ADD = base.Columns["MAIL_ADD"];
                this.columnSUPPLEM_ADD = base.Columns["SUPPLEM_ADD"];
                this.columnMAIL_ADD_CITY_NM = base.Columns["MAIL_ADD_CITY_NM"];
                this.columnMAIL_ADD_ST_CD = base.Columns["MAIL_ADD_ST_CD"];
                this.columnMAIL_ADD_ST_NM = base.Columns["MAIL_ADD_ST_NM"];
                this.columnMAIL_ADD_CO_NM = base.Columns["MAIL_ADD_CO_NM"];
                this.columnMAIL_ADD_ZIP_CD = base.Columns["MAIL_ADD_ZIP_CD"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnST_REC_IND = new System.Data.DataColumn("ST_REC_IND", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnST_REC_IND);
                this.columnST_FAC_IND = new System.Data.DataColumn("ST_FAC_IND", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnST_FAC_IND);
                this.columnAFFIL_TYPE = new System.Data.DataColumn("AFFIL_TYPE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAFFIL_TYPE);
                this.columnAFFIL_START_DATE = new System.Data.DataColumn("AFFIL_START_DATE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAFFIL_START_DATE);
                this.columnAFFIL_END_DATE = new System.Data.DataColumn("AFFIL_END_DATE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAFFIL_END_DATE);
                this.columnEMAIL_ADD = new System.Data.DataColumn("EMAIL_ADD", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMAIL_ADD);
                this.columnTEL_NUM = new System.Data.DataColumn("TEL_NUM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTEL_NUM);
                this.columnPH_EXT = new System.Data.DataColumn("PH_EXT", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPH_EXT);
                this.columnFAX_NUM = new System.Data.DataColumn("FAX_NUM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnFAX_NUM);
                this.columnALT_TEL_NUM = new System.Data.DataColumn("ALT_TEL_NUM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnALT_TEL_NUM);
                this.columnORG_FORMAL_NM = new System.Data.DataColumn("ORG_FORMAL_NM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnORG_FORMAL_NM);
                this.columnORG_DUNS_NUM = new System.Data.DataColumn("ORG_DUNS_NUM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnORG_DUNS_NUM);
                this.columnORG_TYPE = new System.Data.DataColumn("ORG_TYPE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnORG_TYPE);
                this.columnEMPLOYER_IND = new System.Data.DataColumn("EMPLOYER_IND", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMPLOYER_IND);
                this.columnST_BUSINESS_IND = new System.Data.DataColumn("ST_BUSINESS_IND", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnST_BUSINESS_IND);
                this.columnULT_PARENT_NM = new System.Data.DataColumn("ULT_PARENT_NM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnULT_PARENT_NM);
                this.columnULT_PARENT_DUNS_NUM = new System.Data.DataColumn("ULT_PARENT_DUNS_NUM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnULT_PARENT_DUNS_NUM);
                this.columnMAIL_ADD = new System.Data.DataColumn("MAIL_ADD", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAIL_ADD);
                this.columnSUPPLEM_ADD = new System.Data.DataColumn("SUPPLEM_ADD", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUPPLEM_ADD);
                this.columnMAIL_ADD_CITY_NM = new System.Data.DataColumn("MAIL_ADD_CITY_NM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAIL_ADD_CITY_NM);
                this.columnMAIL_ADD_ST_CD = new System.Data.DataColumn("MAIL_ADD_ST_CD", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAIL_ADD_ST_CD);
                this.columnMAIL_ADD_ST_NM = new System.Data.DataColumn("MAIL_ADD_ST_NM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAIL_ADD_ST_NM);
                this.columnMAIL_ADD_CO_NM = new System.Data.DataColumn("MAIL_ADD_CO_NM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAIL_ADD_CO_NM);
                this.columnMAIL_ADD_ZIP_CD = new System.Data.DataColumn("MAIL_ADD_ZIP_CD", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAIL_ADD_ZIP_CD);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnST_REC_IND}, true));
                this.columnST_REC_IND.AllowDBNull = false;
                this.columnST_REC_IND.Unique = true;
                this.columnST_REC_IND.MaxLength = 36;
                this.columnST_FAC_IND.AllowDBNull = false;
                this.columnST_FAC_IND.MaxLength = 12;
                this.columnAFFIL_TYPE.MaxLength = 40;
                this.columnAFFIL_START_DATE.MaxLength = 10;
                this.columnAFFIL_END_DATE.MaxLength = 10;
                this.columnEMAIL_ADD.MaxLength = 120;
                this.columnTEL_NUM.MaxLength = 30;
                this.columnPH_EXT.MaxLength = 5;
                this.columnFAX_NUM.MaxLength = 30;
                this.columnALT_TEL_NUM.MaxLength = 30;
                this.columnORG_FORMAL_NM.MaxLength = 80;
                this.columnORG_DUNS_NUM.MaxLength = 9;
                this.columnORG_TYPE.MaxLength = 10;
                this.columnEMPLOYER_IND.MaxLength = 14;
                this.columnST_BUSINESS_IND.MaxLength = 30;
                this.columnULT_PARENT_NM.MaxLength = 50;
                this.columnULT_PARENT_DUNS_NUM.MaxLength = 9;
                this.columnMAIL_ADD.MaxLength = 50;
                this.columnSUPPLEM_ADD.MaxLength = 50;
                this.columnMAIL_ADD_CITY_NM.MaxLength = 30;
                this.columnMAIL_ADD_ST_CD.MaxLength = 2;
                this.columnMAIL_ADD_ST_NM.MaxLength = 35;
                this.columnMAIL_ADD_CO_NM.MaxLength = 44;
                this.columnMAIL_ADD_ZIP_CD.MaxLength = 14;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_FAC_ORGRow NewFRS_FAC_ORGRow() {
                return ((FRS_FAC_ORGRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new FRS_FAC_ORGRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(FRS_FAC_ORGRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FRS_FAC_ORGRowChanged != null)) {
                    this.FRS_FAC_ORGRowChanged(this, new FRS_FAC_ORGRowChangeEvent(((FRS_FAC_ORGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FRS_FAC_ORGRowChanging != null)) {
                    this.FRS_FAC_ORGRowChanging(this, new FRS_FAC_ORGRowChangeEvent(((FRS_FAC_ORGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FRS_FAC_ORGRowDeleted != null)) {
                    this.FRS_FAC_ORGRowDeleted(this, new FRS_FAC_ORGRowChangeEvent(((FRS_FAC_ORGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FRS_FAC_ORGRowDeleting != null)) {
                    this.FRS_FAC_ORGRowDeleting(this, new FRS_FAC_ORGRowChangeEvent(((FRS_FAC_ORGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveFRS_FAC_ORGRow(FRS_FAC_ORGRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                FRS ds = new FRS();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FRS_FAC_ORGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FRS_FAC_SICDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnST_REC_IND;
            
            private System.Data.DataColumn columnST_FAC_IND;
            
            private System.Data.DataColumn columnSIC_CD;
            
            private System.Data.DataColumn columnSIC_PRIM_IND;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_FAC_SICDataTable() {
                this.TableName = "FRS_FAC_SIC";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FRS_FAC_SICDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected FRS_FAC_SICDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ST_REC_INDColumn {
                get {
                    return this.columnST_REC_IND;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ST_FAC_INDColumn {
                get {
                    return this.columnST_FAC_IND;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SIC_CDColumn {
                get {
                    return this.columnSIC_CD;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SIC_PRIM_INDColumn {
                get {
                    return this.columnSIC_PRIM_IND;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_FAC_SICRow this[int index] {
                get {
                    return ((FRS_FAC_SICRow)(this.Rows[index]));
                }
            }
            
            public event FRS_FAC_SICRowChangeEventHandler FRS_FAC_SICRowChanging;
            
            public event FRS_FAC_SICRowChangeEventHandler FRS_FAC_SICRowChanged;
            
            public event FRS_FAC_SICRowChangeEventHandler FRS_FAC_SICRowDeleting;
            
            public event FRS_FAC_SICRowChangeEventHandler FRS_FAC_SICRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddFRS_FAC_SICRow(FRS_FAC_SICRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_FAC_SICRow AddFRS_FAC_SICRow(string ST_REC_IND, FRS_FACRow parentFRS_FACRowByFK_FACSIC_FAC, string SIC_CD, string SIC_PRIM_IND) {
                FRS_FAC_SICRow rowFRS_FAC_SICRow = ((FRS_FAC_SICRow)(this.NewRow()));
                rowFRS_FAC_SICRow.ItemArray = new object[] {
                        ST_REC_IND,
                        parentFRS_FACRowByFK_FACSIC_FAC[0],
                        SIC_CD,
                        SIC_PRIM_IND};
                this.Rows.Add(rowFRS_FAC_SICRow);
                return rowFRS_FAC_SICRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_FAC_SICRow FindByST_REC_IND(string ST_REC_IND) {
                return ((FRS_FAC_SICRow)(this.Rows.Find(new object[] {
                            ST_REC_IND})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                FRS_FAC_SICDataTable cln = ((FRS_FAC_SICDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new FRS_FAC_SICDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnST_REC_IND = base.Columns["ST_REC_IND"];
                this.columnST_FAC_IND = base.Columns["ST_FAC_IND"];
                this.columnSIC_CD = base.Columns["SIC_CD"];
                this.columnSIC_PRIM_IND = base.Columns["SIC_PRIM_IND"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnST_REC_IND = new System.Data.DataColumn("ST_REC_IND", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnST_REC_IND);
                this.columnST_FAC_IND = new System.Data.DataColumn("ST_FAC_IND", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnST_FAC_IND);
                this.columnSIC_CD = new System.Data.DataColumn("SIC_CD", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSIC_CD);
                this.columnSIC_PRIM_IND = new System.Data.DataColumn("SIC_PRIM_IND", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSIC_PRIM_IND);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnST_REC_IND}, true));
                this.columnST_REC_IND.AllowDBNull = false;
                this.columnST_REC_IND.Unique = true;
                this.columnST_REC_IND.MaxLength = 36;
                this.columnST_FAC_IND.AllowDBNull = false;
                this.columnST_FAC_IND.MaxLength = 12;
                this.columnSIC_CD.AllowDBNull = false;
                this.columnSIC_CD.MaxLength = 4;
                this.columnSIC_PRIM_IND.AllowDBNull = false;
                this.columnSIC_PRIM_IND.MaxLength = 10;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_FAC_SICRow NewFRS_FAC_SICRow() {
                return ((FRS_FAC_SICRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new FRS_FAC_SICRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(FRS_FAC_SICRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FRS_FAC_SICRowChanged != null)) {
                    this.FRS_FAC_SICRowChanged(this, new FRS_FAC_SICRowChangeEvent(((FRS_FAC_SICRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FRS_FAC_SICRowChanging != null)) {
                    this.FRS_FAC_SICRowChanging(this, new FRS_FAC_SICRowChangeEvent(((FRS_FAC_SICRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FRS_FAC_SICRowDeleted != null)) {
                    this.FRS_FAC_SICRowDeleted(this, new FRS_FAC_SICRowChangeEvent(((FRS_FAC_SICRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FRS_FAC_SICRowDeleting != null)) {
                    this.FRS_FAC_SICRowDeleting(this, new FRS_FAC_SICRowChangeEvent(((FRS_FAC_SICRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveFRS_FAC_SICRow(FRS_FAC_SICRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                FRS ds = new FRS();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FRS_FAC_SICDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FRS_FAC_DELDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnST_FAC_IND;
            
            private System.Data.DataColumn columnDELETION_DATE;
            
            private System.Data.DataColumn columnST_FAC_SYS_AC;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_FAC_DELDataTable() {
                this.TableName = "FRS_FAC_DEL";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FRS_FAC_DELDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected FRS_FAC_DELDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ST_FAC_INDColumn {
                get {
                    return this.columnST_FAC_IND;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DELETION_DATEColumn {
                get {
                    return this.columnDELETION_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ST_FAC_SYS_ACColumn {
                get {
                    return this.columnST_FAC_SYS_AC;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_FAC_DELRow this[int index] {
                get {
                    return ((FRS_FAC_DELRow)(this.Rows[index]));
                }
            }
            
            public event FRS_FAC_DELRowChangeEventHandler FRS_FAC_DELRowChanging;
            
            public event FRS_FAC_DELRowChangeEventHandler FRS_FAC_DELRowChanged;
            
            public event FRS_FAC_DELRowChangeEventHandler FRS_FAC_DELRowDeleting;
            
            public event FRS_FAC_DELRowChangeEventHandler FRS_FAC_DELRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddFRS_FAC_DELRow(FRS_FAC_DELRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_FAC_DELRow AddFRS_FAC_DELRow(string ST_FAC_IND, string DELETION_DATE, string ST_FAC_SYS_AC) {
                FRS_FAC_DELRow rowFRS_FAC_DELRow = ((FRS_FAC_DELRow)(this.NewRow()));
                rowFRS_FAC_DELRow.ItemArray = new object[] {
                        ST_FAC_IND,
                        DELETION_DATE,
                        ST_FAC_SYS_AC};
                this.Rows.Add(rowFRS_FAC_DELRow);
                return rowFRS_FAC_DELRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_FAC_DELRow FindByST_FAC_INDDELETION_DATEST_FAC_SYS_AC(string ST_FAC_IND, string DELETION_DATE, string ST_FAC_SYS_AC) {
                return ((FRS_FAC_DELRow)(this.Rows.Find(new object[] {
                            ST_FAC_IND,
                            DELETION_DATE,
                            ST_FAC_SYS_AC})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                FRS_FAC_DELDataTable cln = ((FRS_FAC_DELDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new FRS_FAC_DELDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnST_FAC_IND = base.Columns["ST_FAC_IND"];
                this.columnDELETION_DATE = base.Columns["DELETION_DATE"];
                this.columnST_FAC_SYS_AC = base.Columns["ST_FAC_SYS_AC"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnST_FAC_IND = new System.Data.DataColumn("ST_FAC_IND", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnST_FAC_IND);
                this.columnDELETION_DATE = new System.Data.DataColumn("DELETION_DATE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDELETION_DATE);
                this.columnST_FAC_SYS_AC = new System.Data.DataColumn("ST_FAC_SYS_AC", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnST_FAC_SYS_AC);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnST_FAC_IND,
                                this.columnDELETION_DATE,
                                this.columnST_FAC_SYS_AC}, true));
                this.columnST_FAC_IND.AllowDBNull = false;
                this.columnST_FAC_IND.MaxLength = 12;
                this.columnDELETION_DATE.AllowDBNull = false;
                this.columnDELETION_DATE.MaxLength = 10;
                this.columnST_FAC_SYS_AC.AllowDBNull = false;
                this.columnST_FAC_SYS_AC.MaxLength = 20;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_FAC_DELRow NewFRS_FAC_DELRow() {
                return ((FRS_FAC_DELRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new FRS_FAC_DELRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(FRS_FAC_DELRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FRS_FAC_DELRowChanged != null)) {
                    this.FRS_FAC_DELRowChanged(this, new FRS_FAC_DELRowChangeEvent(((FRS_FAC_DELRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FRS_FAC_DELRowChanging != null)) {
                    this.FRS_FAC_DELRowChanging(this, new FRS_FAC_DELRowChangeEvent(((FRS_FAC_DELRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FRS_FAC_DELRowDeleted != null)) {
                    this.FRS_FAC_DELRowDeleted(this, new FRS_FAC_DELRowChangeEvent(((FRS_FAC_DELRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FRS_FAC_DELRowDeleting != null)) {
                    this.FRS_FAC_DELRowDeleting(this, new FRS_FAC_DELRowChangeEvent(((FRS_FAC_DELRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveFRS_FAC_DELRow(FRS_FAC_DELRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                FRS ds = new FRS();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FRS_FAC_DELDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class FRS_ADDRow : System.Data.DataRow {
            
            private FRS_ADDDataTable tableFRS_ADD;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FRS_ADDRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFRS_ADD = ((FRS_ADDDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ST_FAC_IND {
                get {
                    return ((string)(this[this.tableFRS_ADD.ST_FAC_INDColumn]));
                }
                set {
                    this[this.tableFRS_ADD.ST_FAC_INDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AFFIL_TYPE {
                get {
                    if (this.IsAFFIL_TYPENull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_ADD.AFFIL_TYPEColumn]));
                    }
                }
                set {
                    this[this.tableFRS_ADD.AFFIL_TYPEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAIL_ADD {
                get {
                    if (this.IsMAIL_ADDNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_ADD.MAIL_ADDColumn]));
                    }
                }
                set {
                    this[this.tableFRS_ADD.MAIL_ADDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SUPPLEM_ADD {
                get {
                    if (this.IsSUPPLEM_ADDNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_ADD.SUPPLEM_ADDColumn]));
                    }
                }
                set {
                    this[this.tableFRS_ADD.SUPPLEM_ADDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAIL_ADD_CITY_NM {
                get {
                    if (this.IsMAIL_ADD_CITY_NMNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_ADD.MAIL_ADD_CITY_NMColumn]));
                    }
                }
                set {
                    this[this.tableFRS_ADD.MAIL_ADD_CITY_NMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAIL_ADD_ST_CD {
                get {
                    if (this.IsMAIL_ADD_ST_CDNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_ADD.MAIL_ADD_ST_CDColumn]));
                    }
                }
                set {
                    this[this.tableFRS_ADD.MAIL_ADD_ST_CDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAIL_ADD_ST_NM {
                get {
                    if (this.IsMAIL_ADD_ST_NMNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_ADD.MAIL_ADD_ST_NMColumn]));
                    }
                }
                set {
                    this[this.tableFRS_ADD.MAIL_ADD_ST_NMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAIL_ADD_CO_NM {
                get {
                    if (this.IsMAIL_ADD_CO_NMNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_ADD.MAIL_ADD_CO_NMColumn]));
                    }
                }
                set {
                    this[this.tableFRS_ADD.MAIL_ADD_CO_NMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAIL_ADD_ZIP_CD {
                get {
                    if (this.IsMAIL_ADD_ZIP_CDNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_ADD.MAIL_ADD_ZIP_CDColumn]));
                    }
                }
                set {
                    this[this.tableFRS_ADD.MAIL_ADD_ZIP_CDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_FACRow FRS_FACRow {
                get {
                    return ((FRS_FACRow)(this.GetParentRow(this.Table.ParentRelations["FK_ADD_FAC"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_ADD_FAC"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAFFIL_TYPENull() {
                return this.IsNull(this.tableFRS_ADD.AFFIL_TYPEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAFFIL_TYPENull() {
                this[this.tableFRS_ADD.AFFIL_TYPEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAIL_ADDNull() {
                return this.IsNull(this.tableFRS_ADD.MAIL_ADDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAIL_ADDNull() {
                this[this.tableFRS_ADD.MAIL_ADDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSUPPLEM_ADDNull() {
                return this.IsNull(this.tableFRS_ADD.SUPPLEM_ADDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSUPPLEM_ADDNull() {
                this[this.tableFRS_ADD.SUPPLEM_ADDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAIL_ADD_CITY_NMNull() {
                return this.IsNull(this.tableFRS_ADD.MAIL_ADD_CITY_NMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAIL_ADD_CITY_NMNull() {
                this[this.tableFRS_ADD.MAIL_ADD_CITY_NMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAIL_ADD_ST_CDNull() {
                return this.IsNull(this.tableFRS_ADD.MAIL_ADD_ST_CDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAIL_ADD_ST_CDNull() {
                this[this.tableFRS_ADD.MAIL_ADD_ST_CDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAIL_ADD_ST_NMNull() {
                return this.IsNull(this.tableFRS_ADD.MAIL_ADD_ST_NMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAIL_ADD_ST_NMNull() {
                this[this.tableFRS_ADD.MAIL_ADD_ST_NMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAIL_ADD_CO_NMNull() {
                return this.IsNull(this.tableFRS_ADD.MAIL_ADD_CO_NMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAIL_ADD_CO_NMNull() {
                this[this.tableFRS_ADD.MAIL_ADD_CO_NMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAIL_ADD_ZIP_CDNull() {
                return this.IsNull(this.tableFRS_ADD.MAIL_ADD_ZIP_CDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAIL_ADD_ZIP_CDNull() {
                this[this.tableFRS_ADD.MAIL_ADD_ZIP_CDColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class FRS_GEORow : System.Data.DataRow {
            
            private FRS_GEODataTable tableFRS_GEO;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FRS_GEORow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFRS_GEO = ((FRS_GEODataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ST_FAC_IND {
                get {
                    return ((string)(this[this.tableFRS_GEO.ST_FAC_INDColumn]));
                }
                set {
                    this[this.tableFRS_GEO.ST_FAC_INDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LAT_MEASURE {
                get {
                    return ((string)(this[this.tableFRS_GEO.LAT_MEASUREColumn]));
                }
                set {
                    this[this.tableFRS_GEO.LAT_MEASUREColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LON_MEASURE {
                get {
                    return ((string)(this[this.tableFRS_GEO.LON_MEASUREColumn]));
                }
                set {
                    this[this.tableFRS_GEO.LON_MEASUREColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HORIZ_ACCUR_MEASURE {
                get {
                    if (this.IsHORIZ_ACCUR_MEASURENull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_GEO.HORIZ_ACCUR_MEASUREColumn]));
                    }
                }
                set {
                    this[this.tableFRS_GEO.HORIZ_ACCUR_MEASUREColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HORIZ_COLL_METH {
                get {
                    if (this.IsHORIZ_COLL_METHNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_GEO.HORIZ_COLL_METHColumn]));
                    }
                }
                set {
                    this[this.tableFRS_GEO.HORIZ_COLL_METHColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HORIZ_REF_DATUM_NM {
                get {
                    if (this.IsHORIZ_REF_DATUM_NMNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_GEO.HORIZ_REF_DATUM_NMColumn]));
                    }
                }
                set {
                    this[this.tableFRS_GEO.HORIZ_REF_DATUM_NMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SRC_MAP_SCALE_NUM {
                get {
                    if (this.IsSRC_MAP_SCALE_NUMNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_GEO.SRC_MAP_SCALE_NUMColumn]));
                    }
                }
                set {
                    this[this.tableFRS_GEO.SRC_MAP_SCALE_NUMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string REF_POINT {
                get {
                    if (this.IsREF_POINTNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_GEO.REF_POINTColumn]));
                    }
                }
                set {
                    this[this.tableFRS_GEO.REF_POINTColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DATA_COLL_DATE {
                get {
                    if (this.IsDATA_COLL_DATENull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_GEO.DATA_COLL_DATEColumn]));
                    }
                }
                set {
                    this[this.tableFRS_GEO.DATA_COLL_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GEO_TYPE_NM {
                get {
                    if (this.IsGEO_TYPE_NMNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_GEO.GEO_TYPE_NMColumn]));
                    }
                }
                set {
                    this[this.tableFRS_GEO.GEO_TYPE_NMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LOC_COMMENTS {
                get {
                    if (this.IsLOC_COMMENTSNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_GEO.LOC_COMMENTSColumn]));
                    }
                }
                set {
                    this[this.tableFRS_GEO.LOC_COMMENTSColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VERT_COLL_METH {
                get {
                    if (this.IsVERT_COLL_METHNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_GEO.VERT_COLL_METHColumn]));
                    }
                }
                set {
                    this[this.tableFRS_GEO.VERT_COLL_METHColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VERT_MEASURE {
                get {
                    if (this.IsVERT_MEASURENull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_GEO.VERT_MEASUREColumn]));
                    }
                }
                set {
                    this[this.tableFRS_GEO.VERT_MEASUREColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VERT_ACCUR_MEASURE {
                get {
                    if (this.IsVERT_ACCUR_MEASURENull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_GEO.VERT_ACCUR_MEASUREColumn]));
                    }
                }
                set {
                    this[this.tableFRS_GEO.VERT_ACCUR_MEASUREColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VERT_REF_DATUM_NM {
                get {
                    if (this.IsVERT_REF_DATUM_NMNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_GEO.VERT_REF_DATUM_NMColumn]));
                    }
                }
                set {
                    this[this.tableFRS_GEO.VERT_REF_DATUM_NMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DATA_SRC_NM {
                get {
                    if (this.IsDATA_SRC_NMNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_GEO.DATA_SRC_NMColumn]));
                    }
                }
                set {
                    this[this.tableFRS_GEO.DATA_SRC_NMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COORD_DATA_SRC_NM {
                get {
                    if (this.IsCOORD_DATA_SRC_NMNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_GEO.COORD_DATA_SRC_NMColumn]));
                    }
                }
                set {
                    this[this.tableFRS_GEO.COORD_DATA_SRC_NMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SUB_ENT_IND {
                get {
                    if (this.IsSUB_ENT_INDNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_GEO.SUB_ENT_INDColumn]));
                    }
                }
                set {
                    this[this.tableFRS_GEO.SUB_ENT_INDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SUB_ENT_TYPE_NM {
                get {
                    if (this.IsSUB_ENT_TYPE_NMNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_GEO.SUB_ENT_TYPE_NMColumn]));
                    }
                }
                set {
                    this[this.tableFRS_GEO.SUB_ENT_TYPE_NMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_FACRow FRS_FACRow {
                get {
                    return ((FRS_FACRow)(this.GetParentRow(this.Table.ParentRelations["FK_GEO_FAC"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_GEO_FAC"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHORIZ_ACCUR_MEASURENull() {
                return this.IsNull(this.tableFRS_GEO.HORIZ_ACCUR_MEASUREColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHORIZ_ACCUR_MEASURENull() {
                this[this.tableFRS_GEO.HORIZ_ACCUR_MEASUREColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHORIZ_COLL_METHNull() {
                return this.IsNull(this.tableFRS_GEO.HORIZ_COLL_METHColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHORIZ_COLL_METHNull() {
                this[this.tableFRS_GEO.HORIZ_COLL_METHColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHORIZ_REF_DATUM_NMNull() {
                return this.IsNull(this.tableFRS_GEO.HORIZ_REF_DATUM_NMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHORIZ_REF_DATUM_NMNull() {
                this[this.tableFRS_GEO.HORIZ_REF_DATUM_NMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSRC_MAP_SCALE_NUMNull() {
                return this.IsNull(this.tableFRS_GEO.SRC_MAP_SCALE_NUMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSRC_MAP_SCALE_NUMNull() {
                this[this.tableFRS_GEO.SRC_MAP_SCALE_NUMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsREF_POINTNull() {
                return this.IsNull(this.tableFRS_GEO.REF_POINTColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetREF_POINTNull() {
                this[this.tableFRS_GEO.REF_POINTColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDATA_COLL_DATENull() {
                return this.IsNull(this.tableFRS_GEO.DATA_COLL_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDATA_COLL_DATENull() {
                this[this.tableFRS_GEO.DATA_COLL_DATEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGEO_TYPE_NMNull() {
                return this.IsNull(this.tableFRS_GEO.GEO_TYPE_NMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGEO_TYPE_NMNull() {
                this[this.tableFRS_GEO.GEO_TYPE_NMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLOC_COMMENTSNull() {
                return this.IsNull(this.tableFRS_GEO.LOC_COMMENTSColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLOC_COMMENTSNull() {
                this[this.tableFRS_GEO.LOC_COMMENTSColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVERT_COLL_METHNull() {
                return this.IsNull(this.tableFRS_GEO.VERT_COLL_METHColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVERT_COLL_METHNull() {
                this[this.tableFRS_GEO.VERT_COLL_METHColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVERT_MEASURENull() {
                return this.IsNull(this.tableFRS_GEO.VERT_MEASUREColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVERT_MEASURENull() {
                this[this.tableFRS_GEO.VERT_MEASUREColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVERT_ACCUR_MEASURENull() {
                return this.IsNull(this.tableFRS_GEO.VERT_ACCUR_MEASUREColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVERT_ACCUR_MEASURENull() {
                this[this.tableFRS_GEO.VERT_ACCUR_MEASUREColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVERT_REF_DATUM_NMNull() {
                return this.IsNull(this.tableFRS_GEO.VERT_REF_DATUM_NMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVERT_REF_DATUM_NMNull() {
                this[this.tableFRS_GEO.VERT_REF_DATUM_NMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDATA_SRC_NMNull() {
                return this.IsNull(this.tableFRS_GEO.DATA_SRC_NMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDATA_SRC_NMNull() {
                this[this.tableFRS_GEO.DATA_SRC_NMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOORD_DATA_SRC_NMNull() {
                return this.IsNull(this.tableFRS_GEO.COORD_DATA_SRC_NMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOORD_DATA_SRC_NMNull() {
                this[this.tableFRS_GEO.COORD_DATA_SRC_NMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSUB_ENT_INDNull() {
                return this.IsNull(this.tableFRS_GEO.SUB_ENT_INDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSUB_ENT_INDNull() {
                this[this.tableFRS_GEO.SUB_ENT_INDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSUB_ENT_TYPE_NMNull() {
                return this.IsNull(this.tableFRS_GEO.SUB_ENT_TYPE_NMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSUB_ENT_TYPE_NMNull() {
                this[this.tableFRS_GEO.SUB_ENT_TYPE_NMColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class FRS_ALT_NMRow : System.Data.DataRow {
            
            private FRS_ALT_NMDataTable tableFRS_ALT_NM;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FRS_ALT_NMRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFRS_ALT_NM = ((FRS_ALT_NMDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ST_FAC_IND {
                get {
                    return ((string)(this[this.tableFRS_ALT_NM.ST_FAC_INDColumn]));
                }
                set {
                    this[this.tableFRS_ALT_NM.ST_FAC_INDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ALT_NM {
                get {
                    return ((string)(this[this.tableFRS_ALT_NM.ALT_NMColumn]));
                }
                set {
                    this[this.tableFRS_ALT_NM.ALT_NMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ALT_NAME_TYPE {
                get {
                    if (this.IsALT_NAME_TYPENull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_ALT_NM.ALT_NAME_TYPEColumn]));
                    }
                }
                set {
                    this[this.tableFRS_ALT_NM.ALT_NAME_TYPEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_FACRow FRS_FACRow {
                get {
                    return ((FRS_FACRow)(this.GetParentRow(this.Table.ParentRelations["FK_ALT_NM_FAC"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_ALT_NM_FAC"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsALT_NAME_TYPENull() {
                return this.IsNull(this.tableFRS_ALT_NM.ALT_NAME_TYPEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetALT_NAME_TYPENull() {
                this[this.tableFRS_ALT_NM.ALT_NAME_TYPEColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class FRS_EIRow : System.Data.DataRow {
            
            private FRS_EIDataTable tableFRS_EI;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FRS_EIRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFRS_EI = ((FRS_EIDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ST_EI_IND {
                get {
                    return ((string)(this[this.tableFRS_EI.ST_EI_INDColumn]));
                }
                set {
                    this[this.tableFRS_EI.ST_EI_INDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ST_FAC_IND {
                get {
                    return ((string)(this[this.tableFRS_EI.ST_FAC_INDColumn]));
                }
                set {
                    this[this.tableFRS_EI.ST_FAC_INDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INF_SYS_AC {
                get {
                    if (this.IsINF_SYS_ACNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_EI.INF_SYS_ACColumn]));
                    }
                }
                set {
                    this[this.tableFRS_EI.INF_SYS_ACColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INF_SYS_IND {
                get {
                    if (this.IsINF_SYS_INDNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_EI.INF_SYS_INDColumn]));
                    }
                }
                set {
                    this[this.tableFRS_EI.INF_SYS_INDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ENV_INT_TYPE {
                get {
                    if (this.IsENV_INT_TYPENull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_EI.ENV_INT_TYPEColumn]));
                    }
                }
                set {
                    this[this.tableFRS_EI.ENV_INT_TYPEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FED_ST_INT {
                get {
                    if (this.IsFED_ST_INTNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_EI.FED_ST_INTColumn]));
                    }
                }
                set {
                    this[this.tableFRS_EI.FED_ST_INTColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ENV_INT_START_DATE {
                get {
                    if (this.IsENV_INT_START_DATENull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_EI.ENV_INT_START_DATEColumn]));
                    }
                }
                set {
                    this[this.tableFRS_EI.ENV_INT_START_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INT_START_DATE_QUAL {
                get {
                    if (this.IsINT_START_DATE_QUALNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_EI.INT_START_DATE_QUALColumn]));
                    }
                }
                set {
                    this[this.tableFRS_EI.INT_START_DATE_QUALColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ENV_INT_END_DATE {
                get {
                    if (this.IsENV_INT_END_DATENull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_EI.ENV_INT_END_DATEColumn]));
                    }
                }
                set {
                    this[this.tableFRS_EI.ENV_INT_END_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INT_END_DATE_QUAL {
                get {
                    if (this.IsINT_END_DATE_QUALNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_EI.INT_END_DATE_QUALColumn]));
                    }
                }
                set {
                    this[this.tableFRS_EI.INT_END_DATE_QUALColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_FACRow FRS_FACRow {
                get {
                    return ((FRS_FACRow)(this.GetParentRow(this.Table.ParentRelations["FK_EI_FAC"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_EI_FAC"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINF_SYS_ACNull() {
                return this.IsNull(this.tableFRS_EI.INF_SYS_ACColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINF_SYS_ACNull() {
                this[this.tableFRS_EI.INF_SYS_ACColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINF_SYS_INDNull() {
                return this.IsNull(this.tableFRS_EI.INF_SYS_INDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINF_SYS_INDNull() {
                this[this.tableFRS_EI.INF_SYS_INDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsENV_INT_TYPENull() {
                return this.IsNull(this.tableFRS_EI.ENV_INT_TYPEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetENV_INT_TYPENull() {
                this[this.tableFRS_EI.ENV_INT_TYPEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFED_ST_INTNull() {
                return this.IsNull(this.tableFRS_EI.FED_ST_INTColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFED_ST_INTNull() {
                this[this.tableFRS_EI.FED_ST_INTColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsENV_INT_START_DATENull() {
                return this.IsNull(this.tableFRS_EI.ENV_INT_START_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetENV_INT_START_DATENull() {
                this[this.tableFRS_EI.ENV_INT_START_DATEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINT_START_DATE_QUALNull() {
                return this.IsNull(this.tableFRS_EI.INT_START_DATE_QUALColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINT_START_DATE_QUALNull() {
                this[this.tableFRS_EI.INT_START_DATE_QUALColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsENV_INT_END_DATENull() {
                return this.IsNull(this.tableFRS_EI.ENV_INT_END_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetENV_INT_END_DATENull() {
                this[this.tableFRS_EI.ENV_INT_END_DATEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINT_END_DATE_QUALNull() {
                return this.IsNull(this.tableFRS_EI.INT_END_DATE_QUALColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINT_END_DATE_QUALNull() {
                this[this.tableFRS_EI.INT_END_DATE_QUALColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_EI_INDRow[] GetFRS_EI_INDRows() {
                return ((FRS_EI_INDRow[])(base.GetChildRows(this.Table.ChildRelations["FK_EIIND_EI"])));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_EI_NAICSRow[] GetFRS_EI_NAICSRows() {
                return ((FRS_EI_NAICSRow[])(base.GetChildRows(this.Table.ChildRelations["FK_EINAICS_EI"])));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_EI_ORGRow[] GetFRS_EI_ORGRows() {
                return ((FRS_EI_ORGRow[])(base.GetChildRows(this.Table.ChildRelations["FK_EIORG_EI"])));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_EI_SICRow[] GetFRS_EI_SICRows() {
                return ((FRS_EI_SICRow[])(base.GetChildRows(this.Table.ChildRelations["FK_EISIC_EI"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class FRS_EI_INDRow : System.Data.DataRow {
            
            private FRS_EI_INDDataTable tableFRS_EI_IND;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FRS_EI_INDRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFRS_EI_IND = ((FRS_EI_INDDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ST_REC_IND {
                get {
                    return ((string)(this[this.tableFRS_EI_IND.ST_REC_INDColumn]));
                }
                set {
                    this[this.tableFRS_EI_IND.ST_REC_INDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ST_EI_IND {
                get {
                    return ((string)(this[this.tableFRS_EI_IND.ST_EI_INDColumn]));
                }
                set {
                    this[this.tableFRS_EI_IND.ST_EI_INDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AFFIL_TYPE {
                get {
                    if (this.IsAFFIL_TYPENull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_EI_IND.AFFIL_TYPEColumn]));
                    }
                }
                set {
                    this[this.tableFRS_EI_IND.AFFIL_TYPEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AFFIL_START_DATE {
                get {
                    if (this.IsAFFIL_START_DATENull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_EI_IND.AFFIL_START_DATEColumn]));
                    }
                }
                set {
                    this[this.tableFRS_EI_IND.AFFIL_START_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AFFIL_END_DATE {
                get {
                    if (this.IsAFFIL_END_DATENull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_EI_IND.AFFIL_END_DATEColumn]));
                    }
                }
                set {
                    this[this.tableFRS_EI_IND.AFFIL_END_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMAIL_ADD {
                get {
                    if (this.IsEMAIL_ADDNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_EI_IND.EMAIL_ADDColumn]));
                    }
                }
                set {
                    this[this.tableFRS_EI_IND.EMAIL_ADDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TEL_NUM {
                get {
                    if (this.IsTEL_NUMNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_EI_IND.TEL_NUMColumn]));
                    }
                }
                set {
                    this[this.tableFRS_EI_IND.TEL_NUMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PH_EXT {
                get {
                    if (this.IsPH_EXTNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_EI_IND.PH_EXTColumn]));
                    }
                }
                set {
                    this[this.tableFRS_EI_IND.PH_EXTColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FAX_NUM {
                get {
                    if (this.IsFAX_NUMNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_EI_IND.FAX_NUMColumn]));
                    }
                }
                set {
                    this[this.tableFRS_EI_IND.FAX_NUMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ALT_TEL_NUM {
                get {
                    if (this.IsALT_TEL_NUMNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_EI_IND.ALT_TEL_NUMColumn]));
                    }
                }
                set {
                    this[this.tableFRS_EI_IND.ALT_TEL_NUMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IND_FULL_NM {
                get {
                    if (this.IsIND_FULL_NMNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_EI_IND.IND_FULL_NMColumn]));
                    }
                }
                set {
                    this[this.tableFRS_EI_IND.IND_FULL_NMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IND_TITLE {
                get {
                    if (this.IsIND_TITLENull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_EI_IND.IND_TITLEColumn]));
                    }
                }
                set {
                    this[this.tableFRS_EI_IND.IND_TITLEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAIL_ADD {
                get {
                    if (this.IsMAIL_ADDNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_EI_IND.MAIL_ADDColumn]));
                    }
                }
                set {
                    this[this.tableFRS_EI_IND.MAIL_ADDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SUPPLEM_ADD {
                get {
                    if (this.IsSUPPLEM_ADDNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_EI_IND.SUPPLEM_ADDColumn]));
                    }
                }
                set {
                    this[this.tableFRS_EI_IND.SUPPLEM_ADDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAIL_ADD_CITY_NM {
                get {
                    if (this.IsMAIL_ADD_CITY_NMNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_EI_IND.MAIL_ADD_CITY_NMColumn]));
                    }
                }
                set {
                    this[this.tableFRS_EI_IND.MAIL_ADD_CITY_NMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAIL_ADD_ST_CD {
                get {
                    if (this.IsMAIL_ADD_ST_CDNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_EI_IND.MAIL_ADD_ST_CDColumn]));
                    }
                }
                set {
                    this[this.tableFRS_EI_IND.MAIL_ADD_ST_CDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAIL_ADD_ST_NM {
                get {
                    if (this.IsMAIL_ADD_ST_NMNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_EI_IND.MAIL_ADD_ST_NMColumn]));
                    }
                }
                set {
                    this[this.tableFRS_EI_IND.MAIL_ADD_ST_NMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAIL_ADD_CO_NM {
                get {
                    if (this.IsMAIL_ADD_CO_NMNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_EI_IND.MAIL_ADD_CO_NMColumn]));
                    }
                }
                set {
                    this[this.tableFRS_EI_IND.MAIL_ADD_CO_NMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAIL_ADD_ZIP_CD {
                get {
                    if (this.IsMAIL_ADD_ZIP_CDNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_EI_IND.MAIL_ADD_ZIP_CDColumn]));
                    }
                }
                set {
                    this[this.tableFRS_EI_IND.MAIL_ADD_ZIP_CDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_EIRow FRS_EIRow {
                get {
                    return ((FRS_EIRow)(this.GetParentRow(this.Table.ParentRelations["FK_EIIND_EI"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_EIIND_EI"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAFFIL_TYPENull() {
                return this.IsNull(this.tableFRS_EI_IND.AFFIL_TYPEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAFFIL_TYPENull() {
                this[this.tableFRS_EI_IND.AFFIL_TYPEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAFFIL_START_DATENull() {
                return this.IsNull(this.tableFRS_EI_IND.AFFIL_START_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAFFIL_START_DATENull() {
                this[this.tableFRS_EI_IND.AFFIL_START_DATEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAFFIL_END_DATENull() {
                return this.IsNull(this.tableFRS_EI_IND.AFFIL_END_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAFFIL_END_DATENull() {
                this[this.tableFRS_EI_IND.AFFIL_END_DATEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMAIL_ADDNull() {
                return this.IsNull(this.tableFRS_EI_IND.EMAIL_ADDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMAIL_ADDNull() {
                this[this.tableFRS_EI_IND.EMAIL_ADDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTEL_NUMNull() {
                return this.IsNull(this.tableFRS_EI_IND.TEL_NUMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTEL_NUMNull() {
                this[this.tableFRS_EI_IND.TEL_NUMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPH_EXTNull() {
                return this.IsNull(this.tableFRS_EI_IND.PH_EXTColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPH_EXTNull() {
                this[this.tableFRS_EI_IND.PH_EXTColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFAX_NUMNull() {
                return this.IsNull(this.tableFRS_EI_IND.FAX_NUMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFAX_NUMNull() {
                this[this.tableFRS_EI_IND.FAX_NUMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsALT_TEL_NUMNull() {
                return this.IsNull(this.tableFRS_EI_IND.ALT_TEL_NUMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetALT_TEL_NUMNull() {
                this[this.tableFRS_EI_IND.ALT_TEL_NUMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIND_FULL_NMNull() {
                return this.IsNull(this.tableFRS_EI_IND.IND_FULL_NMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIND_FULL_NMNull() {
                this[this.tableFRS_EI_IND.IND_FULL_NMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIND_TITLENull() {
                return this.IsNull(this.tableFRS_EI_IND.IND_TITLEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIND_TITLENull() {
                this[this.tableFRS_EI_IND.IND_TITLEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAIL_ADDNull() {
                return this.IsNull(this.tableFRS_EI_IND.MAIL_ADDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAIL_ADDNull() {
                this[this.tableFRS_EI_IND.MAIL_ADDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSUPPLEM_ADDNull() {
                return this.IsNull(this.tableFRS_EI_IND.SUPPLEM_ADDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSUPPLEM_ADDNull() {
                this[this.tableFRS_EI_IND.SUPPLEM_ADDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAIL_ADD_CITY_NMNull() {
                return this.IsNull(this.tableFRS_EI_IND.MAIL_ADD_CITY_NMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAIL_ADD_CITY_NMNull() {
                this[this.tableFRS_EI_IND.MAIL_ADD_CITY_NMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAIL_ADD_ST_CDNull() {
                return this.IsNull(this.tableFRS_EI_IND.MAIL_ADD_ST_CDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAIL_ADD_ST_CDNull() {
                this[this.tableFRS_EI_IND.MAIL_ADD_ST_CDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAIL_ADD_ST_NMNull() {
                return this.IsNull(this.tableFRS_EI_IND.MAIL_ADD_ST_NMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAIL_ADD_ST_NMNull() {
                this[this.tableFRS_EI_IND.MAIL_ADD_ST_NMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAIL_ADD_CO_NMNull() {
                return this.IsNull(this.tableFRS_EI_IND.MAIL_ADD_CO_NMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAIL_ADD_CO_NMNull() {
                this[this.tableFRS_EI_IND.MAIL_ADD_CO_NMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAIL_ADD_ZIP_CDNull() {
                return this.IsNull(this.tableFRS_EI_IND.MAIL_ADD_ZIP_CDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAIL_ADD_ZIP_CDNull() {
                this[this.tableFRS_EI_IND.MAIL_ADD_ZIP_CDColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class FRS_EI_NAICSRow : System.Data.DataRow {
            
            private FRS_EI_NAICSDataTable tableFRS_EI_NAICS;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FRS_EI_NAICSRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFRS_EI_NAICS = ((FRS_EI_NAICSDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ST_REC_IND {
                get {
                    return ((string)(this[this.tableFRS_EI_NAICS.ST_REC_INDColumn]));
                }
                set {
                    this[this.tableFRS_EI_NAICS.ST_REC_INDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ST_EI_IND {
                get {
                    return ((string)(this[this.tableFRS_EI_NAICS.ST_EI_INDColumn]));
                }
                set {
                    this[this.tableFRS_EI_NAICS.ST_EI_INDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NAICS_CD {
                get {
                    return ((string)(this[this.tableFRS_EI_NAICS.NAICS_CDColumn]));
                }
                set {
                    this[this.tableFRS_EI_NAICS.NAICS_CDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NAICS_PRIM_IND {
                get {
                    return ((string)(this[this.tableFRS_EI_NAICS.NAICS_PRIM_INDColumn]));
                }
                set {
                    this[this.tableFRS_EI_NAICS.NAICS_PRIM_INDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_EIRow FRS_EIRow {
                get {
                    return ((FRS_EIRow)(this.GetParentRow(this.Table.ParentRelations["FK_EINAICS_EI"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_EINAICS_EI"]);
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class FRS_EI_ORGRow : System.Data.DataRow {
            
            private FRS_EI_ORGDataTable tableFRS_EI_ORG;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FRS_EI_ORGRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFRS_EI_ORG = ((FRS_EI_ORGDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ST_REC_IND {
                get {
                    return ((string)(this[this.tableFRS_EI_ORG.ST_REC_INDColumn]));
                }
                set {
                    this[this.tableFRS_EI_ORG.ST_REC_INDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ST_EI_IND {
                get {
                    return ((string)(this[this.tableFRS_EI_ORG.ST_EI_INDColumn]));
                }
                set {
                    this[this.tableFRS_EI_ORG.ST_EI_INDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AFFIL_TYPE {
                get {
                    if (this.IsAFFIL_TYPENull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_EI_ORG.AFFIL_TYPEColumn]));
                    }
                }
                set {
                    this[this.tableFRS_EI_ORG.AFFIL_TYPEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AFFIL_START_DATE {
                get {
                    if (this.IsAFFIL_START_DATENull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_EI_ORG.AFFIL_START_DATEColumn]));
                    }
                }
                set {
                    this[this.tableFRS_EI_ORG.AFFIL_START_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AFFIL_END_DATE {
                get {
                    if (this.IsAFFIL_END_DATENull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_EI_ORG.AFFIL_END_DATEColumn]));
                    }
                }
                set {
                    this[this.tableFRS_EI_ORG.AFFIL_END_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMAIL_ADD {
                get {
                    if (this.IsEMAIL_ADDNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_EI_ORG.EMAIL_ADDColumn]));
                    }
                }
                set {
                    this[this.tableFRS_EI_ORG.EMAIL_ADDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TEL_NUM {
                get {
                    if (this.IsTEL_NUMNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_EI_ORG.TEL_NUMColumn]));
                    }
                }
                set {
                    this[this.tableFRS_EI_ORG.TEL_NUMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PH_EXT {
                get {
                    if (this.IsPH_EXTNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_EI_ORG.PH_EXTColumn]));
                    }
                }
                set {
                    this[this.tableFRS_EI_ORG.PH_EXTColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FAX_NUM {
                get {
                    if (this.IsFAX_NUMNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_EI_ORG.FAX_NUMColumn]));
                    }
                }
                set {
                    this[this.tableFRS_EI_ORG.FAX_NUMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ALT_TEL_NUM {
                get {
                    if (this.IsALT_TEL_NUMNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_EI_ORG.ALT_TEL_NUMColumn]));
                    }
                }
                set {
                    this[this.tableFRS_EI_ORG.ALT_TEL_NUMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ORG_FORMAL_NM {
                get {
                    if (this.IsORG_FORMAL_NMNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_EI_ORG.ORG_FORMAL_NMColumn]));
                    }
                }
                set {
                    this[this.tableFRS_EI_ORG.ORG_FORMAL_NMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ORG_DUNS_NUM {
                get {
                    if (this.IsORG_DUNS_NUMNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_EI_ORG.ORG_DUNS_NUMColumn]));
                    }
                }
                set {
                    this[this.tableFRS_EI_ORG.ORG_DUNS_NUMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ORG_TYPE {
                get {
                    if (this.IsORG_TYPENull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_EI_ORG.ORG_TYPEColumn]));
                    }
                }
                set {
                    this[this.tableFRS_EI_ORG.ORG_TYPEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMPLOYER_IND {
                get {
                    if (this.IsEMPLOYER_INDNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_EI_ORG.EMPLOYER_INDColumn]));
                    }
                }
                set {
                    this[this.tableFRS_EI_ORG.EMPLOYER_INDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ST_BUSINESS_IND {
                get {
                    if (this.IsST_BUSINESS_INDNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_EI_ORG.ST_BUSINESS_INDColumn]));
                    }
                }
                set {
                    this[this.tableFRS_EI_ORG.ST_BUSINESS_INDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ULT_PARENT_NM {
                get {
                    if (this.IsULT_PARENT_NMNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_EI_ORG.ULT_PARENT_NMColumn]));
                    }
                }
                set {
                    this[this.tableFRS_EI_ORG.ULT_PARENT_NMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ULT_PARENT_DUNS_NUM {
                get {
                    if (this.IsULT_PARENT_DUNS_NUMNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_EI_ORG.ULT_PARENT_DUNS_NUMColumn]));
                    }
                }
                set {
                    this[this.tableFRS_EI_ORG.ULT_PARENT_DUNS_NUMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAIL_ADD {
                get {
                    if (this.IsMAIL_ADDNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_EI_ORG.MAIL_ADDColumn]));
                    }
                }
                set {
                    this[this.tableFRS_EI_ORG.MAIL_ADDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SUPPLEM_ADD {
                get {
                    if (this.IsSUPPLEM_ADDNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_EI_ORG.SUPPLEM_ADDColumn]));
                    }
                }
                set {
                    this[this.tableFRS_EI_ORG.SUPPLEM_ADDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAIL_ADD_CITY_NM {
                get {
                    if (this.IsMAIL_ADD_CITY_NMNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_EI_ORG.MAIL_ADD_CITY_NMColumn]));
                    }
                }
                set {
                    this[this.tableFRS_EI_ORG.MAIL_ADD_CITY_NMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAIL_ADD_ST_CD {
                get {
                    if (this.IsMAIL_ADD_ST_CDNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_EI_ORG.MAIL_ADD_ST_CDColumn]));
                    }
                }
                set {
                    this[this.tableFRS_EI_ORG.MAIL_ADD_ST_CDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAIL_ADD_ST_NM {
                get {
                    if (this.IsMAIL_ADD_ST_NMNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_EI_ORG.MAIL_ADD_ST_NMColumn]));
                    }
                }
                set {
                    this[this.tableFRS_EI_ORG.MAIL_ADD_ST_NMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAIL_ADD_CO_NM {
                get {
                    if (this.IsMAIL_ADD_CO_NMNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_EI_ORG.MAIL_ADD_CO_NMColumn]));
                    }
                }
                set {
                    this[this.tableFRS_EI_ORG.MAIL_ADD_CO_NMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAIL_ADD_ZIP_CD {
                get {
                    if (this.IsMAIL_ADD_ZIP_CDNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_EI_ORG.MAIL_ADD_ZIP_CDColumn]));
                    }
                }
                set {
                    this[this.tableFRS_EI_ORG.MAIL_ADD_ZIP_CDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_EIRow FRS_EIRow {
                get {
                    return ((FRS_EIRow)(this.GetParentRow(this.Table.ParentRelations["FK_EIORG_EI"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_EIORG_EI"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAFFIL_TYPENull() {
                return this.IsNull(this.tableFRS_EI_ORG.AFFIL_TYPEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAFFIL_TYPENull() {
                this[this.tableFRS_EI_ORG.AFFIL_TYPEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAFFIL_START_DATENull() {
                return this.IsNull(this.tableFRS_EI_ORG.AFFIL_START_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAFFIL_START_DATENull() {
                this[this.tableFRS_EI_ORG.AFFIL_START_DATEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAFFIL_END_DATENull() {
                return this.IsNull(this.tableFRS_EI_ORG.AFFIL_END_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAFFIL_END_DATENull() {
                this[this.tableFRS_EI_ORG.AFFIL_END_DATEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMAIL_ADDNull() {
                return this.IsNull(this.tableFRS_EI_ORG.EMAIL_ADDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMAIL_ADDNull() {
                this[this.tableFRS_EI_ORG.EMAIL_ADDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTEL_NUMNull() {
                return this.IsNull(this.tableFRS_EI_ORG.TEL_NUMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTEL_NUMNull() {
                this[this.tableFRS_EI_ORG.TEL_NUMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPH_EXTNull() {
                return this.IsNull(this.tableFRS_EI_ORG.PH_EXTColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPH_EXTNull() {
                this[this.tableFRS_EI_ORG.PH_EXTColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFAX_NUMNull() {
                return this.IsNull(this.tableFRS_EI_ORG.FAX_NUMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFAX_NUMNull() {
                this[this.tableFRS_EI_ORG.FAX_NUMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsALT_TEL_NUMNull() {
                return this.IsNull(this.tableFRS_EI_ORG.ALT_TEL_NUMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetALT_TEL_NUMNull() {
                this[this.tableFRS_EI_ORG.ALT_TEL_NUMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsORG_FORMAL_NMNull() {
                return this.IsNull(this.tableFRS_EI_ORG.ORG_FORMAL_NMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetORG_FORMAL_NMNull() {
                this[this.tableFRS_EI_ORG.ORG_FORMAL_NMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsORG_DUNS_NUMNull() {
                return this.IsNull(this.tableFRS_EI_ORG.ORG_DUNS_NUMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetORG_DUNS_NUMNull() {
                this[this.tableFRS_EI_ORG.ORG_DUNS_NUMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsORG_TYPENull() {
                return this.IsNull(this.tableFRS_EI_ORG.ORG_TYPEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetORG_TYPENull() {
                this[this.tableFRS_EI_ORG.ORG_TYPEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMPLOYER_INDNull() {
                return this.IsNull(this.tableFRS_EI_ORG.EMPLOYER_INDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMPLOYER_INDNull() {
                this[this.tableFRS_EI_ORG.EMPLOYER_INDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsST_BUSINESS_INDNull() {
                return this.IsNull(this.tableFRS_EI_ORG.ST_BUSINESS_INDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetST_BUSINESS_INDNull() {
                this[this.tableFRS_EI_ORG.ST_BUSINESS_INDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsULT_PARENT_NMNull() {
                return this.IsNull(this.tableFRS_EI_ORG.ULT_PARENT_NMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetULT_PARENT_NMNull() {
                this[this.tableFRS_EI_ORG.ULT_PARENT_NMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsULT_PARENT_DUNS_NUMNull() {
                return this.IsNull(this.tableFRS_EI_ORG.ULT_PARENT_DUNS_NUMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetULT_PARENT_DUNS_NUMNull() {
                this[this.tableFRS_EI_ORG.ULT_PARENT_DUNS_NUMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAIL_ADDNull() {
                return this.IsNull(this.tableFRS_EI_ORG.MAIL_ADDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAIL_ADDNull() {
                this[this.tableFRS_EI_ORG.MAIL_ADDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSUPPLEM_ADDNull() {
                return this.IsNull(this.tableFRS_EI_ORG.SUPPLEM_ADDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSUPPLEM_ADDNull() {
                this[this.tableFRS_EI_ORG.SUPPLEM_ADDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAIL_ADD_CITY_NMNull() {
                return this.IsNull(this.tableFRS_EI_ORG.MAIL_ADD_CITY_NMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAIL_ADD_CITY_NMNull() {
                this[this.tableFRS_EI_ORG.MAIL_ADD_CITY_NMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAIL_ADD_ST_CDNull() {
                return this.IsNull(this.tableFRS_EI_ORG.MAIL_ADD_ST_CDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAIL_ADD_ST_CDNull() {
                this[this.tableFRS_EI_ORG.MAIL_ADD_ST_CDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAIL_ADD_ST_NMNull() {
                return this.IsNull(this.tableFRS_EI_ORG.MAIL_ADD_ST_NMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAIL_ADD_ST_NMNull() {
                this[this.tableFRS_EI_ORG.MAIL_ADD_ST_NMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAIL_ADD_CO_NMNull() {
                return this.IsNull(this.tableFRS_EI_ORG.MAIL_ADD_CO_NMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAIL_ADD_CO_NMNull() {
                this[this.tableFRS_EI_ORG.MAIL_ADD_CO_NMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAIL_ADD_ZIP_CDNull() {
                return this.IsNull(this.tableFRS_EI_ORG.MAIL_ADD_ZIP_CDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAIL_ADD_ZIP_CDNull() {
                this[this.tableFRS_EI_ORG.MAIL_ADD_ZIP_CDColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class FRS_EI_SICRow : System.Data.DataRow {
            
            private FRS_EI_SICDataTable tableFRS_EI_SIC;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FRS_EI_SICRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFRS_EI_SIC = ((FRS_EI_SICDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ST_REC_IND {
                get {
                    return ((string)(this[this.tableFRS_EI_SIC.ST_REC_INDColumn]));
                }
                set {
                    this[this.tableFRS_EI_SIC.ST_REC_INDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ST_EI_IND {
                get {
                    return ((string)(this[this.tableFRS_EI_SIC.ST_EI_INDColumn]));
                }
                set {
                    this[this.tableFRS_EI_SIC.ST_EI_INDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SIC_CD {
                get {
                    return ((string)(this[this.tableFRS_EI_SIC.SIC_CDColumn]));
                }
                set {
                    this[this.tableFRS_EI_SIC.SIC_CDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SIC_PRIM_IND {
                get {
                    return ((string)(this[this.tableFRS_EI_SIC.SIC_PRIM_INDColumn]));
                }
                set {
                    this[this.tableFRS_EI_SIC.SIC_PRIM_INDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_EIRow FRS_EIRow {
                get {
                    return ((FRS_EIRow)(this.GetParentRow(this.Table.ParentRelations["FK_EISIC_EI"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_EISIC_EI"]);
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class FRS_FACRow : System.Data.DataRow {
            
            private FRS_FACDataTable tableFRS_FAC;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FRS_FACRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFRS_FAC = ((FRS_FACDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ST_FAC_IND {
                get {
                    return ((string)(this[this.tableFRS_FAC.ST_FAC_INDColumn]));
                }
                set {
                    this[this.tableFRS_FAC.ST_FAC_INDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FAC_REG_IND {
                get {
                    if (this.IsFAC_REG_INDNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_FAC.FAC_REG_INDColumn]));
                    }
                }
                set {
                    this[this.tableFRS_FAC.FAC_REG_INDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FAC_SITENM {
                get {
                    return ((string)(this[this.tableFRS_FAC.FAC_SITENMColumn]));
                }
                set {
                    this[this.tableFRS_FAC.FAC_SITENMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FAC_SITETYPE_NM {
                get {
                    if (this.IsFAC_SITETYPE_NMNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_FAC.FAC_SITETYPE_NMColumn]));
                    }
                }
                set {
                    this[this.tableFRS_FAC.FAC_SITETYPE_NMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FED_FAC {
                get {
                    if (this.IsFED_FACNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_FAC.FED_FACColumn]));
                    }
                }
                set {
                    this[this.tableFRS_FAC.FED_FACColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TRIB_LAND {
                get {
                    if (this.IsTRIB_LANDNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_FAC.TRIB_LANDColumn]));
                    }
                }
                set {
                    this[this.tableFRS_FAC.TRIB_LANDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TRIB_LAND_NM {
                get {
                    if (this.IsTRIB_LAND_NMNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_FAC.TRIB_LAND_NMColumn]));
                    }
                }
                set {
                    this[this.tableFRS_FAC.TRIB_LAND_NMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CONG_DIST_NUM {
                get {
                    if (this.IsCONG_DIST_NUMNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_FAC.CONG_DIST_NUMColumn]));
                    }
                }
                set {
                    this[this.tableFRS_FAC.CONG_DIST_NUMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LEG_DIST_NUM {
                get {
                    if (this.IsLEG_DIST_NUMNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_FAC.LEG_DIST_NUMColumn]));
                    }
                }
                set {
                    this[this.tableFRS_FAC.LEG_DIST_NUMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HUC_CD {
                get {
                    if (this.IsHUC_CDNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_FAC.HUC_CDColumn]));
                    }
                }
                set {
                    this[this.tableFRS_FAC.HUC_CDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LOC_ADD {
                get {
                    if (this.IsLOC_ADDNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_FAC.LOC_ADDColumn]));
                    }
                }
                set {
                    this[this.tableFRS_FAC.LOC_ADDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SUPPLEM_LOC {
                get {
                    if (this.IsSUPPLEM_LOCNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_FAC.SUPPLEM_LOCColumn]));
                    }
                }
                set {
                    this[this.tableFRS_FAC.SUPPLEM_LOCColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LOCAL_NM {
                get {
                    if (this.IsLOCAL_NMNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_FAC.LOCAL_NMColumn]));
                    }
                }
                set {
                    this[this.tableFRS_FAC.LOCAL_NMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CNTY_ST_FIPS_CD {
                get {
                    if (this.IsCNTY_ST_FIPS_CDNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_FAC.CNTY_ST_FIPS_CDColumn]));
                    }
                }
                set {
                    this[this.tableFRS_FAC.CNTY_ST_FIPS_CDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CNTY_NM {
                get {
                    if (this.IsCNTY_NMNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_FAC.CNTY_NMColumn]));
                    }
                }
                set {
                    this[this.tableFRS_FAC.CNTY_NMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ST_CD {
                get {
                    if (this.IsST_CDNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_FAC.ST_CDColumn]));
                    }
                }
                set {
                    this[this.tableFRS_FAC.ST_CDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ST_NM {
                get {
                    if (this.IsST_NMNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_FAC.ST_NMColumn]));
                    }
                }
                set {
                    this[this.tableFRS_FAC.ST_NMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CO_NM {
                get {
                    if (this.IsCO_NMNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_FAC.CO_NMColumn]));
                    }
                }
                set {
                    this[this.tableFRS_FAC.CO_NMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LOC_ZIP_CD {
                get {
                    if (this.IsLOC_ZIP_CDNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_FAC.LOC_ZIP_CDColumn]));
                    }
                }
                set {
                    this[this.tableFRS_FAC.LOC_ZIP_CDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LOC_DESC {
                get {
                    if (this.IsLOC_DESCNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_FAC.LOC_DESCColumn]));
                    }
                }
                set {
                    this[this.tableFRS_FAC.LOC_DESCColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DATA_SRC_NM {
                get {
                    return ((string)(this[this.tableFRS_FAC.DATA_SRC_NMColumn]));
                }
                set {
                    this[this.tableFRS_FAC.DATA_SRC_NMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string REPORTED_DATE {
                get {
                    return ((string)(this[this.tableFRS_FAC.REPORTED_DATEColumn]));
                }
                set {
                    this[this.tableFRS_FAC.REPORTED_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ST_FAC_SYS_AC {
                get {
                    return ((string)(this[this.tableFRS_FAC.ST_FAC_SYS_ACColumn]));
                }
                set {
                    this[this.tableFRS_FAC.ST_FAC_SYS_ACColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFAC_REG_INDNull() {
                return this.IsNull(this.tableFRS_FAC.FAC_REG_INDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFAC_REG_INDNull() {
                this[this.tableFRS_FAC.FAC_REG_INDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFAC_SITETYPE_NMNull() {
                return this.IsNull(this.tableFRS_FAC.FAC_SITETYPE_NMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFAC_SITETYPE_NMNull() {
                this[this.tableFRS_FAC.FAC_SITETYPE_NMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFED_FACNull() {
                return this.IsNull(this.tableFRS_FAC.FED_FACColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFED_FACNull() {
                this[this.tableFRS_FAC.FED_FACColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTRIB_LANDNull() {
                return this.IsNull(this.tableFRS_FAC.TRIB_LANDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTRIB_LANDNull() {
                this[this.tableFRS_FAC.TRIB_LANDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTRIB_LAND_NMNull() {
                return this.IsNull(this.tableFRS_FAC.TRIB_LAND_NMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTRIB_LAND_NMNull() {
                this[this.tableFRS_FAC.TRIB_LAND_NMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCONG_DIST_NUMNull() {
                return this.IsNull(this.tableFRS_FAC.CONG_DIST_NUMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCONG_DIST_NUMNull() {
                this[this.tableFRS_FAC.CONG_DIST_NUMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLEG_DIST_NUMNull() {
                return this.IsNull(this.tableFRS_FAC.LEG_DIST_NUMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLEG_DIST_NUMNull() {
                this[this.tableFRS_FAC.LEG_DIST_NUMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHUC_CDNull() {
                return this.IsNull(this.tableFRS_FAC.HUC_CDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHUC_CDNull() {
                this[this.tableFRS_FAC.HUC_CDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLOC_ADDNull() {
                return this.IsNull(this.tableFRS_FAC.LOC_ADDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLOC_ADDNull() {
                this[this.tableFRS_FAC.LOC_ADDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSUPPLEM_LOCNull() {
                return this.IsNull(this.tableFRS_FAC.SUPPLEM_LOCColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSUPPLEM_LOCNull() {
                this[this.tableFRS_FAC.SUPPLEM_LOCColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLOCAL_NMNull() {
                return this.IsNull(this.tableFRS_FAC.LOCAL_NMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLOCAL_NMNull() {
                this[this.tableFRS_FAC.LOCAL_NMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCNTY_ST_FIPS_CDNull() {
                return this.IsNull(this.tableFRS_FAC.CNTY_ST_FIPS_CDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCNTY_ST_FIPS_CDNull() {
                this[this.tableFRS_FAC.CNTY_ST_FIPS_CDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCNTY_NMNull() {
                return this.IsNull(this.tableFRS_FAC.CNTY_NMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCNTY_NMNull() {
                this[this.tableFRS_FAC.CNTY_NMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsST_CDNull() {
                return this.IsNull(this.tableFRS_FAC.ST_CDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetST_CDNull() {
                this[this.tableFRS_FAC.ST_CDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsST_NMNull() {
                return this.IsNull(this.tableFRS_FAC.ST_NMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetST_NMNull() {
                this[this.tableFRS_FAC.ST_NMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCO_NMNull() {
                return this.IsNull(this.tableFRS_FAC.CO_NMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCO_NMNull() {
                this[this.tableFRS_FAC.CO_NMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLOC_ZIP_CDNull() {
                return this.IsNull(this.tableFRS_FAC.LOC_ZIP_CDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLOC_ZIP_CDNull() {
                this[this.tableFRS_FAC.LOC_ZIP_CDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLOC_DESCNull() {
                return this.IsNull(this.tableFRS_FAC.LOC_DESCColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLOC_DESCNull() {
                this[this.tableFRS_FAC.LOC_DESCColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_ADDRow[] GetFRS_ADDRows() {
                return ((FRS_ADDRow[])(base.GetChildRows(this.Table.ChildRelations["FK_ADD_FAC"])));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_GEORow[] GetFRS_GEORows() {
                return ((FRS_GEORow[])(base.GetChildRows(this.Table.ChildRelations["FK_GEO_FAC"])));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_ALT_NMRow[] GetFRS_ALT_NMRows() {
                return ((FRS_ALT_NMRow[])(base.GetChildRows(this.Table.ChildRelations["FK_ALT_NM_FAC"])));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_EIRow[] GetFRS_EIRows() {
                return ((FRS_EIRow[])(base.GetChildRows(this.Table.ChildRelations["FK_EI_FAC"])));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_FAC_INDRow[] GetFRS_FAC_INDRows() {
                return ((FRS_FAC_INDRow[])(base.GetChildRows(this.Table.ChildRelations["FK_FACIND_FAC"])));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_FAC_NAICSRow[] GetFRS_FAC_NAICSRows() {
                return ((FRS_FAC_NAICSRow[])(base.GetChildRows(this.Table.ChildRelations["FK_FACNAICS_FAC"])));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_FAC_ORGRow[] GetFRS_FAC_ORGRows() {
                return ((FRS_FAC_ORGRow[])(base.GetChildRows(this.Table.ChildRelations["FK_FACORG_FAC"])));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_FAC_SICRow[] GetFRS_FAC_SICRows() {
                return ((FRS_FAC_SICRow[])(base.GetChildRows(this.Table.ChildRelations["FK_FACSIC_FAC"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class FRS_FAC_INDRow : System.Data.DataRow {
            
            private FRS_FAC_INDDataTable tableFRS_FAC_IND;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FRS_FAC_INDRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFRS_FAC_IND = ((FRS_FAC_INDDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ST_REC_IND {
                get {
                    return ((string)(this[this.tableFRS_FAC_IND.ST_REC_INDColumn]));
                }
                set {
                    this[this.tableFRS_FAC_IND.ST_REC_INDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ST_FAC_IND {
                get {
                    return ((string)(this[this.tableFRS_FAC_IND.ST_FAC_INDColumn]));
                }
                set {
                    this[this.tableFRS_FAC_IND.ST_FAC_INDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AFFIL_TYPE {
                get {
                    if (this.IsAFFIL_TYPENull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_FAC_IND.AFFIL_TYPEColumn]));
                    }
                }
                set {
                    this[this.tableFRS_FAC_IND.AFFIL_TYPEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AFFIL_START_DATE {
                get {
                    if (this.IsAFFIL_START_DATENull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_FAC_IND.AFFIL_START_DATEColumn]));
                    }
                }
                set {
                    this[this.tableFRS_FAC_IND.AFFIL_START_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AFFIL_END_DATE {
                get {
                    if (this.IsAFFIL_END_DATENull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_FAC_IND.AFFIL_END_DATEColumn]));
                    }
                }
                set {
                    this[this.tableFRS_FAC_IND.AFFIL_END_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMAIL_ADD {
                get {
                    if (this.IsEMAIL_ADDNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_FAC_IND.EMAIL_ADDColumn]));
                    }
                }
                set {
                    this[this.tableFRS_FAC_IND.EMAIL_ADDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TEL_NUM {
                get {
                    if (this.IsTEL_NUMNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_FAC_IND.TEL_NUMColumn]));
                    }
                }
                set {
                    this[this.tableFRS_FAC_IND.TEL_NUMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PH_EXT {
                get {
                    if (this.IsPH_EXTNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_FAC_IND.PH_EXTColumn]));
                    }
                }
                set {
                    this[this.tableFRS_FAC_IND.PH_EXTColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FAX_NUM {
                get {
                    if (this.IsFAX_NUMNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_FAC_IND.FAX_NUMColumn]));
                    }
                }
                set {
                    this[this.tableFRS_FAC_IND.FAX_NUMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ALT_TEL_NUM {
                get {
                    if (this.IsALT_TEL_NUMNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_FAC_IND.ALT_TEL_NUMColumn]));
                    }
                }
                set {
                    this[this.tableFRS_FAC_IND.ALT_TEL_NUMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IND_FULL_NM {
                get {
                    if (this.IsIND_FULL_NMNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_FAC_IND.IND_FULL_NMColumn]));
                    }
                }
                set {
                    this[this.tableFRS_FAC_IND.IND_FULL_NMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IND_TITLE {
                get {
                    if (this.IsIND_TITLENull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_FAC_IND.IND_TITLEColumn]));
                    }
                }
                set {
                    this[this.tableFRS_FAC_IND.IND_TITLEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAIL_ADD {
                get {
                    if (this.IsMAIL_ADDNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_FAC_IND.MAIL_ADDColumn]));
                    }
                }
                set {
                    this[this.tableFRS_FAC_IND.MAIL_ADDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SUPPLEM_ADD {
                get {
                    if (this.IsSUPPLEM_ADDNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_FAC_IND.SUPPLEM_ADDColumn]));
                    }
                }
                set {
                    this[this.tableFRS_FAC_IND.SUPPLEM_ADDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAIL_ADD_CITY_NM {
                get {
                    if (this.IsMAIL_ADD_CITY_NMNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_FAC_IND.MAIL_ADD_CITY_NMColumn]));
                    }
                }
                set {
                    this[this.tableFRS_FAC_IND.MAIL_ADD_CITY_NMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAIL_ADD_ST_CD {
                get {
                    if (this.IsMAIL_ADD_ST_CDNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_FAC_IND.MAIL_ADD_ST_CDColumn]));
                    }
                }
                set {
                    this[this.tableFRS_FAC_IND.MAIL_ADD_ST_CDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAIL_ADD_ST_NM {
                get {
                    if (this.IsMAIL_ADD_ST_NMNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_FAC_IND.MAIL_ADD_ST_NMColumn]));
                    }
                }
                set {
                    this[this.tableFRS_FAC_IND.MAIL_ADD_ST_NMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAIL_ADD_CO_NM {
                get {
                    if (this.IsMAIL_ADD_CO_NMNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_FAC_IND.MAIL_ADD_CO_NMColumn]));
                    }
                }
                set {
                    this[this.tableFRS_FAC_IND.MAIL_ADD_CO_NMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAIL_ADD_ZIP_CD {
                get {
                    if (this.IsMAIL_ADD_ZIP_CDNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_FAC_IND.MAIL_ADD_ZIP_CDColumn]));
                    }
                }
                set {
                    this[this.tableFRS_FAC_IND.MAIL_ADD_ZIP_CDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_FACRow FRS_FACRow {
                get {
                    return ((FRS_FACRow)(this.GetParentRow(this.Table.ParentRelations["FK_FACIND_FAC"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_FACIND_FAC"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAFFIL_TYPENull() {
                return this.IsNull(this.tableFRS_FAC_IND.AFFIL_TYPEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAFFIL_TYPENull() {
                this[this.tableFRS_FAC_IND.AFFIL_TYPEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAFFIL_START_DATENull() {
                return this.IsNull(this.tableFRS_FAC_IND.AFFIL_START_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAFFIL_START_DATENull() {
                this[this.tableFRS_FAC_IND.AFFIL_START_DATEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAFFIL_END_DATENull() {
                return this.IsNull(this.tableFRS_FAC_IND.AFFIL_END_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAFFIL_END_DATENull() {
                this[this.tableFRS_FAC_IND.AFFIL_END_DATEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMAIL_ADDNull() {
                return this.IsNull(this.tableFRS_FAC_IND.EMAIL_ADDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMAIL_ADDNull() {
                this[this.tableFRS_FAC_IND.EMAIL_ADDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTEL_NUMNull() {
                return this.IsNull(this.tableFRS_FAC_IND.TEL_NUMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTEL_NUMNull() {
                this[this.tableFRS_FAC_IND.TEL_NUMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPH_EXTNull() {
                return this.IsNull(this.tableFRS_FAC_IND.PH_EXTColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPH_EXTNull() {
                this[this.tableFRS_FAC_IND.PH_EXTColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFAX_NUMNull() {
                return this.IsNull(this.tableFRS_FAC_IND.FAX_NUMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFAX_NUMNull() {
                this[this.tableFRS_FAC_IND.FAX_NUMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsALT_TEL_NUMNull() {
                return this.IsNull(this.tableFRS_FAC_IND.ALT_TEL_NUMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetALT_TEL_NUMNull() {
                this[this.tableFRS_FAC_IND.ALT_TEL_NUMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIND_FULL_NMNull() {
                return this.IsNull(this.tableFRS_FAC_IND.IND_FULL_NMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIND_FULL_NMNull() {
                this[this.tableFRS_FAC_IND.IND_FULL_NMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIND_TITLENull() {
                return this.IsNull(this.tableFRS_FAC_IND.IND_TITLEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIND_TITLENull() {
                this[this.tableFRS_FAC_IND.IND_TITLEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAIL_ADDNull() {
                return this.IsNull(this.tableFRS_FAC_IND.MAIL_ADDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAIL_ADDNull() {
                this[this.tableFRS_FAC_IND.MAIL_ADDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSUPPLEM_ADDNull() {
                return this.IsNull(this.tableFRS_FAC_IND.SUPPLEM_ADDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSUPPLEM_ADDNull() {
                this[this.tableFRS_FAC_IND.SUPPLEM_ADDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAIL_ADD_CITY_NMNull() {
                return this.IsNull(this.tableFRS_FAC_IND.MAIL_ADD_CITY_NMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAIL_ADD_CITY_NMNull() {
                this[this.tableFRS_FAC_IND.MAIL_ADD_CITY_NMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAIL_ADD_ST_CDNull() {
                return this.IsNull(this.tableFRS_FAC_IND.MAIL_ADD_ST_CDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAIL_ADD_ST_CDNull() {
                this[this.tableFRS_FAC_IND.MAIL_ADD_ST_CDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAIL_ADD_ST_NMNull() {
                return this.IsNull(this.tableFRS_FAC_IND.MAIL_ADD_ST_NMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAIL_ADD_ST_NMNull() {
                this[this.tableFRS_FAC_IND.MAIL_ADD_ST_NMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAIL_ADD_CO_NMNull() {
                return this.IsNull(this.tableFRS_FAC_IND.MAIL_ADD_CO_NMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAIL_ADD_CO_NMNull() {
                this[this.tableFRS_FAC_IND.MAIL_ADD_CO_NMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAIL_ADD_ZIP_CDNull() {
                return this.IsNull(this.tableFRS_FAC_IND.MAIL_ADD_ZIP_CDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAIL_ADD_ZIP_CDNull() {
                this[this.tableFRS_FAC_IND.MAIL_ADD_ZIP_CDColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class FRS_FAC_NAICSRow : System.Data.DataRow {
            
            private FRS_FAC_NAICSDataTable tableFRS_FAC_NAICS;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FRS_FAC_NAICSRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFRS_FAC_NAICS = ((FRS_FAC_NAICSDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ST_REC_IND {
                get {
                    return ((string)(this[this.tableFRS_FAC_NAICS.ST_REC_INDColumn]));
                }
                set {
                    this[this.tableFRS_FAC_NAICS.ST_REC_INDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ST_FAC_IND {
                get {
                    return ((string)(this[this.tableFRS_FAC_NAICS.ST_FAC_INDColumn]));
                }
                set {
                    this[this.tableFRS_FAC_NAICS.ST_FAC_INDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NAICS_CD {
                get {
                    return ((string)(this[this.tableFRS_FAC_NAICS.NAICS_CDColumn]));
                }
                set {
                    this[this.tableFRS_FAC_NAICS.NAICS_CDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NAICS_PRIM_IND {
                get {
                    return ((string)(this[this.tableFRS_FAC_NAICS.NAICS_PRIM_INDColumn]));
                }
                set {
                    this[this.tableFRS_FAC_NAICS.NAICS_PRIM_INDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_FACRow FRS_FACRow {
                get {
                    return ((FRS_FACRow)(this.GetParentRow(this.Table.ParentRelations["FK_FACNAICS_FAC"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_FACNAICS_FAC"]);
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class FRS_FAC_ORGRow : System.Data.DataRow {
            
            private FRS_FAC_ORGDataTable tableFRS_FAC_ORG;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FRS_FAC_ORGRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFRS_FAC_ORG = ((FRS_FAC_ORGDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ST_REC_IND {
                get {
                    return ((string)(this[this.tableFRS_FAC_ORG.ST_REC_INDColumn]));
                }
                set {
                    this[this.tableFRS_FAC_ORG.ST_REC_INDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ST_FAC_IND {
                get {
                    return ((string)(this[this.tableFRS_FAC_ORG.ST_FAC_INDColumn]));
                }
                set {
                    this[this.tableFRS_FAC_ORG.ST_FAC_INDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AFFIL_TYPE {
                get {
                    if (this.IsAFFIL_TYPENull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_FAC_ORG.AFFIL_TYPEColumn]));
                    }
                }
                set {
                    this[this.tableFRS_FAC_ORG.AFFIL_TYPEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AFFIL_START_DATE {
                get {
                    if (this.IsAFFIL_START_DATENull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_FAC_ORG.AFFIL_START_DATEColumn]));
                    }
                }
                set {
                    this[this.tableFRS_FAC_ORG.AFFIL_START_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AFFIL_END_DATE {
                get {
                    if (this.IsAFFIL_END_DATENull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_FAC_ORG.AFFIL_END_DATEColumn]));
                    }
                }
                set {
                    this[this.tableFRS_FAC_ORG.AFFIL_END_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMAIL_ADD {
                get {
                    if (this.IsEMAIL_ADDNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_FAC_ORG.EMAIL_ADDColumn]));
                    }
                }
                set {
                    this[this.tableFRS_FAC_ORG.EMAIL_ADDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TEL_NUM {
                get {
                    if (this.IsTEL_NUMNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_FAC_ORG.TEL_NUMColumn]));
                    }
                }
                set {
                    this[this.tableFRS_FAC_ORG.TEL_NUMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PH_EXT {
                get {
                    if (this.IsPH_EXTNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_FAC_ORG.PH_EXTColumn]));
                    }
                }
                set {
                    this[this.tableFRS_FAC_ORG.PH_EXTColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FAX_NUM {
                get {
                    if (this.IsFAX_NUMNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_FAC_ORG.FAX_NUMColumn]));
                    }
                }
                set {
                    this[this.tableFRS_FAC_ORG.FAX_NUMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ALT_TEL_NUM {
                get {
                    if (this.IsALT_TEL_NUMNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_FAC_ORG.ALT_TEL_NUMColumn]));
                    }
                }
                set {
                    this[this.tableFRS_FAC_ORG.ALT_TEL_NUMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ORG_FORMAL_NM {
                get {
                    if (this.IsORG_FORMAL_NMNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_FAC_ORG.ORG_FORMAL_NMColumn]));
                    }
                }
                set {
                    this[this.tableFRS_FAC_ORG.ORG_FORMAL_NMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ORG_DUNS_NUM {
                get {
                    if (this.IsORG_DUNS_NUMNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_FAC_ORG.ORG_DUNS_NUMColumn]));
                    }
                }
                set {
                    this[this.tableFRS_FAC_ORG.ORG_DUNS_NUMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ORG_TYPE {
                get {
                    if (this.IsORG_TYPENull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_FAC_ORG.ORG_TYPEColumn]));
                    }
                }
                set {
                    this[this.tableFRS_FAC_ORG.ORG_TYPEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMPLOYER_IND {
                get {
                    if (this.IsEMPLOYER_INDNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_FAC_ORG.EMPLOYER_INDColumn]));
                    }
                }
                set {
                    this[this.tableFRS_FAC_ORG.EMPLOYER_INDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ST_BUSINESS_IND {
                get {
                    if (this.IsST_BUSINESS_INDNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_FAC_ORG.ST_BUSINESS_INDColumn]));
                    }
                }
                set {
                    this[this.tableFRS_FAC_ORG.ST_BUSINESS_INDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ULT_PARENT_NM {
                get {
                    if (this.IsULT_PARENT_NMNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_FAC_ORG.ULT_PARENT_NMColumn]));
                    }
                }
                set {
                    this[this.tableFRS_FAC_ORG.ULT_PARENT_NMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ULT_PARENT_DUNS_NUM {
                get {
                    if (this.IsULT_PARENT_DUNS_NUMNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_FAC_ORG.ULT_PARENT_DUNS_NUMColumn]));
                    }
                }
                set {
                    this[this.tableFRS_FAC_ORG.ULT_PARENT_DUNS_NUMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAIL_ADD {
                get {
                    if (this.IsMAIL_ADDNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_FAC_ORG.MAIL_ADDColumn]));
                    }
                }
                set {
                    this[this.tableFRS_FAC_ORG.MAIL_ADDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SUPPLEM_ADD {
                get {
                    if (this.IsSUPPLEM_ADDNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_FAC_ORG.SUPPLEM_ADDColumn]));
                    }
                }
                set {
                    this[this.tableFRS_FAC_ORG.SUPPLEM_ADDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAIL_ADD_CITY_NM {
                get {
                    if (this.IsMAIL_ADD_CITY_NMNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_FAC_ORG.MAIL_ADD_CITY_NMColumn]));
                    }
                }
                set {
                    this[this.tableFRS_FAC_ORG.MAIL_ADD_CITY_NMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAIL_ADD_ST_CD {
                get {
                    if (this.IsMAIL_ADD_ST_CDNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_FAC_ORG.MAIL_ADD_ST_CDColumn]));
                    }
                }
                set {
                    this[this.tableFRS_FAC_ORG.MAIL_ADD_ST_CDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAIL_ADD_ST_NM {
                get {
                    if (this.IsMAIL_ADD_ST_NMNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_FAC_ORG.MAIL_ADD_ST_NMColumn]));
                    }
                }
                set {
                    this[this.tableFRS_FAC_ORG.MAIL_ADD_ST_NMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAIL_ADD_CO_NM {
                get {
                    if (this.IsMAIL_ADD_CO_NMNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_FAC_ORG.MAIL_ADD_CO_NMColumn]));
                    }
                }
                set {
                    this[this.tableFRS_FAC_ORG.MAIL_ADD_CO_NMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAIL_ADD_ZIP_CD {
                get {
                    if (this.IsMAIL_ADD_ZIP_CDNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFRS_FAC_ORG.MAIL_ADD_ZIP_CDColumn]));
                    }
                }
                set {
                    this[this.tableFRS_FAC_ORG.MAIL_ADD_ZIP_CDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_FACRow FRS_FACRow {
                get {
                    return ((FRS_FACRow)(this.GetParentRow(this.Table.ParentRelations["FK_FACORG_FAC"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_FACORG_FAC"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAFFIL_TYPENull() {
                return this.IsNull(this.tableFRS_FAC_ORG.AFFIL_TYPEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAFFIL_TYPENull() {
                this[this.tableFRS_FAC_ORG.AFFIL_TYPEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAFFIL_START_DATENull() {
                return this.IsNull(this.tableFRS_FAC_ORG.AFFIL_START_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAFFIL_START_DATENull() {
                this[this.tableFRS_FAC_ORG.AFFIL_START_DATEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAFFIL_END_DATENull() {
                return this.IsNull(this.tableFRS_FAC_ORG.AFFIL_END_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAFFIL_END_DATENull() {
                this[this.tableFRS_FAC_ORG.AFFIL_END_DATEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMAIL_ADDNull() {
                return this.IsNull(this.tableFRS_FAC_ORG.EMAIL_ADDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMAIL_ADDNull() {
                this[this.tableFRS_FAC_ORG.EMAIL_ADDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTEL_NUMNull() {
                return this.IsNull(this.tableFRS_FAC_ORG.TEL_NUMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTEL_NUMNull() {
                this[this.tableFRS_FAC_ORG.TEL_NUMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPH_EXTNull() {
                return this.IsNull(this.tableFRS_FAC_ORG.PH_EXTColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPH_EXTNull() {
                this[this.tableFRS_FAC_ORG.PH_EXTColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFAX_NUMNull() {
                return this.IsNull(this.tableFRS_FAC_ORG.FAX_NUMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFAX_NUMNull() {
                this[this.tableFRS_FAC_ORG.FAX_NUMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsALT_TEL_NUMNull() {
                return this.IsNull(this.tableFRS_FAC_ORG.ALT_TEL_NUMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetALT_TEL_NUMNull() {
                this[this.tableFRS_FAC_ORG.ALT_TEL_NUMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsORG_FORMAL_NMNull() {
                return this.IsNull(this.tableFRS_FAC_ORG.ORG_FORMAL_NMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetORG_FORMAL_NMNull() {
                this[this.tableFRS_FAC_ORG.ORG_FORMAL_NMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsORG_DUNS_NUMNull() {
                return this.IsNull(this.tableFRS_FAC_ORG.ORG_DUNS_NUMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetORG_DUNS_NUMNull() {
                this[this.tableFRS_FAC_ORG.ORG_DUNS_NUMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsORG_TYPENull() {
                return this.IsNull(this.tableFRS_FAC_ORG.ORG_TYPEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetORG_TYPENull() {
                this[this.tableFRS_FAC_ORG.ORG_TYPEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMPLOYER_INDNull() {
                return this.IsNull(this.tableFRS_FAC_ORG.EMPLOYER_INDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMPLOYER_INDNull() {
                this[this.tableFRS_FAC_ORG.EMPLOYER_INDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsST_BUSINESS_INDNull() {
                return this.IsNull(this.tableFRS_FAC_ORG.ST_BUSINESS_INDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetST_BUSINESS_INDNull() {
                this[this.tableFRS_FAC_ORG.ST_BUSINESS_INDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsULT_PARENT_NMNull() {
                return this.IsNull(this.tableFRS_FAC_ORG.ULT_PARENT_NMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetULT_PARENT_NMNull() {
                this[this.tableFRS_FAC_ORG.ULT_PARENT_NMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsULT_PARENT_DUNS_NUMNull() {
                return this.IsNull(this.tableFRS_FAC_ORG.ULT_PARENT_DUNS_NUMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetULT_PARENT_DUNS_NUMNull() {
                this[this.tableFRS_FAC_ORG.ULT_PARENT_DUNS_NUMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAIL_ADDNull() {
                return this.IsNull(this.tableFRS_FAC_ORG.MAIL_ADDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAIL_ADDNull() {
                this[this.tableFRS_FAC_ORG.MAIL_ADDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSUPPLEM_ADDNull() {
                return this.IsNull(this.tableFRS_FAC_ORG.SUPPLEM_ADDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSUPPLEM_ADDNull() {
                this[this.tableFRS_FAC_ORG.SUPPLEM_ADDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAIL_ADD_CITY_NMNull() {
                return this.IsNull(this.tableFRS_FAC_ORG.MAIL_ADD_CITY_NMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAIL_ADD_CITY_NMNull() {
                this[this.tableFRS_FAC_ORG.MAIL_ADD_CITY_NMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAIL_ADD_ST_CDNull() {
                return this.IsNull(this.tableFRS_FAC_ORG.MAIL_ADD_ST_CDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAIL_ADD_ST_CDNull() {
                this[this.tableFRS_FAC_ORG.MAIL_ADD_ST_CDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAIL_ADD_ST_NMNull() {
                return this.IsNull(this.tableFRS_FAC_ORG.MAIL_ADD_ST_NMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAIL_ADD_ST_NMNull() {
                this[this.tableFRS_FAC_ORG.MAIL_ADD_ST_NMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAIL_ADD_CO_NMNull() {
                return this.IsNull(this.tableFRS_FAC_ORG.MAIL_ADD_CO_NMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAIL_ADD_CO_NMNull() {
                this[this.tableFRS_FAC_ORG.MAIL_ADD_CO_NMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAIL_ADD_ZIP_CDNull() {
                return this.IsNull(this.tableFRS_FAC_ORG.MAIL_ADD_ZIP_CDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAIL_ADD_ZIP_CDNull() {
                this[this.tableFRS_FAC_ORG.MAIL_ADD_ZIP_CDColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class FRS_FAC_SICRow : System.Data.DataRow {
            
            private FRS_FAC_SICDataTable tableFRS_FAC_SIC;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FRS_FAC_SICRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFRS_FAC_SIC = ((FRS_FAC_SICDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ST_REC_IND {
                get {
                    return ((string)(this[this.tableFRS_FAC_SIC.ST_REC_INDColumn]));
                }
                set {
                    this[this.tableFRS_FAC_SIC.ST_REC_INDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ST_FAC_IND {
                get {
                    return ((string)(this[this.tableFRS_FAC_SIC.ST_FAC_INDColumn]));
                }
                set {
                    this[this.tableFRS_FAC_SIC.ST_FAC_INDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SIC_CD {
                get {
                    return ((string)(this[this.tableFRS_FAC_SIC.SIC_CDColumn]));
                }
                set {
                    this[this.tableFRS_FAC_SIC.SIC_CDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SIC_PRIM_IND {
                get {
                    return ((string)(this[this.tableFRS_FAC_SIC.SIC_PRIM_INDColumn]));
                }
                set {
                    this[this.tableFRS_FAC_SIC.SIC_PRIM_INDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_FACRow FRS_FACRow {
                get {
                    return ((FRS_FACRow)(this.GetParentRow(this.Table.ParentRelations["FK_FACSIC_FAC"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_FACSIC_FAC"]);
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class FRS_FAC_DELRow : System.Data.DataRow {
            
            private FRS_FAC_DELDataTable tableFRS_FAC_DEL;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FRS_FAC_DELRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFRS_FAC_DEL = ((FRS_FAC_DELDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ST_FAC_IND {
                get {
                    return ((string)(this[this.tableFRS_FAC_DEL.ST_FAC_INDColumn]));
                }
                set {
                    this[this.tableFRS_FAC_DEL.ST_FAC_INDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DELETION_DATE {
                get {
                    return ((string)(this[this.tableFRS_FAC_DEL.DELETION_DATEColumn]));
                }
                set {
                    this[this.tableFRS_FAC_DEL.DELETION_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ST_FAC_SYS_AC {
                get {
                    return ((string)(this[this.tableFRS_FAC_DEL.ST_FAC_SYS_ACColumn]));
                }
                set {
                    this[this.tableFRS_FAC_DEL.ST_FAC_SYS_ACColumn] = value;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class FRS_ADDRowChangeEvent : System.EventArgs {
            
            private FRS_ADDRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_ADDRowChangeEvent(FRS_ADDRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_ADDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class FRS_GEORowChangeEvent : System.EventArgs {
            
            private FRS_GEORow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_GEORowChangeEvent(FRS_GEORow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_GEORow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class FRS_ALT_NMRowChangeEvent : System.EventArgs {
            
            private FRS_ALT_NMRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_ALT_NMRowChangeEvent(FRS_ALT_NMRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_ALT_NMRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class FRS_EIRowChangeEvent : System.EventArgs {
            
            private FRS_EIRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_EIRowChangeEvent(FRS_EIRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_EIRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class FRS_EI_INDRowChangeEvent : System.EventArgs {
            
            private FRS_EI_INDRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_EI_INDRowChangeEvent(FRS_EI_INDRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_EI_INDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class FRS_EI_NAICSRowChangeEvent : System.EventArgs {
            
            private FRS_EI_NAICSRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_EI_NAICSRowChangeEvent(FRS_EI_NAICSRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_EI_NAICSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class FRS_EI_ORGRowChangeEvent : System.EventArgs {
            
            private FRS_EI_ORGRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_EI_ORGRowChangeEvent(FRS_EI_ORGRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_EI_ORGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class FRS_EI_SICRowChangeEvent : System.EventArgs {
            
            private FRS_EI_SICRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_EI_SICRowChangeEvent(FRS_EI_SICRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_EI_SICRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class FRS_FACRowChangeEvent : System.EventArgs {
            
            private FRS_FACRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_FACRowChangeEvent(FRS_FACRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_FACRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class FRS_FAC_INDRowChangeEvent : System.EventArgs {
            
            private FRS_FAC_INDRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_FAC_INDRowChangeEvent(FRS_FAC_INDRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_FAC_INDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class FRS_FAC_NAICSRowChangeEvent : System.EventArgs {
            
            private FRS_FAC_NAICSRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_FAC_NAICSRowChangeEvent(FRS_FAC_NAICSRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_FAC_NAICSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class FRS_FAC_ORGRowChangeEvent : System.EventArgs {
            
            private FRS_FAC_ORGRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_FAC_ORGRowChangeEvent(FRS_FAC_ORGRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_FAC_ORGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class FRS_FAC_SICRowChangeEvent : System.EventArgs {
            
            private FRS_FAC_SICRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_FAC_SICRowChangeEvent(FRS_FAC_SICRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_FAC_SICRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class FRS_FAC_DELRowChangeEvent : System.EventArgs {
            
            private FRS_FAC_DELRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_FAC_DELRowChangeEvent(FRS_FAC_DELRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FRS_FAC_DELRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591