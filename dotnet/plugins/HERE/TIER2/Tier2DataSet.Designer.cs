//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3082
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Windsor.Node2008.WNOSPlugin.HERE.TIER2 {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("Tier2DataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class Tier2DataSet : global::System.Data.DataSet {
        
        private T2_SUBMISSIONDataTable tableT2_SUBMISSION;
        
        private T2_CHEM_INVDataTable tableT2_CHEM_INV;
        
        private T2_CHEM_INV_DTLSDataTable tableT2_CHEM_INV_DTLS;
        
        private T2_CHEM_INV_HAZDataTable tableT2_CHEM_INV_HAZ;
        
        private T2_CHEM_INV_HLTHDataTable tableT2_CHEM_INV_HLTH;
        
        private T2_CHEM_INV_PHYSDataTable tableT2_CHEM_INV_PHYS;
        
        private T2_CHEM_LOCDataTable tableT2_CHEM_LOC;
        
        private T2_CHEM_MIXDataTable tableT2_CHEM_MIX;
        
        private T2_FAC_DUNDB_IDDataTable tableT2_FAC_DUNDB_ID;
        
        private T2_FAC_GEODataTable tableT2_FAC_GEO;
        
        private T2_FAC_INDDataTable tableT2_FAC_IND;
        
        private T2_FAC_IND_EMAILDataTable tableT2_FAC_IND_EMAIL;
        
        private T2_FAC_IND_PHONEDataTable tableT2_FAC_IND_PHONE;
        
        private T2_FAC_IND_TYPEDataTable tableT2_FAC_IND_TYPE;
        
        private T2_FAC_NAICSDataTable tableT2_FAC_NAICS;
        
        private T2_FAC_NPDES_IDDataTable tableT2_FAC_NPDES_ID;
        
        private T2_FAC_RCRA_IDDataTable tableT2_FAC_RCRA_ID;
        
        private T2_FAC_SICDataTable tableT2_FAC_SIC;
        
        private T2_FAC_SITEDataTable tableT2_FAC_SITE;
        
        private T2_FAC_UIC_IDDataTable tableT2_FAC_UIC_ID;
        
        private T2_REPORTDataTable tableT2_REPORT;
        
        private global::System.Data.DataRelation relationFK_T2_CHEM_INV_T2_FAC_SITE;
        
        private global::System.Data.DataRelation relationFK_T2_CHEM_INV_DTLS_T2_CHEM_INV;
        
        private global::System.Data.DataRelation relationFK_T2_CHEM_INV_HAZ_T2_CHEM_INV;
        
        private global::System.Data.DataRelation relationFK_T2_CHEM_INV_HLTH_T2_CHEM_INV;
        
        private global::System.Data.DataRelation relationFK_T2_CHEM_INV_PHYS_T2_CHEM_INV;
        
        private global::System.Data.DataRelation relationFK_T2_CHEM_LOC_T2_CHEM_INV;
        
        private global::System.Data.DataRelation relationFK_T2_CHEM_MIX_T2_CHEM_INV;
        
        private global::System.Data.DataRelation relationFK_T2_FAC_DUNDB_ID_T2_FAC_SITE;
        
        private global::System.Data.DataRelation relationFK_T2_FAC_GEO_T2_FAC_SITE;
        
        private global::System.Data.DataRelation relationFK_T2_FAC_IND_T2_FAC_SITE;
        
        private global::System.Data.DataRelation relationFK_T2_FAC_IND_EMAIL_T2_FAC_IND;
        
        private global::System.Data.DataRelation relationFK_T2_FAC_IND_PHONE_T2_FAC_IND;
        
        private global::System.Data.DataRelation relationFK_T2_FAC_IND_TYPE_T2_FAC_IND;
        
        private global::System.Data.DataRelation relationFK_T2_FAC_NAICS_T2_FAC_SITE;
        
        private global::System.Data.DataRelation relationFK_T2_FAC_NPDES_ID_T2_FAC_SITE;
        
        private global::System.Data.DataRelation relationFK_T2_FAC_RCRA_ID_T2_FAC_SITE;
        
        private global::System.Data.DataRelation relationFK_T2_FAC_SIC_T2_FAC_SITE;
        
        private global::System.Data.DataRelation relationFK_T2_FAC_SITE_T2_REPORT;
        
        private global::System.Data.DataRelation relationFK_T2_FAC_UIC_ID_T2_FAC_SITE;
        
        private global::System.Data.DataRelation relationFK_T2_REPORT_T2_SUBMISSION;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Tier2DataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected Tier2DataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["T2_SUBMISSION"] != null)) {
                    base.Tables.Add(new T2_SUBMISSIONDataTable(ds.Tables["T2_SUBMISSION"]));
                }
                if ((ds.Tables["T2_CHEM_INV"] != null)) {
                    base.Tables.Add(new T2_CHEM_INVDataTable(ds.Tables["T2_CHEM_INV"]));
                }
                if ((ds.Tables["T2_CHEM_INV_DTLS"] != null)) {
                    base.Tables.Add(new T2_CHEM_INV_DTLSDataTable(ds.Tables["T2_CHEM_INV_DTLS"]));
                }
                if ((ds.Tables["T2_CHEM_INV_HAZ"] != null)) {
                    base.Tables.Add(new T2_CHEM_INV_HAZDataTable(ds.Tables["T2_CHEM_INV_HAZ"]));
                }
                if ((ds.Tables["T2_CHEM_INV_HLTH"] != null)) {
                    base.Tables.Add(new T2_CHEM_INV_HLTHDataTable(ds.Tables["T2_CHEM_INV_HLTH"]));
                }
                if ((ds.Tables["T2_CHEM_INV_PHYS"] != null)) {
                    base.Tables.Add(new T2_CHEM_INV_PHYSDataTable(ds.Tables["T2_CHEM_INV_PHYS"]));
                }
                if ((ds.Tables["T2_CHEM_LOC"] != null)) {
                    base.Tables.Add(new T2_CHEM_LOCDataTable(ds.Tables["T2_CHEM_LOC"]));
                }
                if ((ds.Tables["T2_CHEM_MIX"] != null)) {
                    base.Tables.Add(new T2_CHEM_MIXDataTable(ds.Tables["T2_CHEM_MIX"]));
                }
                if ((ds.Tables["T2_FAC_DUNDB_ID"] != null)) {
                    base.Tables.Add(new T2_FAC_DUNDB_IDDataTable(ds.Tables["T2_FAC_DUNDB_ID"]));
                }
                if ((ds.Tables["T2_FAC_GEO"] != null)) {
                    base.Tables.Add(new T2_FAC_GEODataTable(ds.Tables["T2_FAC_GEO"]));
                }
                if ((ds.Tables["T2_FAC_IND"] != null)) {
                    base.Tables.Add(new T2_FAC_INDDataTable(ds.Tables["T2_FAC_IND"]));
                }
                if ((ds.Tables["T2_FAC_IND_EMAIL"] != null)) {
                    base.Tables.Add(new T2_FAC_IND_EMAILDataTable(ds.Tables["T2_FAC_IND_EMAIL"]));
                }
                if ((ds.Tables["T2_FAC_IND_PHONE"] != null)) {
                    base.Tables.Add(new T2_FAC_IND_PHONEDataTable(ds.Tables["T2_FAC_IND_PHONE"]));
                }
                if ((ds.Tables["T2_FAC_IND_TYPE"] != null)) {
                    base.Tables.Add(new T2_FAC_IND_TYPEDataTable(ds.Tables["T2_FAC_IND_TYPE"]));
                }
                if ((ds.Tables["T2_FAC_NAICS"] != null)) {
                    base.Tables.Add(new T2_FAC_NAICSDataTable(ds.Tables["T2_FAC_NAICS"]));
                }
                if ((ds.Tables["T2_FAC_NPDES_ID"] != null)) {
                    base.Tables.Add(new T2_FAC_NPDES_IDDataTable(ds.Tables["T2_FAC_NPDES_ID"]));
                }
                if ((ds.Tables["T2_FAC_RCRA_ID"] != null)) {
                    base.Tables.Add(new T2_FAC_RCRA_IDDataTable(ds.Tables["T2_FAC_RCRA_ID"]));
                }
                if ((ds.Tables["T2_FAC_SIC"] != null)) {
                    base.Tables.Add(new T2_FAC_SICDataTable(ds.Tables["T2_FAC_SIC"]));
                }
                if ((ds.Tables["T2_FAC_SITE"] != null)) {
                    base.Tables.Add(new T2_FAC_SITEDataTable(ds.Tables["T2_FAC_SITE"]));
                }
                if ((ds.Tables["T2_FAC_UIC_ID"] != null)) {
                    base.Tables.Add(new T2_FAC_UIC_IDDataTable(ds.Tables["T2_FAC_UIC_ID"]));
                }
                if ((ds.Tables["T2_REPORT"] != null)) {
                    base.Tables.Add(new T2_REPORTDataTable(ds.Tables["T2_REPORT"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T2_SUBMISSIONDataTable T2_SUBMISSION {
            get {
                return this.tableT2_SUBMISSION;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T2_CHEM_INVDataTable T2_CHEM_INV {
            get {
                return this.tableT2_CHEM_INV;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T2_CHEM_INV_DTLSDataTable T2_CHEM_INV_DTLS {
            get {
                return this.tableT2_CHEM_INV_DTLS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T2_CHEM_INV_HAZDataTable T2_CHEM_INV_HAZ {
            get {
                return this.tableT2_CHEM_INV_HAZ;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T2_CHEM_INV_HLTHDataTable T2_CHEM_INV_HLTH {
            get {
                return this.tableT2_CHEM_INV_HLTH;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T2_CHEM_INV_PHYSDataTable T2_CHEM_INV_PHYS {
            get {
                return this.tableT2_CHEM_INV_PHYS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T2_CHEM_LOCDataTable T2_CHEM_LOC {
            get {
                return this.tableT2_CHEM_LOC;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T2_CHEM_MIXDataTable T2_CHEM_MIX {
            get {
                return this.tableT2_CHEM_MIX;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T2_FAC_DUNDB_IDDataTable T2_FAC_DUNDB_ID {
            get {
                return this.tableT2_FAC_DUNDB_ID;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T2_FAC_GEODataTable T2_FAC_GEO {
            get {
                return this.tableT2_FAC_GEO;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T2_FAC_INDDataTable T2_FAC_IND {
            get {
                return this.tableT2_FAC_IND;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T2_FAC_IND_EMAILDataTable T2_FAC_IND_EMAIL {
            get {
                return this.tableT2_FAC_IND_EMAIL;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T2_FAC_IND_PHONEDataTable T2_FAC_IND_PHONE {
            get {
                return this.tableT2_FAC_IND_PHONE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T2_FAC_IND_TYPEDataTable T2_FAC_IND_TYPE {
            get {
                return this.tableT2_FAC_IND_TYPE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T2_FAC_NAICSDataTable T2_FAC_NAICS {
            get {
                return this.tableT2_FAC_NAICS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T2_FAC_NPDES_IDDataTable T2_FAC_NPDES_ID {
            get {
                return this.tableT2_FAC_NPDES_ID;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T2_FAC_RCRA_IDDataTable T2_FAC_RCRA_ID {
            get {
                return this.tableT2_FAC_RCRA_ID;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T2_FAC_SICDataTable T2_FAC_SIC {
            get {
                return this.tableT2_FAC_SIC;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T2_FAC_SITEDataTable T2_FAC_SITE {
            get {
                return this.tableT2_FAC_SITE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T2_FAC_UIC_IDDataTable T2_FAC_UIC_ID {
            get {
                return this.tableT2_FAC_UIC_ID;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T2_REPORTDataTable T2_REPORT {
            get {
                return this.tableT2_REPORT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            Tier2DataSet cln = ((Tier2DataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["T2_SUBMISSION"] != null)) {
                    base.Tables.Add(new T2_SUBMISSIONDataTable(ds.Tables["T2_SUBMISSION"]));
                }
                if ((ds.Tables["T2_CHEM_INV"] != null)) {
                    base.Tables.Add(new T2_CHEM_INVDataTable(ds.Tables["T2_CHEM_INV"]));
                }
                if ((ds.Tables["T2_CHEM_INV_DTLS"] != null)) {
                    base.Tables.Add(new T2_CHEM_INV_DTLSDataTable(ds.Tables["T2_CHEM_INV_DTLS"]));
                }
                if ((ds.Tables["T2_CHEM_INV_HAZ"] != null)) {
                    base.Tables.Add(new T2_CHEM_INV_HAZDataTable(ds.Tables["T2_CHEM_INV_HAZ"]));
                }
                if ((ds.Tables["T2_CHEM_INV_HLTH"] != null)) {
                    base.Tables.Add(new T2_CHEM_INV_HLTHDataTable(ds.Tables["T2_CHEM_INV_HLTH"]));
                }
                if ((ds.Tables["T2_CHEM_INV_PHYS"] != null)) {
                    base.Tables.Add(new T2_CHEM_INV_PHYSDataTable(ds.Tables["T2_CHEM_INV_PHYS"]));
                }
                if ((ds.Tables["T2_CHEM_LOC"] != null)) {
                    base.Tables.Add(new T2_CHEM_LOCDataTable(ds.Tables["T2_CHEM_LOC"]));
                }
                if ((ds.Tables["T2_CHEM_MIX"] != null)) {
                    base.Tables.Add(new T2_CHEM_MIXDataTable(ds.Tables["T2_CHEM_MIX"]));
                }
                if ((ds.Tables["T2_FAC_DUNDB_ID"] != null)) {
                    base.Tables.Add(new T2_FAC_DUNDB_IDDataTable(ds.Tables["T2_FAC_DUNDB_ID"]));
                }
                if ((ds.Tables["T2_FAC_GEO"] != null)) {
                    base.Tables.Add(new T2_FAC_GEODataTable(ds.Tables["T2_FAC_GEO"]));
                }
                if ((ds.Tables["T2_FAC_IND"] != null)) {
                    base.Tables.Add(new T2_FAC_INDDataTable(ds.Tables["T2_FAC_IND"]));
                }
                if ((ds.Tables["T2_FAC_IND_EMAIL"] != null)) {
                    base.Tables.Add(new T2_FAC_IND_EMAILDataTable(ds.Tables["T2_FAC_IND_EMAIL"]));
                }
                if ((ds.Tables["T2_FAC_IND_PHONE"] != null)) {
                    base.Tables.Add(new T2_FAC_IND_PHONEDataTable(ds.Tables["T2_FAC_IND_PHONE"]));
                }
                if ((ds.Tables["T2_FAC_IND_TYPE"] != null)) {
                    base.Tables.Add(new T2_FAC_IND_TYPEDataTable(ds.Tables["T2_FAC_IND_TYPE"]));
                }
                if ((ds.Tables["T2_FAC_NAICS"] != null)) {
                    base.Tables.Add(new T2_FAC_NAICSDataTable(ds.Tables["T2_FAC_NAICS"]));
                }
                if ((ds.Tables["T2_FAC_NPDES_ID"] != null)) {
                    base.Tables.Add(new T2_FAC_NPDES_IDDataTable(ds.Tables["T2_FAC_NPDES_ID"]));
                }
                if ((ds.Tables["T2_FAC_RCRA_ID"] != null)) {
                    base.Tables.Add(new T2_FAC_RCRA_IDDataTable(ds.Tables["T2_FAC_RCRA_ID"]));
                }
                if ((ds.Tables["T2_FAC_SIC"] != null)) {
                    base.Tables.Add(new T2_FAC_SICDataTable(ds.Tables["T2_FAC_SIC"]));
                }
                if ((ds.Tables["T2_FAC_SITE"] != null)) {
                    base.Tables.Add(new T2_FAC_SITEDataTable(ds.Tables["T2_FAC_SITE"]));
                }
                if ((ds.Tables["T2_FAC_UIC_ID"] != null)) {
                    base.Tables.Add(new T2_FAC_UIC_IDDataTable(ds.Tables["T2_FAC_UIC_ID"]));
                }
                if ((ds.Tables["T2_REPORT"] != null)) {
                    base.Tables.Add(new T2_REPORTDataTable(ds.Tables["T2_REPORT"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableT2_SUBMISSION = ((T2_SUBMISSIONDataTable)(base.Tables["T2_SUBMISSION"]));
            if ((initTable == true)) {
                if ((this.tableT2_SUBMISSION != null)) {
                    this.tableT2_SUBMISSION.InitVars();
                }
            }
            this.tableT2_CHEM_INV = ((T2_CHEM_INVDataTable)(base.Tables["T2_CHEM_INV"]));
            if ((initTable == true)) {
                if ((this.tableT2_CHEM_INV != null)) {
                    this.tableT2_CHEM_INV.InitVars();
                }
            }
            this.tableT2_CHEM_INV_DTLS = ((T2_CHEM_INV_DTLSDataTable)(base.Tables["T2_CHEM_INV_DTLS"]));
            if ((initTable == true)) {
                if ((this.tableT2_CHEM_INV_DTLS != null)) {
                    this.tableT2_CHEM_INV_DTLS.InitVars();
                }
            }
            this.tableT2_CHEM_INV_HAZ = ((T2_CHEM_INV_HAZDataTable)(base.Tables["T2_CHEM_INV_HAZ"]));
            if ((initTable == true)) {
                if ((this.tableT2_CHEM_INV_HAZ != null)) {
                    this.tableT2_CHEM_INV_HAZ.InitVars();
                }
            }
            this.tableT2_CHEM_INV_HLTH = ((T2_CHEM_INV_HLTHDataTable)(base.Tables["T2_CHEM_INV_HLTH"]));
            if ((initTable == true)) {
                if ((this.tableT2_CHEM_INV_HLTH != null)) {
                    this.tableT2_CHEM_INV_HLTH.InitVars();
                }
            }
            this.tableT2_CHEM_INV_PHYS = ((T2_CHEM_INV_PHYSDataTable)(base.Tables["T2_CHEM_INV_PHYS"]));
            if ((initTable == true)) {
                if ((this.tableT2_CHEM_INV_PHYS != null)) {
                    this.tableT2_CHEM_INV_PHYS.InitVars();
                }
            }
            this.tableT2_CHEM_LOC = ((T2_CHEM_LOCDataTable)(base.Tables["T2_CHEM_LOC"]));
            if ((initTable == true)) {
                if ((this.tableT2_CHEM_LOC != null)) {
                    this.tableT2_CHEM_LOC.InitVars();
                }
            }
            this.tableT2_CHEM_MIX = ((T2_CHEM_MIXDataTable)(base.Tables["T2_CHEM_MIX"]));
            if ((initTable == true)) {
                if ((this.tableT2_CHEM_MIX != null)) {
                    this.tableT2_CHEM_MIX.InitVars();
                }
            }
            this.tableT2_FAC_DUNDB_ID = ((T2_FAC_DUNDB_IDDataTable)(base.Tables["T2_FAC_DUNDB_ID"]));
            if ((initTable == true)) {
                if ((this.tableT2_FAC_DUNDB_ID != null)) {
                    this.tableT2_FAC_DUNDB_ID.InitVars();
                }
            }
            this.tableT2_FAC_GEO = ((T2_FAC_GEODataTable)(base.Tables["T2_FAC_GEO"]));
            if ((initTable == true)) {
                if ((this.tableT2_FAC_GEO != null)) {
                    this.tableT2_FAC_GEO.InitVars();
                }
            }
            this.tableT2_FAC_IND = ((T2_FAC_INDDataTable)(base.Tables["T2_FAC_IND"]));
            if ((initTable == true)) {
                if ((this.tableT2_FAC_IND != null)) {
                    this.tableT2_FAC_IND.InitVars();
                }
            }
            this.tableT2_FAC_IND_EMAIL = ((T2_FAC_IND_EMAILDataTable)(base.Tables["T2_FAC_IND_EMAIL"]));
            if ((initTable == true)) {
                if ((this.tableT2_FAC_IND_EMAIL != null)) {
                    this.tableT2_FAC_IND_EMAIL.InitVars();
                }
            }
            this.tableT2_FAC_IND_PHONE = ((T2_FAC_IND_PHONEDataTable)(base.Tables["T2_FAC_IND_PHONE"]));
            if ((initTable == true)) {
                if ((this.tableT2_FAC_IND_PHONE != null)) {
                    this.tableT2_FAC_IND_PHONE.InitVars();
                }
            }
            this.tableT2_FAC_IND_TYPE = ((T2_FAC_IND_TYPEDataTable)(base.Tables["T2_FAC_IND_TYPE"]));
            if ((initTable == true)) {
                if ((this.tableT2_FAC_IND_TYPE != null)) {
                    this.tableT2_FAC_IND_TYPE.InitVars();
                }
            }
            this.tableT2_FAC_NAICS = ((T2_FAC_NAICSDataTable)(base.Tables["T2_FAC_NAICS"]));
            if ((initTable == true)) {
                if ((this.tableT2_FAC_NAICS != null)) {
                    this.tableT2_FAC_NAICS.InitVars();
                }
            }
            this.tableT2_FAC_NPDES_ID = ((T2_FAC_NPDES_IDDataTable)(base.Tables["T2_FAC_NPDES_ID"]));
            if ((initTable == true)) {
                if ((this.tableT2_FAC_NPDES_ID != null)) {
                    this.tableT2_FAC_NPDES_ID.InitVars();
                }
            }
            this.tableT2_FAC_RCRA_ID = ((T2_FAC_RCRA_IDDataTable)(base.Tables["T2_FAC_RCRA_ID"]));
            if ((initTable == true)) {
                if ((this.tableT2_FAC_RCRA_ID != null)) {
                    this.tableT2_FAC_RCRA_ID.InitVars();
                }
            }
            this.tableT2_FAC_SIC = ((T2_FAC_SICDataTable)(base.Tables["T2_FAC_SIC"]));
            if ((initTable == true)) {
                if ((this.tableT2_FAC_SIC != null)) {
                    this.tableT2_FAC_SIC.InitVars();
                }
            }
            this.tableT2_FAC_SITE = ((T2_FAC_SITEDataTable)(base.Tables["T2_FAC_SITE"]));
            if ((initTable == true)) {
                if ((this.tableT2_FAC_SITE != null)) {
                    this.tableT2_FAC_SITE.InitVars();
                }
            }
            this.tableT2_FAC_UIC_ID = ((T2_FAC_UIC_IDDataTable)(base.Tables["T2_FAC_UIC_ID"]));
            if ((initTable == true)) {
                if ((this.tableT2_FAC_UIC_ID != null)) {
                    this.tableT2_FAC_UIC_ID.InitVars();
                }
            }
            this.tableT2_REPORT = ((T2_REPORTDataTable)(base.Tables["T2_REPORT"]));
            if ((initTable == true)) {
                if ((this.tableT2_REPORT != null)) {
                    this.tableT2_REPORT.InitVars();
                }
            }
            this.relationFK_T2_CHEM_INV_T2_FAC_SITE = this.Relations["FK_T2_CHEM_INV_T2_FAC_SITE"];
            this.relationFK_T2_CHEM_INV_DTLS_T2_CHEM_INV = this.Relations["FK_T2_CHEM_INV_DTLS_T2_CHEM_INV"];
            this.relationFK_T2_CHEM_INV_HAZ_T2_CHEM_INV = this.Relations["FK_T2_CHEM_INV_HAZ_T2_CHEM_INV"];
            this.relationFK_T2_CHEM_INV_HLTH_T2_CHEM_INV = this.Relations["FK_T2_CHEM_INV_HLTH_T2_CHEM_INV"];
            this.relationFK_T2_CHEM_INV_PHYS_T2_CHEM_INV = this.Relations["FK_T2_CHEM_INV_PHYS_T2_CHEM_INV"];
            this.relationFK_T2_CHEM_LOC_T2_CHEM_INV = this.Relations["FK_T2_CHEM_LOC_T2_CHEM_INV"];
            this.relationFK_T2_CHEM_MIX_T2_CHEM_INV = this.Relations["FK_T2_CHEM_MIX_T2_CHEM_INV"];
            this.relationFK_T2_FAC_DUNDB_ID_T2_FAC_SITE = this.Relations["FK_T2_FAC_DUNDB_ID_T2_FAC_SITE"];
            this.relationFK_T2_FAC_GEO_T2_FAC_SITE = this.Relations["FK_T2_FAC_GEO_T2_FAC_SITE"];
            this.relationFK_T2_FAC_IND_T2_FAC_SITE = this.Relations["FK_T2_FAC_IND_T2_FAC_SITE"];
            this.relationFK_T2_FAC_IND_EMAIL_T2_FAC_IND = this.Relations["FK_T2_FAC_IND_EMAIL_T2_FAC_IND"];
            this.relationFK_T2_FAC_IND_PHONE_T2_FAC_IND = this.Relations["FK_T2_FAC_IND_PHONE_T2_FAC_IND"];
            this.relationFK_T2_FAC_IND_TYPE_T2_FAC_IND = this.Relations["FK_T2_FAC_IND_TYPE_T2_FAC_IND"];
            this.relationFK_T2_FAC_NAICS_T2_FAC_SITE = this.Relations["FK_T2_FAC_NAICS_T2_FAC_SITE"];
            this.relationFK_T2_FAC_NPDES_ID_T2_FAC_SITE = this.Relations["FK_T2_FAC_NPDES_ID_T2_FAC_SITE"];
            this.relationFK_T2_FAC_RCRA_ID_T2_FAC_SITE = this.Relations["FK_T2_FAC_RCRA_ID_T2_FAC_SITE"];
            this.relationFK_T2_FAC_SIC_T2_FAC_SITE = this.Relations["FK_T2_FAC_SIC_T2_FAC_SITE"];
            this.relationFK_T2_FAC_SITE_T2_REPORT = this.Relations["FK_T2_FAC_SITE_T2_REPORT"];
            this.relationFK_T2_FAC_UIC_ID_T2_FAC_SITE = this.Relations["FK_T2_FAC_UIC_ID_T2_FAC_SITE"];
            this.relationFK_T2_REPORT_T2_SUBMISSION = this.Relations["FK_T2_REPORT_T2_SUBMISSION"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "Tier2DataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/Tier2DataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableT2_SUBMISSION = new T2_SUBMISSIONDataTable();
            base.Tables.Add(this.tableT2_SUBMISSION);
            this.tableT2_CHEM_INV = new T2_CHEM_INVDataTable();
            base.Tables.Add(this.tableT2_CHEM_INV);
            this.tableT2_CHEM_INV_DTLS = new T2_CHEM_INV_DTLSDataTable();
            base.Tables.Add(this.tableT2_CHEM_INV_DTLS);
            this.tableT2_CHEM_INV_HAZ = new T2_CHEM_INV_HAZDataTable();
            base.Tables.Add(this.tableT2_CHEM_INV_HAZ);
            this.tableT2_CHEM_INV_HLTH = new T2_CHEM_INV_HLTHDataTable();
            base.Tables.Add(this.tableT2_CHEM_INV_HLTH);
            this.tableT2_CHEM_INV_PHYS = new T2_CHEM_INV_PHYSDataTable();
            base.Tables.Add(this.tableT2_CHEM_INV_PHYS);
            this.tableT2_CHEM_LOC = new T2_CHEM_LOCDataTable();
            base.Tables.Add(this.tableT2_CHEM_LOC);
            this.tableT2_CHEM_MIX = new T2_CHEM_MIXDataTable();
            base.Tables.Add(this.tableT2_CHEM_MIX);
            this.tableT2_FAC_DUNDB_ID = new T2_FAC_DUNDB_IDDataTable();
            base.Tables.Add(this.tableT2_FAC_DUNDB_ID);
            this.tableT2_FAC_GEO = new T2_FAC_GEODataTable();
            base.Tables.Add(this.tableT2_FAC_GEO);
            this.tableT2_FAC_IND = new T2_FAC_INDDataTable();
            base.Tables.Add(this.tableT2_FAC_IND);
            this.tableT2_FAC_IND_EMAIL = new T2_FAC_IND_EMAILDataTable();
            base.Tables.Add(this.tableT2_FAC_IND_EMAIL);
            this.tableT2_FAC_IND_PHONE = new T2_FAC_IND_PHONEDataTable();
            base.Tables.Add(this.tableT2_FAC_IND_PHONE);
            this.tableT2_FAC_IND_TYPE = new T2_FAC_IND_TYPEDataTable();
            base.Tables.Add(this.tableT2_FAC_IND_TYPE);
            this.tableT2_FAC_NAICS = new T2_FAC_NAICSDataTable();
            base.Tables.Add(this.tableT2_FAC_NAICS);
            this.tableT2_FAC_NPDES_ID = new T2_FAC_NPDES_IDDataTable();
            base.Tables.Add(this.tableT2_FAC_NPDES_ID);
            this.tableT2_FAC_RCRA_ID = new T2_FAC_RCRA_IDDataTable();
            base.Tables.Add(this.tableT2_FAC_RCRA_ID);
            this.tableT2_FAC_SIC = new T2_FAC_SICDataTable();
            base.Tables.Add(this.tableT2_FAC_SIC);
            this.tableT2_FAC_SITE = new T2_FAC_SITEDataTable();
            base.Tables.Add(this.tableT2_FAC_SITE);
            this.tableT2_FAC_UIC_ID = new T2_FAC_UIC_IDDataTable();
            base.Tables.Add(this.tableT2_FAC_UIC_ID);
            this.tableT2_REPORT = new T2_REPORTDataTable();
            base.Tables.Add(this.tableT2_REPORT);
            this.relationFK_T2_CHEM_INV_T2_FAC_SITE = new global::System.Data.DataRelation("FK_T2_CHEM_INV_T2_FAC_SITE", new global::System.Data.DataColumn[] {
                        this.tableT2_FAC_SITE.PK_GUIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableT2_CHEM_INV.FK_GUIDColumn}, false);
            this.Relations.Add(this.relationFK_T2_CHEM_INV_T2_FAC_SITE);
            this.relationFK_T2_CHEM_INV_DTLS_T2_CHEM_INV = new global::System.Data.DataRelation("FK_T2_CHEM_INV_DTLS_T2_CHEM_INV", new global::System.Data.DataColumn[] {
                        this.tableT2_CHEM_INV.PK_GUIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableT2_CHEM_INV_DTLS.FK_GUIDColumn}, false);
            this.Relations.Add(this.relationFK_T2_CHEM_INV_DTLS_T2_CHEM_INV);
            this.relationFK_T2_CHEM_INV_HAZ_T2_CHEM_INV = new global::System.Data.DataRelation("FK_T2_CHEM_INV_HAZ_T2_CHEM_INV", new global::System.Data.DataColumn[] {
                        this.tableT2_CHEM_INV.PK_GUIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableT2_CHEM_INV_HAZ.FK_GUIDColumn}, false);
            this.Relations.Add(this.relationFK_T2_CHEM_INV_HAZ_T2_CHEM_INV);
            this.relationFK_T2_CHEM_INV_HLTH_T2_CHEM_INV = new global::System.Data.DataRelation("FK_T2_CHEM_INV_HLTH_T2_CHEM_INV", new global::System.Data.DataColumn[] {
                        this.tableT2_CHEM_INV.PK_GUIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableT2_CHEM_INV_HLTH.FK_GUIDColumn}, false);
            this.Relations.Add(this.relationFK_T2_CHEM_INV_HLTH_T2_CHEM_INV);
            this.relationFK_T2_CHEM_INV_PHYS_T2_CHEM_INV = new global::System.Data.DataRelation("FK_T2_CHEM_INV_PHYS_T2_CHEM_INV", new global::System.Data.DataColumn[] {
                        this.tableT2_CHEM_INV.PK_GUIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableT2_CHEM_INV_PHYS.FK_GUIDColumn}, false);
            this.Relations.Add(this.relationFK_T2_CHEM_INV_PHYS_T2_CHEM_INV);
            this.relationFK_T2_CHEM_LOC_T2_CHEM_INV = new global::System.Data.DataRelation("FK_T2_CHEM_LOC_T2_CHEM_INV", new global::System.Data.DataColumn[] {
                        this.tableT2_CHEM_INV.PK_GUIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableT2_CHEM_LOC.FK_GUIDColumn}, false);
            this.Relations.Add(this.relationFK_T2_CHEM_LOC_T2_CHEM_INV);
            this.relationFK_T2_CHEM_MIX_T2_CHEM_INV = new global::System.Data.DataRelation("FK_T2_CHEM_MIX_T2_CHEM_INV", new global::System.Data.DataColumn[] {
                        this.tableT2_CHEM_INV.PK_GUIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableT2_CHEM_MIX.FK_GUIDColumn}, false);
            this.Relations.Add(this.relationFK_T2_CHEM_MIX_T2_CHEM_INV);
            this.relationFK_T2_FAC_DUNDB_ID_T2_FAC_SITE = new global::System.Data.DataRelation("FK_T2_FAC_DUNDB_ID_T2_FAC_SITE", new global::System.Data.DataColumn[] {
                        this.tableT2_FAC_SITE.PK_GUIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableT2_FAC_DUNDB_ID.FK_GUIDColumn}, false);
            this.Relations.Add(this.relationFK_T2_FAC_DUNDB_ID_T2_FAC_SITE);
            this.relationFK_T2_FAC_GEO_T2_FAC_SITE = new global::System.Data.DataRelation("FK_T2_FAC_GEO_T2_FAC_SITE", new global::System.Data.DataColumn[] {
                        this.tableT2_FAC_SITE.PK_GUIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableT2_FAC_GEO.FK_GUIDColumn}, false);
            this.Relations.Add(this.relationFK_T2_FAC_GEO_T2_FAC_SITE);
            this.relationFK_T2_FAC_IND_T2_FAC_SITE = new global::System.Data.DataRelation("FK_T2_FAC_IND_T2_FAC_SITE", new global::System.Data.DataColumn[] {
                        this.tableT2_FAC_SITE.PK_GUIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableT2_FAC_IND.FK_GUIDColumn}, false);
            this.Relations.Add(this.relationFK_T2_FAC_IND_T2_FAC_SITE);
            this.relationFK_T2_FAC_IND_EMAIL_T2_FAC_IND = new global::System.Data.DataRelation("FK_T2_FAC_IND_EMAIL_T2_FAC_IND", new global::System.Data.DataColumn[] {
                        this.tableT2_FAC_IND.PK_GUIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableT2_FAC_IND_EMAIL.FK_GUIDColumn}, false);
            this.Relations.Add(this.relationFK_T2_FAC_IND_EMAIL_T2_FAC_IND);
            this.relationFK_T2_FAC_IND_PHONE_T2_FAC_IND = new global::System.Data.DataRelation("FK_T2_FAC_IND_PHONE_T2_FAC_IND", new global::System.Data.DataColumn[] {
                        this.tableT2_FAC_IND.PK_GUIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableT2_FAC_IND_PHONE.FK_GUIDColumn}, false);
            this.Relations.Add(this.relationFK_T2_FAC_IND_PHONE_T2_FAC_IND);
            this.relationFK_T2_FAC_IND_TYPE_T2_FAC_IND = new global::System.Data.DataRelation("FK_T2_FAC_IND_TYPE_T2_FAC_IND", new global::System.Data.DataColumn[] {
                        this.tableT2_FAC_IND.PK_GUIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableT2_FAC_IND_TYPE.FK_GUIDColumn}, false);
            this.Relations.Add(this.relationFK_T2_FAC_IND_TYPE_T2_FAC_IND);
            this.relationFK_T2_FAC_NAICS_T2_FAC_SITE = new global::System.Data.DataRelation("FK_T2_FAC_NAICS_T2_FAC_SITE", new global::System.Data.DataColumn[] {
                        this.tableT2_FAC_SITE.PK_GUIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableT2_FAC_NAICS.FK_GUIDColumn}, false);
            this.Relations.Add(this.relationFK_T2_FAC_NAICS_T2_FAC_SITE);
            this.relationFK_T2_FAC_NPDES_ID_T2_FAC_SITE = new global::System.Data.DataRelation("FK_T2_FAC_NPDES_ID_T2_FAC_SITE", new global::System.Data.DataColumn[] {
                        this.tableT2_FAC_SITE.PK_GUIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableT2_FAC_NPDES_ID.FK_GUIDColumn}, false);
            this.Relations.Add(this.relationFK_T2_FAC_NPDES_ID_T2_FAC_SITE);
            this.relationFK_T2_FAC_RCRA_ID_T2_FAC_SITE = new global::System.Data.DataRelation("FK_T2_FAC_RCRA_ID_T2_FAC_SITE", new global::System.Data.DataColumn[] {
                        this.tableT2_FAC_SITE.PK_GUIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableT2_FAC_RCRA_ID.FK_GUIDColumn}, false);
            this.Relations.Add(this.relationFK_T2_FAC_RCRA_ID_T2_FAC_SITE);
            this.relationFK_T2_FAC_SIC_T2_FAC_SITE = new global::System.Data.DataRelation("FK_T2_FAC_SIC_T2_FAC_SITE", new global::System.Data.DataColumn[] {
                        this.tableT2_FAC_SITE.PK_GUIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableT2_FAC_SIC.FK_GUIDColumn}, false);
            this.Relations.Add(this.relationFK_T2_FAC_SIC_T2_FAC_SITE);
            this.relationFK_T2_FAC_SITE_T2_REPORT = new global::System.Data.DataRelation("FK_T2_FAC_SITE_T2_REPORT", new global::System.Data.DataColumn[] {
                        this.tableT2_REPORT.PK_GUIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableT2_FAC_SITE.FK_GUIDColumn}, false);
            this.Relations.Add(this.relationFK_T2_FAC_SITE_T2_REPORT);
            this.relationFK_T2_FAC_UIC_ID_T2_FAC_SITE = new global::System.Data.DataRelation("FK_T2_FAC_UIC_ID_T2_FAC_SITE", new global::System.Data.DataColumn[] {
                        this.tableT2_FAC_SITE.PK_GUIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableT2_FAC_UIC_ID.FK_GUIDColumn}, false);
            this.Relations.Add(this.relationFK_T2_FAC_UIC_ID_T2_FAC_SITE);
            this.relationFK_T2_REPORT_T2_SUBMISSION = new global::System.Data.DataRelation("FK_T2_REPORT_T2_SUBMISSION", new global::System.Data.DataColumn[] {
                        this.tableT2_SUBMISSION.PK_GUIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableT2_REPORT.FK_GUIDColumn}, false);
            this.Relations.Add(this.relationFK_T2_REPORT_T2_SUBMISSION);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT2_SUBMISSION() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT2_CHEM_INV() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT2_CHEM_INV_DTLS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT2_CHEM_INV_HAZ() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT2_CHEM_INV_HLTH() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT2_CHEM_INV_PHYS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT2_CHEM_LOC() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT2_CHEM_MIX() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT2_FAC_DUNDB_ID() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT2_FAC_GEO() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT2_FAC_IND() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT2_FAC_IND_EMAIL() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT2_FAC_IND_PHONE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT2_FAC_IND_TYPE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT2_FAC_NAICS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT2_FAC_NPDES_ID() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT2_FAC_RCRA_ID() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT2_FAC_SIC() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT2_FAC_SITE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT2_FAC_UIC_ID() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT2_REPORT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            Tier2DataSet ds = new Tier2DataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void T2_SUBMISSIONRowChangeEventHandler(object sender, T2_SUBMISSIONRowChangeEvent e);
        
        public delegate void T2_CHEM_INVRowChangeEventHandler(object sender, T2_CHEM_INVRowChangeEvent e);
        
        public delegate void T2_CHEM_INV_DTLSRowChangeEventHandler(object sender, T2_CHEM_INV_DTLSRowChangeEvent e);
        
        public delegate void T2_CHEM_INV_HAZRowChangeEventHandler(object sender, T2_CHEM_INV_HAZRowChangeEvent e);
        
        public delegate void T2_CHEM_INV_HLTHRowChangeEventHandler(object sender, T2_CHEM_INV_HLTHRowChangeEvent e);
        
        public delegate void T2_CHEM_INV_PHYSRowChangeEventHandler(object sender, T2_CHEM_INV_PHYSRowChangeEvent e);
        
        public delegate void T2_CHEM_LOCRowChangeEventHandler(object sender, T2_CHEM_LOCRowChangeEvent e);
        
        public delegate void T2_CHEM_MIXRowChangeEventHandler(object sender, T2_CHEM_MIXRowChangeEvent e);
        
        public delegate void T2_FAC_DUNDB_IDRowChangeEventHandler(object sender, T2_FAC_DUNDB_IDRowChangeEvent e);
        
        public delegate void T2_FAC_GEORowChangeEventHandler(object sender, T2_FAC_GEORowChangeEvent e);
        
        public delegate void T2_FAC_INDRowChangeEventHandler(object sender, T2_FAC_INDRowChangeEvent e);
        
        public delegate void T2_FAC_IND_EMAILRowChangeEventHandler(object sender, T2_FAC_IND_EMAILRowChangeEvent e);
        
        public delegate void T2_FAC_IND_PHONERowChangeEventHandler(object sender, T2_FAC_IND_PHONERowChangeEvent e);
        
        public delegate void T2_FAC_IND_TYPERowChangeEventHandler(object sender, T2_FAC_IND_TYPERowChangeEvent e);
        
        public delegate void T2_FAC_NAICSRowChangeEventHandler(object sender, T2_FAC_NAICSRowChangeEvent e);
        
        public delegate void T2_FAC_NPDES_IDRowChangeEventHandler(object sender, T2_FAC_NPDES_IDRowChangeEvent e);
        
        public delegate void T2_FAC_RCRA_IDRowChangeEventHandler(object sender, T2_FAC_RCRA_IDRowChangeEvent e);
        
        public delegate void T2_FAC_SICRowChangeEventHandler(object sender, T2_FAC_SICRowChangeEvent e);
        
        public delegate void T2_FAC_SITERowChangeEventHandler(object sender, T2_FAC_SITERowChangeEvent e);
        
        public delegate void T2_FAC_UIC_IDRowChangeEventHandler(object sender, T2_FAC_UIC_IDRowChangeEvent e);
        
        public delegate void T2_REPORTRowChangeEventHandler(object sender, T2_REPORTRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T2_SUBMISSIONDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnPK_GUID;
            
            private global::System.Data.DataColumn columnSubmissionIdentifier;
            
            private global::System.Data.DataColumn columnSubmissionDate;
            
            private global::System.Data.DataColumn columnSubmissionStatus;
            
            private global::System.Data.DataColumn columnSubmissionMethod;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_SUBMISSIONDataTable() {
                this.TableName = "T2_SUBMISSION";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T2_SUBMISSIONDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T2_SUBMISSIONDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PK_GUIDColumn {
                get {
                    return this.columnPK_GUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubmissionIdentifierColumn {
                get {
                    return this.columnSubmissionIdentifier;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubmissionDateColumn {
                get {
                    return this.columnSubmissionDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubmissionStatusColumn {
                get {
                    return this.columnSubmissionStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubmissionMethodColumn {
                get {
                    return this.columnSubmissionMethod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_SUBMISSIONRow this[int index] {
                get {
                    return ((T2_SUBMISSIONRow)(this.Rows[index]));
                }
            }
            
            public event T2_SUBMISSIONRowChangeEventHandler T2_SUBMISSIONRowChanging;
            
            public event T2_SUBMISSIONRowChangeEventHandler T2_SUBMISSIONRowChanged;
            
            public event T2_SUBMISSIONRowChangeEventHandler T2_SUBMISSIONRowDeleting;
            
            public event T2_SUBMISSIONRowChangeEventHandler T2_SUBMISSIONRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT2_SUBMISSIONRow(T2_SUBMISSIONRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_SUBMISSIONRow AddT2_SUBMISSIONRow(string PK_GUID, string SubmissionIdentifier, string SubmissionDate, string SubmissionStatus, string SubmissionMethod) {
                T2_SUBMISSIONRow rowT2_SUBMISSIONRow = ((T2_SUBMISSIONRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PK_GUID,
                        SubmissionIdentifier,
                        SubmissionDate,
                        SubmissionStatus,
                        SubmissionMethod};
                rowT2_SUBMISSIONRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT2_SUBMISSIONRow);
                return rowT2_SUBMISSIONRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_SUBMISSIONRow FindByPK_GUID(string PK_GUID) {
                return ((T2_SUBMISSIONRow)(this.Rows.Find(new object[] {
                            PK_GUID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T2_SUBMISSIONDataTable cln = ((T2_SUBMISSIONDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T2_SUBMISSIONDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPK_GUID = base.Columns["PK_GUID"];
                this.columnSubmissionIdentifier = base.Columns["SubmissionIdentifier"];
                this.columnSubmissionDate = base.Columns["SubmissionDate"];
                this.columnSubmissionStatus = base.Columns["SubmissionStatus"];
                this.columnSubmissionMethod = base.Columns["SubmissionMethod"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPK_GUID = new global::System.Data.DataColumn("PK_GUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPK_GUID);
                this.columnSubmissionIdentifier = new global::System.Data.DataColumn("SubmissionIdentifier", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubmissionIdentifier);
                this.columnSubmissionDate = new global::System.Data.DataColumn("SubmissionDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubmissionDate);
                this.columnSubmissionStatus = new global::System.Data.DataColumn("SubmissionStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubmissionStatus);
                this.columnSubmissionMethod = new global::System.Data.DataColumn("SubmissionMethod", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubmissionMethod);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPK_GUID}, true));
                this.columnPK_GUID.AllowDBNull = false;
                this.columnPK_GUID.Unique = true;
                this.columnPK_GUID.MaxLength = 36;
                this.columnSubmissionIdentifier.MaxLength = 36;
                this.columnSubmissionDate.MaxLength = 25;
                this.columnSubmissionStatus.MaxLength = 255;
                this.columnSubmissionMethod.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_SUBMISSIONRow NewT2_SUBMISSIONRow() {
                return ((T2_SUBMISSIONRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T2_SUBMISSIONRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T2_SUBMISSIONRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T2_SUBMISSIONRowChanged != null)) {
                    this.T2_SUBMISSIONRowChanged(this, new T2_SUBMISSIONRowChangeEvent(((T2_SUBMISSIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T2_SUBMISSIONRowChanging != null)) {
                    this.T2_SUBMISSIONRowChanging(this, new T2_SUBMISSIONRowChangeEvent(((T2_SUBMISSIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T2_SUBMISSIONRowDeleted != null)) {
                    this.T2_SUBMISSIONRowDeleted(this, new T2_SUBMISSIONRowChangeEvent(((T2_SUBMISSIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T2_SUBMISSIONRowDeleting != null)) {
                    this.T2_SUBMISSIONRowDeleting(this, new T2_SUBMISSIONRowChangeEvent(((T2_SUBMISSIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT2_SUBMISSIONRow(T2_SUBMISSIONRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Tier2DataSet ds = new Tier2DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T2_SUBMISSIONDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T2_CHEM_INVDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnPK_GUID;
            
            private global::System.Data.DataColumn columnFK_GUID;
            
            private global::System.Data.DataColumn columnChemicalIdentifier;
            
            private global::System.Data.DataColumn columnEHSIndicator;
            
            private global::System.Data.DataColumn columnTradeSecretIndicator;
            
            private global::System.Data.DataColumn columnCASNumber;
            
            private global::System.Data.DataColumn columnChemSubstanceSystematicName;
            
            private global::System.Data.DataColumn columnEPAChemicalRegistryName;
            
            private global::System.Data.DataColumn columnEPAChemicalIdentifier;
            
            private global::System.Data.DataColumn columnChemicalNameContext;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_CHEM_INVDataTable() {
                this.TableName = "T2_CHEM_INV";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T2_CHEM_INVDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T2_CHEM_INVDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PK_GUIDColumn {
                get {
                    return this.columnPK_GUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FK_GUIDColumn {
                get {
                    return this.columnFK_GUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChemicalIdentifierColumn {
                get {
                    return this.columnChemicalIdentifier;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EHSIndicatorColumn {
                get {
                    return this.columnEHSIndicator;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TradeSecretIndicatorColumn {
                get {
                    return this.columnTradeSecretIndicator;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CASNumberColumn {
                get {
                    return this.columnCASNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChemSubstanceSystematicNameColumn {
                get {
                    return this.columnChemSubstanceSystematicName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EPAChemicalRegistryNameColumn {
                get {
                    return this.columnEPAChemicalRegistryName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EPAChemicalIdentifierColumn {
                get {
                    return this.columnEPAChemicalIdentifier;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChemicalNameContextColumn {
                get {
                    return this.columnChemicalNameContext;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_CHEM_INVRow this[int index] {
                get {
                    return ((T2_CHEM_INVRow)(this.Rows[index]));
                }
            }
            
            public event T2_CHEM_INVRowChangeEventHandler T2_CHEM_INVRowChanging;
            
            public event T2_CHEM_INVRowChangeEventHandler T2_CHEM_INVRowChanged;
            
            public event T2_CHEM_INVRowChangeEventHandler T2_CHEM_INVRowDeleting;
            
            public event T2_CHEM_INVRowChangeEventHandler T2_CHEM_INVRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT2_CHEM_INVRow(T2_CHEM_INVRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_CHEM_INVRow AddT2_CHEM_INVRow(string PK_GUID, T2_FAC_SITERow parentT2_FAC_SITERowByFK_T2_CHEM_INV_T2_FAC_SITE, string ChemicalIdentifier, string EHSIndicator, string TradeSecretIndicator, string CASNumber, string ChemSubstanceSystematicName, string EPAChemicalRegistryName, string EPAChemicalIdentifier, string ChemicalNameContext) {
                T2_CHEM_INVRow rowT2_CHEM_INVRow = ((T2_CHEM_INVRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PK_GUID,
                        null,
                        ChemicalIdentifier,
                        EHSIndicator,
                        TradeSecretIndicator,
                        CASNumber,
                        ChemSubstanceSystematicName,
                        EPAChemicalRegistryName,
                        EPAChemicalIdentifier,
                        ChemicalNameContext};
                if ((parentT2_FAC_SITERowByFK_T2_CHEM_INV_T2_FAC_SITE != null)) {
                    columnValuesArray[1] = parentT2_FAC_SITERowByFK_T2_CHEM_INV_T2_FAC_SITE[0];
                }
                rowT2_CHEM_INVRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT2_CHEM_INVRow);
                return rowT2_CHEM_INVRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_CHEM_INVRow FindByPK_GUID(string PK_GUID) {
                return ((T2_CHEM_INVRow)(this.Rows.Find(new object[] {
                            PK_GUID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T2_CHEM_INVDataTable cln = ((T2_CHEM_INVDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T2_CHEM_INVDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPK_GUID = base.Columns["PK_GUID"];
                this.columnFK_GUID = base.Columns["FK_GUID"];
                this.columnChemicalIdentifier = base.Columns["ChemicalIdentifier"];
                this.columnEHSIndicator = base.Columns["EHSIndicator"];
                this.columnTradeSecretIndicator = base.Columns["TradeSecretIndicator"];
                this.columnCASNumber = base.Columns["CASNumber"];
                this.columnChemSubstanceSystematicName = base.Columns["ChemSubstanceSystematicName"];
                this.columnEPAChemicalRegistryName = base.Columns["EPAChemicalRegistryName"];
                this.columnEPAChemicalIdentifier = base.Columns["EPAChemicalIdentifier"];
                this.columnChemicalNameContext = base.Columns["ChemicalNameContext"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPK_GUID = new global::System.Data.DataColumn("PK_GUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPK_GUID);
                this.columnFK_GUID = new global::System.Data.DataColumn("FK_GUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFK_GUID);
                this.columnChemicalIdentifier = new global::System.Data.DataColumn("ChemicalIdentifier", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChemicalIdentifier);
                this.columnEHSIndicator = new global::System.Data.DataColumn("EHSIndicator", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEHSIndicator);
                this.columnTradeSecretIndicator = new global::System.Data.DataColumn("TradeSecretIndicator", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTradeSecretIndicator);
                this.columnCASNumber = new global::System.Data.DataColumn("CASNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCASNumber);
                this.columnChemSubstanceSystematicName = new global::System.Data.DataColumn("ChemSubstanceSystematicName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChemSubstanceSystematicName);
                this.columnEPAChemicalRegistryName = new global::System.Data.DataColumn("EPAChemicalRegistryName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEPAChemicalRegistryName);
                this.columnEPAChemicalIdentifier = new global::System.Data.DataColumn("EPAChemicalIdentifier", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEPAChemicalIdentifier);
                this.columnChemicalNameContext = new global::System.Data.DataColumn("ChemicalNameContext", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChemicalNameContext);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPK_GUID}, true));
                this.columnPK_GUID.AllowDBNull = false;
                this.columnPK_GUID.Unique = true;
                this.columnPK_GUID.MaxLength = 36;
                this.columnFK_GUID.MaxLength = 36;
                this.columnChemicalIdentifier.MaxLength = 255;
                this.columnEHSIndicator.MaxLength = 255;
                this.columnTradeSecretIndicator.MaxLength = 255;
                this.columnCASNumber.MaxLength = 255;
                this.columnChemSubstanceSystematicName.MaxLength = 255;
                this.columnEPAChemicalRegistryName.MaxLength = 255;
                this.columnEPAChemicalIdentifier.MaxLength = 255;
                this.columnChemicalNameContext.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_CHEM_INVRow NewT2_CHEM_INVRow() {
                return ((T2_CHEM_INVRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T2_CHEM_INVRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T2_CHEM_INVRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T2_CHEM_INVRowChanged != null)) {
                    this.T2_CHEM_INVRowChanged(this, new T2_CHEM_INVRowChangeEvent(((T2_CHEM_INVRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T2_CHEM_INVRowChanging != null)) {
                    this.T2_CHEM_INVRowChanging(this, new T2_CHEM_INVRowChangeEvent(((T2_CHEM_INVRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T2_CHEM_INVRowDeleted != null)) {
                    this.T2_CHEM_INVRowDeleted(this, new T2_CHEM_INVRowChangeEvent(((T2_CHEM_INVRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T2_CHEM_INVRowDeleting != null)) {
                    this.T2_CHEM_INVRowDeleting(this, new T2_CHEM_INVRowChangeEvent(((T2_CHEM_INVRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT2_CHEM_INVRow(T2_CHEM_INVRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Tier2DataSet ds = new Tier2DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T2_CHEM_INVDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T2_CHEM_INV_DTLSDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnPK_GUID;
            
            private global::System.Data.DataColumn columnFK_GUID;
            
            private global::System.Data.DataColumn columnNumberOfDaysOnsite;
            
            private global::System.Data.DataColumn columnMaximumDailyAmount;
            
            private global::System.Data.DataColumn columnMaximumCode;
            
            private global::System.Data.DataColumn columnAverageDailyAmount;
            
            private global::System.Data.DataColumn columnAverageCode;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_CHEM_INV_DTLSDataTable() {
                this.TableName = "T2_CHEM_INV_DTLS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T2_CHEM_INV_DTLSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T2_CHEM_INV_DTLSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PK_GUIDColumn {
                get {
                    return this.columnPK_GUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FK_GUIDColumn {
                get {
                    return this.columnFK_GUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NumberOfDaysOnsiteColumn {
                get {
                    return this.columnNumberOfDaysOnsite;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaximumDailyAmountColumn {
                get {
                    return this.columnMaximumDailyAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaximumCodeColumn {
                get {
                    return this.columnMaximumCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AverageDailyAmountColumn {
                get {
                    return this.columnAverageDailyAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AverageCodeColumn {
                get {
                    return this.columnAverageCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_CHEM_INV_DTLSRow this[int index] {
                get {
                    return ((T2_CHEM_INV_DTLSRow)(this.Rows[index]));
                }
            }
            
            public event T2_CHEM_INV_DTLSRowChangeEventHandler T2_CHEM_INV_DTLSRowChanging;
            
            public event T2_CHEM_INV_DTLSRowChangeEventHandler T2_CHEM_INV_DTLSRowChanged;
            
            public event T2_CHEM_INV_DTLSRowChangeEventHandler T2_CHEM_INV_DTLSRowDeleting;
            
            public event T2_CHEM_INV_DTLSRowChangeEventHandler T2_CHEM_INV_DTLSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT2_CHEM_INV_DTLSRow(T2_CHEM_INV_DTLSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_CHEM_INV_DTLSRow AddT2_CHEM_INV_DTLSRow(string PK_GUID, T2_CHEM_INVRow parentT2_CHEM_INVRowByFK_T2_CHEM_INV_DTLS_T2_CHEM_INV, string NumberOfDaysOnsite, string MaximumDailyAmount, string MaximumCode, string AverageDailyAmount, string AverageCode) {
                T2_CHEM_INV_DTLSRow rowT2_CHEM_INV_DTLSRow = ((T2_CHEM_INV_DTLSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PK_GUID,
                        null,
                        NumberOfDaysOnsite,
                        MaximumDailyAmount,
                        MaximumCode,
                        AverageDailyAmount,
                        AverageCode};
                if ((parentT2_CHEM_INVRowByFK_T2_CHEM_INV_DTLS_T2_CHEM_INV != null)) {
                    columnValuesArray[1] = parentT2_CHEM_INVRowByFK_T2_CHEM_INV_DTLS_T2_CHEM_INV[0];
                }
                rowT2_CHEM_INV_DTLSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT2_CHEM_INV_DTLSRow);
                return rowT2_CHEM_INV_DTLSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_CHEM_INV_DTLSRow FindByPK_GUID(string PK_GUID) {
                return ((T2_CHEM_INV_DTLSRow)(this.Rows.Find(new object[] {
                            PK_GUID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T2_CHEM_INV_DTLSDataTable cln = ((T2_CHEM_INV_DTLSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T2_CHEM_INV_DTLSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPK_GUID = base.Columns["PK_GUID"];
                this.columnFK_GUID = base.Columns["FK_GUID"];
                this.columnNumberOfDaysOnsite = base.Columns["NumberOfDaysOnsite"];
                this.columnMaximumDailyAmount = base.Columns["MaximumDailyAmount"];
                this.columnMaximumCode = base.Columns["MaximumCode"];
                this.columnAverageDailyAmount = base.Columns["AverageDailyAmount"];
                this.columnAverageCode = base.Columns["AverageCode"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPK_GUID = new global::System.Data.DataColumn("PK_GUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPK_GUID);
                this.columnFK_GUID = new global::System.Data.DataColumn("FK_GUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFK_GUID);
                this.columnNumberOfDaysOnsite = new global::System.Data.DataColumn("NumberOfDaysOnsite", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumberOfDaysOnsite);
                this.columnMaximumDailyAmount = new global::System.Data.DataColumn("MaximumDailyAmount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaximumDailyAmount);
                this.columnMaximumCode = new global::System.Data.DataColumn("MaximumCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaximumCode);
                this.columnAverageDailyAmount = new global::System.Data.DataColumn("AverageDailyAmount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAverageDailyAmount);
                this.columnAverageCode = new global::System.Data.DataColumn("AverageCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAverageCode);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPK_GUID}, true));
                this.columnPK_GUID.AllowDBNull = false;
                this.columnPK_GUID.Unique = true;
                this.columnPK_GUID.MaxLength = 36;
                this.columnFK_GUID.MaxLength = 36;
                this.columnNumberOfDaysOnsite.MaxLength = 255;
                this.columnMaximumDailyAmount.MaxLength = 255;
                this.columnMaximumCode.MaxLength = 255;
                this.columnAverageDailyAmount.MaxLength = 255;
                this.columnAverageCode.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_CHEM_INV_DTLSRow NewT2_CHEM_INV_DTLSRow() {
                return ((T2_CHEM_INV_DTLSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T2_CHEM_INV_DTLSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T2_CHEM_INV_DTLSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T2_CHEM_INV_DTLSRowChanged != null)) {
                    this.T2_CHEM_INV_DTLSRowChanged(this, new T2_CHEM_INV_DTLSRowChangeEvent(((T2_CHEM_INV_DTLSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T2_CHEM_INV_DTLSRowChanging != null)) {
                    this.T2_CHEM_INV_DTLSRowChanging(this, new T2_CHEM_INV_DTLSRowChangeEvent(((T2_CHEM_INV_DTLSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T2_CHEM_INV_DTLSRowDeleted != null)) {
                    this.T2_CHEM_INV_DTLSRowDeleted(this, new T2_CHEM_INV_DTLSRowChangeEvent(((T2_CHEM_INV_DTLSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T2_CHEM_INV_DTLSRowDeleting != null)) {
                    this.T2_CHEM_INV_DTLSRowDeleting(this, new T2_CHEM_INV_DTLSRowChangeEvent(((T2_CHEM_INV_DTLSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT2_CHEM_INV_DTLSRow(T2_CHEM_INV_DTLSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Tier2DataSet ds = new Tier2DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T2_CHEM_INV_DTLSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T2_CHEM_INV_HAZDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnPK_GUID;
            
            private global::System.Data.DataColumn columnFK_GUID;
            
            private global::System.Data.DataColumn columnHazardType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_CHEM_INV_HAZDataTable() {
                this.TableName = "T2_CHEM_INV_HAZ";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T2_CHEM_INV_HAZDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T2_CHEM_INV_HAZDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PK_GUIDColumn {
                get {
                    return this.columnPK_GUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FK_GUIDColumn {
                get {
                    return this.columnFK_GUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HazardTypeColumn {
                get {
                    return this.columnHazardType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_CHEM_INV_HAZRow this[int index] {
                get {
                    return ((T2_CHEM_INV_HAZRow)(this.Rows[index]));
                }
            }
            
            public event T2_CHEM_INV_HAZRowChangeEventHandler T2_CHEM_INV_HAZRowChanging;
            
            public event T2_CHEM_INV_HAZRowChangeEventHandler T2_CHEM_INV_HAZRowChanged;
            
            public event T2_CHEM_INV_HAZRowChangeEventHandler T2_CHEM_INV_HAZRowDeleting;
            
            public event T2_CHEM_INV_HAZRowChangeEventHandler T2_CHEM_INV_HAZRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT2_CHEM_INV_HAZRow(T2_CHEM_INV_HAZRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_CHEM_INV_HAZRow AddT2_CHEM_INV_HAZRow(string PK_GUID, T2_CHEM_INVRow parentT2_CHEM_INVRowByFK_T2_CHEM_INV_HAZ_T2_CHEM_INV, string HazardType) {
                T2_CHEM_INV_HAZRow rowT2_CHEM_INV_HAZRow = ((T2_CHEM_INV_HAZRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PK_GUID,
                        null,
                        HazardType};
                if ((parentT2_CHEM_INVRowByFK_T2_CHEM_INV_HAZ_T2_CHEM_INV != null)) {
                    columnValuesArray[1] = parentT2_CHEM_INVRowByFK_T2_CHEM_INV_HAZ_T2_CHEM_INV[0];
                }
                rowT2_CHEM_INV_HAZRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT2_CHEM_INV_HAZRow);
                return rowT2_CHEM_INV_HAZRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_CHEM_INV_HAZRow FindByPK_GUID(string PK_GUID) {
                return ((T2_CHEM_INV_HAZRow)(this.Rows.Find(new object[] {
                            PK_GUID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T2_CHEM_INV_HAZDataTable cln = ((T2_CHEM_INV_HAZDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T2_CHEM_INV_HAZDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPK_GUID = base.Columns["PK_GUID"];
                this.columnFK_GUID = base.Columns["FK_GUID"];
                this.columnHazardType = base.Columns["HazardType"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPK_GUID = new global::System.Data.DataColumn("PK_GUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPK_GUID);
                this.columnFK_GUID = new global::System.Data.DataColumn("FK_GUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFK_GUID);
                this.columnHazardType = new global::System.Data.DataColumn("HazardType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHazardType);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPK_GUID}, true));
                this.columnPK_GUID.AllowDBNull = false;
                this.columnPK_GUID.Unique = true;
                this.columnPK_GUID.MaxLength = 36;
                this.columnFK_GUID.AllowDBNull = false;
                this.columnFK_GUID.MaxLength = 36;
                this.columnHazardType.AllowDBNull = false;
                this.columnHazardType.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_CHEM_INV_HAZRow NewT2_CHEM_INV_HAZRow() {
                return ((T2_CHEM_INV_HAZRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T2_CHEM_INV_HAZRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T2_CHEM_INV_HAZRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T2_CHEM_INV_HAZRowChanged != null)) {
                    this.T2_CHEM_INV_HAZRowChanged(this, new T2_CHEM_INV_HAZRowChangeEvent(((T2_CHEM_INV_HAZRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T2_CHEM_INV_HAZRowChanging != null)) {
                    this.T2_CHEM_INV_HAZRowChanging(this, new T2_CHEM_INV_HAZRowChangeEvent(((T2_CHEM_INV_HAZRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T2_CHEM_INV_HAZRowDeleted != null)) {
                    this.T2_CHEM_INV_HAZRowDeleted(this, new T2_CHEM_INV_HAZRowChangeEvent(((T2_CHEM_INV_HAZRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T2_CHEM_INV_HAZRowDeleting != null)) {
                    this.T2_CHEM_INV_HAZRowDeleting(this, new T2_CHEM_INV_HAZRowChangeEvent(((T2_CHEM_INV_HAZRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT2_CHEM_INV_HAZRow(T2_CHEM_INV_HAZRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Tier2DataSet ds = new Tier2DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T2_CHEM_INV_HAZDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T2_CHEM_INV_HLTHDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnPK_GUID;
            
            private global::System.Data.DataColumn columnFK_GUID;
            
            private global::System.Data.DataColumn columnHealthEffects;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_CHEM_INV_HLTHDataTable() {
                this.TableName = "T2_CHEM_INV_HLTH";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T2_CHEM_INV_HLTHDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T2_CHEM_INV_HLTHDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PK_GUIDColumn {
                get {
                    return this.columnPK_GUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FK_GUIDColumn {
                get {
                    return this.columnFK_GUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HealthEffectsColumn {
                get {
                    return this.columnHealthEffects;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_CHEM_INV_HLTHRow this[int index] {
                get {
                    return ((T2_CHEM_INV_HLTHRow)(this.Rows[index]));
                }
            }
            
            public event T2_CHEM_INV_HLTHRowChangeEventHandler T2_CHEM_INV_HLTHRowChanging;
            
            public event T2_CHEM_INV_HLTHRowChangeEventHandler T2_CHEM_INV_HLTHRowChanged;
            
            public event T2_CHEM_INV_HLTHRowChangeEventHandler T2_CHEM_INV_HLTHRowDeleting;
            
            public event T2_CHEM_INV_HLTHRowChangeEventHandler T2_CHEM_INV_HLTHRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT2_CHEM_INV_HLTHRow(T2_CHEM_INV_HLTHRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_CHEM_INV_HLTHRow AddT2_CHEM_INV_HLTHRow(string PK_GUID, T2_CHEM_INVRow parentT2_CHEM_INVRowByFK_T2_CHEM_INV_HLTH_T2_CHEM_INV, string HealthEffects) {
                T2_CHEM_INV_HLTHRow rowT2_CHEM_INV_HLTHRow = ((T2_CHEM_INV_HLTHRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PK_GUID,
                        null,
                        HealthEffects};
                if ((parentT2_CHEM_INVRowByFK_T2_CHEM_INV_HLTH_T2_CHEM_INV != null)) {
                    columnValuesArray[1] = parentT2_CHEM_INVRowByFK_T2_CHEM_INV_HLTH_T2_CHEM_INV[0];
                }
                rowT2_CHEM_INV_HLTHRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT2_CHEM_INV_HLTHRow);
                return rowT2_CHEM_INV_HLTHRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_CHEM_INV_HLTHRow FindByPK_GUID(string PK_GUID) {
                return ((T2_CHEM_INV_HLTHRow)(this.Rows.Find(new object[] {
                            PK_GUID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T2_CHEM_INV_HLTHDataTable cln = ((T2_CHEM_INV_HLTHDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T2_CHEM_INV_HLTHDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPK_GUID = base.Columns["PK_GUID"];
                this.columnFK_GUID = base.Columns["FK_GUID"];
                this.columnHealthEffects = base.Columns["HealthEffects"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPK_GUID = new global::System.Data.DataColumn("PK_GUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPK_GUID);
                this.columnFK_GUID = new global::System.Data.DataColumn("FK_GUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFK_GUID);
                this.columnHealthEffects = new global::System.Data.DataColumn("HealthEffects", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHealthEffects);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPK_GUID}, true));
                this.columnPK_GUID.AllowDBNull = false;
                this.columnPK_GUID.Unique = true;
                this.columnPK_GUID.MaxLength = 36;
                this.columnFK_GUID.AllowDBNull = false;
                this.columnFK_GUID.MaxLength = 36;
                this.columnHealthEffects.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_CHEM_INV_HLTHRow NewT2_CHEM_INV_HLTHRow() {
                return ((T2_CHEM_INV_HLTHRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T2_CHEM_INV_HLTHRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T2_CHEM_INV_HLTHRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T2_CHEM_INV_HLTHRowChanged != null)) {
                    this.T2_CHEM_INV_HLTHRowChanged(this, new T2_CHEM_INV_HLTHRowChangeEvent(((T2_CHEM_INV_HLTHRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T2_CHEM_INV_HLTHRowChanging != null)) {
                    this.T2_CHEM_INV_HLTHRowChanging(this, new T2_CHEM_INV_HLTHRowChangeEvent(((T2_CHEM_INV_HLTHRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T2_CHEM_INV_HLTHRowDeleted != null)) {
                    this.T2_CHEM_INV_HLTHRowDeleted(this, new T2_CHEM_INV_HLTHRowChangeEvent(((T2_CHEM_INV_HLTHRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T2_CHEM_INV_HLTHRowDeleting != null)) {
                    this.T2_CHEM_INV_HLTHRowDeleting(this, new T2_CHEM_INV_HLTHRowChangeEvent(((T2_CHEM_INV_HLTHRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT2_CHEM_INV_HLTHRow(T2_CHEM_INV_HLTHRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Tier2DataSet ds = new Tier2DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T2_CHEM_INV_HLTHDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T2_CHEM_INV_PHYSDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnPK_GUID;
            
            private global::System.Data.DataColumn columnFK_GUID;
            
            private global::System.Data.DataColumn columnChemicalPhysicalState;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_CHEM_INV_PHYSDataTable() {
                this.TableName = "T2_CHEM_INV_PHYS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T2_CHEM_INV_PHYSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T2_CHEM_INV_PHYSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PK_GUIDColumn {
                get {
                    return this.columnPK_GUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FK_GUIDColumn {
                get {
                    return this.columnFK_GUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChemicalPhysicalStateColumn {
                get {
                    return this.columnChemicalPhysicalState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_CHEM_INV_PHYSRow this[int index] {
                get {
                    return ((T2_CHEM_INV_PHYSRow)(this.Rows[index]));
                }
            }
            
            public event T2_CHEM_INV_PHYSRowChangeEventHandler T2_CHEM_INV_PHYSRowChanging;
            
            public event T2_CHEM_INV_PHYSRowChangeEventHandler T2_CHEM_INV_PHYSRowChanged;
            
            public event T2_CHEM_INV_PHYSRowChangeEventHandler T2_CHEM_INV_PHYSRowDeleting;
            
            public event T2_CHEM_INV_PHYSRowChangeEventHandler T2_CHEM_INV_PHYSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT2_CHEM_INV_PHYSRow(T2_CHEM_INV_PHYSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_CHEM_INV_PHYSRow AddT2_CHEM_INV_PHYSRow(string PK_GUID, T2_CHEM_INVRow parentT2_CHEM_INVRowByFK_T2_CHEM_INV_PHYS_T2_CHEM_INV, string ChemicalPhysicalState) {
                T2_CHEM_INV_PHYSRow rowT2_CHEM_INV_PHYSRow = ((T2_CHEM_INV_PHYSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PK_GUID,
                        null,
                        ChemicalPhysicalState};
                if ((parentT2_CHEM_INVRowByFK_T2_CHEM_INV_PHYS_T2_CHEM_INV != null)) {
                    columnValuesArray[1] = parentT2_CHEM_INVRowByFK_T2_CHEM_INV_PHYS_T2_CHEM_INV[0];
                }
                rowT2_CHEM_INV_PHYSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT2_CHEM_INV_PHYSRow);
                return rowT2_CHEM_INV_PHYSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_CHEM_INV_PHYSRow FindByPK_GUID(string PK_GUID) {
                return ((T2_CHEM_INV_PHYSRow)(this.Rows.Find(new object[] {
                            PK_GUID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T2_CHEM_INV_PHYSDataTable cln = ((T2_CHEM_INV_PHYSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T2_CHEM_INV_PHYSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPK_GUID = base.Columns["PK_GUID"];
                this.columnFK_GUID = base.Columns["FK_GUID"];
                this.columnChemicalPhysicalState = base.Columns["ChemicalPhysicalState"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPK_GUID = new global::System.Data.DataColumn("PK_GUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPK_GUID);
                this.columnFK_GUID = new global::System.Data.DataColumn("FK_GUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFK_GUID);
                this.columnChemicalPhysicalState = new global::System.Data.DataColumn("ChemicalPhysicalState", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChemicalPhysicalState);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPK_GUID}, true));
                this.columnPK_GUID.AllowDBNull = false;
                this.columnPK_GUID.Unique = true;
                this.columnPK_GUID.MaxLength = 36;
                this.columnFK_GUID.AllowDBNull = false;
                this.columnFK_GUID.MaxLength = 36;
                this.columnChemicalPhysicalState.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_CHEM_INV_PHYSRow NewT2_CHEM_INV_PHYSRow() {
                return ((T2_CHEM_INV_PHYSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T2_CHEM_INV_PHYSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T2_CHEM_INV_PHYSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T2_CHEM_INV_PHYSRowChanged != null)) {
                    this.T2_CHEM_INV_PHYSRowChanged(this, new T2_CHEM_INV_PHYSRowChangeEvent(((T2_CHEM_INV_PHYSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T2_CHEM_INV_PHYSRowChanging != null)) {
                    this.T2_CHEM_INV_PHYSRowChanging(this, new T2_CHEM_INV_PHYSRowChangeEvent(((T2_CHEM_INV_PHYSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T2_CHEM_INV_PHYSRowDeleted != null)) {
                    this.T2_CHEM_INV_PHYSRowDeleted(this, new T2_CHEM_INV_PHYSRowChangeEvent(((T2_CHEM_INV_PHYSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T2_CHEM_INV_PHYSRowDeleting != null)) {
                    this.T2_CHEM_INV_PHYSRowDeleting(this, new T2_CHEM_INV_PHYSRowChangeEvent(((T2_CHEM_INV_PHYSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT2_CHEM_INV_PHYSRow(T2_CHEM_INV_PHYSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Tier2DataSet ds = new Tier2DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T2_CHEM_INV_PHYSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T2_CHEM_LOCDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnPK_GUID;
            
            private global::System.Data.DataColumn columnFK_GUID;
            
            private global::System.Data.DataColumn columnConfidentialLocationIndicator;
            
            private global::System.Data.DataColumn columnStorageTypeCode;
            
            private global::System.Data.DataColumn columnStorageTypeDescription;
            
            private global::System.Data.DataColumn columnStorageLocTemperatureCode;
            
            private global::System.Data.DataColumn columnStorageLocTemperatureDesc;
            
            private global::System.Data.DataColumn columnStorageLocPressureCode;
            
            private global::System.Data.DataColumn columnStorageLocPressureDesc;
            
            private global::System.Data.DataColumn columnStorageLocDescription;
            
            private global::System.Data.DataColumn columnMaximumAmountAtLocation;
            
            private global::System.Data.DataColumn columnMeasurementUnit;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_CHEM_LOCDataTable() {
                this.TableName = "T2_CHEM_LOC";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T2_CHEM_LOCDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T2_CHEM_LOCDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PK_GUIDColumn {
                get {
                    return this.columnPK_GUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FK_GUIDColumn {
                get {
                    return this.columnFK_GUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConfidentialLocationIndicatorColumn {
                get {
                    return this.columnConfidentialLocationIndicator;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StorageTypeCodeColumn {
                get {
                    return this.columnStorageTypeCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StorageTypeDescriptionColumn {
                get {
                    return this.columnStorageTypeDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StorageLocTemperatureCodeColumn {
                get {
                    return this.columnStorageLocTemperatureCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StorageLocTemperatureDescColumn {
                get {
                    return this.columnStorageLocTemperatureDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StorageLocPressureCodeColumn {
                get {
                    return this.columnStorageLocPressureCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StorageLocPressureDescColumn {
                get {
                    return this.columnStorageLocPressureDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StorageLocDescriptionColumn {
                get {
                    return this.columnStorageLocDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaximumAmountAtLocationColumn {
                get {
                    return this.columnMaximumAmountAtLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MeasurementUnitColumn {
                get {
                    return this.columnMeasurementUnit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_CHEM_LOCRow this[int index] {
                get {
                    return ((T2_CHEM_LOCRow)(this.Rows[index]));
                }
            }
            
            public event T2_CHEM_LOCRowChangeEventHandler T2_CHEM_LOCRowChanging;
            
            public event T2_CHEM_LOCRowChangeEventHandler T2_CHEM_LOCRowChanged;
            
            public event T2_CHEM_LOCRowChangeEventHandler T2_CHEM_LOCRowDeleting;
            
            public event T2_CHEM_LOCRowChangeEventHandler T2_CHEM_LOCRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT2_CHEM_LOCRow(T2_CHEM_LOCRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_CHEM_LOCRow AddT2_CHEM_LOCRow(string PK_GUID, T2_CHEM_INVRow parentT2_CHEM_INVRowByFK_T2_CHEM_LOC_T2_CHEM_INV, string ConfidentialLocationIndicator, string StorageTypeCode, string StorageTypeDescription, string StorageLocTemperatureCode, string StorageLocTemperatureDesc, string StorageLocPressureCode, string StorageLocPressureDesc, string StorageLocDescription, string MaximumAmountAtLocation, string MeasurementUnit) {
                T2_CHEM_LOCRow rowT2_CHEM_LOCRow = ((T2_CHEM_LOCRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PK_GUID,
                        null,
                        ConfidentialLocationIndicator,
                        StorageTypeCode,
                        StorageTypeDescription,
                        StorageLocTemperatureCode,
                        StorageLocTemperatureDesc,
                        StorageLocPressureCode,
                        StorageLocPressureDesc,
                        StorageLocDescription,
                        MaximumAmountAtLocation,
                        MeasurementUnit};
                if ((parentT2_CHEM_INVRowByFK_T2_CHEM_LOC_T2_CHEM_INV != null)) {
                    columnValuesArray[1] = parentT2_CHEM_INVRowByFK_T2_CHEM_LOC_T2_CHEM_INV[0];
                }
                rowT2_CHEM_LOCRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT2_CHEM_LOCRow);
                return rowT2_CHEM_LOCRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_CHEM_LOCRow FindByPK_GUID(string PK_GUID) {
                return ((T2_CHEM_LOCRow)(this.Rows.Find(new object[] {
                            PK_GUID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T2_CHEM_LOCDataTable cln = ((T2_CHEM_LOCDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T2_CHEM_LOCDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPK_GUID = base.Columns["PK_GUID"];
                this.columnFK_GUID = base.Columns["FK_GUID"];
                this.columnConfidentialLocationIndicator = base.Columns["ConfidentialLocationIndicator"];
                this.columnStorageTypeCode = base.Columns["StorageTypeCode"];
                this.columnStorageTypeDescription = base.Columns["StorageTypeDescription"];
                this.columnStorageLocTemperatureCode = base.Columns["StorageLocTemperatureCode"];
                this.columnStorageLocTemperatureDesc = base.Columns["StorageLocTemperatureDesc"];
                this.columnStorageLocPressureCode = base.Columns["StorageLocPressureCode"];
                this.columnStorageLocPressureDesc = base.Columns["StorageLocPressureDesc"];
                this.columnStorageLocDescription = base.Columns["StorageLocDescription"];
                this.columnMaximumAmountAtLocation = base.Columns["MaximumAmountAtLocation"];
                this.columnMeasurementUnit = base.Columns["MeasurementUnit"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPK_GUID = new global::System.Data.DataColumn("PK_GUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPK_GUID);
                this.columnFK_GUID = new global::System.Data.DataColumn("FK_GUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFK_GUID);
                this.columnConfidentialLocationIndicator = new global::System.Data.DataColumn("ConfidentialLocationIndicator", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConfidentialLocationIndicator);
                this.columnStorageTypeCode = new global::System.Data.DataColumn("StorageTypeCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStorageTypeCode);
                this.columnStorageTypeDescription = new global::System.Data.DataColumn("StorageTypeDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStorageTypeDescription);
                this.columnStorageLocTemperatureCode = new global::System.Data.DataColumn("StorageLocTemperatureCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStorageLocTemperatureCode);
                this.columnStorageLocTemperatureDesc = new global::System.Data.DataColumn("StorageLocTemperatureDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStorageLocTemperatureDesc);
                this.columnStorageLocPressureCode = new global::System.Data.DataColumn("StorageLocPressureCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStorageLocPressureCode);
                this.columnStorageLocPressureDesc = new global::System.Data.DataColumn("StorageLocPressureDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStorageLocPressureDesc);
                this.columnStorageLocDescription = new global::System.Data.DataColumn("StorageLocDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStorageLocDescription);
                this.columnMaximumAmountAtLocation = new global::System.Data.DataColumn("MaximumAmountAtLocation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaximumAmountAtLocation);
                this.columnMeasurementUnit = new global::System.Data.DataColumn("MeasurementUnit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeasurementUnit);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPK_GUID}, true));
                this.columnPK_GUID.AllowDBNull = false;
                this.columnPK_GUID.Unique = true;
                this.columnPK_GUID.MaxLength = 36;
                this.columnFK_GUID.MaxLength = 36;
                this.columnConfidentialLocationIndicator.MaxLength = 255;
                this.columnStorageTypeCode.MaxLength = 255;
                this.columnStorageTypeDescription.MaxLength = 255;
                this.columnStorageLocTemperatureCode.MaxLength = 255;
                this.columnStorageLocTemperatureDesc.MaxLength = 255;
                this.columnStorageLocPressureCode.MaxLength = 255;
                this.columnStorageLocPressureDesc.MaxLength = 255;
                this.columnStorageLocDescription.MaxLength = 255;
                this.columnMaximumAmountAtLocation.MaxLength = 255;
                this.columnMeasurementUnit.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_CHEM_LOCRow NewT2_CHEM_LOCRow() {
                return ((T2_CHEM_LOCRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T2_CHEM_LOCRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T2_CHEM_LOCRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T2_CHEM_LOCRowChanged != null)) {
                    this.T2_CHEM_LOCRowChanged(this, new T2_CHEM_LOCRowChangeEvent(((T2_CHEM_LOCRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T2_CHEM_LOCRowChanging != null)) {
                    this.T2_CHEM_LOCRowChanging(this, new T2_CHEM_LOCRowChangeEvent(((T2_CHEM_LOCRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T2_CHEM_LOCRowDeleted != null)) {
                    this.T2_CHEM_LOCRowDeleted(this, new T2_CHEM_LOCRowChangeEvent(((T2_CHEM_LOCRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T2_CHEM_LOCRowDeleting != null)) {
                    this.T2_CHEM_LOCRowDeleting(this, new T2_CHEM_LOCRowChangeEvent(((T2_CHEM_LOCRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT2_CHEM_LOCRow(T2_CHEM_LOCRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Tier2DataSet ds = new Tier2DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T2_CHEM_LOCDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T2_CHEM_MIXDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnPK_GUID;
            
            private global::System.Data.DataColumn columnFK_GUID;
            
            private global::System.Data.DataColumn columnCASNumber;
            
            private global::System.Data.DataColumn columnComponent;
            
            private global::System.Data.DataColumn columnComponentPercentage;
            
            private global::System.Data.DataColumn columnWeightOrVolume;
            
            private global::System.Data.DataColumn columnEHSIndicator;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_CHEM_MIXDataTable() {
                this.TableName = "T2_CHEM_MIX";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T2_CHEM_MIXDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T2_CHEM_MIXDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PK_GUIDColumn {
                get {
                    return this.columnPK_GUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FK_GUIDColumn {
                get {
                    return this.columnFK_GUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CASNumberColumn {
                get {
                    return this.columnCASNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ComponentColumn {
                get {
                    return this.columnComponent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ComponentPercentageColumn {
                get {
                    return this.columnComponentPercentage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WeightOrVolumeColumn {
                get {
                    return this.columnWeightOrVolume;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EHSIndicatorColumn {
                get {
                    return this.columnEHSIndicator;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_CHEM_MIXRow this[int index] {
                get {
                    return ((T2_CHEM_MIXRow)(this.Rows[index]));
                }
            }
            
            public event T2_CHEM_MIXRowChangeEventHandler T2_CHEM_MIXRowChanging;
            
            public event T2_CHEM_MIXRowChangeEventHandler T2_CHEM_MIXRowChanged;
            
            public event T2_CHEM_MIXRowChangeEventHandler T2_CHEM_MIXRowDeleting;
            
            public event T2_CHEM_MIXRowChangeEventHandler T2_CHEM_MIXRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT2_CHEM_MIXRow(T2_CHEM_MIXRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_CHEM_MIXRow AddT2_CHEM_MIXRow(string PK_GUID, T2_CHEM_INVRow parentT2_CHEM_INVRowByFK_T2_CHEM_MIX_T2_CHEM_INV, string CASNumber, string Component, string ComponentPercentage, string WeightOrVolume, string EHSIndicator) {
                T2_CHEM_MIXRow rowT2_CHEM_MIXRow = ((T2_CHEM_MIXRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PK_GUID,
                        null,
                        CASNumber,
                        Component,
                        ComponentPercentage,
                        WeightOrVolume,
                        EHSIndicator};
                if ((parentT2_CHEM_INVRowByFK_T2_CHEM_MIX_T2_CHEM_INV != null)) {
                    columnValuesArray[1] = parentT2_CHEM_INVRowByFK_T2_CHEM_MIX_T2_CHEM_INV[0];
                }
                rowT2_CHEM_MIXRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT2_CHEM_MIXRow);
                return rowT2_CHEM_MIXRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_CHEM_MIXRow FindByPK_GUID(string PK_GUID) {
                return ((T2_CHEM_MIXRow)(this.Rows.Find(new object[] {
                            PK_GUID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T2_CHEM_MIXDataTable cln = ((T2_CHEM_MIXDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T2_CHEM_MIXDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPK_GUID = base.Columns["PK_GUID"];
                this.columnFK_GUID = base.Columns["FK_GUID"];
                this.columnCASNumber = base.Columns["CASNumber"];
                this.columnComponent = base.Columns["Component"];
                this.columnComponentPercentage = base.Columns["ComponentPercentage"];
                this.columnWeightOrVolume = base.Columns["WeightOrVolume"];
                this.columnEHSIndicator = base.Columns["EHSIndicator"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPK_GUID = new global::System.Data.DataColumn("PK_GUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPK_GUID);
                this.columnFK_GUID = new global::System.Data.DataColumn("FK_GUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFK_GUID);
                this.columnCASNumber = new global::System.Data.DataColumn("CASNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCASNumber);
                this.columnComponent = new global::System.Data.DataColumn("Component", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComponent);
                this.columnComponentPercentage = new global::System.Data.DataColumn("ComponentPercentage", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComponentPercentage);
                this.columnWeightOrVolume = new global::System.Data.DataColumn("WeightOrVolume", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWeightOrVolume);
                this.columnEHSIndicator = new global::System.Data.DataColumn("EHSIndicator", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEHSIndicator);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPK_GUID}, true));
                this.columnPK_GUID.AllowDBNull = false;
                this.columnPK_GUID.Unique = true;
                this.columnPK_GUID.MaxLength = 36;
                this.columnFK_GUID.AllowDBNull = false;
                this.columnFK_GUID.MaxLength = 36;
                this.columnCASNumber.MaxLength = 255;
                this.columnComponent.MaxLength = 255;
                this.columnComponentPercentage.MaxLength = 255;
                this.columnWeightOrVolume.MaxLength = 255;
                this.columnEHSIndicator.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_CHEM_MIXRow NewT2_CHEM_MIXRow() {
                return ((T2_CHEM_MIXRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T2_CHEM_MIXRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T2_CHEM_MIXRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T2_CHEM_MIXRowChanged != null)) {
                    this.T2_CHEM_MIXRowChanged(this, new T2_CHEM_MIXRowChangeEvent(((T2_CHEM_MIXRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T2_CHEM_MIXRowChanging != null)) {
                    this.T2_CHEM_MIXRowChanging(this, new T2_CHEM_MIXRowChangeEvent(((T2_CHEM_MIXRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T2_CHEM_MIXRowDeleted != null)) {
                    this.T2_CHEM_MIXRowDeleted(this, new T2_CHEM_MIXRowChangeEvent(((T2_CHEM_MIXRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T2_CHEM_MIXRowDeleting != null)) {
                    this.T2_CHEM_MIXRowDeleting(this, new T2_CHEM_MIXRowChangeEvent(((T2_CHEM_MIXRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT2_CHEM_MIXRow(T2_CHEM_MIXRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Tier2DataSet ds = new Tier2DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T2_CHEM_MIXDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T2_FAC_DUNDB_IDDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnPK_GUID;
            
            private global::System.Data.DataColumn columnFK_GUID;
            
            private global::System.Data.DataColumn columnFacilityDunBradstreetCode;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_DUNDB_IDDataTable() {
                this.TableName = "T2_FAC_DUNDB_ID";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T2_FAC_DUNDB_IDDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T2_FAC_DUNDB_IDDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PK_GUIDColumn {
                get {
                    return this.columnPK_GUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FK_GUIDColumn {
                get {
                    return this.columnFK_GUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FacilityDunBradstreetCodeColumn {
                get {
                    return this.columnFacilityDunBradstreetCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_DUNDB_IDRow this[int index] {
                get {
                    return ((T2_FAC_DUNDB_IDRow)(this.Rows[index]));
                }
            }
            
            public event T2_FAC_DUNDB_IDRowChangeEventHandler T2_FAC_DUNDB_IDRowChanging;
            
            public event T2_FAC_DUNDB_IDRowChangeEventHandler T2_FAC_DUNDB_IDRowChanged;
            
            public event T2_FAC_DUNDB_IDRowChangeEventHandler T2_FAC_DUNDB_IDRowDeleting;
            
            public event T2_FAC_DUNDB_IDRowChangeEventHandler T2_FAC_DUNDB_IDRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT2_FAC_DUNDB_IDRow(T2_FAC_DUNDB_IDRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_DUNDB_IDRow AddT2_FAC_DUNDB_IDRow(string PK_GUID, T2_FAC_SITERow parentT2_FAC_SITERowByFK_T2_FAC_DUNDB_ID_T2_FAC_SITE, string FacilityDunBradstreetCode) {
                T2_FAC_DUNDB_IDRow rowT2_FAC_DUNDB_IDRow = ((T2_FAC_DUNDB_IDRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PK_GUID,
                        null,
                        FacilityDunBradstreetCode};
                if ((parentT2_FAC_SITERowByFK_T2_FAC_DUNDB_ID_T2_FAC_SITE != null)) {
                    columnValuesArray[1] = parentT2_FAC_SITERowByFK_T2_FAC_DUNDB_ID_T2_FAC_SITE[0];
                }
                rowT2_FAC_DUNDB_IDRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT2_FAC_DUNDB_IDRow);
                return rowT2_FAC_DUNDB_IDRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_DUNDB_IDRow FindByPK_GUID(string PK_GUID) {
                return ((T2_FAC_DUNDB_IDRow)(this.Rows.Find(new object[] {
                            PK_GUID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T2_FAC_DUNDB_IDDataTable cln = ((T2_FAC_DUNDB_IDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T2_FAC_DUNDB_IDDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPK_GUID = base.Columns["PK_GUID"];
                this.columnFK_GUID = base.Columns["FK_GUID"];
                this.columnFacilityDunBradstreetCode = base.Columns["FacilityDunBradstreetCode"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPK_GUID = new global::System.Data.DataColumn("PK_GUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPK_GUID);
                this.columnFK_GUID = new global::System.Data.DataColumn("FK_GUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFK_GUID);
                this.columnFacilityDunBradstreetCode = new global::System.Data.DataColumn("FacilityDunBradstreetCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFacilityDunBradstreetCode);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPK_GUID}, true));
                this.columnPK_GUID.AllowDBNull = false;
                this.columnPK_GUID.Unique = true;
                this.columnPK_GUID.MaxLength = 36;
                this.columnFK_GUID.AllowDBNull = false;
                this.columnFK_GUID.MaxLength = 36;
                this.columnFacilityDunBradstreetCode.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_DUNDB_IDRow NewT2_FAC_DUNDB_IDRow() {
                return ((T2_FAC_DUNDB_IDRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T2_FAC_DUNDB_IDRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T2_FAC_DUNDB_IDRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T2_FAC_DUNDB_IDRowChanged != null)) {
                    this.T2_FAC_DUNDB_IDRowChanged(this, new T2_FAC_DUNDB_IDRowChangeEvent(((T2_FAC_DUNDB_IDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T2_FAC_DUNDB_IDRowChanging != null)) {
                    this.T2_FAC_DUNDB_IDRowChanging(this, new T2_FAC_DUNDB_IDRowChangeEvent(((T2_FAC_DUNDB_IDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T2_FAC_DUNDB_IDRowDeleted != null)) {
                    this.T2_FAC_DUNDB_IDRowDeleted(this, new T2_FAC_DUNDB_IDRowChangeEvent(((T2_FAC_DUNDB_IDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T2_FAC_DUNDB_IDRowDeleting != null)) {
                    this.T2_FAC_DUNDB_IDRowDeleting(this, new T2_FAC_DUNDB_IDRowChangeEvent(((T2_FAC_DUNDB_IDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT2_FAC_DUNDB_IDRow(T2_FAC_DUNDB_IDRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Tier2DataSet ds = new Tier2DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T2_FAC_DUNDB_IDDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T2_FAC_GEODataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnPK_GUID;
            
            private global::System.Data.DataColumn columnFK_GUID;
            
            private global::System.Data.DataColumn columnA_MEASURE;
            
            private global::System.Data.DataColumn columnB_MEASURE;
            
            private global::System.Data.DataColumn columnSRC_MAP_SCALE_NUM;
            
            private global::System.Data.DataColumn columnHORIZ_ACCUR_MEASURE_VALUE;
            
            private global::System.Data.DataColumn columnHORIZ_ACCUR_MEASURE_UNITCD;
            
            private global::System.Data.DataColumn columnHORIZ_ACCUR_MEASURE_UNITCDLISTID;
            
            private global::System.Data.DataColumn columnHORIZ_ACCUR_MEASURE_UNIT_NAME;
            
            private global::System.Data.DataColumn columnHORIZ_ACCUR_PREC_TXT;
            
            private global::System.Data.DataColumn columnHORIZ_ACCUR_RESULT_QUAL_CD;
            
            private global::System.Data.DataColumn columnHORIZ_ACCUR_RESULT_QUAL_CDLISTID;
            
            private global::System.Data.DataColumn columnHORIZ_ACCUR_RESULT_QUAL_NM;
            
            private global::System.Data.DataColumn columnHORIZ_COLL_METH_IDCODE;
            
            private global::System.Data.DataColumn columnHORIZ_COLL_METH_CDLISTID;
            
            private global::System.Data.DataColumn columnHORIZ_COLL_METH_NAME;
            
            private global::System.Data.DataColumn columnHORIZ_COLL_METH_DESC;
            
            private global::System.Data.DataColumn columnHORIZ_COLL_METH_DEVIATIONS;
            
            private global::System.Data.DataColumn columnREF_POINT_CD;
            
            private global::System.Data.DataColumn columnREF_POINT_CDLISTID;
            
            private global::System.Data.DataColumn columnREF_POINT_NAME;
            
            private global::System.Data.DataColumn columnHORIZ_REF_DATUM_CD;
            
            private global::System.Data.DataColumn columnHORIZ_REF_DATUM_CDLISTID;
            
            private global::System.Data.DataColumn columnHORIZ_REF_DATUM_NM;
            
            private global::System.Data.DataColumn columnDATA_COLL_DATE;
            
            private global::System.Data.DataColumn columnLOC_COMMENTS;
            
            private global::System.Data.DataColumn columnVERT_MEASURE_VALUE;
            
            private global::System.Data.DataColumn columnVERT_MEASURE_UNITCD;
            
            private global::System.Data.DataColumn columnVERT_MEASURE_UNITCDLISTID;
            
            private global::System.Data.DataColumn columnVERT_MEASURE_UNIT_NAME;
            
            private global::System.Data.DataColumn columnVERT_MEASURE_PREC_TXT;
            
            private global::System.Data.DataColumn columnVERT_MEASURE_RESULT_QUAL_CD;
            
            private global::System.Data.DataColumn columnVERT_MEASURE_RESULT_QUAL_CDLISTID;
            
            private global::System.Data.DataColumn columnVERT_MEASURE_RESULT_QUAL_NAME;
            
            private global::System.Data.DataColumn columnVERT_COLL_METH_IDCODE;
            
            private global::System.Data.DataColumn columnVERT_COLL_METH_CDLISTID;
            
            private global::System.Data.DataColumn columnVERT_COLL_METH_NAME;
            
            private global::System.Data.DataColumn columnVERT_COLL_METH_DESC;
            
            private global::System.Data.DataColumn columnVERT_COLL_METH_DEVIATIONS;
            
            private global::System.Data.DataColumn columnVERT_REF_DATUM_CD;
            
            private global::System.Data.DataColumn columnVERT_REF_DATUM_CDLISTID;
            
            private global::System.Data.DataColumn columnVERT_REF_DATUM_NM;
            
            private global::System.Data.DataColumn columnVERIF_METH_IDCODE;
            
            private global::System.Data.DataColumn columnVERIF_METH_CDLISTID;
            
            private global::System.Data.DataColumn columnVERIF_METH_NAME;
            
            private global::System.Data.DataColumn columnVERIF_METH_DESC;
            
            private global::System.Data.DataColumn columnVERIF_METH_DEVIATIONS;
            
            private global::System.Data.DataColumn columnCOORD_DATA_SRC_CD;
            
            private global::System.Data.DataColumn columnCOORD_DATA_SRC_CDLISTID;
            
            private global::System.Data.DataColumn columnCOORD_DATA_SRC_NM;
            
            private global::System.Data.DataColumn columnGEO_TYPE_CD;
            
            private global::System.Data.DataColumn columnGEO_TYPE_CDLISTID;
            
            private global::System.Data.DataColumn columnGEO_TYPE_NM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_GEODataTable() {
                this.TableName = "T2_FAC_GEO";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T2_FAC_GEODataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T2_FAC_GEODataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PK_GUIDColumn {
                get {
                    return this.columnPK_GUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FK_GUIDColumn {
                get {
                    return this.columnFK_GUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn A_MEASUREColumn {
                get {
                    return this.columnA_MEASURE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn B_MEASUREColumn {
                get {
                    return this.columnB_MEASURE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SRC_MAP_SCALE_NUMColumn {
                get {
                    return this.columnSRC_MAP_SCALE_NUM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HORIZ_ACCUR_MEASURE_VALUEColumn {
                get {
                    return this.columnHORIZ_ACCUR_MEASURE_VALUE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HORIZ_ACCUR_MEASURE_UNITCDColumn {
                get {
                    return this.columnHORIZ_ACCUR_MEASURE_UNITCD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HORIZ_ACCUR_MEASURE_UNITCDLISTIDColumn {
                get {
                    return this.columnHORIZ_ACCUR_MEASURE_UNITCDLISTID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HORIZ_ACCUR_MEASURE_UNIT_NAMEColumn {
                get {
                    return this.columnHORIZ_ACCUR_MEASURE_UNIT_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HORIZ_ACCUR_PREC_TXTColumn {
                get {
                    return this.columnHORIZ_ACCUR_PREC_TXT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HORIZ_ACCUR_RESULT_QUAL_CDColumn {
                get {
                    return this.columnHORIZ_ACCUR_RESULT_QUAL_CD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HORIZ_ACCUR_RESULT_QUAL_CDLISTIDColumn {
                get {
                    return this.columnHORIZ_ACCUR_RESULT_QUAL_CDLISTID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HORIZ_ACCUR_RESULT_QUAL_NMColumn {
                get {
                    return this.columnHORIZ_ACCUR_RESULT_QUAL_NM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HORIZ_COLL_METH_IDCODEColumn {
                get {
                    return this.columnHORIZ_COLL_METH_IDCODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HORIZ_COLL_METH_CDLISTIDColumn {
                get {
                    return this.columnHORIZ_COLL_METH_CDLISTID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HORIZ_COLL_METH_NAMEColumn {
                get {
                    return this.columnHORIZ_COLL_METH_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HORIZ_COLL_METH_DESCColumn {
                get {
                    return this.columnHORIZ_COLL_METH_DESC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HORIZ_COLL_METH_DEVIATIONSColumn {
                get {
                    return this.columnHORIZ_COLL_METH_DEVIATIONS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn REF_POINT_CDColumn {
                get {
                    return this.columnREF_POINT_CD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn REF_POINT_CDLISTIDColumn {
                get {
                    return this.columnREF_POINT_CDLISTID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn REF_POINT_NAMEColumn {
                get {
                    return this.columnREF_POINT_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HORIZ_REF_DATUM_CDColumn {
                get {
                    return this.columnHORIZ_REF_DATUM_CD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HORIZ_REF_DATUM_CDLISTIDColumn {
                get {
                    return this.columnHORIZ_REF_DATUM_CDLISTID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HORIZ_REF_DATUM_NMColumn {
                get {
                    return this.columnHORIZ_REF_DATUM_NM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DATA_COLL_DATEColumn {
                get {
                    return this.columnDATA_COLL_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LOC_COMMENTSColumn {
                get {
                    return this.columnLOC_COMMENTS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VERT_MEASURE_VALUEColumn {
                get {
                    return this.columnVERT_MEASURE_VALUE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VERT_MEASURE_UNITCDColumn {
                get {
                    return this.columnVERT_MEASURE_UNITCD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VERT_MEASURE_UNITCDLISTIDColumn {
                get {
                    return this.columnVERT_MEASURE_UNITCDLISTID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VERT_MEASURE_UNIT_NAMEColumn {
                get {
                    return this.columnVERT_MEASURE_UNIT_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VERT_MEASURE_PREC_TXTColumn {
                get {
                    return this.columnVERT_MEASURE_PREC_TXT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VERT_MEASURE_RESULT_QUAL_CDColumn {
                get {
                    return this.columnVERT_MEASURE_RESULT_QUAL_CD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VERT_MEASURE_RESULT_QUAL_CDLISTIDColumn {
                get {
                    return this.columnVERT_MEASURE_RESULT_QUAL_CDLISTID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VERT_MEASURE_RESULT_QUAL_NAMEColumn {
                get {
                    return this.columnVERT_MEASURE_RESULT_QUAL_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VERT_COLL_METH_IDCODEColumn {
                get {
                    return this.columnVERT_COLL_METH_IDCODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VERT_COLL_METH_CDLISTIDColumn {
                get {
                    return this.columnVERT_COLL_METH_CDLISTID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VERT_COLL_METH_NAMEColumn {
                get {
                    return this.columnVERT_COLL_METH_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VERT_COLL_METH_DESCColumn {
                get {
                    return this.columnVERT_COLL_METH_DESC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VERT_COLL_METH_DEVIATIONSColumn {
                get {
                    return this.columnVERT_COLL_METH_DEVIATIONS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VERT_REF_DATUM_CDColumn {
                get {
                    return this.columnVERT_REF_DATUM_CD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VERT_REF_DATUM_CDLISTIDColumn {
                get {
                    return this.columnVERT_REF_DATUM_CDLISTID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VERT_REF_DATUM_NMColumn {
                get {
                    return this.columnVERT_REF_DATUM_NM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VERIF_METH_IDCODEColumn {
                get {
                    return this.columnVERIF_METH_IDCODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VERIF_METH_CDLISTIDColumn {
                get {
                    return this.columnVERIF_METH_CDLISTID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VERIF_METH_NAMEColumn {
                get {
                    return this.columnVERIF_METH_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VERIF_METH_DESCColumn {
                get {
                    return this.columnVERIF_METH_DESC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VERIF_METH_DEVIATIONSColumn {
                get {
                    return this.columnVERIF_METH_DEVIATIONS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COORD_DATA_SRC_CDColumn {
                get {
                    return this.columnCOORD_DATA_SRC_CD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COORD_DATA_SRC_CDLISTIDColumn {
                get {
                    return this.columnCOORD_DATA_SRC_CDLISTID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COORD_DATA_SRC_NMColumn {
                get {
                    return this.columnCOORD_DATA_SRC_NM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GEO_TYPE_CDColumn {
                get {
                    return this.columnGEO_TYPE_CD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GEO_TYPE_CDLISTIDColumn {
                get {
                    return this.columnGEO_TYPE_CDLISTID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GEO_TYPE_NMColumn {
                get {
                    return this.columnGEO_TYPE_NM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_GEORow this[int index] {
                get {
                    return ((T2_FAC_GEORow)(this.Rows[index]));
                }
            }
            
            public event T2_FAC_GEORowChangeEventHandler T2_FAC_GEORowChanging;
            
            public event T2_FAC_GEORowChangeEventHandler T2_FAC_GEORowChanged;
            
            public event T2_FAC_GEORowChangeEventHandler T2_FAC_GEORowDeleting;
            
            public event T2_FAC_GEORowChangeEventHandler T2_FAC_GEORowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT2_FAC_GEORow(T2_FAC_GEORow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_GEORow AddT2_FAC_GEORow(
                        string PK_GUID, 
                        T2_FAC_SITERow parentT2_FAC_SITERowByFK_T2_FAC_GEO_T2_FAC_SITE, 
                        string A_MEASURE, 
                        string B_MEASURE, 
                        string SRC_MAP_SCALE_NUM, 
                        string HORIZ_ACCUR_MEASURE_VALUE, 
                        string HORIZ_ACCUR_MEASURE_UNITCD, 
                        string HORIZ_ACCUR_MEASURE_UNITCDLISTID, 
                        string HORIZ_ACCUR_MEASURE_UNIT_NAME, 
                        string HORIZ_ACCUR_PREC_TXT, 
                        string HORIZ_ACCUR_RESULT_QUAL_CD, 
                        string HORIZ_ACCUR_RESULT_QUAL_CDLISTID, 
                        string HORIZ_ACCUR_RESULT_QUAL_NM, 
                        string HORIZ_COLL_METH_IDCODE, 
                        string HORIZ_COLL_METH_CDLISTID, 
                        string HORIZ_COLL_METH_NAME, 
                        string HORIZ_COLL_METH_DESC, 
                        string HORIZ_COLL_METH_DEVIATIONS, 
                        string REF_POINT_CD, 
                        string REF_POINT_CDLISTID, 
                        string REF_POINT_NAME, 
                        string HORIZ_REF_DATUM_CD, 
                        string HORIZ_REF_DATUM_CDLISTID, 
                        string HORIZ_REF_DATUM_NM, 
                        string DATA_COLL_DATE, 
                        string LOC_COMMENTS, 
                        string VERT_MEASURE_VALUE, 
                        string VERT_MEASURE_UNITCD, 
                        string VERT_MEASURE_UNITCDLISTID, 
                        string VERT_MEASURE_UNIT_NAME, 
                        string VERT_MEASURE_PREC_TXT, 
                        string VERT_MEASURE_RESULT_QUAL_CD, 
                        string VERT_MEASURE_RESULT_QUAL_CDLISTID, 
                        string VERT_MEASURE_RESULT_QUAL_NAME, 
                        string VERT_COLL_METH_IDCODE, 
                        string VERT_COLL_METH_CDLISTID, 
                        string VERT_COLL_METH_NAME, 
                        string VERT_COLL_METH_DESC, 
                        string VERT_COLL_METH_DEVIATIONS, 
                        string VERT_REF_DATUM_CD, 
                        string VERT_REF_DATUM_CDLISTID, 
                        string VERT_REF_DATUM_NM, 
                        string VERIF_METH_IDCODE, 
                        string VERIF_METH_CDLISTID, 
                        string VERIF_METH_NAME, 
                        string VERIF_METH_DESC, 
                        string VERIF_METH_DEVIATIONS, 
                        string COORD_DATA_SRC_CD, 
                        string COORD_DATA_SRC_CDLISTID, 
                        string COORD_DATA_SRC_NM, 
                        string GEO_TYPE_CD, 
                        string GEO_TYPE_CDLISTID, 
                        string GEO_TYPE_NM) {
                T2_FAC_GEORow rowT2_FAC_GEORow = ((T2_FAC_GEORow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PK_GUID,
                        null,
                        A_MEASURE,
                        B_MEASURE,
                        SRC_MAP_SCALE_NUM,
                        HORIZ_ACCUR_MEASURE_VALUE,
                        HORIZ_ACCUR_MEASURE_UNITCD,
                        HORIZ_ACCUR_MEASURE_UNITCDLISTID,
                        HORIZ_ACCUR_MEASURE_UNIT_NAME,
                        HORIZ_ACCUR_PREC_TXT,
                        HORIZ_ACCUR_RESULT_QUAL_CD,
                        HORIZ_ACCUR_RESULT_QUAL_CDLISTID,
                        HORIZ_ACCUR_RESULT_QUAL_NM,
                        HORIZ_COLL_METH_IDCODE,
                        HORIZ_COLL_METH_CDLISTID,
                        HORIZ_COLL_METH_NAME,
                        HORIZ_COLL_METH_DESC,
                        HORIZ_COLL_METH_DEVIATIONS,
                        REF_POINT_CD,
                        REF_POINT_CDLISTID,
                        REF_POINT_NAME,
                        HORIZ_REF_DATUM_CD,
                        HORIZ_REF_DATUM_CDLISTID,
                        HORIZ_REF_DATUM_NM,
                        DATA_COLL_DATE,
                        LOC_COMMENTS,
                        VERT_MEASURE_VALUE,
                        VERT_MEASURE_UNITCD,
                        VERT_MEASURE_UNITCDLISTID,
                        VERT_MEASURE_UNIT_NAME,
                        VERT_MEASURE_PREC_TXT,
                        VERT_MEASURE_RESULT_QUAL_CD,
                        VERT_MEASURE_RESULT_QUAL_CDLISTID,
                        VERT_MEASURE_RESULT_QUAL_NAME,
                        VERT_COLL_METH_IDCODE,
                        VERT_COLL_METH_CDLISTID,
                        VERT_COLL_METH_NAME,
                        VERT_COLL_METH_DESC,
                        VERT_COLL_METH_DEVIATIONS,
                        VERT_REF_DATUM_CD,
                        VERT_REF_DATUM_CDLISTID,
                        VERT_REF_DATUM_NM,
                        VERIF_METH_IDCODE,
                        VERIF_METH_CDLISTID,
                        VERIF_METH_NAME,
                        VERIF_METH_DESC,
                        VERIF_METH_DEVIATIONS,
                        COORD_DATA_SRC_CD,
                        COORD_DATA_SRC_CDLISTID,
                        COORD_DATA_SRC_NM,
                        GEO_TYPE_CD,
                        GEO_TYPE_CDLISTID,
                        GEO_TYPE_NM};
                if ((parentT2_FAC_SITERowByFK_T2_FAC_GEO_T2_FAC_SITE != null)) {
                    columnValuesArray[1] = parentT2_FAC_SITERowByFK_T2_FAC_GEO_T2_FAC_SITE[0];
                }
                rowT2_FAC_GEORow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT2_FAC_GEORow);
                return rowT2_FAC_GEORow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_GEORow FindByPK_GUID(string PK_GUID) {
                return ((T2_FAC_GEORow)(this.Rows.Find(new object[] {
                            PK_GUID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T2_FAC_GEODataTable cln = ((T2_FAC_GEODataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T2_FAC_GEODataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPK_GUID = base.Columns["PK_GUID"];
                this.columnFK_GUID = base.Columns["FK_GUID"];
                this.columnA_MEASURE = base.Columns["A_MEASURE"];
                this.columnB_MEASURE = base.Columns["B_MEASURE"];
                this.columnSRC_MAP_SCALE_NUM = base.Columns["SRC_MAP_SCALE_NUM"];
                this.columnHORIZ_ACCUR_MEASURE_VALUE = base.Columns["HORIZ_ACCUR_MEASURE_VALUE"];
                this.columnHORIZ_ACCUR_MEASURE_UNITCD = base.Columns["HORIZ_ACCUR_MEASURE_UNITCD"];
                this.columnHORIZ_ACCUR_MEASURE_UNITCDLISTID = base.Columns["HORIZ_ACCUR_MEASURE_UNITCDLISTID"];
                this.columnHORIZ_ACCUR_MEASURE_UNIT_NAME = base.Columns["HORIZ_ACCUR_MEASURE_UNIT_NAME"];
                this.columnHORIZ_ACCUR_PREC_TXT = base.Columns["HORIZ_ACCUR_PREC_TXT"];
                this.columnHORIZ_ACCUR_RESULT_QUAL_CD = base.Columns["HORIZ_ACCUR_RESULT_QUAL_CD"];
                this.columnHORIZ_ACCUR_RESULT_QUAL_CDLISTID = base.Columns["HORIZ_ACCUR_RESULT_QUAL_CDLISTID"];
                this.columnHORIZ_ACCUR_RESULT_QUAL_NM = base.Columns["HORIZ_ACCUR_RESULT_QUAL_NM"];
                this.columnHORIZ_COLL_METH_IDCODE = base.Columns["HORIZ_COLL_METH_IDCODE"];
                this.columnHORIZ_COLL_METH_CDLISTID = base.Columns["HORIZ_COLL_METH_CDLISTID"];
                this.columnHORIZ_COLL_METH_NAME = base.Columns["HORIZ_COLL_METH_NAME"];
                this.columnHORIZ_COLL_METH_DESC = base.Columns["HORIZ_COLL_METH_DESC"];
                this.columnHORIZ_COLL_METH_DEVIATIONS = base.Columns["HORIZ_COLL_METH_DEVIATIONS"];
                this.columnREF_POINT_CD = base.Columns["REF_POINT_CD"];
                this.columnREF_POINT_CDLISTID = base.Columns["REF_POINT_CDLISTID"];
                this.columnREF_POINT_NAME = base.Columns["REF_POINT_NAME"];
                this.columnHORIZ_REF_DATUM_CD = base.Columns["HORIZ_REF_DATUM_CD"];
                this.columnHORIZ_REF_DATUM_CDLISTID = base.Columns["HORIZ_REF_DATUM_CDLISTID"];
                this.columnHORIZ_REF_DATUM_NM = base.Columns["HORIZ_REF_DATUM_NM"];
                this.columnDATA_COLL_DATE = base.Columns["DATA_COLL_DATE"];
                this.columnLOC_COMMENTS = base.Columns["LOC_COMMENTS"];
                this.columnVERT_MEASURE_VALUE = base.Columns["VERT_MEASURE_VALUE"];
                this.columnVERT_MEASURE_UNITCD = base.Columns["VERT_MEASURE_UNITCD"];
                this.columnVERT_MEASURE_UNITCDLISTID = base.Columns["VERT_MEASURE_UNITCDLISTID"];
                this.columnVERT_MEASURE_UNIT_NAME = base.Columns["VERT_MEASURE_UNIT_NAME"];
                this.columnVERT_MEASURE_PREC_TXT = base.Columns["VERT_MEASURE_PREC_TXT"];
                this.columnVERT_MEASURE_RESULT_QUAL_CD = base.Columns["VERT_MEASURE_RESULT_QUAL_CD"];
                this.columnVERT_MEASURE_RESULT_QUAL_CDLISTID = base.Columns["VERT_MEASURE_RESULT_QUAL_CDLISTID"];
                this.columnVERT_MEASURE_RESULT_QUAL_NAME = base.Columns["VERT_MEASURE_RESULT_QUAL_NAME"];
                this.columnVERT_COLL_METH_IDCODE = base.Columns["VERT_COLL_METH_IDCODE"];
                this.columnVERT_COLL_METH_CDLISTID = base.Columns["VERT_COLL_METH_CDLISTID"];
                this.columnVERT_COLL_METH_NAME = base.Columns["VERT_COLL_METH_NAME"];
                this.columnVERT_COLL_METH_DESC = base.Columns["VERT_COLL_METH_DESC"];
                this.columnVERT_COLL_METH_DEVIATIONS = base.Columns["VERT_COLL_METH_DEVIATIONS"];
                this.columnVERT_REF_DATUM_CD = base.Columns["VERT_REF_DATUM_CD"];
                this.columnVERT_REF_DATUM_CDLISTID = base.Columns["VERT_REF_DATUM_CDLISTID"];
                this.columnVERT_REF_DATUM_NM = base.Columns["VERT_REF_DATUM_NM"];
                this.columnVERIF_METH_IDCODE = base.Columns["VERIF_METH_IDCODE"];
                this.columnVERIF_METH_CDLISTID = base.Columns["VERIF_METH_CDLISTID"];
                this.columnVERIF_METH_NAME = base.Columns["VERIF_METH_NAME"];
                this.columnVERIF_METH_DESC = base.Columns["VERIF_METH_DESC"];
                this.columnVERIF_METH_DEVIATIONS = base.Columns["VERIF_METH_DEVIATIONS"];
                this.columnCOORD_DATA_SRC_CD = base.Columns["COORD_DATA_SRC_CD"];
                this.columnCOORD_DATA_SRC_CDLISTID = base.Columns["COORD_DATA_SRC_CDLISTID"];
                this.columnCOORD_DATA_SRC_NM = base.Columns["COORD_DATA_SRC_NM"];
                this.columnGEO_TYPE_CD = base.Columns["GEO_TYPE_CD"];
                this.columnGEO_TYPE_CDLISTID = base.Columns["GEO_TYPE_CDLISTID"];
                this.columnGEO_TYPE_NM = base.Columns["GEO_TYPE_NM"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPK_GUID = new global::System.Data.DataColumn("PK_GUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPK_GUID);
                this.columnFK_GUID = new global::System.Data.DataColumn("FK_GUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFK_GUID);
                this.columnA_MEASURE = new global::System.Data.DataColumn("A_MEASURE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnA_MEASURE);
                this.columnB_MEASURE = new global::System.Data.DataColumn("B_MEASURE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnB_MEASURE);
                this.columnSRC_MAP_SCALE_NUM = new global::System.Data.DataColumn("SRC_MAP_SCALE_NUM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSRC_MAP_SCALE_NUM);
                this.columnHORIZ_ACCUR_MEASURE_VALUE = new global::System.Data.DataColumn("HORIZ_ACCUR_MEASURE_VALUE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHORIZ_ACCUR_MEASURE_VALUE);
                this.columnHORIZ_ACCUR_MEASURE_UNITCD = new global::System.Data.DataColumn("HORIZ_ACCUR_MEASURE_UNITCD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHORIZ_ACCUR_MEASURE_UNITCD);
                this.columnHORIZ_ACCUR_MEASURE_UNITCDLISTID = new global::System.Data.DataColumn("HORIZ_ACCUR_MEASURE_UNITCDLISTID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHORIZ_ACCUR_MEASURE_UNITCDLISTID);
                this.columnHORIZ_ACCUR_MEASURE_UNIT_NAME = new global::System.Data.DataColumn("HORIZ_ACCUR_MEASURE_UNIT_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHORIZ_ACCUR_MEASURE_UNIT_NAME);
                this.columnHORIZ_ACCUR_PREC_TXT = new global::System.Data.DataColumn("HORIZ_ACCUR_PREC_TXT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHORIZ_ACCUR_PREC_TXT);
                this.columnHORIZ_ACCUR_RESULT_QUAL_CD = new global::System.Data.DataColumn("HORIZ_ACCUR_RESULT_QUAL_CD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHORIZ_ACCUR_RESULT_QUAL_CD);
                this.columnHORIZ_ACCUR_RESULT_QUAL_CDLISTID = new global::System.Data.DataColumn("HORIZ_ACCUR_RESULT_QUAL_CDLISTID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHORIZ_ACCUR_RESULT_QUAL_CDLISTID);
                this.columnHORIZ_ACCUR_RESULT_QUAL_NM = new global::System.Data.DataColumn("HORIZ_ACCUR_RESULT_QUAL_NM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHORIZ_ACCUR_RESULT_QUAL_NM);
                this.columnHORIZ_COLL_METH_IDCODE = new global::System.Data.DataColumn("HORIZ_COLL_METH_IDCODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHORIZ_COLL_METH_IDCODE);
                this.columnHORIZ_COLL_METH_CDLISTID = new global::System.Data.DataColumn("HORIZ_COLL_METH_CDLISTID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHORIZ_COLL_METH_CDLISTID);
                this.columnHORIZ_COLL_METH_NAME = new global::System.Data.DataColumn("HORIZ_COLL_METH_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHORIZ_COLL_METH_NAME);
                this.columnHORIZ_COLL_METH_DESC = new global::System.Data.DataColumn("HORIZ_COLL_METH_DESC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHORIZ_COLL_METH_DESC);
                this.columnHORIZ_COLL_METH_DEVIATIONS = new global::System.Data.DataColumn("HORIZ_COLL_METH_DEVIATIONS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHORIZ_COLL_METH_DEVIATIONS);
                this.columnREF_POINT_CD = new global::System.Data.DataColumn("REF_POINT_CD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREF_POINT_CD);
                this.columnREF_POINT_CDLISTID = new global::System.Data.DataColumn("REF_POINT_CDLISTID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREF_POINT_CDLISTID);
                this.columnREF_POINT_NAME = new global::System.Data.DataColumn("REF_POINT_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREF_POINT_NAME);
                this.columnHORIZ_REF_DATUM_CD = new global::System.Data.DataColumn("HORIZ_REF_DATUM_CD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHORIZ_REF_DATUM_CD);
                this.columnHORIZ_REF_DATUM_CDLISTID = new global::System.Data.DataColumn("HORIZ_REF_DATUM_CDLISTID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHORIZ_REF_DATUM_CDLISTID);
                this.columnHORIZ_REF_DATUM_NM = new global::System.Data.DataColumn("HORIZ_REF_DATUM_NM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHORIZ_REF_DATUM_NM);
                this.columnDATA_COLL_DATE = new global::System.Data.DataColumn("DATA_COLL_DATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATA_COLL_DATE);
                this.columnLOC_COMMENTS = new global::System.Data.DataColumn("LOC_COMMENTS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOC_COMMENTS);
                this.columnVERT_MEASURE_VALUE = new global::System.Data.DataColumn("VERT_MEASURE_VALUE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVERT_MEASURE_VALUE);
                this.columnVERT_MEASURE_UNITCD = new global::System.Data.DataColumn("VERT_MEASURE_UNITCD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVERT_MEASURE_UNITCD);
                this.columnVERT_MEASURE_UNITCDLISTID = new global::System.Data.DataColumn("VERT_MEASURE_UNITCDLISTID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVERT_MEASURE_UNITCDLISTID);
                this.columnVERT_MEASURE_UNIT_NAME = new global::System.Data.DataColumn("VERT_MEASURE_UNIT_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVERT_MEASURE_UNIT_NAME);
                this.columnVERT_MEASURE_PREC_TXT = new global::System.Data.DataColumn("VERT_MEASURE_PREC_TXT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVERT_MEASURE_PREC_TXT);
                this.columnVERT_MEASURE_RESULT_QUAL_CD = new global::System.Data.DataColumn("VERT_MEASURE_RESULT_QUAL_CD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVERT_MEASURE_RESULT_QUAL_CD);
                this.columnVERT_MEASURE_RESULT_QUAL_CDLISTID = new global::System.Data.DataColumn("VERT_MEASURE_RESULT_QUAL_CDLISTID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVERT_MEASURE_RESULT_QUAL_CDLISTID);
                this.columnVERT_MEASURE_RESULT_QUAL_NAME = new global::System.Data.DataColumn("VERT_MEASURE_RESULT_QUAL_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVERT_MEASURE_RESULT_QUAL_NAME);
                this.columnVERT_COLL_METH_IDCODE = new global::System.Data.DataColumn("VERT_COLL_METH_IDCODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVERT_COLL_METH_IDCODE);
                this.columnVERT_COLL_METH_CDLISTID = new global::System.Data.DataColumn("VERT_COLL_METH_CDLISTID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVERT_COLL_METH_CDLISTID);
                this.columnVERT_COLL_METH_NAME = new global::System.Data.DataColumn("VERT_COLL_METH_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVERT_COLL_METH_NAME);
                this.columnVERT_COLL_METH_DESC = new global::System.Data.DataColumn("VERT_COLL_METH_DESC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVERT_COLL_METH_DESC);
                this.columnVERT_COLL_METH_DEVIATIONS = new global::System.Data.DataColumn("VERT_COLL_METH_DEVIATIONS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVERT_COLL_METH_DEVIATIONS);
                this.columnVERT_REF_DATUM_CD = new global::System.Data.DataColumn("VERT_REF_DATUM_CD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVERT_REF_DATUM_CD);
                this.columnVERT_REF_DATUM_CDLISTID = new global::System.Data.DataColumn("VERT_REF_DATUM_CDLISTID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVERT_REF_DATUM_CDLISTID);
                this.columnVERT_REF_DATUM_NM = new global::System.Data.DataColumn("VERT_REF_DATUM_NM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVERT_REF_DATUM_NM);
                this.columnVERIF_METH_IDCODE = new global::System.Data.DataColumn("VERIF_METH_IDCODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVERIF_METH_IDCODE);
                this.columnVERIF_METH_CDLISTID = new global::System.Data.DataColumn("VERIF_METH_CDLISTID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVERIF_METH_CDLISTID);
                this.columnVERIF_METH_NAME = new global::System.Data.DataColumn("VERIF_METH_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVERIF_METH_NAME);
                this.columnVERIF_METH_DESC = new global::System.Data.DataColumn("VERIF_METH_DESC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVERIF_METH_DESC);
                this.columnVERIF_METH_DEVIATIONS = new global::System.Data.DataColumn("VERIF_METH_DEVIATIONS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVERIF_METH_DEVIATIONS);
                this.columnCOORD_DATA_SRC_CD = new global::System.Data.DataColumn("COORD_DATA_SRC_CD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOORD_DATA_SRC_CD);
                this.columnCOORD_DATA_SRC_CDLISTID = new global::System.Data.DataColumn("COORD_DATA_SRC_CDLISTID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOORD_DATA_SRC_CDLISTID);
                this.columnCOORD_DATA_SRC_NM = new global::System.Data.DataColumn("COORD_DATA_SRC_NM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOORD_DATA_SRC_NM);
                this.columnGEO_TYPE_CD = new global::System.Data.DataColumn("GEO_TYPE_CD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGEO_TYPE_CD);
                this.columnGEO_TYPE_CDLISTID = new global::System.Data.DataColumn("GEO_TYPE_CDLISTID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGEO_TYPE_CDLISTID);
                this.columnGEO_TYPE_NM = new global::System.Data.DataColumn("GEO_TYPE_NM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGEO_TYPE_NM);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPK_GUID}, true));
                this.columnPK_GUID.AllowDBNull = false;
                this.columnPK_GUID.Unique = true;
                this.columnPK_GUID.MaxLength = 36;
                this.columnFK_GUID.AllowDBNull = false;
                this.columnFK_GUID.MaxLength = 36;
                this.columnA_MEASURE.MaxLength = 10;
                this.columnB_MEASURE.MaxLength = 11;
                this.columnSRC_MAP_SCALE_NUM.MaxLength = 255;
                this.columnHORIZ_ACCUR_MEASURE_VALUE.MaxLength = 255;
                this.columnHORIZ_ACCUR_MEASURE_UNITCD.MaxLength = 255;
                this.columnHORIZ_ACCUR_MEASURE_UNITCDLISTID.MaxLength = 255;
                this.columnHORIZ_ACCUR_MEASURE_UNIT_NAME.MaxLength = 255;
                this.columnHORIZ_ACCUR_PREC_TXT.MaxLength = 255;
                this.columnHORIZ_ACCUR_RESULT_QUAL_CD.MaxLength = 255;
                this.columnHORIZ_ACCUR_RESULT_QUAL_CDLISTID.MaxLength = 255;
                this.columnHORIZ_ACCUR_RESULT_QUAL_NM.MaxLength = 255;
                this.columnHORIZ_COLL_METH_IDCODE.MaxLength = 255;
                this.columnHORIZ_COLL_METH_CDLISTID.MaxLength = 255;
                this.columnHORIZ_COLL_METH_NAME.MaxLength = 255;
                this.columnHORIZ_COLL_METH_DESC.MaxLength = 255;
                this.columnHORIZ_COLL_METH_DEVIATIONS.MaxLength = 255;
                this.columnREF_POINT_CD.MaxLength = 255;
                this.columnREF_POINT_CDLISTID.MaxLength = 255;
                this.columnREF_POINT_NAME.MaxLength = 255;
                this.columnHORIZ_REF_DATUM_CD.MaxLength = 255;
                this.columnHORIZ_REF_DATUM_CDLISTID.MaxLength = 255;
                this.columnHORIZ_REF_DATUM_NM.MaxLength = 255;
                this.columnDATA_COLL_DATE.MaxLength = 255;
                this.columnLOC_COMMENTS.MaxLength = 255;
                this.columnVERT_MEASURE_VALUE.MaxLength = 255;
                this.columnVERT_MEASURE_UNITCD.MaxLength = 255;
                this.columnVERT_MEASURE_UNITCDLISTID.MaxLength = 255;
                this.columnVERT_MEASURE_UNIT_NAME.MaxLength = 255;
                this.columnVERT_MEASURE_PREC_TXT.MaxLength = 255;
                this.columnVERT_MEASURE_RESULT_QUAL_CD.MaxLength = 255;
                this.columnVERT_MEASURE_RESULT_QUAL_CDLISTID.MaxLength = 255;
                this.columnVERT_MEASURE_RESULT_QUAL_NAME.MaxLength = 255;
                this.columnVERT_COLL_METH_IDCODE.MaxLength = 255;
                this.columnVERT_COLL_METH_CDLISTID.MaxLength = 255;
                this.columnVERT_COLL_METH_NAME.MaxLength = 255;
                this.columnVERT_COLL_METH_DESC.MaxLength = 255;
                this.columnVERT_COLL_METH_DEVIATIONS.MaxLength = 255;
                this.columnVERT_REF_DATUM_CD.MaxLength = 255;
                this.columnVERT_REF_DATUM_CDLISTID.MaxLength = 255;
                this.columnVERT_REF_DATUM_NM.MaxLength = 255;
                this.columnVERIF_METH_IDCODE.MaxLength = 255;
                this.columnVERIF_METH_CDLISTID.MaxLength = 255;
                this.columnVERIF_METH_NAME.MaxLength = 255;
                this.columnVERIF_METH_DESC.MaxLength = 255;
                this.columnVERIF_METH_DEVIATIONS.MaxLength = 255;
                this.columnCOORD_DATA_SRC_CD.MaxLength = 255;
                this.columnCOORD_DATA_SRC_CDLISTID.MaxLength = 255;
                this.columnCOORD_DATA_SRC_NM.MaxLength = 255;
                this.columnGEO_TYPE_CD.MaxLength = 255;
                this.columnGEO_TYPE_CDLISTID.MaxLength = 255;
                this.columnGEO_TYPE_NM.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_GEORow NewT2_FAC_GEORow() {
                return ((T2_FAC_GEORow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T2_FAC_GEORow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T2_FAC_GEORow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T2_FAC_GEORowChanged != null)) {
                    this.T2_FAC_GEORowChanged(this, new T2_FAC_GEORowChangeEvent(((T2_FAC_GEORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T2_FAC_GEORowChanging != null)) {
                    this.T2_FAC_GEORowChanging(this, new T2_FAC_GEORowChangeEvent(((T2_FAC_GEORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T2_FAC_GEORowDeleted != null)) {
                    this.T2_FAC_GEORowDeleted(this, new T2_FAC_GEORowChangeEvent(((T2_FAC_GEORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T2_FAC_GEORowDeleting != null)) {
                    this.T2_FAC_GEORowDeleting(this, new T2_FAC_GEORowChangeEvent(((T2_FAC_GEORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT2_FAC_GEORow(T2_FAC_GEORow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Tier2DataSet ds = new Tier2DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T2_FAC_GEODataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T2_FAC_INDDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnPK_GUID;
            
            private global::System.Data.DataColumn columnFK_GUID;
            
            private global::System.Data.DataColumn columnIndividualIdentifier;
            
            private global::System.Data.DataColumn columnIndividualTitleText;
            
            private global::System.Data.DataColumn columnNamePrefixText;
            
            private global::System.Data.DataColumn columnIndividualFullName;
            
            private global::System.Data.DataColumn columnFirstName;
            
            private global::System.Data.DataColumn columnMiddleName;
            
            private global::System.Data.DataColumn columnLastName;
            
            private global::System.Data.DataColumn columnNameSuffixText;
            
            private global::System.Data.DataColumn columnMailingAddressText;
            
            private global::System.Data.DataColumn columnMailingSupplementalAddressText;
            
            private global::System.Data.DataColumn columnMailingAddressCityName;
            
            private global::System.Data.DataColumn columnMailingStateCode;
            
            private global::System.Data.DataColumn columnMailingStateCodeListIdentifier;
            
            private global::System.Data.DataColumn columnMailingStateName;
            
            private global::System.Data.DataColumn columnMailingAddressPostalCode;
            
            private global::System.Data.DataColumn columnMailingCountryCode;
            
            private global::System.Data.DataColumn columnMailingCountryCodeListIdentifier;
            
            private global::System.Data.DataColumn columnMailingCountryName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_INDDataTable() {
                this.TableName = "T2_FAC_IND";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T2_FAC_INDDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T2_FAC_INDDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PK_GUIDColumn {
                get {
                    return this.columnPK_GUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FK_GUIDColumn {
                get {
                    return this.columnFK_GUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IndividualIdentifierColumn {
                get {
                    return this.columnIndividualIdentifier;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IndividualTitleTextColumn {
                get {
                    return this.columnIndividualTitleText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NamePrefixTextColumn {
                get {
                    return this.columnNamePrefixText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IndividualFullNameColumn {
                get {
                    return this.columnIndividualFullName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FirstNameColumn {
                get {
                    return this.columnFirstName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MiddleNameColumn {
                get {
                    return this.columnMiddleName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LastNameColumn {
                get {
                    return this.columnLastName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameSuffixTextColumn {
                get {
                    return this.columnNameSuffixText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MailingAddressTextColumn {
                get {
                    return this.columnMailingAddressText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MailingSupplementalAddressTextColumn {
                get {
                    return this.columnMailingSupplementalAddressText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MailingAddressCityNameColumn {
                get {
                    return this.columnMailingAddressCityName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MailingStateCodeColumn {
                get {
                    return this.columnMailingStateCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MailingStateCodeListIdentifierColumn {
                get {
                    return this.columnMailingStateCodeListIdentifier;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MailingStateNameColumn {
                get {
                    return this.columnMailingStateName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MailingAddressPostalCodeColumn {
                get {
                    return this.columnMailingAddressPostalCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MailingCountryCodeColumn {
                get {
                    return this.columnMailingCountryCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MailingCountryCodeListIdentifierColumn {
                get {
                    return this.columnMailingCountryCodeListIdentifier;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MailingCountryNameColumn {
                get {
                    return this.columnMailingCountryName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_INDRow this[int index] {
                get {
                    return ((T2_FAC_INDRow)(this.Rows[index]));
                }
            }
            
            public event T2_FAC_INDRowChangeEventHandler T2_FAC_INDRowChanging;
            
            public event T2_FAC_INDRowChangeEventHandler T2_FAC_INDRowChanged;
            
            public event T2_FAC_INDRowChangeEventHandler T2_FAC_INDRowDeleting;
            
            public event T2_FAC_INDRowChangeEventHandler T2_FAC_INDRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT2_FAC_INDRow(T2_FAC_INDRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_INDRow AddT2_FAC_INDRow(
                        string PK_GUID, 
                        T2_FAC_SITERow parentT2_FAC_SITERowByFK_T2_FAC_IND_T2_FAC_SITE, 
                        string IndividualIdentifier, 
                        string IndividualTitleText, 
                        string NamePrefixText, 
                        string IndividualFullName, 
                        string FirstName, 
                        string MiddleName, 
                        string LastName, 
                        string NameSuffixText, 
                        string MailingAddressText, 
                        string MailingSupplementalAddressText, 
                        string MailingAddressCityName, 
                        string MailingStateCode, 
                        string MailingStateCodeListIdentifier, 
                        string MailingStateName, 
                        string MailingAddressPostalCode, 
                        string MailingCountryCode, 
                        string MailingCountryCodeListIdentifier, 
                        string MailingCountryName) {
                T2_FAC_INDRow rowT2_FAC_INDRow = ((T2_FAC_INDRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PK_GUID,
                        null,
                        IndividualIdentifier,
                        IndividualTitleText,
                        NamePrefixText,
                        IndividualFullName,
                        FirstName,
                        MiddleName,
                        LastName,
                        NameSuffixText,
                        MailingAddressText,
                        MailingSupplementalAddressText,
                        MailingAddressCityName,
                        MailingStateCode,
                        MailingStateCodeListIdentifier,
                        MailingStateName,
                        MailingAddressPostalCode,
                        MailingCountryCode,
                        MailingCountryCodeListIdentifier,
                        MailingCountryName};
                if ((parentT2_FAC_SITERowByFK_T2_FAC_IND_T2_FAC_SITE != null)) {
                    columnValuesArray[1] = parentT2_FAC_SITERowByFK_T2_FAC_IND_T2_FAC_SITE[0];
                }
                rowT2_FAC_INDRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT2_FAC_INDRow);
                return rowT2_FAC_INDRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_INDRow FindByPK_GUID(string PK_GUID) {
                return ((T2_FAC_INDRow)(this.Rows.Find(new object[] {
                            PK_GUID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T2_FAC_INDDataTable cln = ((T2_FAC_INDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T2_FAC_INDDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPK_GUID = base.Columns["PK_GUID"];
                this.columnFK_GUID = base.Columns["FK_GUID"];
                this.columnIndividualIdentifier = base.Columns["IndividualIdentifier"];
                this.columnIndividualTitleText = base.Columns["IndividualTitleText"];
                this.columnNamePrefixText = base.Columns["NamePrefixText"];
                this.columnIndividualFullName = base.Columns["IndividualFullName"];
                this.columnFirstName = base.Columns["FirstName"];
                this.columnMiddleName = base.Columns["MiddleName"];
                this.columnLastName = base.Columns["LastName"];
                this.columnNameSuffixText = base.Columns["NameSuffixText"];
                this.columnMailingAddressText = base.Columns["MailingAddressText"];
                this.columnMailingSupplementalAddressText = base.Columns["MailingSupplementalAddressText"];
                this.columnMailingAddressCityName = base.Columns["MailingAddressCityName"];
                this.columnMailingStateCode = base.Columns["MailingStateCode"];
                this.columnMailingStateCodeListIdentifier = base.Columns["MailingStateCodeListIdentifier"];
                this.columnMailingStateName = base.Columns["MailingStateName"];
                this.columnMailingAddressPostalCode = base.Columns["MailingAddressPostalCode"];
                this.columnMailingCountryCode = base.Columns["MailingCountryCode"];
                this.columnMailingCountryCodeListIdentifier = base.Columns["MailingCountryCodeListIdentifier"];
                this.columnMailingCountryName = base.Columns["MailingCountryName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPK_GUID = new global::System.Data.DataColumn("PK_GUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPK_GUID);
                this.columnFK_GUID = new global::System.Data.DataColumn("FK_GUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFK_GUID);
                this.columnIndividualIdentifier = new global::System.Data.DataColumn("IndividualIdentifier", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIndividualIdentifier);
                this.columnIndividualTitleText = new global::System.Data.DataColumn("IndividualTitleText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIndividualTitleText);
                this.columnNamePrefixText = new global::System.Data.DataColumn("NamePrefixText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNamePrefixText);
                this.columnIndividualFullName = new global::System.Data.DataColumn("IndividualFullName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIndividualFullName);
                this.columnFirstName = new global::System.Data.DataColumn("FirstName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFirstName);
                this.columnMiddleName = new global::System.Data.DataColumn("MiddleName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMiddleName);
                this.columnLastName = new global::System.Data.DataColumn("LastName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastName);
                this.columnNameSuffixText = new global::System.Data.DataColumn("NameSuffixText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNameSuffixText);
                this.columnMailingAddressText = new global::System.Data.DataColumn("MailingAddressText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMailingAddressText);
                this.columnMailingSupplementalAddressText = new global::System.Data.DataColumn("MailingSupplementalAddressText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMailingSupplementalAddressText);
                this.columnMailingAddressCityName = new global::System.Data.DataColumn("MailingAddressCityName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMailingAddressCityName);
                this.columnMailingStateCode = new global::System.Data.DataColumn("MailingStateCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMailingStateCode);
                this.columnMailingStateCodeListIdentifier = new global::System.Data.DataColumn("MailingStateCodeListIdentifier", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMailingStateCodeListIdentifier);
                this.columnMailingStateName = new global::System.Data.DataColumn("MailingStateName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMailingStateName);
                this.columnMailingAddressPostalCode = new global::System.Data.DataColumn("MailingAddressPostalCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMailingAddressPostalCode);
                this.columnMailingCountryCode = new global::System.Data.DataColumn("MailingCountryCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMailingCountryCode);
                this.columnMailingCountryCodeListIdentifier = new global::System.Data.DataColumn("MailingCountryCodeListIdentifier", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMailingCountryCodeListIdentifier);
                this.columnMailingCountryName = new global::System.Data.DataColumn("MailingCountryName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMailingCountryName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPK_GUID}, true));
                this.columnPK_GUID.AllowDBNull = false;
                this.columnPK_GUID.Unique = true;
                this.columnPK_GUID.MaxLength = 36;
                this.columnFK_GUID.MaxLength = 36;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_INDRow NewT2_FAC_INDRow() {
                return ((T2_FAC_INDRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T2_FAC_INDRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T2_FAC_INDRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T2_FAC_INDRowChanged != null)) {
                    this.T2_FAC_INDRowChanged(this, new T2_FAC_INDRowChangeEvent(((T2_FAC_INDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T2_FAC_INDRowChanging != null)) {
                    this.T2_FAC_INDRowChanging(this, new T2_FAC_INDRowChangeEvent(((T2_FAC_INDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T2_FAC_INDRowDeleted != null)) {
                    this.T2_FAC_INDRowDeleted(this, new T2_FAC_INDRowChangeEvent(((T2_FAC_INDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T2_FAC_INDRowDeleting != null)) {
                    this.T2_FAC_INDRowDeleting(this, new T2_FAC_INDRowChangeEvent(((T2_FAC_INDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT2_FAC_INDRow(T2_FAC_INDRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Tier2DataSet ds = new Tier2DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T2_FAC_INDDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T2_FAC_IND_EMAILDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnPK_GUID;
            
            private global::System.Data.DataColumn columnFK_GUID;
            
            private global::System.Data.DataColumn columnElectronicAddressText;
            
            private global::System.Data.DataColumn columnElectronicAddressTypeName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_IND_EMAILDataTable() {
                this.TableName = "T2_FAC_IND_EMAIL";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T2_FAC_IND_EMAILDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T2_FAC_IND_EMAILDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PK_GUIDColumn {
                get {
                    return this.columnPK_GUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FK_GUIDColumn {
                get {
                    return this.columnFK_GUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ElectronicAddressTextColumn {
                get {
                    return this.columnElectronicAddressText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ElectronicAddressTypeNameColumn {
                get {
                    return this.columnElectronicAddressTypeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_IND_EMAILRow this[int index] {
                get {
                    return ((T2_FAC_IND_EMAILRow)(this.Rows[index]));
                }
            }
            
            public event T2_FAC_IND_EMAILRowChangeEventHandler T2_FAC_IND_EMAILRowChanging;
            
            public event T2_FAC_IND_EMAILRowChangeEventHandler T2_FAC_IND_EMAILRowChanged;
            
            public event T2_FAC_IND_EMAILRowChangeEventHandler T2_FAC_IND_EMAILRowDeleting;
            
            public event T2_FAC_IND_EMAILRowChangeEventHandler T2_FAC_IND_EMAILRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT2_FAC_IND_EMAILRow(T2_FAC_IND_EMAILRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_IND_EMAILRow AddT2_FAC_IND_EMAILRow(string PK_GUID, T2_FAC_INDRow parentT2_FAC_INDRowByFK_T2_FAC_IND_EMAIL_T2_FAC_IND, string ElectronicAddressText, string ElectronicAddressTypeName) {
                T2_FAC_IND_EMAILRow rowT2_FAC_IND_EMAILRow = ((T2_FAC_IND_EMAILRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PK_GUID,
                        null,
                        ElectronicAddressText,
                        ElectronicAddressTypeName};
                if ((parentT2_FAC_INDRowByFK_T2_FAC_IND_EMAIL_T2_FAC_IND != null)) {
                    columnValuesArray[1] = parentT2_FAC_INDRowByFK_T2_FAC_IND_EMAIL_T2_FAC_IND[0];
                }
                rowT2_FAC_IND_EMAILRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT2_FAC_IND_EMAILRow);
                return rowT2_FAC_IND_EMAILRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_IND_EMAILRow FindByPK_GUID(string PK_GUID) {
                return ((T2_FAC_IND_EMAILRow)(this.Rows.Find(new object[] {
                            PK_GUID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T2_FAC_IND_EMAILDataTable cln = ((T2_FAC_IND_EMAILDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T2_FAC_IND_EMAILDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPK_GUID = base.Columns["PK_GUID"];
                this.columnFK_GUID = base.Columns["FK_GUID"];
                this.columnElectronicAddressText = base.Columns["ElectronicAddressText"];
                this.columnElectronicAddressTypeName = base.Columns["ElectronicAddressTypeName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPK_GUID = new global::System.Data.DataColumn("PK_GUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPK_GUID);
                this.columnFK_GUID = new global::System.Data.DataColumn("FK_GUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFK_GUID);
                this.columnElectronicAddressText = new global::System.Data.DataColumn("ElectronicAddressText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnElectronicAddressText);
                this.columnElectronicAddressTypeName = new global::System.Data.DataColumn("ElectronicAddressTypeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnElectronicAddressTypeName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPK_GUID}, true));
                this.columnPK_GUID.AllowDBNull = false;
                this.columnPK_GUID.Unique = true;
                this.columnPK_GUID.MaxLength = 36;
                this.columnFK_GUID.AllowDBNull = false;
                this.columnFK_GUID.MaxLength = 36;
                this.columnElectronicAddressText.MaxLength = 255;
                this.columnElectronicAddressTypeName.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_IND_EMAILRow NewT2_FAC_IND_EMAILRow() {
                return ((T2_FAC_IND_EMAILRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T2_FAC_IND_EMAILRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T2_FAC_IND_EMAILRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T2_FAC_IND_EMAILRowChanged != null)) {
                    this.T2_FAC_IND_EMAILRowChanged(this, new T2_FAC_IND_EMAILRowChangeEvent(((T2_FAC_IND_EMAILRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T2_FAC_IND_EMAILRowChanging != null)) {
                    this.T2_FAC_IND_EMAILRowChanging(this, new T2_FAC_IND_EMAILRowChangeEvent(((T2_FAC_IND_EMAILRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T2_FAC_IND_EMAILRowDeleted != null)) {
                    this.T2_FAC_IND_EMAILRowDeleted(this, new T2_FAC_IND_EMAILRowChangeEvent(((T2_FAC_IND_EMAILRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T2_FAC_IND_EMAILRowDeleting != null)) {
                    this.T2_FAC_IND_EMAILRowDeleting(this, new T2_FAC_IND_EMAILRowChangeEvent(((T2_FAC_IND_EMAILRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT2_FAC_IND_EMAILRow(T2_FAC_IND_EMAILRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Tier2DataSet ds = new Tier2DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T2_FAC_IND_EMAILDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T2_FAC_IND_PHONEDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnPK_GUID;
            
            private global::System.Data.DataColumn columnFK_GUID;
            
            private global::System.Data.DataColumn columnTelephoneNumberText;
            
            private global::System.Data.DataColumn columnTelephoneNumberTypeName;
            
            private global::System.Data.DataColumn columnTelephoneExtensionNumberText;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_IND_PHONEDataTable() {
                this.TableName = "T2_FAC_IND_PHONE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T2_FAC_IND_PHONEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T2_FAC_IND_PHONEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PK_GUIDColumn {
                get {
                    return this.columnPK_GUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FK_GUIDColumn {
                get {
                    return this.columnFK_GUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TelephoneNumberTextColumn {
                get {
                    return this.columnTelephoneNumberText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TelephoneNumberTypeNameColumn {
                get {
                    return this.columnTelephoneNumberTypeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TelephoneExtensionNumberTextColumn {
                get {
                    return this.columnTelephoneExtensionNumberText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_IND_PHONERow this[int index] {
                get {
                    return ((T2_FAC_IND_PHONERow)(this.Rows[index]));
                }
            }
            
            public event T2_FAC_IND_PHONERowChangeEventHandler T2_FAC_IND_PHONERowChanging;
            
            public event T2_FAC_IND_PHONERowChangeEventHandler T2_FAC_IND_PHONERowChanged;
            
            public event T2_FAC_IND_PHONERowChangeEventHandler T2_FAC_IND_PHONERowDeleting;
            
            public event T2_FAC_IND_PHONERowChangeEventHandler T2_FAC_IND_PHONERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT2_FAC_IND_PHONERow(T2_FAC_IND_PHONERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_IND_PHONERow AddT2_FAC_IND_PHONERow(string PK_GUID, T2_FAC_INDRow parentT2_FAC_INDRowByFK_T2_FAC_IND_PHONE_T2_FAC_IND, string TelephoneNumberText, string TelephoneNumberTypeName, string TelephoneExtensionNumberText) {
                T2_FAC_IND_PHONERow rowT2_FAC_IND_PHONERow = ((T2_FAC_IND_PHONERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PK_GUID,
                        null,
                        TelephoneNumberText,
                        TelephoneNumberTypeName,
                        TelephoneExtensionNumberText};
                if ((parentT2_FAC_INDRowByFK_T2_FAC_IND_PHONE_T2_FAC_IND != null)) {
                    columnValuesArray[1] = parentT2_FAC_INDRowByFK_T2_FAC_IND_PHONE_T2_FAC_IND[0];
                }
                rowT2_FAC_IND_PHONERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT2_FAC_IND_PHONERow);
                return rowT2_FAC_IND_PHONERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_IND_PHONERow FindByPK_GUID(string PK_GUID) {
                return ((T2_FAC_IND_PHONERow)(this.Rows.Find(new object[] {
                            PK_GUID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T2_FAC_IND_PHONEDataTable cln = ((T2_FAC_IND_PHONEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T2_FAC_IND_PHONEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPK_GUID = base.Columns["PK_GUID"];
                this.columnFK_GUID = base.Columns["FK_GUID"];
                this.columnTelephoneNumberText = base.Columns["TelephoneNumberText"];
                this.columnTelephoneNumberTypeName = base.Columns["TelephoneNumberTypeName"];
                this.columnTelephoneExtensionNumberText = base.Columns["TelephoneExtensionNumberText"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPK_GUID = new global::System.Data.DataColumn("PK_GUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPK_GUID);
                this.columnFK_GUID = new global::System.Data.DataColumn("FK_GUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFK_GUID);
                this.columnTelephoneNumberText = new global::System.Data.DataColumn("TelephoneNumberText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTelephoneNumberText);
                this.columnTelephoneNumberTypeName = new global::System.Data.DataColumn("TelephoneNumberTypeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTelephoneNumberTypeName);
                this.columnTelephoneExtensionNumberText = new global::System.Data.DataColumn("TelephoneExtensionNumberText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTelephoneExtensionNumberText);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPK_GUID}, true));
                this.columnPK_GUID.AllowDBNull = false;
                this.columnPK_GUID.Unique = true;
                this.columnPK_GUID.MaxLength = 36;
                this.columnFK_GUID.AllowDBNull = false;
                this.columnFK_GUID.MaxLength = 36;
                this.columnTelephoneNumberText.MaxLength = 255;
                this.columnTelephoneNumberTypeName.MaxLength = 255;
                this.columnTelephoneExtensionNumberText.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_IND_PHONERow NewT2_FAC_IND_PHONERow() {
                return ((T2_FAC_IND_PHONERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T2_FAC_IND_PHONERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T2_FAC_IND_PHONERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T2_FAC_IND_PHONERowChanged != null)) {
                    this.T2_FAC_IND_PHONERowChanged(this, new T2_FAC_IND_PHONERowChangeEvent(((T2_FAC_IND_PHONERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T2_FAC_IND_PHONERowChanging != null)) {
                    this.T2_FAC_IND_PHONERowChanging(this, new T2_FAC_IND_PHONERowChangeEvent(((T2_FAC_IND_PHONERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T2_FAC_IND_PHONERowDeleted != null)) {
                    this.T2_FAC_IND_PHONERowDeleted(this, new T2_FAC_IND_PHONERowChangeEvent(((T2_FAC_IND_PHONERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T2_FAC_IND_PHONERowDeleting != null)) {
                    this.T2_FAC_IND_PHONERowDeleting(this, new T2_FAC_IND_PHONERowChangeEvent(((T2_FAC_IND_PHONERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT2_FAC_IND_PHONERow(T2_FAC_IND_PHONERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Tier2DataSet ds = new Tier2DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T2_FAC_IND_PHONEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T2_FAC_IND_TYPEDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnPK_GUID;
            
            private global::System.Data.DataColumn columnFK_GUID;
            
            private global::System.Data.DataColumn columnContactType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_IND_TYPEDataTable() {
                this.TableName = "T2_FAC_IND_TYPE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T2_FAC_IND_TYPEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T2_FAC_IND_TYPEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PK_GUIDColumn {
                get {
                    return this.columnPK_GUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FK_GUIDColumn {
                get {
                    return this.columnFK_GUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContactTypeColumn {
                get {
                    return this.columnContactType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_IND_TYPERow this[int index] {
                get {
                    return ((T2_FAC_IND_TYPERow)(this.Rows[index]));
                }
            }
            
            public event T2_FAC_IND_TYPERowChangeEventHandler T2_FAC_IND_TYPERowChanging;
            
            public event T2_FAC_IND_TYPERowChangeEventHandler T2_FAC_IND_TYPERowChanged;
            
            public event T2_FAC_IND_TYPERowChangeEventHandler T2_FAC_IND_TYPERowDeleting;
            
            public event T2_FAC_IND_TYPERowChangeEventHandler T2_FAC_IND_TYPERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT2_FAC_IND_TYPERow(T2_FAC_IND_TYPERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_IND_TYPERow AddT2_FAC_IND_TYPERow(string PK_GUID, T2_FAC_INDRow parentT2_FAC_INDRowByFK_T2_FAC_IND_TYPE_T2_FAC_IND, string ContactType) {
                T2_FAC_IND_TYPERow rowT2_FAC_IND_TYPERow = ((T2_FAC_IND_TYPERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PK_GUID,
                        null,
                        ContactType};
                if ((parentT2_FAC_INDRowByFK_T2_FAC_IND_TYPE_T2_FAC_IND != null)) {
                    columnValuesArray[1] = parentT2_FAC_INDRowByFK_T2_FAC_IND_TYPE_T2_FAC_IND[0];
                }
                rowT2_FAC_IND_TYPERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT2_FAC_IND_TYPERow);
                return rowT2_FAC_IND_TYPERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_IND_TYPERow FindByPK_GUID(string PK_GUID) {
                return ((T2_FAC_IND_TYPERow)(this.Rows.Find(new object[] {
                            PK_GUID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T2_FAC_IND_TYPEDataTable cln = ((T2_FAC_IND_TYPEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T2_FAC_IND_TYPEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPK_GUID = base.Columns["PK_GUID"];
                this.columnFK_GUID = base.Columns["FK_GUID"];
                this.columnContactType = base.Columns["ContactType"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPK_GUID = new global::System.Data.DataColumn("PK_GUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPK_GUID);
                this.columnFK_GUID = new global::System.Data.DataColumn("FK_GUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFK_GUID);
                this.columnContactType = new global::System.Data.DataColumn("ContactType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactType);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPK_GUID}, true));
                this.columnPK_GUID.AllowDBNull = false;
                this.columnPK_GUID.Unique = true;
                this.columnPK_GUID.MaxLength = 36;
                this.columnFK_GUID.AllowDBNull = false;
                this.columnFK_GUID.MaxLength = 36;
                this.columnContactType.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_IND_TYPERow NewT2_FAC_IND_TYPERow() {
                return ((T2_FAC_IND_TYPERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T2_FAC_IND_TYPERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T2_FAC_IND_TYPERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T2_FAC_IND_TYPERowChanged != null)) {
                    this.T2_FAC_IND_TYPERowChanged(this, new T2_FAC_IND_TYPERowChangeEvent(((T2_FAC_IND_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T2_FAC_IND_TYPERowChanging != null)) {
                    this.T2_FAC_IND_TYPERowChanging(this, new T2_FAC_IND_TYPERowChangeEvent(((T2_FAC_IND_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T2_FAC_IND_TYPERowDeleted != null)) {
                    this.T2_FAC_IND_TYPERowDeleted(this, new T2_FAC_IND_TYPERowChangeEvent(((T2_FAC_IND_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T2_FAC_IND_TYPERowDeleting != null)) {
                    this.T2_FAC_IND_TYPERowDeleting(this, new T2_FAC_IND_TYPERowChangeEvent(((T2_FAC_IND_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT2_FAC_IND_TYPERow(T2_FAC_IND_TYPERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Tier2DataSet ds = new Tier2DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T2_FAC_IND_TYPEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T2_FAC_NAICSDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnPK_GUID;
            
            private global::System.Data.DataColumn columnFK_GUID;
            
            private global::System.Data.DataColumn columnNAICSCode;
            
            private global::System.Data.DataColumn columnNAICSIndustryCode;
            
            private global::System.Data.DataColumn columnNAICSGroupCode;
            
            private global::System.Data.DataColumn columnNAICSSubsectorCode;
            
            private global::System.Data.DataColumn columnNAICSSectorCode;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_NAICSDataTable() {
                this.TableName = "T2_FAC_NAICS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T2_FAC_NAICSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T2_FAC_NAICSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PK_GUIDColumn {
                get {
                    return this.columnPK_GUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FK_GUIDColumn {
                get {
                    return this.columnFK_GUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NAICSCodeColumn {
                get {
                    return this.columnNAICSCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NAICSIndustryCodeColumn {
                get {
                    return this.columnNAICSIndustryCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NAICSGroupCodeColumn {
                get {
                    return this.columnNAICSGroupCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NAICSSubsectorCodeColumn {
                get {
                    return this.columnNAICSSubsectorCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NAICSSectorCodeColumn {
                get {
                    return this.columnNAICSSectorCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_NAICSRow this[int index] {
                get {
                    return ((T2_FAC_NAICSRow)(this.Rows[index]));
                }
            }
            
            public event T2_FAC_NAICSRowChangeEventHandler T2_FAC_NAICSRowChanging;
            
            public event T2_FAC_NAICSRowChangeEventHandler T2_FAC_NAICSRowChanged;
            
            public event T2_FAC_NAICSRowChangeEventHandler T2_FAC_NAICSRowDeleting;
            
            public event T2_FAC_NAICSRowChangeEventHandler T2_FAC_NAICSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT2_FAC_NAICSRow(T2_FAC_NAICSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_NAICSRow AddT2_FAC_NAICSRow(string PK_GUID, T2_FAC_SITERow parentT2_FAC_SITERowByFK_T2_FAC_NAICS_T2_FAC_SITE, string NAICSCode, string NAICSIndustryCode, string NAICSGroupCode, string NAICSSubsectorCode, string NAICSSectorCode) {
                T2_FAC_NAICSRow rowT2_FAC_NAICSRow = ((T2_FAC_NAICSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PK_GUID,
                        null,
                        NAICSCode,
                        NAICSIndustryCode,
                        NAICSGroupCode,
                        NAICSSubsectorCode,
                        NAICSSectorCode};
                if ((parentT2_FAC_SITERowByFK_T2_FAC_NAICS_T2_FAC_SITE != null)) {
                    columnValuesArray[1] = parentT2_FAC_SITERowByFK_T2_FAC_NAICS_T2_FAC_SITE[0];
                }
                rowT2_FAC_NAICSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT2_FAC_NAICSRow);
                return rowT2_FAC_NAICSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_NAICSRow FindByPK_GUID(string PK_GUID) {
                return ((T2_FAC_NAICSRow)(this.Rows.Find(new object[] {
                            PK_GUID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T2_FAC_NAICSDataTable cln = ((T2_FAC_NAICSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T2_FAC_NAICSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPK_GUID = base.Columns["PK_GUID"];
                this.columnFK_GUID = base.Columns["FK_GUID"];
                this.columnNAICSCode = base.Columns["NAICSCode"];
                this.columnNAICSIndustryCode = base.Columns["NAICSIndustryCode"];
                this.columnNAICSGroupCode = base.Columns["NAICSGroupCode"];
                this.columnNAICSSubsectorCode = base.Columns["NAICSSubsectorCode"];
                this.columnNAICSSectorCode = base.Columns["NAICSSectorCode"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPK_GUID = new global::System.Data.DataColumn("PK_GUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPK_GUID);
                this.columnFK_GUID = new global::System.Data.DataColumn("FK_GUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFK_GUID);
                this.columnNAICSCode = new global::System.Data.DataColumn("NAICSCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAICSCode);
                this.columnNAICSIndustryCode = new global::System.Data.DataColumn("NAICSIndustryCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAICSIndustryCode);
                this.columnNAICSGroupCode = new global::System.Data.DataColumn("NAICSGroupCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAICSGroupCode);
                this.columnNAICSSubsectorCode = new global::System.Data.DataColumn("NAICSSubsectorCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAICSSubsectorCode);
                this.columnNAICSSectorCode = new global::System.Data.DataColumn("NAICSSectorCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAICSSectorCode);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPK_GUID}, true));
                this.columnPK_GUID.AllowDBNull = false;
                this.columnPK_GUID.Unique = true;
                this.columnPK_GUID.MaxLength = 36;
                this.columnFK_GUID.AllowDBNull = false;
                this.columnFK_GUID.MaxLength = 36;
                this.columnNAICSCode.MaxLength = 6;
                this.columnNAICSIndustryCode.MaxLength = 5;
                this.columnNAICSGroupCode.MaxLength = 4;
                this.columnNAICSSubsectorCode.MaxLength = 3;
                this.columnNAICSSectorCode.MaxLength = 2;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_NAICSRow NewT2_FAC_NAICSRow() {
                return ((T2_FAC_NAICSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T2_FAC_NAICSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T2_FAC_NAICSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T2_FAC_NAICSRowChanged != null)) {
                    this.T2_FAC_NAICSRowChanged(this, new T2_FAC_NAICSRowChangeEvent(((T2_FAC_NAICSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T2_FAC_NAICSRowChanging != null)) {
                    this.T2_FAC_NAICSRowChanging(this, new T2_FAC_NAICSRowChangeEvent(((T2_FAC_NAICSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T2_FAC_NAICSRowDeleted != null)) {
                    this.T2_FAC_NAICSRowDeleted(this, new T2_FAC_NAICSRowChangeEvent(((T2_FAC_NAICSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T2_FAC_NAICSRowDeleting != null)) {
                    this.T2_FAC_NAICSRowDeleting(this, new T2_FAC_NAICSRowChangeEvent(((T2_FAC_NAICSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT2_FAC_NAICSRow(T2_FAC_NAICSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Tier2DataSet ds = new Tier2DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T2_FAC_NAICSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T2_FAC_NPDES_IDDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnPK_GUID;
            
            private global::System.Data.DataColumn columnFK_GUID;
            
            private global::System.Data.DataColumn columnNPDESIdentificationNumber;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_NPDES_IDDataTable() {
                this.TableName = "T2_FAC_NPDES_ID";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T2_FAC_NPDES_IDDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T2_FAC_NPDES_IDDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PK_GUIDColumn {
                get {
                    return this.columnPK_GUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FK_GUIDColumn {
                get {
                    return this.columnFK_GUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NPDESIdentificationNumberColumn {
                get {
                    return this.columnNPDESIdentificationNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_NPDES_IDRow this[int index] {
                get {
                    return ((T2_FAC_NPDES_IDRow)(this.Rows[index]));
                }
            }
            
            public event T2_FAC_NPDES_IDRowChangeEventHandler T2_FAC_NPDES_IDRowChanging;
            
            public event T2_FAC_NPDES_IDRowChangeEventHandler T2_FAC_NPDES_IDRowChanged;
            
            public event T2_FAC_NPDES_IDRowChangeEventHandler T2_FAC_NPDES_IDRowDeleting;
            
            public event T2_FAC_NPDES_IDRowChangeEventHandler T2_FAC_NPDES_IDRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT2_FAC_NPDES_IDRow(T2_FAC_NPDES_IDRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_NPDES_IDRow AddT2_FAC_NPDES_IDRow(string PK_GUID, T2_FAC_SITERow parentT2_FAC_SITERowByFK_T2_FAC_NPDES_ID_T2_FAC_SITE, string NPDESIdentificationNumber) {
                T2_FAC_NPDES_IDRow rowT2_FAC_NPDES_IDRow = ((T2_FAC_NPDES_IDRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PK_GUID,
                        null,
                        NPDESIdentificationNumber};
                if ((parentT2_FAC_SITERowByFK_T2_FAC_NPDES_ID_T2_FAC_SITE != null)) {
                    columnValuesArray[1] = parentT2_FAC_SITERowByFK_T2_FAC_NPDES_ID_T2_FAC_SITE[0];
                }
                rowT2_FAC_NPDES_IDRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT2_FAC_NPDES_IDRow);
                return rowT2_FAC_NPDES_IDRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_NPDES_IDRow FindByPK_GUID(string PK_GUID) {
                return ((T2_FAC_NPDES_IDRow)(this.Rows.Find(new object[] {
                            PK_GUID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T2_FAC_NPDES_IDDataTable cln = ((T2_FAC_NPDES_IDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T2_FAC_NPDES_IDDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPK_GUID = base.Columns["PK_GUID"];
                this.columnFK_GUID = base.Columns["FK_GUID"];
                this.columnNPDESIdentificationNumber = base.Columns["NPDESIdentificationNumber"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPK_GUID = new global::System.Data.DataColumn("PK_GUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPK_GUID);
                this.columnFK_GUID = new global::System.Data.DataColumn("FK_GUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFK_GUID);
                this.columnNPDESIdentificationNumber = new global::System.Data.DataColumn("NPDESIdentificationNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNPDESIdentificationNumber);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPK_GUID}, true));
                this.columnPK_GUID.AllowDBNull = false;
                this.columnPK_GUID.Unique = true;
                this.columnPK_GUID.MaxLength = 36;
                this.columnFK_GUID.AllowDBNull = false;
                this.columnFK_GUID.MaxLength = 36;
                this.columnNPDESIdentificationNumber.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_NPDES_IDRow NewT2_FAC_NPDES_IDRow() {
                return ((T2_FAC_NPDES_IDRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T2_FAC_NPDES_IDRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T2_FAC_NPDES_IDRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T2_FAC_NPDES_IDRowChanged != null)) {
                    this.T2_FAC_NPDES_IDRowChanged(this, new T2_FAC_NPDES_IDRowChangeEvent(((T2_FAC_NPDES_IDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T2_FAC_NPDES_IDRowChanging != null)) {
                    this.T2_FAC_NPDES_IDRowChanging(this, new T2_FAC_NPDES_IDRowChangeEvent(((T2_FAC_NPDES_IDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T2_FAC_NPDES_IDRowDeleted != null)) {
                    this.T2_FAC_NPDES_IDRowDeleted(this, new T2_FAC_NPDES_IDRowChangeEvent(((T2_FAC_NPDES_IDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T2_FAC_NPDES_IDRowDeleting != null)) {
                    this.T2_FAC_NPDES_IDRowDeleting(this, new T2_FAC_NPDES_IDRowChangeEvent(((T2_FAC_NPDES_IDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT2_FAC_NPDES_IDRow(T2_FAC_NPDES_IDRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Tier2DataSet ds = new Tier2DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T2_FAC_NPDES_IDDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T2_FAC_RCRA_IDDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnPK_GUID;
            
            private global::System.Data.DataColumn columnFK_GUID;
            
            private global::System.Data.DataColumn columnRCRAIdentificationNumber;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_RCRA_IDDataTable() {
                this.TableName = "T2_FAC_RCRA_ID";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T2_FAC_RCRA_IDDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T2_FAC_RCRA_IDDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PK_GUIDColumn {
                get {
                    return this.columnPK_GUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FK_GUIDColumn {
                get {
                    return this.columnFK_GUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RCRAIdentificationNumberColumn {
                get {
                    return this.columnRCRAIdentificationNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_RCRA_IDRow this[int index] {
                get {
                    return ((T2_FAC_RCRA_IDRow)(this.Rows[index]));
                }
            }
            
            public event T2_FAC_RCRA_IDRowChangeEventHandler T2_FAC_RCRA_IDRowChanging;
            
            public event T2_FAC_RCRA_IDRowChangeEventHandler T2_FAC_RCRA_IDRowChanged;
            
            public event T2_FAC_RCRA_IDRowChangeEventHandler T2_FAC_RCRA_IDRowDeleting;
            
            public event T2_FAC_RCRA_IDRowChangeEventHandler T2_FAC_RCRA_IDRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT2_FAC_RCRA_IDRow(T2_FAC_RCRA_IDRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_RCRA_IDRow AddT2_FAC_RCRA_IDRow(string PK_GUID, T2_FAC_SITERow parentT2_FAC_SITERowByFK_T2_FAC_RCRA_ID_T2_FAC_SITE, string RCRAIdentificationNumber) {
                T2_FAC_RCRA_IDRow rowT2_FAC_RCRA_IDRow = ((T2_FAC_RCRA_IDRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PK_GUID,
                        null,
                        RCRAIdentificationNumber};
                if ((parentT2_FAC_SITERowByFK_T2_FAC_RCRA_ID_T2_FAC_SITE != null)) {
                    columnValuesArray[1] = parentT2_FAC_SITERowByFK_T2_FAC_RCRA_ID_T2_FAC_SITE[0];
                }
                rowT2_FAC_RCRA_IDRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT2_FAC_RCRA_IDRow);
                return rowT2_FAC_RCRA_IDRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_RCRA_IDRow FindByPK_GUID(string PK_GUID) {
                return ((T2_FAC_RCRA_IDRow)(this.Rows.Find(new object[] {
                            PK_GUID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T2_FAC_RCRA_IDDataTable cln = ((T2_FAC_RCRA_IDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T2_FAC_RCRA_IDDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPK_GUID = base.Columns["PK_GUID"];
                this.columnFK_GUID = base.Columns["FK_GUID"];
                this.columnRCRAIdentificationNumber = base.Columns["RCRAIdentificationNumber"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPK_GUID = new global::System.Data.DataColumn("PK_GUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPK_GUID);
                this.columnFK_GUID = new global::System.Data.DataColumn("FK_GUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFK_GUID);
                this.columnRCRAIdentificationNumber = new global::System.Data.DataColumn("RCRAIdentificationNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRCRAIdentificationNumber);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPK_GUID}, true));
                this.columnPK_GUID.AllowDBNull = false;
                this.columnPK_GUID.Unique = true;
                this.columnPK_GUID.MaxLength = 36;
                this.columnFK_GUID.AllowDBNull = false;
                this.columnFK_GUID.MaxLength = 36;
                this.columnRCRAIdentificationNumber.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_RCRA_IDRow NewT2_FAC_RCRA_IDRow() {
                return ((T2_FAC_RCRA_IDRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T2_FAC_RCRA_IDRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T2_FAC_RCRA_IDRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T2_FAC_RCRA_IDRowChanged != null)) {
                    this.T2_FAC_RCRA_IDRowChanged(this, new T2_FAC_RCRA_IDRowChangeEvent(((T2_FAC_RCRA_IDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T2_FAC_RCRA_IDRowChanging != null)) {
                    this.T2_FAC_RCRA_IDRowChanging(this, new T2_FAC_RCRA_IDRowChangeEvent(((T2_FAC_RCRA_IDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T2_FAC_RCRA_IDRowDeleted != null)) {
                    this.T2_FAC_RCRA_IDRowDeleted(this, new T2_FAC_RCRA_IDRowChangeEvent(((T2_FAC_RCRA_IDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T2_FAC_RCRA_IDRowDeleting != null)) {
                    this.T2_FAC_RCRA_IDRowDeleting(this, new T2_FAC_RCRA_IDRowChangeEvent(((T2_FAC_RCRA_IDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT2_FAC_RCRA_IDRow(T2_FAC_RCRA_IDRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Tier2DataSet ds = new Tier2DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T2_FAC_RCRA_IDDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T2_FAC_SICDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnPK_GUID;
            
            private global::System.Data.DataColumn columnFK_GUID;
            
            private global::System.Data.DataColumn columnSICCode;
            
            private global::System.Data.DataColumn columnSICPrimaryIndicator;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_SICDataTable() {
                this.TableName = "T2_FAC_SIC";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T2_FAC_SICDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T2_FAC_SICDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PK_GUIDColumn {
                get {
                    return this.columnPK_GUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FK_GUIDColumn {
                get {
                    return this.columnFK_GUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SICCodeColumn {
                get {
                    return this.columnSICCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SICPrimaryIndicatorColumn {
                get {
                    return this.columnSICPrimaryIndicator;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_SICRow this[int index] {
                get {
                    return ((T2_FAC_SICRow)(this.Rows[index]));
                }
            }
            
            public event T2_FAC_SICRowChangeEventHandler T2_FAC_SICRowChanging;
            
            public event T2_FAC_SICRowChangeEventHandler T2_FAC_SICRowChanged;
            
            public event T2_FAC_SICRowChangeEventHandler T2_FAC_SICRowDeleting;
            
            public event T2_FAC_SICRowChangeEventHandler T2_FAC_SICRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT2_FAC_SICRow(T2_FAC_SICRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_SICRow AddT2_FAC_SICRow(string PK_GUID, T2_FAC_SITERow parentT2_FAC_SITERowByFK_T2_FAC_SIC_T2_FAC_SITE, string SICCode, string SICPrimaryIndicator) {
                T2_FAC_SICRow rowT2_FAC_SICRow = ((T2_FAC_SICRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PK_GUID,
                        null,
                        SICCode,
                        SICPrimaryIndicator};
                if ((parentT2_FAC_SITERowByFK_T2_FAC_SIC_T2_FAC_SITE != null)) {
                    columnValuesArray[1] = parentT2_FAC_SITERowByFK_T2_FAC_SIC_T2_FAC_SITE[0];
                }
                rowT2_FAC_SICRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT2_FAC_SICRow);
                return rowT2_FAC_SICRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_SICRow FindByPK_GUID(string PK_GUID) {
                return ((T2_FAC_SICRow)(this.Rows.Find(new object[] {
                            PK_GUID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T2_FAC_SICDataTable cln = ((T2_FAC_SICDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T2_FAC_SICDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPK_GUID = base.Columns["PK_GUID"];
                this.columnFK_GUID = base.Columns["FK_GUID"];
                this.columnSICCode = base.Columns["SICCode"];
                this.columnSICPrimaryIndicator = base.Columns["SICPrimaryIndicator"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPK_GUID = new global::System.Data.DataColumn("PK_GUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPK_GUID);
                this.columnFK_GUID = new global::System.Data.DataColumn("FK_GUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFK_GUID);
                this.columnSICCode = new global::System.Data.DataColumn("SICCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSICCode);
                this.columnSICPrimaryIndicator = new global::System.Data.DataColumn("SICPrimaryIndicator", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSICPrimaryIndicator);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPK_GUID}, true));
                this.columnPK_GUID.AllowDBNull = false;
                this.columnPK_GUID.Unique = true;
                this.columnPK_GUID.MaxLength = 36;
                this.columnFK_GUID.AllowDBNull = false;
                this.columnFK_GUID.MaxLength = 36;
                this.columnSICCode.MaxLength = 4;
                this.columnSICPrimaryIndicator.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_SICRow NewT2_FAC_SICRow() {
                return ((T2_FAC_SICRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T2_FAC_SICRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T2_FAC_SICRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T2_FAC_SICRowChanged != null)) {
                    this.T2_FAC_SICRowChanged(this, new T2_FAC_SICRowChangeEvent(((T2_FAC_SICRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T2_FAC_SICRowChanging != null)) {
                    this.T2_FAC_SICRowChanging(this, new T2_FAC_SICRowChangeEvent(((T2_FAC_SICRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T2_FAC_SICRowDeleted != null)) {
                    this.T2_FAC_SICRowDeleted(this, new T2_FAC_SICRowChangeEvent(((T2_FAC_SICRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T2_FAC_SICRowDeleting != null)) {
                    this.T2_FAC_SICRowDeleting(this, new T2_FAC_SICRowChangeEvent(((T2_FAC_SICRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT2_FAC_SICRow(T2_FAC_SICRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Tier2DataSet ds = new Tier2DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T2_FAC_SICDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T2_FAC_SITEDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnPK_GUID;
            
            private global::System.Data.DataColumn columnFK_GUID;
            
            private global::System.Data.DataColumn columnFacilitySiteIdentifier;
            
            private global::System.Data.DataColumn columnFacilitySiteName;
            
            private global::System.Data.DataColumn columnFacilityStatus;
            
            private global::System.Data.DataColumn columnLocationAddressText;
            
            private global::System.Data.DataColumn columnSupplementalLocationText;
            
            private global::System.Data.DataColumn columnLocalityName;
            
            private global::System.Data.DataColumn columnStateCode;
            
            private global::System.Data.DataColumn columnStateCodeListIdentifier;
            
            private global::System.Data.DataColumn columnStateName;
            
            private global::System.Data.DataColumn columnAddressPostalCode;
            
            private global::System.Data.DataColumn columnCountryCode;
            
            private global::System.Data.DataColumn columnCountryCodeListIdentifier;
            
            private global::System.Data.DataColumn columnCountryName;
            
            private global::System.Data.DataColumn columnCountyCode;
            
            private global::System.Data.DataColumn columnCountyCodeListIdentifier;
            
            private global::System.Data.DataColumn columnCountyName;
            
            private global::System.Data.DataColumn columnTribalCode;
            
            private global::System.Data.DataColumn columnTribalCodeListIdentifier;
            
            private global::System.Data.DataColumn columnTribalName;
            
            private global::System.Data.DataColumn columnTribalLandName;
            
            private global::System.Data.DataColumn columnTribalLandIndicator;
            
            private global::System.Data.DataColumn columnLocationDescriptionText;
            
            private global::System.Data.DataColumn columnMailingFacilitySiteName;
            
            private global::System.Data.DataColumn columnMailingAddressText;
            
            private global::System.Data.DataColumn columnMailingSupplementalAddressText;
            
            private global::System.Data.DataColumn columnMailingAddressCityName;
            
            private global::System.Data.DataColumn columnMailingStateCode;
            
            private global::System.Data.DataColumn columnMailingStateCodeListIdentifier;
            
            private global::System.Data.DataColumn columnMailingStateName;
            
            private global::System.Data.DataColumn columnMailingAddressPostalCode;
            
            private global::System.Data.DataColumn columnMailingCountryCode;
            
            private global::System.Data.DataColumn columnMailingCountryCodeListIdentifier;
            
            private global::System.Data.DataColumn columnMailingCountryName;
            
            private global::System.Data.DataColumn columnParentCompanyNameNAIndicator;
            
            private global::System.Data.DataColumn columnParentCompanyNameText;
            
            private global::System.Data.DataColumn columnParentDunBradstreetCode;
            
            private global::System.Data.DataColumn columnFireDistrict;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_SITEDataTable() {
                this.TableName = "T2_FAC_SITE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T2_FAC_SITEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T2_FAC_SITEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PK_GUIDColumn {
                get {
                    return this.columnPK_GUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FK_GUIDColumn {
                get {
                    return this.columnFK_GUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FacilitySiteIdentifierColumn {
                get {
                    return this.columnFacilitySiteIdentifier;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FacilitySiteNameColumn {
                get {
                    return this.columnFacilitySiteName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FacilityStatusColumn {
                get {
                    return this.columnFacilityStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocationAddressTextColumn {
                get {
                    return this.columnLocationAddressText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SupplementalLocationTextColumn {
                get {
                    return this.columnSupplementalLocationText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocalityNameColumn {
                get {
                    return this.columnLocalityName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StateCodeColumn {
                get {
                    return this.columnStateCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StateCodeListIdentifierColumn {
                get {
                    return this.columnStateCodeListIdentifier;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StateNameColumn {
                get {
                    return this.columnStateName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddressPostalCodeColumn {
                get {
                    return this.columnAddressPostalCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CountryCodeColumn {
                get {
                    return this.columnCountryCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CountryCodeListIdentifierColumn {
                get {
                    return this.columnCountryCodeListIdentifier;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CountryNameColumn {
                get {
                    return this.columnCountryName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CountyCodeColumn {
                get {
                    return this.columnCountyCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CountyCodeListIdentifierColumn {
                get {
                    return this.columnCountyCodeListIdentifier;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CountyNameColumn {
                get {
                    return this.columnCountyName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TribalCodeColumn {
                get {
                    return this.columnTribalCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TribalCodeListIdentifierColumn {
                get {
                    return this.columnTribalCodeListIdentifier;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TribalNameColumn {
                get {
                    return this.columnTribalName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TribalLandNameColumn {
                get {
                    return this.columnTribalLandName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TribalLandIndicatorColumn {
                get {
                    return this.columnTribalLandIndicator;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocationDescriptionTextColumn {
                get {
                    return this.columnLocationDescriptionText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MailingFacilitySiteNameColumn {
                get {
                    return this.columnMailingFacilitySiteName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MailingAddressTextColumn {
                get {
                    return this.columnMailingAddressText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MailingSupplementalAddressTextColumn {
                get {
                    return this.columnMailingSupplementalAddressText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MailingAddressCityNameColumn {
                get {
                    return this.columnMailingAddressCityName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MailingStateCodeColumn {
                get {
                    return this.columnMailingStateCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MailingStateCodeListIdentifierColumn {
                get {
                    return this.columnMailingStateCodeListIdentifier;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MailingStateNameColumn {
                get {
                    return this.columnMailingStateName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MailingAddressPostalCodeColumn {
                get {
                    return this.columnMailingAddressPostalCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MailingCountryCodeColumn {
                get {
                    return this.columnMailingCountryCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MailingCountryCodeListIdentifierColumn {
                get {
                    return this.columnMailingCountryCodeListIdentifier;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MailingCountryNameColumn {
                get {
                    return this.columnMailingCountryName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParentCompanyNameNAIndicatorColumn {
                get {
                    return this.columnParentCompanyNameNAIndicator;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParentCompanyNameTextColumn {
                get {
                    return this.columnParentCompanyNameText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParentDunBradstreetCodeColumn {
                get {
                    return this.columnParentDunBradstreetCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FireDistrictColumn {
                get {
                    return this.columnFireDistrict;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_SITERow this[int index] {
                get {
                    return ((T2_FAC_SITERow)(this.Rows[index]));
                }
            }
            
            public event T2_FAC_SITERowChangeEventHandler T2_FAC_SITERowChanging;
            
            public event T2_FAC_SITERowChangeEventHandler T2_FAC_SITERowChanged;
            
            public event T2_FAC_SITERowChangeEventHandler T2_FAC_SITERowDeleting;
            
            public event T2_FAC_SITERowChangeEventHandler T2_FAC_SITERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT2_FAC_SITERow(T2_FAC_SITERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_SITERow AddT2_FAC_SITERow(
                        string PK_GUID, 
                        T2_REPORTRow parentT2_REPORTRowByFK_T2_FAC_SITE_T2_REPORT, 
                        string FacilitySiteIdentifier, 
                        string FacilitySiteName, 
                        string FacilityStatus, 
                        string LocationAddressText, 
                        string SupplementalLocationText, 
                        string LocalityName, 
                        string StateCode, 
                        string StateCodeListIdentifier, 
                        string StateName, 
                        string AddressPostalCode, 
                        string CountryCode, 
                        string CountryCodeListIdentifier, 
                        string CountryName, 
                        string CountyCode, 
                        string CountyCodeListIdentifier, 
                        string CountyName, 
                        string TribalCode, 
                        string TribalCodeListIdentifier, 
                        string TribalName, 
                        string TribalLandName, 
                        string TribalLandIndicator, 
                        string LocationDescriptionText, 
                        string MailingFacilitySiteName, 
                        string MailingAddressText, 
                        string MailingSupplementalAddressText, 
                        string MailingAddressCityName, 
                        string MailingStateCode, 
                        string MailingStateCodeListIdentifier, 
                        string MailingStateName, 
                        string MailingAddressPostalCode, 
                        string MailingCountryCode, 
                        string MailingCountryCodeListIdentifier, 
                        string MailingCountryName, 
                        string ParentCompanyNameNAIndicator, 
                        string ParentCompanyNameText, 
                        string ParentDunBradstreetCode, 
                        string FireDistrict) {
                T2_FAC_SITERow rowT2_FAC_SITERow = ((T2_FAC_SITERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PK_GUID,
                        null,
                        FacilitySiteIdentifier,
                        FacilitySiteName,
                        FacilityStatus,
                        LocationAddressText,
                        SupplementalLocationText,
                        LocalityName,
                        StateCode,
                        StateCodeListIdentifier,
                        StateName,
                        AddressPostalCode,
                        CountryCode,
                        CountryCodeListIdentifier,
                        CountryName,
                        CountyCode,
                        CountyCodeListIdentifier,
                        CountyName,
                        TribalCode,
                        TribalCodeListIdentifier,
                        TribalName,
                        TribalLandName,
                        TribalLandIndicator,
                        LocationDescriptionText,
                        MailingFacilitySiteName,
                        MailingAddressText,
                        MailingSupplementalAddressText,
                        MailingAddressCityName,
                        MailingStateCode,
                        MailingStateCodeListIdentifier,
                        MailingStateName,
                        MailingAddressPostalCode,
                        MailingCountryCode,
                        MailingCountryCodeListIdentifier,
                        MailingCountryName,
                        ParentCompanyNameNAIndicator,
                        ParentCompanyNameText,
                        ParentDunBradstreetCode,
                        FireDistrict};
                if ((parentT2_REPORTRowByFK_T2_FAC_SITE_T2_REPORT != null)) {
                    columnValuesArray[1] = parentT2_REPORTRowByFK_T2_FAC_SITE_T2_REPORT[0];
                }
                rowT2_FAC_SITERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT2_FAC_SITERow);
                return rowT2_FAC_SITERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_SITERow FindByPK_GUID(string PK_GUID) {
                return ((T2_FAC_SITERow)(this.Rows.Find(new object[] {
                            PK_GUID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T2_FAC_SITEDataTable cln = ((T2_FAC_SITEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T2_FAC_SITEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPK_GUID = base.Columns["PK_GUID"];
                this.columnFK_GUID = base.Columns["FK_GUID"];
                this.columnFacilitySiteIdentifier = base.Columns["FacilitySiteIdentifier"];
                this.columnFacilitySiteName = base.Columns["FacilitySiteName"];
                this.columnFacilityStatus = base.Columns["FacilityStatus"];
                this.columnLocationAddressText = base.Columns["LocationAddressText"];
                this.columnSupplementalLocationText = base.Columns["SupplementalLocationText"];
                this.columnLocalityName = base.Columns["LocalityName"];
                this.columnStateCode = base.Columns["StateCode"];
                this.columnStateCodeListIdentifier = base.Columns["StateCodeListIdentifier"];
                this.columnStateName = base.Columns["StateName"];
                this.columnAddressPostalCode = base.Columns["AddressPostalCode"];
                this.columnCountryCode = base.Columns["CountryCode"];
                this.columnCountryCodeListIdentifier = base.Columns["CountryCodeListIdentifier"];
                this.columnCountryName = base.Columns["CountryName"];
                this.columnCountyCode = base.Columns["CountyCode"];
                this.columnCountyCodeListIdentifier = base.Columns["CountyCodeListIdentifier"];
                this.columnCountyName = base.Columns["CountyName"];
                this.columnTribalCode = base.Columns["TribalCode"];
                this.columnTribalCodeListIdentifier = base.Columns["TribalCodeListIdentifier"];
                this.columnTribalName = base.Columns["TribalName"];
                this.columnTribalLandName = base.Columns["TribalLandName"];
                this.columnTribalLandIndicator = base.Columns["TribalLandIndicator"];
                this.columnLocationDescriptionText = base.Columns["LocationDescriptionText"];
                this.columnMailingFacilitySiteName = base.Columns["MailingFacilitySiteName"];
                this.columnMailingAddressText = base.Columns["MailingAddressText"];
                this.columnMailingSupplementalAddressText = base.Columns["MailingSupplementalAddressText"];
                this.columnMailingAddressCityName = base.Columns["MailingAddressCityName"];
                this.columnMailingStateCode = base.Columns["MailingStateCode"];
                this.columnMailingStateCodeListIdentifier = base.Columns["MailingStateCodeListIdentifier"];
                this.columnMailingStateName = base.Columns["MailingStateName"];
                this.columnMailingAddressPostalCode = base.Columns["MailingAddressPostalCode"];
                this.columnMailingCountryCode = base.Columns["MailingCountryCode"];
                this.columnMailingCountryCodeListIdentifier = base.Columns["MailingCountryCodeListIdentifier"];
                this.columnMailingCountryName = base.Columns["MailingCountryName"];
                this.columnParentCompanyNameNAIndicator = base.Columns["ParentCompanyNameNAIndicator"];
                this.columnParentCompanyNameText = base.Columns["ParentCompanyNameText"];
                this.columnParentDunBradstreetCode = base.Columns["ParentDunBradstreetCode"];
                this.columnFireDistrict = base.Columns["FireDistrict"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPK_GUID = new global::System.Data.DataColumn("PK_GUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPK_GUID);
                this.columnFK_GUID = new global::System.Data.DataColumn("FK_GUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFK_GUID);
                this.columnFacilitySiteIdentifier = new global::System.Data.DataColumn("FacilitySiteIdentifier", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFacilitySiteIdentifier);
                this.columnFacilitySiteName = new global::System.Data.DataColumn("FacilitySiteName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFacilitySiteName);
                this.columnFacilityStatus = new global::System.Data.DataColumn("FacilityStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFacilityStatus);
                this.columnLocationAddressText = new global::System.Data.DataColumn("LocationAddressText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocationAddressText);
                this.columnSupplementalLocationText = new global::System.Data.DataColumn("SupplementalLocationText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplementalLocationText);
                this.columnLocalityName = new global::System.Data.DataColumn("LocalityName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocalityName);
                this.columnStateCode = new global::System.Data.DataColumn("StateCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStateCode);
                this.columnStateCodeListIdentifier = new global::System.Data.DataColumn("StateCodeListIdentifier", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStateCodeListIdentifier);
                this.columnStateName = new global::System.Data.DataColumn("StateName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStateName);
                this.columnAddressPostalCode = new global::System.Data.DataColumn("AddressPostalCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddressPostalCode);
                this.columnCountryCode = new global::System.Data.DataColumn("CountryCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountryCode);
                this.columnCountryCodeListIdentifier = new global::System.Data.DataColumn("CountryCodeListIdentifier", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountryCodeListIdentifier);
                this.columnCountryName = new global::System.Data.DataColumn("CountryName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountryName);
                this.columnCountyCode = new global::System.Data.DataColumn("CountyCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountyCode);
                this.columnCountyCodeListIdentifier = new global::System.Data.DataColumn("CountyCodeListIdentifier", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountyCodeListIdentifier);
                this.columnCountyName = new global::System.Data.DataColumn("CountyName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountyName);
                this.columnTribalCode = new global::System.Data.DataColumn("TribalCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTribalCode);
                this.columnTribalCodeListIdentifier = new global::System.Data.DataColumn("TribalCodeListIdentifier", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTribalCodeListIdentifier);
                this.columnTribalName = new global::System.Data.DataColumn("TribalName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTribalName);
                this.columnTribalLandName = new global::System.Data.DataColumn("TribalLandName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTribalLandName);
                this.columnTribalLandIndicator = new global::System.Data.DataColumn("TribalLandIndicator", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTribalLandIndicator);
                this.columnLocationDescriptionText = new global::System.Data.DataColumn("LocationDescriptionText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocationDescriptionText);
                this.columnMailingFacilitySiteName = new global::System.Data.DataColumn("MailingFacilitySiteName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMailingFacilitySiteName);
                this.columnMailingAddressText = new global::System.Data.DataColumn("MailingAddressText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMailingAddressText);
                this.columnMailingSupplementalAddressText = new global::System.Data.DataColumn("MailingSupplementalAddressText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMailingSupplementalAddressText);
                this.columnMailingAddressCityName = new global::System.Data.DataColumn("MailingAddressCityName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMailingAddressCityName);
                this.columnMailingStateCode = new global::System.Data.DataColumn("MailingStateCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMailingStateCode);
                this.columnMailingStateCodeListIdentifier = new global::System.Data.DataColumn("MailingStateCodeListIdentifier", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMailingStateCodeListIdentifier);
                this.columnMailingStateName = new global::System.Data.DataColumn("MailingStateName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMailingStateName);
                this.columnMailingAddressPostalCode = new global::System.Data.DataColumn("MailingAddressPostalCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMailingAddressPostalCode);
                this.columnMailingCountryCode = new global::System.Data.DataColumn("MailingCountryCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMailingCountryCode);
                this.columnMailingCountryCodeListIdentifier = new global::System.Data.DataColumn("MailingCountryCodeListIdentifier", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMailingCountryCodeListIdentifier);
                this.columnMailingCountryName = new global::System.Data.DataColumn("MailingCountryName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMailingCountryName);
                this.columnParentCompanyNameNAIndicator = new global::System.Data.DataColumn("ParentCompanyNameNAIndicator", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParentCompanyNameNAIndicator);
                this.columnParentCompanyNameText = new global::System.Data.DataColumn("ParentCompanyNameText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParentCompanyNameText);
                this.columnParentDunBradstreetCode = new global::System.Data.DataColumn("ParentDunBradstreetCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParentDunBradstreetCode);
                this.columnFireDistrict = new global::System.Data.DataColumn("FireDistrict", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFireDistrict);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPK_GUID}, true));
                this.columnPK_GUID.AllowDBNull = false;
                this.columnPK_GUID.Unique = true;
                this.columnPK_GUID.MaxLength = 36;
                this.columnFK_GUID.AllowDBNull = false;
                this.columnFK_GUID.MaxLength = 36;
                this.columnFacilitySiteIdentifier.MaxLength = 255;
                this.columnFacilitySiteName.MaxLength = 255;
                this.columnFacilityStatus.MaxLength = 255;
                this.columnLocationAddressText.MaxLength = 255;
                this.columnSupplementalLocationText.MaxLength = 255;
                this.columnLocalityName.MaxLength = 255;
                this.columnStateCode.MaxLength = 255;
                this.columnStateCodeListIdentifier.MaxLength = 255;
                this.columnStateName.MaxLength = 255;
                this.columnAddressPostalCode.MaxLength = 255;
                this.columnCountryCode.MaxLength = 255;
                this.columnCountryCodeListIdentifier.MaxLength = 255;
                this.columnCountryName.MaxLength = 255;
                this.columnCountyCode.MaxLength = 255;
                this.columnCountyCodeListIdentifier.MaxLength = 255;
                this.columnCountyName.MaxLength = 255;
                this.columnTribalCode.MaxLength = 255;
                this.columnTribalCodeListIdentifier.MaxLength = 255;
                this.columnTribalName.MaxLength = 255;
                this.columnTribalLandName.MaxLength = 255;
                this.columnTribalLandIndicator.MaxLength = 255;
                this.columnLocationDescriptionText.MaxLength = 255;
                this.columnMailingFacilitySiteName.MaxLength = 255;
                this.columnMailingAddressText.MaxLength = 255;
                this.columnMailingSupplementalAddressText.MaxLength = 255;
                this.columnMailingAddressCityName.MaxLength = 255;
                this.columnMailingStateCode.MaxLength = 255;
                this.columnMailingStateCodeListIdentifier.MaxLength = 255;
                this.columnMailingStateName.MaxLength = 255;
                this.columnMailingAddressPostalCode.MaxLength = 255;
                this.columnMailingCountryCode.MaxLength = 255;
                this.columnMailingCountryCodeListIdentifier.MaxLength = 255;
                this.columnMailingCountryName.MaxLength = 255;
                this.columnParentCompanyNameNAIndicator.MaxLength = 1;
                this.columnParentCompanyNameText.MaxLength = 255;
                this.columnParentDunBradstreetCode.MaxLength = 255;
                this.columnFireDistrict.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_SITERow NewT2_FAC_SITERow() {
                return ((T2_FAC_SITERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T2_FAC_SITERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T2_FAC_SITERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T2_FAC_SITERowChanged != null)) {
                    this.T2_FAC_SITERowChanged(this, new T2_FAC_SITERowChangeEvent(((T2_FAC_SITERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T2_FAC_SITERowChanging != null)) {
                    this.T2_FAC_SITERowChanging(this, new T2_FAC_SITERowChangeEvent(((T2_FAC_SITERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T2_FAC_SITERowDeleted != null)) {
                    this.T2_FAC_SITERowDeleted(this, new T2_FAC_SITERowChangeEvent(((T2_FAC_SITERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T2_FAC_SITERowDeleting != null)) {
                    this.T2_FAC_SITERowDeleting(this, new T2_FAC_SITERowChangeEvent(((T2_FAC_SITERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT2_FAC_SITERow(T2_FAC_SITERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Tier2DataSet ds = new Tier2DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T2_FAC_SITEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T2_FAC_UIC_IDDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnPK_GUID;
            
            private global::System.Data.DataColumn columnFK_GUID;
            
            private global::System.Data.DataColumn columnUICIdentificationNumber;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_UIC_IDDataTable() {
                this.TableName = "T2_FAC_UIC_ID";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T2_FAC_UIC_IDDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T2_FAC_UIC_IDDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PK_GUIDColumn {
                get {
                    return this.columnPK_GUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FK_GUIDColumn {
                get {
                    return this.columnFK_GUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UICIdentificationNumberColumn {
                get {
                    return this.columnUICIdentificationNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_UIC_IDRow this[int index] {
                get {
                    return ((T2_FAC_UIC_IDRow)(this.Rows[index]));
                }
            }
            
            public event T2_FAC_UIC_IDRowChangeEventHandler T2_FAC_UIC_IDRowChanging;
            
            public event T2_FAC_UIC_IDRowChangeEventHandler T2_FAC_UIC_IDRowChanged;
            
            public event T2_FAC_UIC_IDRowChangeEventHandler T2_FAC_UIC_IDRowDeleting;
            
            public event T2_FAC_UIC_IDRowChangeEventHandler T2_FAC_UIC_IDRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT2_FAC_UIC_IDRow(T2_FAC_UIC_IDRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_UIC_IDRow AddT2_FAC_UIC_IDRow(string PK_GUID, T2_FAC_SITERow parentT2_FAC_SITERowByFK_T2_FAC_UIC_ID_T2_FAC_SITE, string UICIdentificationNumber) {
                T2_FAC_UIC_IDRow rowT2_FAC_UIC_IDRow = ((T2_FAC_UIC_IDRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PK_GUID,
                        null,
                        UICIdentificationNumber};
                if ((parentT2_FAC_SITERowByFK_T2_FAC_UIC_ID_T2_FAC_SITE != null)) {
                    columnValuesArray[1] = parentT2_FAC_SITERowByFK_T2_FAC_UIC_ID_T2_FAC_SITE[0];
                }
                rowT2_FAC_UIC_IDRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT2_FAC_UIC_IDRow);
                return rowT2_FAC_UIC_IDRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_UIC_IDRow FindByPK_GUID(string PK_GUID) {
                return ((T2_FAC_UIC_IDRow)(this.Rows.Find(new object[] {
                            PK_GUID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T2_FAC_UIC_IDDataTable cln = ((T2_FAC_UIC_IDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T2_FAC_UIC_IDDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPK_GUID = base.Columns["PK_GUID"];
                this.columnFK_GUID = base.Columns["FK_GUID"];
                this.columnUICIdentificationNumber = base.Columns["UICIdentificationNumber"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPK_GUID = new global::System.Data.DataColumn("PK_GUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPK_GUID);
                this.columnFK_GUID = new global::System.Data.DataColumn("FK_GUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFK_GUID);
                this.columnUICIdentificationNumber = new global::System.Data.DataColumn("UICIdentificationNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUICIdentificationNumber);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPK_GUID}, true));
                this.columnPK_GUID.AllowDBNull = false;
                this.columnPK_GUID.Unique = true;
                this.columnPK_GUID.MaxLength = 36;
                this.columnFK_GUID.AllowDBNull = false;
                this.columnFK_GUID.MaxLength = 36;
                this.columnUICIdentificationNumber.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_UIC_IDRow NewT2_FAC_UIC_IDRow() {
                return ((T2_FAC_UIC_IDRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T2_FAC_UIC_IDRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T2_FAC_UIC_IDRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T2_FAC_UIC_IDRowChanged != null)) {
                    this.T2_FAC_UIC_IDRowChanged(this, new T2_FAC_UIC_IDRowChangeEvent(((T2_FAC_UIC_IDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T2_FAC_UIC_IDRowChanging != null)) {
                    this.T2_FAC_UIC_IDRowChanging(this, new T2_FAC_UIC_IDRowChangeEvent(((T2_FAC_UIC_IDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T2_FAC_UIC_IDRowDeleted != null)) {
                    this.T2_FAC_UIC_IDRowDeleted(this, new T2_FAC_UIC_IDRowChangeEvent(((T2_FAC_UIC_IDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T2_FAC_UIC_IDRowDeleting != null)) {
                    this.T2_FAC_UIC_IDRowDeleting(this, new T2_FAC_UIC_IDRowChangeEvent(((T2_FAC_UIC_IDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT2_FAC_UIC_IDRow(T2_FAC_UIC_IDRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Tier2DataSet ds = new Tier2DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T2_FAC_UIC_IDDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T2_REPORTDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnPK_GUID;
            
            private global::System.Data.DataColumn columnFK_GUID;
            
            private global::System.Data.DataColumn columnReportIdentifier;
            
            private global::System.Data.DataColumn columnReportDueDate;
            
            private global::System.Data.DataColumn columnReportReceivedDate;
            
            private global::System.Data.DataColumn columnReportRecipientName;
            
            private global::System.Data.DataColumn columnReportingPeriodStartDate;
            
            private global::System.Data.DataColumn columnReportingPeriodEndDate;
            
            private global::System.Data.DataColumn columnRevisionIndicator;
            
            private global::System.Data.DataColumn columnReplacedReportIdentifier;
            
            private global::System.Data.DataColumn columnReportCreateByName;
            
            private global::System.Data.DataColumn columnReportCreateDate;
            
            private global::System.Data.DataColumn columnReportCreateTime;
            
            private global::System.Data.DataColumn columnReportType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_REPORTDataTable() {
                this.TableName = "T2_REPORT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T2_REPORTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T2_REPORTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PK_GUIDColumn {
                get {
                    return this.columnPK_GUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FK_GUIDColumn {
                get {
                    return this.columnFK_GUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReportIdentifierColumn {
                get {
                    return this.columnReportIdentifier;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReportDueDateColumn {
                get {
                    return this.columnReportDueDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReportReceivedDateColumn {
                get {
                    return this.columnReportReceivedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReportRecipientNameColumn {
                get {
                    return this.columnReportRecipientName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReportingPeriodStartDateColumn {
                get {
                    return this.columnReportingPeriodStartDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReportingPeriodEndDateColumn {
                get {
                    return this.columnReportingPeriodEndDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RevisionIndicatorColumn {
                get {
                    return this.columnRevisionIndicator;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReplacedReportIdentifierColumn {
                get {
                    return this.columnReplacedReportIdentifier;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReportCreateByNameColumn {
                get {
                    return this.columnReportCreateByName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReportCreateDateColumn {
                get {
                    return this.columnReportCreateDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReportCreateTimeColumn {
                get {
                    return this.columnReportCreateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReportTypeColumn {
                get {
                    return this.columnReportType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_REPORTRow this[int index] {
                get {
                    return ((T2_REPORTRow)(this.Rows[index]));
                }
            }
            
            public event T2_REPORTRowChangeEventHandler T2_REPORTRowChanging;
            
            public event T2_REPORTRowChangeEventHandler T2_REPORTRowChanged;
            
            public event T2_REPORTRowChangeEventHandler T2_REPORTRowDeleting;
            
            public event T2_REPORTRowChangeEventHandler T2_REPORTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT2_REPORTRow(T2_REPORTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_REPORTRow AddT2_REPORTRow(string PK_GUID, T2_SUBMISSIONRow parentT2_SUBMISSIONRowByFK_T2_REPORT_T2_SUBMISSION, string ReportIdentifier, string ReportDueDate, string ReportReceivedDate, string ReportRecipientName, string ReportingPeriodStartDate, string ReportingPeriodEndDate, string RevisionIndicator, string ReplacedReportIdentifier, string ReportCreateByName, string ReportCreateDate, string ReportCreateTime, string ReportType) {
                T2_REPORTRow rowT2_REPORTRow = ((T2_REPORTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PK_GUID,
                        null,
                        ReportIdentifier,
                        ReportDueDate,
                        ReportReceivedDate,
                        ReportRecipientName,
                        ReportingPeriodStartDate,
                        ReportingPeriodEndDate,
                        RevisionIndicator,
                        ReplacedReportIdentifier,
                        ReportCreateByName,
                        ReportCreateDate,
                        ReportCreateTime,
                        ReportType};
                if ((parentT2_SUBMISSIONRowByFK_T2_REPORT_T2_SUBMISSION != null)) {
                    columnValuesArray[1] = parentT2_SUBMISSIONRowByFK_T2_REPORT_T2_SUBMISSION[0];
                }
                rowT2_REPORTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT2_REPORTRow);
                return rowT2_REPORTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_REPORTRow FindByPK_GUID(string PK_GUID) {
                return ((T2_REPORTRow)(this.Rows.Find(new object[] {
                            PK_GUID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T2_REPORTDataTable cln = ((T2_REPORTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T2_REPORTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPK_GUID = base.Columns["PK_GUID"];
                this.columnFK_GUID = base.Columns["FK_GUID"];
                this.columnReportIdentifier = base.Columns["ReportIdentifier"];
                this.columnReportDueDate = base.Columns["ReportDueDate"];
                this.columnReportReceivedDate = base.Columns["ReportReceivedDate"];
                this.columnReportRecipientName = base.Columns["ReportRecipientName"];
                this.columnReportingPeriodStartDate = base.Columns["ReportingPeriodStartDate"];
                this.columnReportingPeriodEndDate = base.Columns["ReportingPeriodEndDate"];
                this.columnRevisionIndicator = base.Columns["RevisionIndicator"];
                this.columnReplacedReportIdentifier = base.Columns["ReplacedReportIdentifier"];
                this.columnReportCreateByName = base.Columns["ReportCreateByName"];
                this.columnReportCreateDate = base.Columns["ReportCreateDate"];
                this.columnReportCreateTime = base.Columns["ReportCreateTime"];
                this.columnReportType = base.Columns["ReportType"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPK_GUID = new global::System.Data.DataColumn("PK_GUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPK_GUID);
                this.columnFK_GUID = new global::System.Data.DataColumn("FK_GUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFK_GUID);
                this.columnReportIdentifier = new global::System.Data.DataColumn("ReportIdentifier", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReportIdentifier);
                this.columnReportDueDate = new global::System.Data.DataColumn("ReportDueDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReportDueDate);
                this.columnReportReceivedDate = new global::System.Data.DataColumn("ReportReceivedDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReportReceivedDate);
                this.columnReportRecipientName = new global::System.Data.DataColumn("ReportRecipientName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReportRecipientName);
                this.columnReportingPeriodStartDate = new global::System.Data.DataColumn("ReportingPeriodStartDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReportingPeriodStartDate);
                this.columnReportingPeriodEndDate = new global::System.Data.DataColumn("ReportingPeriodEndDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReportingPeriodEndDate);
                this.columnRevisionIndicator = new global::System.Data.DataColumn("RevisionIndicator", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRevisionIndicator);
                this.columnReplacedReportIdentifier = new global::System.Data.DataColumn("ReplacedReportIdentifier", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReplacedReportIdentifier);
                this.columnReportCreateByName = new global::System.Data.DataColumn("ReportCreateByName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReportCreateByName);
                this.columnReportCreateDate = new global::System.Data.DataColumn("ReportCreateDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReportCreateDate);
                this.columnReportCreateTime = new global::System.Data.DataColumn("ReportCreateTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReportCreateTime);
                this.columnReportType = new global::System.Data.DataColumn("ReportType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReportType);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPK_GUID}, true));
                this.columnPK_GUID.AllowDBNull = false;
                this.columnPK_GUID.Unique = true;
                this.columnPK_GUID.MaxLength = 36;
                this.columnFK_GUID.AllowDBNull = false;
                this.columnFK_GUID.MaxLength = 36;
                this.columnReportIdentifier.MaxLength = 255;
                this.columnReportDueDate.MaxLength = 25;
                this.columnReportReceivedDate.MaxLength = 25;
                this.columnReportRecipientName.MaxLength = 255;
                this.columnReportingPeriodStartDate.MaxLength = 25;
                this.columnReportingPeriodEndDate.MaxLength = 25;
                this.columnRevisionIndicator.MaxLength = 255;
                this.columnReplacedReportIdentifier.MaxLength = 255;
                this.columnReportCreateByName.MaxLength = 255;
                this.columnReportCreateDate.MaxLength = 25;
                this.columnReportCreateTime.MaxLength = 25;
                this.columnReportType.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_REPORTRow NewT2_REPORTRow() {
                return ((T2_REPORTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T2_REPORTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T2_REPORTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T2_REPORTRowChanged != null)) {
                    this.T2_REPORTRowChanged(this, new T2_REPORTRowChangeEvent(((T2_REPORTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T2_REPORTRowChanging != null)) {
                    this.T2_REPORTRowChanging(this, new T2_REPORTRowChangeEvent(((T2_REPORTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T2_REPORTRowDeleted != null)) {
                    this.T2_REPORTRowDeleted(this, new T2_REPORTRowChangeEvent(((T2_REPORTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T2_REPORTRowDeleting != null)) {
                    this.T2_REPORTRowDeleting(this, new T2_REPORTRowChangeEvent(((T2_REPORTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT2_REPORTRow(T2_REPORTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Tier2DataSet ds = new Tier2DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T2_REPORTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T2_SUBMISSIONRow : global::System.Data.DataRow {
            
            private T2_SUBMISSIONDataTable tableT2_SUBMISSION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T2_SUBMISSIONRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT2_SUBMISSION = ((T2_SUBMISSIONDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PK_GUID {
                get {
                    return ((string)(this[this.tableT2_SUBMISSION.PK_GUIDColumn]));
                }
                set {
                    this[this.tableT2_SUBMISSION.PK_GUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SubmissionIdentifier {
                get {
                    if (this.IsSubmissionIdentifierNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_SUBMISSION.SubmissionIdentifierColumn]));
                    }
                }
                set {
                    this[this.tableT2_SUBMISSION.SubmissionIdentifierColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SubmissionDate {
                get {
                    if (this.IsSubmissionDateNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_SUBMISSION.SubmissionDateColumn]));
                    }
                }
                set {
                    this[this.tableT2_SUBMISSION.SubmissionDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SubmissionStatus {
                get {
                    if (this.IsSubmissionStatusNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_SUBMISSION.SubmissionStatusColumn]));
                    }
                }
                set {
                    this[this.tableT2_SUBMISSION.SubmissionStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SubmissionMethod {
                get {
                    if (this.IsSubmissionMethodNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_SUBMISSION.SubmissionMethodColumn]));
                    }
                }
                set {
                    this[this.tableT2_SUBMISSION.SubmissionMethodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubmissionIdentifierNull() {
                return this.IsNull(this.tableT2_SUBMISSION.SubmissionIdentifierColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubmissionIdentifierNull() {
                this[this.tableT2_SUBMISSION.SubmissionIdentifierColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubmissionDateNull() {
                return this.IsNull(this.tableT2_SUBMISSION.SubmissionDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubmissionDateNull() {
                this[this.tableT2_SUBMISSION.SubmissionDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubmissionStatusNull() {
                return this.IsNull(this.tableT2_SUBMISSION.SubmissionStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubmissionStatusNull() {
                this[this.tableT2_SUBMISSION.SubmissionStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubmissionMethodNull() {
                return this.IsNull(this.tableT2_SUBMISSION.SubmissionMethodColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubmissionMethodNull() {
                this[this.tableT2_SUBMISSION.SubmissionMethodColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_REPORTRow[] GetT2_REPORTRows() {
                if ((this.Table.ChildRelations["FK_T2_REPORT_T2_SUBMISSION"] == null)) {
                    return new T2_REPORTRow[0];
                }
                else {
                    return ((T2_REPORTRow[])(base.GetChildRows(this.Table.ChildRelations["FK_T2_REPORT_T2_SUBMISSION"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T2_CHEM_INVRow : global::System.Data.DataRow {
            
            private T2_CHEM_INVDataTable tableT2_CHEM_INV;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T2_CHEM_INVRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT2_CHEM_INV = ((T2_CHEM_INVDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PK_GUID {
                get {
                    return ((string)(this[this.tableT2_CHEM_INV.PK_GUIDColumn]));
                }
                set {
                    this[this.tableT2_CHEM_INV.PK_GUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FK_GUID {
                get {
                    if (this.IsFK_GUIDNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_CHEM_INV.FK_GUIDColumn]));
                    }
                }
                set {
                    this[this.tableT2_CHEM_INV.FK_GUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ChemicalIdentifier {
                get {
                    if (this.IsChemicalIdentifierNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_CHEM_INV.ChemicalIdentifierColumn]));
                    }
                }
                set {
                    this[this.tableT2_CHEM_INV.ChemicalIdentifierColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EHSIndicator {
                get {
                    if (this.IsEHSIndicatorNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_CHEM_INV.EHSIndicatorColumn]));
                    }
                }
                set {
                    this[this.tableT2_CHEM_INV.EHSIndicatorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TradeSecretIndicator {
                get {
                    if (this.IsTradeSecretIndicatorNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_CHEM_INV.TradeSecretIndicatorColumn]));
                    }
                }
                set {
                    this[this.tableT2_CHEM_INV.TradeSecretIndicatorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CASNumber {
                get {
                    if (this.IsCASNumberNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_CHEM_INV.CASNumberColumn]));
                    }
                }
                set {
                    this[this.tableT2_CHEM_INV.CASNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ChemSubstanceSystematicName {
                get {
                    if (this.IsChemSubstanceSystematicNameNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_CHEM_INV.ChemSubstanceSystematicNameColumn]));
                    }
                }
                set {
                    this[this.tableT2_CHEM_INV.ChemSubstanceSystematicNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EPAChemicalRegistryName {
                get {
                    if (this.IsEPAChemicalRegistryNameNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_CHEM_INV.EPAChemicalRegistryNameColumn]));
                    }
                }
                set {
                    this[this.tableT2_CHEM_INV.EPAChemicalRegistryNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EPAChemicalIdentifier {
                get {
                    if (this.IsEPAChemicalIdentifierNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_CHEM_INV.EPAChemicalIdentifierColumn]));
                    }
                }
                set {
                    this[this.tableT2_CHEM_INV.EPAChemicalIdentifierColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ChemicalNameContext {
                get {
                    if (this.IsChemicalNameContextNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_CHEM_INV.ChemicalNameContextColumn]));
                    }
                }
                set {
                    this[this.tableT2_CHEM_INV.ChemicalNameContextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_SITERow T2_FAC_SITERow {
                get {
                    return ((T2_FAC_SITERow)(this.GetParentRow(this.Table.ParentRelations["FK_T2_CHEM_INV_T2_FAC_SITE"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_T2_CHEM_INV_T2_FAC_SITE"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFK_GUIDNull() {
                return this.IsNull(this.tableT2_CHEM_INV.FK_GUIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFK_GUIDNull() {
                this[this.tableT2_CHEM_INV.FK_GUIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChemicalIdentifierNull() {
                return this.IsNull(this.tableT2_CHEM_INV.ChemicalIdentifierColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChemicalIdentifierNull() {
                this[this.tableT2_CHEM_INV.ChemicalIdentifierColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEHSIndicatorNull() {
                return this.IsNull(this.tableT2_CHEM_INV.EHSIndicatorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEHSIndicatorNull() {
                this[this.tableT2_CHEM_INV.EHSIndicatorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTradeSecretIndicatorNull() {
                return this.IsNull(this.tableT2_CHEM_INV.TradeSecretIndicatorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTradeSecretIndicatorNull() {
                this[this.tableT2_CHEM_INV.TradeSecretIndicatorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCASNumberNull() {
                return this.IsNull(this.tableT2_CHEM_INV.CASNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCASNumberNull() {
                this[this.tableT2_CHEM_INV.CASNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChemSubstanceSystematicNameNull() {
                return this.IsNull(this.tableT2_CHEM_INV.ChemSubstanceSystematicNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChemSubstanceSystematicNameNull() {
                this[this.tableT2_CHEM_INV.ChemSubstanceSystematicNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEPAChemicalRegistryNameNull() {
                return this.IsNull(this.tableT2_CHEM_INV.EPAChemicalRegistryNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEPAChemicalRegistryNameNull() {
                this[this.tableT2_CHEM_INV.EPAChemicalRegistryNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEPAChemicalIdentifierNull() {
                return this.IsNull(this.tableT2_CHEM_INV.EPAChemicalIdentifierColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEPAChemicalIdentifierNull() {
                this[this.tableT2_CHEM_INV.EPAChemicalIdentifierColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChemicalNameContextNull() {
                return this.IsNull(this.tableT2_CHEM_INV.ChemicalNameContextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChemicalNameContextNull() {
                this[this.tableT2_CHEM_INV.ChemicalNameContextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_CHEM_INV_DTLSRow[] GetT2_CHEM_INV_DTLSRows() {
                if ((this.Table.ChildRelations["FK_T2_CHEM_INV_DTLS_T2_CHEM_INV"] == null)) {
                    return new T2_CHEM_INV_DTLSRow[0];
                }
                else {
                    return ((T2_CHEM_INV_DTLSRow[])(base.GetChildRows(this.Table.ChildRelations["FK_T2_CHEM_INV_DTLS_T2_CHEM_INV"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_CHEM_INV_HAZRow[] GetT2_CHEM_INV_HAZRows() {
                if ((this.Table.ChildRelations["FK_T2_CHEM_INV_HAZ_T2_CHEM_INV"] == null)) {
                    return new T2_CHEM_INV_HAZRow[0];
                }
                else {
                    return ((T2_CHEM_INV_HAZRow[])(base.GetChildRows(this.Table.ChildRelations["FK_T2_CHEM_INV_HAZ_T2_CHEM_INV"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_CHEM_INV_HLTHRow[] GetT2_CHEM_INV_HLTHRows() {
                if ((this.Table.ChildRelations["FK_T2_CHEM_INV_HLTH_T2_CHEM_INV"] == null)) {
                    return new T2_CHEM_INV_HLTHRow[0];
                }
                else {
                    return ((T2_CHEM_INV_HLTHRow[])(base.GetChildRows(this.Table.ChildRelations["FK_T2_CHEM_INV_HLTH_T2_CHEM_INV"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_CHEM_INV_PHYSRow[] GetT2_CHEM_INV_PHYSRows() {
                if ((this.Table.ChildRelations["FK_T2_CHEM_INV_PHYS_T2_CHEM_INV"] == null)) {
                    return new T2_CHEM_INV_PHYSRow[0];
                }
                else {
                    return ((T2_CHEM_INV_PHYSRow[])(base.GetChildRows(this.Table.ChildRelations["FK_T2_CHEM_INV_PHYS_T2_CHEM_INV"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_CHEM_LOCRow[] GetT2_CHEM_LOCRows() {
                if ((this.Table.ChildRelations["FK_T2_CHEM_LOC_T2_CHEM_INV"] == null)) {
                    return new T2_CHEM_LOCRow[0];
                }
                else {
                    return ((T2_CHEM_LOCRow[])(base.GetChildRows(this.Table.ChildRelations["FK_T2_CHEM_LOC_T2_CHEM_INV"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_CHEM_MIXRow[] GetT2_CHEM_MIXRows() {
                if ((this.Table.ChildRelations["FK_T2_CHEM_MIX_T2_CHEM_INV"] == null)) {
                    return new T2_CHEM_MIXRow[0];
                }
                else {
                    return ((T2_CHEM_MIXRow[])(base.GetChildRows(this.Table.ChildRelations["FK_T2_CHEM_MIX_T2_CHEM_INV"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T2_CHEM_INV_DTLSRow : global::System.Data.DataRow {
            
            private T2_CHEM_INV_DTLSDataTable tableT2_CHEM_INV_DTLS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T2_CHEM_INV_DTLSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT2_CHEM_INV_DTLS = ((T2_CHEM_INV_DTLSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PK_GUID {
                get {
                    return ((string)(this[this.tableT2_CHEM_INV_DTLS.PK_GUIDColumn]));
                }
                set {
                    this[this.tableT2_CHEM_INV_DTLS.PK_GUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FK_GUID {
                get {
                    if (this.IsFK_GUIDNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_CHEM_INV_DTLS.FK_GUIDColumn]));
                    }
                }
                set {
                    this[this.tableT2_CHEM_INV_DTLS.FK_GUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NumberOfDaysOnsite {
                get {
                    if (this.IsNumberOfDaysOnsiteNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_CHEM_INV_DTLS.NumberOfDaysOnsiteColumn]));
                    }
                }
                set {
                    this[this.tableT2_CHEM_INV_DTLS.NumberOfDaysOnsiteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaximumDailyAmount {
                get {
                    if (this.IsMaximumDailyAmountNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_CHEM_INV_DTLS.MaximumDailyAmountColumn]));
                    }
                }
                set {
                    this[this.tableT2_CHEM_INV_DTLS.MaximumDailyAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaximumCode {
                get {
                    if (this.IsMaximumCodeNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_CHEM_INV_DTLS.MaximumCodeColumn]));
                    }
                }
                set {
                    this[this.tableT2_CHEM_INV_DTLS.MaximumCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AverageDailyAmount {
                get {
                    if (this.IsAverageDailyAmountNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_CHEM_INV_DTLS.AverageDailyAmountColumn]));
                    }
                }
                set {
                    this[this.tableT2_CHEM_INV_DTLS.AverageDailyAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AverageCode {
                get {
                    if (this.IsAverageCodeNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_CHEM_INV_DTLS.AverageCodeColumn]));
                    }
                }
                set {
                    this[this.tableT2_CHEM_INV_DTLS.AverageCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_CHEM_INVRow T2_CHEM_INVRow {
                get {
                    return ((T2_CHEM_INVRow)(this.GetParentRow(this.Table.ParentRelations["FK_T2_CHEM_INV_DTLS_T2_CHEM_INV"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_T2_CHEM_INV_DTLS_T2_CHEM_INV"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFK_GUIDNull() {
                return this.IsNull(this.tableT2_CHEM_INV_DTLS.FK_GUIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFK_GUIDNull() {
                this[this.tableT2_CHEM_INV_DTLS.FK_GUIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNumberOfDaysOnsiteNull() {
                return this.IsNull(this.tableT2_CHEM_INV_DTLS.NumberOfDaysOnsiteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNumberOfDaysOnsiteNull() {
                this[this.tableT2_CHEM_INV_DTLS.NumberOfDaysOnsiteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaximumDailyAmountNull() {
                return this.IsNull(this.tableT2_CHEM_INV_DTLS.MaximumDailyAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaximumDailyAmountNull() {
                this[this.tableT2_CHEM_INV_DTLS.MaximumDailyAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaximumCodeNull() {
                return this.IsNull(this.tableT2_CHEM_INV_DTLS.MaximumCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaximumCodeNull() {
                this[this.tableT2_CHEM_INV_DTLS.MaximumCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAverageDailyAmountNull() {
                return this.IsNull(this.tableT2_CHEM_INV_DTLS.AverageDailyAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAverageDailyAmountNull() {
                this[this.tableT2_CHEM_INV_DTLS.AverageDailyAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAverageCodeNull() {
                return this.IsNull(this.tableT2_CHEM_INV_DTLS.AverageCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAverageCodeNull() {
                this[this.tableT2_CHEM_INV_DTLS.AverageCodeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T2_CHEM_INV_HAZRow : global::System.Data.DataRow {
            
            private T2_CHEM_INV_HAZDataTable tableT2_CHEM_INV_HAZ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T2_CHEM_INV_HAZRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT2_CHEM_INV_HAZ = ((T2_CHEM_INV_HAZDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PK_GUID {
                get {
                    return ((string)(this[this.tableT2_CHEM_INV_HAZ.PK_GUIDColumn]));
                }
                set {
                    this[this.tableT2_CHEM_INV_HAZ.PK_GUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FK_GUID {
                get {
                    return ((string)(this[this.tableT2_CHEM_INV_HAZ.FK_GUIDColumn]));
                }
                set {
                    this[this.tableT2_CHEM_INV_HAZ.FK_GUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HazardType {
                get {
                    return ((string)(this[this.tableT2_CHEM_INV_HAZ.HazardTypeColumn]));
                }
                set {
                    this[this.tableT2_CHEM_INV_HAZ.HazardTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_CHEM_INVRow T2_CHEM_INVRow {
                get {
                    return ((T2_CHEM_INVRow)(this.GetParentRow(this.Table.ParentRelations["FK_T2_CHEM_INV_HAZ_T2_CHEM_INV"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_T2_CHEM_INV_HAZ_T2_CHEM_INV"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T2_CHEM_INV_HLTHRow : global::System.Data.DataRow {
            
            private T2_CHEM_INV_HLTHDataTable tableT2_CHEM_INV_HLTH;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T2_CHEM_INV_HLTHRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT2_CHEM_INV_HLTH = ((T2_CHEM_INV_HLTHDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PK_GUID {
                get {
                    return ((string)(this[this.tableT2_CHEM_INV_HLTH.PK_GUIDColumn]));
                }
                set {
                    this[this.tableT2_CHEM_INV_HLTH.PK_GUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FK_GUID {
                get {
                    return ((string)(this[this.tableT2_CHEM_INV_HLTH.FK_GUIDColumn]));
                }
                set {
                    this[this.tableT2_CHEM_INV_HLTH.FK_GUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HealthEffects {
                get {
                    if (this.IsHealthEffectsNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_CHEM_INV_HLTH.HealthEffectsColumn]));
                    }
                }
                set {
                    this[this.tableT2_CHEM_INV_HLTH.HealthEffectsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_CHEM_INVRow T2_CHEM_INVRow {
                get {
                    return ((T2_CHEM_INVRow)(this.GetParentRow(this.Table.ParentRelations["FK_T2_CHEM_INV_HLTH_T2_CHEM_INV"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_T2_CHEM_INV_HLTH_T2_CHEM_INV"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHealthEffectsNull() {
                return this.IsNull(this.tableT2_CHEM_INV_HLTH.HealthEffectsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHealthEffectsNull() {
                this[this.tableT2_CHEM_INV_HLTH.HealthEffectsColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T2_CHEM_INV_PHYSRow : global::System.Data.DataRow {
            
            private T2_CHEM_INV_PHYSDataTable tableT2_CHEM_INV_PHYS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T2_CHEM_INV_PHYSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT2_CHEM_INV_PHYS = ((T2_CHEM_INV_PHYSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PK_GUID {
                get {
                    return ((string)(this[this.tableT2_CHEM_INV_PHYS.PK_GUIDColumn]));
                }
                set {
                    this[this.tableT2_CHEM_INV_PHYS.PK_GUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FK_GUID {
                get {
                    return ((string)(this[this.tableT2_CHEM_INV_PHYS.FK_GUIDColumn]));
                }
                set {
                    this[this.tableT2_CHEM_INV_PHYS.FK_GUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ChemicalPhysicalState {
                get {
                    if (this.IsChemicalPhysicalStateNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_CHEM_INV_PHYS.ChemicalPhysicalStateColumn]));
                    }
                }
                set {
                    this[this.tableT2_CHEM_INV_PHYS.ChemicalPhysicalStateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_CHEM_INVRow T2_CHEM_INVRow {
                get {
                    return ((T2_CHEM_INVRow)(this.GetParentRow(this.Table.ParentRelations["FK_T2_CHEM_INV_PHYS_T2_CHEM_INV"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_T2_CHEM_INV_PHYS_T2_CHEM_INV"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChemicalPhysicalStateNull() {
                return this.IsNull(this.tableT2_CHEM_INV_PHYS.ChemicalPhysicalStateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChemicalPhysicalStateNull() {
                this[this.tableT2_CHEM_INV_PHYS.ChemicalPhysicalStateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T2_CHEM_LOCRow : global::System.Data.DataRow {
            
            private T2_CHEM_LOCDataTable tableT2_CHEM_LOC;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T2_CHEM_LOCRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT2_CHEM_LOC = ((T2_CHEM_LOCDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PK_GUID {
                get {
                    return ((string)(this[this.tableT2_CHEM_LOC.PK_GUIDColumn]));
                }
                set {
                    this[this.tableT2_CHEM_LOC.PK_GUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FK_GUID {
                get {
                    if (this.IsFK_GUIDNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_CHEM_LOC.FK_GUIDColumn]));
                    }
                }
                set {
                    this[this.tableT2_CHEM_LOC.FK_GUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ConfidentialLocationIndicator {
                get {
                    if (this.IsConfidentialLocationIndicatorNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_CHEM_LOC.ConfidentialLocationIndicatorColumn]));
                    }
                }
                set {
                    this[this.tableT2_CHEM_LOC.ConfidentialLocationIndicatorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StorageTypeCode {
                get {
                    if (this.IsStorageTypeCodeNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_CHEM_LOC.StorageTypeCodeColumn]));
                    }
                }
                set {
                    this[this.tableT2_CHEM_LOC.StorageTypeCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StorageTypeDescription {
                get {
                    if (this.IsStorageTypeDescriptionNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_CHEM_LOC.StorageTypeDescriptionColumn]));
                    }
                }
                set {
                    this[this.tableT2_CHEM_LOC.StorageTypeDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StorageLocTemperatureCode {
                get {
                    if (this.IsStorageLocTemperatureCodeNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_CHEM_LOC.StorageLocTemperatureCodeColumn]));
                    }
                }
                set {
                    this[this.tableT2_CHEM_LOC.StorageLocTemperatureCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StorageLocTemperatureDesc {
                get {
                    if (this.IsStorageLocTemperatureDescNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_CHEM_LOC.StorageLocTemperatureDescColumn]));
                    }
                }
                set {
                    this[this.tableT2_CHEM_LOC.StorageLocTemperatureDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StorageLocPressureCode {
                get {
                    if (this.IsStorageLocPressureCodeNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_CHEM_LOC.StorageLocPressureCodeColumn]));
                    }
                }
                set {
                    this[this.tableT2_CHEM_LOC.StorageLocPressureCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StorageLocPressureDesc {
                get {
                    if (this.IsStorageLocPressureDescNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_CHEM_LOC.StorageLocPressureDescColumn]));
                    }
                }
                set {
                    this[this.tableT2_CHEM_LOC.StorageLocPressureDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StorageLocDescription {
                get {
                    if (this.IsStorageLocDescriptionNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_CHEM_LOC.StorageLocDescriptionColumn]));
                    }
                }
                set {
                    this[this.tableT2_CHEM_LOC.StorageLocDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaximumAmountAtLocation {
                get {
                    if (this.IsMaximumAmountAtLocationNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_CHEM_LOC.MaximumAmountAtLocationColumn]));
                    }
                }
                set {
                    this[this.tableT2_CHEM_LOC.MaximumAmountAtLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MeasurementUnit {
                get {
                    if (this.IsMeasurementUnitNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_CHEM_LOC.MeasurementUnitColumn]));
                    }
                }
                set {
                    this[this.tableT2_CHEM_LOC.MeasurementUnitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_CHEM_INVRow T2_CHEM_INVRow {
                get {
                    return ((T2_CHEM_INVRow)(this.GetParentRow(this.Table.ParentRelations["FK_T2_CHEM_LOC_T2_CHEM_INV"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_T2_CHEM_LOC_T2_CHEM_INV"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFK_GUIDNull() {
                return this.IsNull(this.tableT2_CHEM_LOC.FK_GUIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFK_GUIDNull() {
                this[this.tableT2_CHEM_LOC.FK_GUIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConfidentialLocationIndicatorNull() {
                return this.IsNull(this.tableT2_CHEM_LOC.ConfidentialLocationIndicatorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetConfidentialLocationIndicatorNull() {
                this[this.tableT2_CHEM_LOC.ConfidentialLocationIndicatorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStorageTypeCodeNull() {
                return this.IsNull(this.tableT2_CHEM_LOC.StorageTypeCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStorageTypeCodeNull() {
                this[this.tableT2_CHEM_LOC.StorageTypeCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStorageTypeDescriptionNull() {
                return this.IsNull(this.tableT2_CHEM_LOC.StorageTypeDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStorageTypeDescriptionNull() {
                this[this.tableT2_CHEM_LOC.StorageTypeDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStorageLocTemperatureCodeNull() {
                return this.IsNull(this.tableT2_CHEM_LOC.StorageLocTemperatureCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStorageLocTemperatureCodeNull() {
                this[this.tableT2_CHEM_LOC.StorageLocTemperatureCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStorageLocTemperatureDescNull() {
                return this.IsNull(this.tableT2_CHEM_LOC.StorageLocTemperatureDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStorageLocTemperatureDescNull() {
                this[this.tableT2_CHEM_LOC.StorageLocTemperatureDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStorageLocPressureCodeNull() {
                return this.IsNull(this.tableT2_CHEM_LOC.StorageLocPressureCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStorageLocPressureCodeNull() {
                this[this.tableT2_CHEM_LOC.StorageLocPressureCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStorageLocPressureDescNull() {
                return this.IsNull(this.tableT2_CHEM_LOC.StorageLocPressureDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStorageLocPressureDescNull() {
                this[this.tableT2_CHEM_LOC.StorageLocPressureDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStorageLocDescriptionNull() {
                return this.IsNull(this.tableT2_CHEM_LOC.StorageLocDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStorageLocDescriptionNull() {
                this[this.tableT2_CHEM_LOC.StorageLocDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaximumAmountAtLocationNull() {
                return this.IsNull(this.tableT2_CHEM_LOC.MaximumAmountAtLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaximumAmountAtLocationNull() {
                this[this.tableT2_CHEM_LOC.MaximumAmountAtLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMeasurementUnitNull() {
                return this.IsNull(this.tableT2_CHEM_LOC.MeasurementUnitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMeasurementUnitNull() {
                this[this.tableT2_CHEM_LOC.MeasurementUnitColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T2_CHEM_MIXRow : global::System.Data.DataRow {
            
            private T2_CHEM_MIXDataTable tableT2_CHEM_MIX;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T2_CHEM_MIXRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT2_CHEM_MIX = ((T2_CHEM_MIXDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PK_GUID {
                get {
                    return ((string)(this[this.tableT2_CHEM_MIX.PK_GUIDColumn]));
                }
                set {
                    this[this.tableT2_CHEM_MIX.PK_GUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FK_GUID {
                get {
                    return ((string)(this[this.tableT2_CHEM_MIX.FK_GUIDColumn]));
                }
                set {
                    this[this.tableT2_CHEM_MIX.FK_GUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CASNumber {
                get {
                    if (this.IsCASNumberNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_CHEM_MIX.CASNumberColumn]));
                    }
                }
                set {
                    this[this.tableT2_CHEM_MIX.CASNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Component {
                get {
                    if (this.IsComponentNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_CHEM_MIX.ComponentColumn]));
                    }
                }
                set {
                    this[this.tableT2_CHEM_MIX.ComponentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ComponentPercentage {
                get {
                    if (this.IsComponentPercentageNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_CHEM_MIX.ComponentPercentageColumn]));
                    }
                }
                set {
                    this[this.tableT2_CHEM_MIX.ComponentPercentageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WeightOrVolume {
                get {
                    if (this.IsWeightOrVolumeNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_CHEM_MIX.WeightOrVolumeColumn]));
                    }
                }
                set {
                    this[this.tableT2_CHEM_MIX.WeightOrVolumeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EHSIndicator {
                get {
                    if (this.IsEHSIndicatorNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_CHEM_MIX.EHSIndicatorColumn]));
                    }
                }
                set {
                    this[this.tableT2_CHEM_MIX.EHSIndicatorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_CHEM_INVRow T2_CHEM_INVRow {
                get {
                    return ((T2_CHEM_INVRow)(this.GetParentRow(this.Table.ParentRelations["FK_T2_CHEM_MIX_T2_CHEM_INV"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_T2_CHEM_MIX_T2_CHEM_INV"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCASNumberNull() {
                return this.IsNull(this.tableT2_CHEM_MIX.CASNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCASNumberNull() {
                this[this.tableT2_CHEM_MIX.CASNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsComponentNull() {
                return this.IsNull(this.tableT2_CHEM_MIX.ComponentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetComponentNull() {
                this[this.tableT2_CHEM_MIX.ComponentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsComponentPercentageNull() {
                return this.IsNull(this.tableT2_CHEM_MIX.ComponentPercentageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetComponentPercentageNull() {
                this[this.tableT2_CHEM_MIX.ComponentPercentageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWeightOrVolumeNull() {
                return this.IsNull(this.tableT2_CHEM_MIX.WeightOrVolumeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWeightOrVolumeNull() {
                this[this.tableT2_CHEM_MIX.WeightOrVolumeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEHSIndicatorNull() {
                return this.IsNull(this.tableT2_CHEM_MIX.EHSIndicatorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEHSIndicatorNull() {
                this[this.tableT2_CHEM_MIX.EHSIndicatorColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T2_FAC_DUNDB_IDRow : global::System.Data.DataRow {
            
            private T2_FAC_DUNDB_IDDataTable tableT2_FAC_DUNDB_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T2_FAC_DUNDB_IDRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT2_FAC_DUNDB_ID = ((T2_FAC_DUNDB_IDDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PK_GUID {
                get {
                    return ((string)(this[this.tableT2_FAC_DUNDB_ID.PK_GUIDColumn]));
                }
                set {
                    this[this.tableT2_FAC_DUNDB_ID.PK_GUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FK_GUID {
                get {
                    return ((string)(this[this.tableT2_FAC_DUNDB_ID.FK_GUIDColumn]));
                }
                set {
                    this[this.tableT2_FAC_DUNDB_ID.FK_GUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FacilityDunBradstreetCode {
                get {
                    if (this.IsFacilityDunBradstreetCodeNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_DUNDB_ID.FacilityDunBradstreetCodeColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_DUNDB_ID.FacilityDunBradstreetCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_SITERow T2_FAC_SITERow {
                get {
                    return ((T2_FAC_SITERow)(this.GetParentRow(this.Table.ParentRelations["FK_T2_FAC_DUNDB_ID_T2_FAC_SITE"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_T2_FAC_DUNDB_ID_T2_FAC_SITE"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFacilityDunBradstreetCodeNull() {
                return this.IsNull(this.tableT2_FAC_DUNDB_ID.FacilityDunBradstreetCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFacilityDunBradstreetCodeNull() {
                this[this.tableT2_FAC_DUNDB_ID.FacilityDunBradstreetCodeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T2_FAC_GEORow : global::System.Data.DataRow {
            
            private T2_FAC_GEODataTable tableT2_FAC_GEO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T2_FAC_GEORow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT2_FAC_GEO = ((T2_FAC_GEODataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PK_GUID {
                get {
                    return ((string)(this[this.tableT2_FAC_GEO.PK_GUIDColumn]));
                }
                set {
                    this[this.tableT2_FAC_GEO.PK_GUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FK_GUID {
                get {
                    return ((string)(this[this.tableT2_FAC_GEO.FK_GUIDColumn]));
                }
                set {
                    this[this.tableT2_FAC_GEO.FK_GUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string A_MEASURE {
                get {
                    if (this.IsA_MEASURENull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_GEO.A_MEASUREColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_GEO.A_MEASUREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string B_MEASURE {
                get {
                    if (this.IsB_MEASURENull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_GEO.B_MEASUREColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_GEO.B_MEASUREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SRC_MAP_SCALE_NUM {
                get {
                    if (this.IsSRC_MAP_SCALE_NUMNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_GEO.SRC_MAP_SCALE_NUMColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_GEO.SRC_MAP_SCALE_NUMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HORIZ_ACCUR_MEASURE_VALUE {
                get {
                    if (this.IsHORIZ_ACCUR_MEASURE_VALUENull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_GEO.HORIZ_ACCUR_MEASURE_VALUEColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_GEO.HORIZ_ACCUR_MEASURE_VALUEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HORIZ_ACCUR_MEASURE_UNITCD {
                get {
                    if (this.IsHORIZ_ACCUR_MEASURE_UNITCDNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_GEO.HORIZ_ACCUR_MEASURE_UNITCDColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_GEO.HORIZ_ACCUR_MEASURE_UNITCDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HORIZ_ACCUR_MEASURE_UNITCDLISTID {
                get {
                    if (this.IsHORIZ_ACCUR_MEASURE_UNITCDLISTIDNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_GEO.HORIZ_ACCUR_MEASURE_UNITCDLISTIDColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_GEO.HORIZ_ACCUR_MEASURE_UNITCDLISTIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HORIZ_ACCUR_MEASURE_UNIT_NAME {
                get {
                    if (this.IsHORIZ_ACCUR_MEASURE_UNIT_NAMENull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_GEO.HORIZ_ACCUR_MEASURE_UNIT_NAMEColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_GEO.HORIZ_ACCUR_MEASURE_UNIT_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HORIZ_ACCUR_PREC_TXT {
                get {
                    if (this.IsHORIZ_ACCUR_PREC_TXTNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_GEO.HORIZ_ACCUR_PREC_TXTColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_GEO.HORIZ_ACCUR_PREC_TXTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HORIZ_ACCUR_RESULT_QUAL_CD {
                get {
                    if (this.IsHORIZ_ACCUR_RESULT_QUAL_CDNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_GEO.HORIZ_ACCUR_RESULT_QUAL_CDColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_GEO.HORIZ_ACCUR_RESULT_QUAL_CDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HORIZ_ACCUR_RESULT_QUAL_CDLISTID {
                get {
                    if (this.IsHORIZ_ACCUR_RESULT_QUAL_CDLISTIDNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_GEO.HORIZ_ACCUR_RESULT_QUAL_CDLISTIDColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_GEO.HORIZ_ACCUR_RESULT_QUAL_CDLISTIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HORIZ_ACCUR_RESULT_QUAL_NM {
                get {
                    if (this.IsHORIZ_ACCUR_RESULT_QUAL_NMNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_GEO.HORIZ_ACCUR_RESULT_QUAL_NMColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_GEO.HORIZ_ACCUR_RESULT_QUAL_NMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HORIZ_COLL_METH_IDCODE {
                get {
                    if (this.IsHORIZ_COLL_METH_IDCODENull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_GEO.HORIZ_COLL_METH_IDCODEColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_GEO.HORIZ_COLL_METH_IDCODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HORIZ_COLL_METH_CDLISTID {
                get {
                    if (this.IsHORIZ_COLL_METH_CDLISTIDNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_GEO.HORIZ_COLL_METH_CDLISTIDColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_GEO.HORIZ_COLL_METH_CDLISTIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HORIZ_COLL_METH_NAME {
                get {
                    if (this.IsHORIZ_COLL_METH_NAMENull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_GEO.HORIZ_COLL_METH_NAMEColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_GEO.HORIZ_COLL_METH_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HORIZ_COLL_METH_DESC {
                get {
                    if (this.IsHORIZ_COLL_METH_DESCNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_GEO.HORIZ_COLL_METH_DESCColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_GEO.HORIZ_COLL_METH_DESCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HORIZ_COLL_METH_DEVIATIONS {
                get {
                    if (this.IsHORIZ_COLL_METH_DEVIATIONSNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_GEO.HORIZ_COLL_METH_DEVIATIONSColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_GEO.HORIZ_COLL_METH_DEVIATIONSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string REF_POINT_CD {
                get {
                    if (this.IsREF_POINT_CDNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_GEO.REF_POINT_CDColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_GEO.REF_POINT_CDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string REF_POINT_CDLISTID {
                get {
                    if (this.IsREF_POINT_CDLISTIDNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_GEO.REF_POINT_CDLISTIDColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_GEO.REF_POINT_CDLISTIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string REF_POINT_NAME {
                get {
                    if (this.IsREF_POINT_NAMENull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_GEO.REF_POINT_NAMEColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_GEO.REF_POINT_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HORIZ_REF_DATUM_CD {
                get {
                    if (this.IsHORIZ_REF_DATUM_CDNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_GEO.HORIZ_REF_DATUM_CDColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_GEO.HORIZ_REF_DATUM_CDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HORIZ_REF_DATUM_CDLISTID {
                get {
                    if (this.IsHORIZ_REF_DATUM_CDLISTIDNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_GEO.HORIZ_REF_DATUM_CDLISTIDColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_GEO.HORIZ_REF_DATUM_CDLISTIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HORIZ_REF_DATUM_NM {
                get {
                    if (this.IsHORIZ_REF_DATUM_NMNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_GEO.HORIZ_REF_DATUM_NMColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_GEO.HORIZ_REF_DATUM_NMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DATA_COLL_DATE {
                get {
                    if (this.IsDATA_COLL_DATENull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_GEO.DATA_COLL_DATEColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_GEO.DATA_COLL_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LOC_COMMENTS {
                get {
                    if (this.IsLOC_COMMENTSNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_GEO.LOC_COMMENTSColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_GEO.LOC_COMMENTSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VERT_MEASURE_VALUE {
                get {
                    if (this.IsVERT_MEASURE_VALUENull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_GEO.VERT_MEASURE_VALUEColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_GEO.VERT_MEASURE_VALUEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VERT_MEASURE_UNITCD {
                get {
                    if (this.IsVERT_MEASURE_UNITCDNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_GEO.VERT_MEASURE_UNITCDColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_GEO.VERT_MEASURE_UNITCDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VERT_MEASURE_UNITCDLISTID {
                get {
                    if (this.IsVERT_MEASURE_UNITCDLISTIDNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_GEO.VERT_MEASURE_UNITCDLISTIDColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_GEO.VERT_MEASURE_UNITCDLISTIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VERT_MEASURE_UNIT_NAME {
                get {
                    if (this.IsVERT_MEASURE_UNIT_NAMENull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_GEO.VERT_MEASURE_UNIT_NAMEColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_GEO.VERT_MEASURE_UNIT_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VERT_MEASURE_PREC_TXT {
                get {
                    if (this.IsVERT_MEASURE_PREC_TXTNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_GEO.VERT_MEASURE_PREC_TXTColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_GEO.VERT_MEASURE_PREC_TXTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VERT_MEASURE_RESULT_QUAL_CD {
                get {
                    if (this.IsVERT_MEASURE_RESULT_QUAL_CDNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_GEO.VERT_MEASURE_RESULT_QUAL_CDColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_GEO.VERT_MEASURE_RESULT_QUAL_CDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VERT_MEASURE_RESULT_QUAL_CDLISTID {
                get {
                    if (this.IsVERT_MEASURE_RESULT_QUAL_CDLISTIDNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_GEO.VERT_MEASURE_RESULT_QUAL_CDLISTIDColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_GEO.VERT_MEASURE_RESULT_QUAL_CDLISTIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VERT_MEASURE_RESULT_QUAL_NAME {
                get {
                    if (this.IsVERT_MEASURE_RESULT_QUAL_NAMENull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_GEO.VERT_MEASURE_RESULT_QUAL_NAMEColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_GEO.VERT_MEASURE_RESULT_QUAL_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VERT_COLL_METH_IDCODE {
                get {
                    if (this.IsVERT_COLL_METH_IDCODENull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_GEO.VERT_COLL_METH_IDCODEColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_GEO.VERT_COLL_METH_IDCODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VERT_COLL_METH_CDLISTID {
                get {
                    if (this.IsVERT_COLL_METH_CDLISTIDNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_GEO.VERT_COLL_METH_CDLISTIDColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_GEO.VERT_COLL_METH_CDLISTIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VERT_COLL_METH_NAME {
                get {
                    if (this.IsVERT_COLL_METH_NAMENull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_GEO.VERT_COLL_METH_NAMEColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_GEO.VERT_COLL_METH_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VERT_COLL_METH_DESC {
                get {
                    if (this.IsVERT_COLL_METH_DESCNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_GEO.VERT_COLL_METH_DESCColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_GEO.VERT_COLL_METH_DESCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VERT_COLL_METH_DEVIATIONS {
                get {
                    if (this.IsVERT_COLL_METH_DEVIATIONSNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_GEO.VERT_COLL_METH_DEVIATIONSColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_GEO.VERT_COLL_METH_DEVIATIONSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VERT_REF_DATUM_CD {
                get {
                    if (this.IsVERT_REF_DATUM_CDNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_GEO.VERT_REF_DATUM_CDColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_GEO.VERT_REF_DATUM_CDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VERT_REF_DATUM_CDLISTID {
                get {
                    if (this.IsVERT_REF_DATUM_CDLISTIDNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_GEO.VERT_REF_DATUM_CDLISTIDColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_GEO.VERT_REF_DATUM_CDLISTIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VERT_REF_DATUM_NM {
                get {
                    if (this.IsVERT_REF_DATUM_NMNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_GEO.VERT_REF_DATUM_NMColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_GEO.VERT_REF_DATUM_NMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VERIF_METH_IDCODE {
                get {
                    if (this.IsVERIF_METH_IDCODENull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_GEO.VERIF_METH_IDCODEColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_GEO.VERIF_METH_IDCODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VERIF_METH_CDLISTID {
                get {
                    if (this.IsVERIF_METH_CDLISTIDNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_GEO.VERIF_METH_CDLISTIDColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_GEO.VERIF_METH_CDLISTIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VERIF_METH_NAME {
                get {
                    if (this.IsVERIF_METH_NAMENull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_GEO.VERIF_METH_NAMEColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_GEO.VERIF_METH_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VERIF_METH_DESC {
                get {
                    if (this.IsVERIF_METH_DESCNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_GEO.VERIF_METH_DESCColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_GEO.VERIF_METH_DESCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VERIF_METH_DEVIATIONS {
                get {
                    if (this.IsVERIF_METH_DEVIATIONSNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_GEO.VERIF_METH_DEVIATIONSColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_GEO.VERIF_METH_DEVIATIONSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COORD_DATA_SRC_CD {
                get {
                    if (this.IsCOORD_DATA_SRC_CDNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_GEO.COORD_DATA_SRC_CDColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_GEO.COORD_DATA_SRC_CDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COORD_DATA_SRC_CDLISTID {
                get {
                    if (this.IsCOORD_DATA_SRC_CDLISTIDNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_GEO.COORD_DATA_SRC_CDLISTIDColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_GEO.COORD_DATA_SRC_CDLISTIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COORD_DATA_SRC_NM {
                get {
                    if (this.IsCOORD_DATA_SRC_NMNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_GEO.COORD_DATA_SRC_NMColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_GEO.COORD_DATA_SRC_NMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GEO_TYPE_CD {
                get {
                    if (this.IsGEO_TYPE_CDNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_GEO.GEO_TYPE_CDColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_GEO.GEO_TYPE_CDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GEO_TYPE_CDLISTID {
                get {
                    if (this.IsGEO_TYPE_CDLISTIDNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_GEO.GEO_TYPE_CDLISTIDColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_GEO.GEO_TYPE_CDLISTIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GEO_TYPE_NM {
                get {
                    if (this.IsGEO_TYPE_NMNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_GEO.GEO_TYPE_NMColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_GEO.GEO_TYPE_NMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_SITERow T2_FAC_SITERow {
                get {
                    return ((T2_FAC_SITERow)(this.GetParentRow(this.Table.ParentRelations["FK_T2_FAC_GEO_T2_FAC_SITE"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_T2_FAC_GEO_T2_FAC_SITE"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsA_MEASURENull() {
                return this.IsNull(this.tableT2_FAC_GEO.A_MEASUREColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetA_MEASURENull() {
                this[this.tableT2_FAC_GEO.A_MEASUREColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsB_MEASURENull() {
                return this.IsNull(this.tableT2_FAC_GEO.B_MEASUREColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetB_MEASURENull() {
                this[this.tableT2_FAC_GEO.B_MEASUREColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSRC_MAP_SCALE_NUMNull() {
                return this.IsNull(this.tableT2_FAC_GEO.SRC_MAP_SCALE_NUMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSRC_MAP_SCALE_NUMNull() {
                this[this.tableT2_FAC_GEO.SRC_MAP_SCALE_NUMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHORIZ_ACCUR_MEASURE_VALUENull() {
                return this.IsNull(this.tableT2_FAC_GEO.HORIZ_ACCUR_MEASURE_VALUEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHORIZ_ACCUR_MEASURE_VALUENull() {
                this[this.tableT2_FAC_GEO.HORIZ_ACCUR_MEASURE_VALUEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHORIZ_ACCUR_MEASURE_UNITCDNull() {
                return this.IsNull(this.tableT2_FAC_GEO.HORIZ_ACCUR_MEASURE_UNITCDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHORIZ_ACCUR_MEASURE_UNITCDNull() {
                this[this.tableT2_FAC_GEO.HORIZ_ACCUR_MEASURE_UNITCDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHORIZ_ACCUR_MEASURE_UNITCDLISTIDNull() {
                return this.IsNull(this.tableT2_FAC_GEO.HORIZ_ACCUR_MEASURE_UNITCDLISTIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHORIZ_ACCUR_MEASURE_UNITCDLISTIDNull() {
                this[this.tableT2_FAC_GEO.HORIZ_ACCUR_MEASURE_UNITCDLISTIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHORIZ_ACCUR_MEASURE_UNIT_NAMENull() {
                return this.IsNull(this.tableT2_FAC_GEO.HORIZ_ACCUR_MEASURE_UNIT_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHORIZ_ACCUR_MEASURE_UNIT_NAMENull() {
                this[this.tableT2_FAC_GEO.HORIZ_ACCUR_MEASURE_UNIT_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHORIZ_ACCUR_PREC_TXTNull() {
                return this.IsNull(this.tableT2_FAC_GEO.HORIZ_ACCUR_PREC_TXTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHORIZ_ACCUR_PREC_TXTNull() {
                this[this.tableT2_FAC_GEO.HORIZ_ACCUR_PREC_TXTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHORIZ_ACCUR_RESULT_QUAL_CDNull() {
                return this.IsNull(this.tableT2_FAC_GEO.HORIZ_ACCUR_RESULT_QUAL_CDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHORIZ_ACCUR_RESULT_QUAL_CDNull() {
                this[this.tableT2_FAC_GEO.HORIZ_ACCUR_RESULT_QUAL_CDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHORIZ_ACCUR_RESULT_QUAL_CDLISTIDNull() {
                return this.IsNull(this.tableT2_FAC_GEO.HORIZ_ACCUR_RESULT_QUAL_CDLISTIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHORIZ_ACCUR_RESULT_QUAL_CDLISTIDNull() {
                this[this.tableT2_FAC_GEO.HORIZ_ACCUR_RESULT_QUAL_CDLISTIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHORIZ_ACCUR_RESULT_QUAL_NMNull() {
                return this.IsNull(this.tableT2_FAC_GEO.HORIZ_ACCUR_RESULT_QUAL_NMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHORIZ_ACCUR_RESULT_QUAL_NMNull() {
                this[this.tableT2_FAC_GEO.HORIZ_ACCUR_RESULT_QUAL_NMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHORIZ_COLL_METH_IDCODENull() {
                return this.IsNull(this.tableT2_FAC_GEO.HORIZ_COLL_METH_IDCODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHORIZ_COLL_METH_IDCODENull() {
                this[this.tableT2_FAC_GEO.HORIZ_COLL_METH_IDCODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHORIZ_COLL_METH_CDLISTIDNull() {
                return this.IsNull(this.tableT2_FAC_GEO.HORIZ_COLL_METH_CDLISTIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHORIZ_COLL_METH_CDLISTIDNull() {
                this[this.tableT2_FAC_GEO.HORIZ_COLL_METH_CDLISTIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHORIZ_COLL_METH_NAMENull() {
                return this.IsNull(this.tableT2_FAC_GEO.HORIZ_COLL_METH_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHORIZ_COLL_METH_NAMENull() {
                this[this.tableT2_FAC_GEO.HORIZ_COLL_METH_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHORIZ_COLL_METH_DESCNull() {
                return this.IsNull(this.tableT2_FAC_GEO.HORIZ_COLL_METH_DESCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHORIZ_COLL_METH_DESCNull() {
                this[this.tableT2_FAC_GEO.HORIZ_COLL_METH_DESCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHORIZ_COLL_METH_DEVIATIONSNull() {
                return this.IsNull(this.tableT2_FAC_GEO.HORIZ_COLL_METH_DEVIATIONSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHORIZ_COLL_METH_DEVIATIONSNull() {
                this[this.tableT2_FAC_GEO.HORIZ_COLL_METH_DEVIATIONSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsREF_POINT_CDNull() {
                return this.IsNull(this.tableT2_FAC_GEO.REF_POINT_CDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetREF_POINT_CDNull() {
                this[this.tableT2_FAC_GEO.REF_POINT_CDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsREF_POINT_CDLISTIDNull() {
                return this.IsNull(this.tableT2_FAC_GEO.REF_POINT_CDLISTIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetREF_POINT_CDLISTIDNull() {
                this[this.tableT2_FAC_GEO.REF_POINT_CDLISTIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsREF_POINT_NAMENull() {
                return this.IsNull(this.tableT2_FAC_GEO.REF_POINT_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetREF_POINT_NAMENull() {
                this[this.tableT2_FAC_GEO.REF_POINT_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHORIZ_REF_DATUM_CDNull() {
                return this.IsNull(this.tableT2_FAC_GEO.HORIZ_REF_DATUM_CDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHORIZ_REF_DATUM_CDNull() {
                this[this.tableT2_FAC_GEO.HORIZ_REF_DATUM_CDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHORIZ_REF_DATUM_CDLISTIDNull() {
                return this.IsNull(this.tableT2_FAC_GEO.HORIZ_REF_DATUM_CDLISTIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHORIZ_REF_DATUM_CDLISTIDNull() {
                this[this.tableT2_FAC_GEO.HORIZ_REF_DATUM_CDLISTIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHORIZ_REF_DATUM_NMNull() {
                return this.IsNull(this.tableT2_FAC_GEO.HORIZ_REF_DATUM_NMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHORIZ_REF_DATUM_NMNull() {
                this[this.tableT2_FAC_GEO.HORIZ_REF_DATUM_NMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDATA_COLL_DATENull() {
                return this.IsNull(this.tableT2_FAC_GEO.DATA_COLL_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDATA_COLL_DATENull() {
                this[this.tableT2_FAC_GEO.DATA_COLL_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLOC_COMMENTSNull() {
                return this.IsNull(this.tableT2_FAC_GEO.LOC_COMMENTSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLOC_COMMENTSNull() {
                this[this.tableT2_FAC_GEO.LOC_COMMENTSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVERT_MEASURE_VALUENull() {
                return this.IsNull(this.tableT2_FAC_GEO.VERT_MEASURE_VALUEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVERT_MEASURE_VALUENull() {
                this[this.tableT2_FAC_GEO.VERT_MEASURE_VALUEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVERT_MEASURE_UNITCDNull() {
                return this.IsNull(this.tableT2_FAC_GEO.VERT_MEASURE_UNITCDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVERT_MEASURE_UNITCDNull() {
                this[this.tableT2_FAC_GEO.VERT_MEASURE_UNITCDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVERT_MEASURE_UNITCDLISTIDNull() {
                return this.IsNull(this.tableT2_FAC_GEO.VERT_MEASURE_UNITCDLISTIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVERT_MEASURE_UNITCDLISTIDNull() {
                this[this.tableT2_FAC_GEO.VERT_MEASURE_UNITCDLISTIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVERT_MEASURE_UNIT_NAMENull() {
                return this.IsNull(this.tableT2_FAC_GEO.VERT_MEASURE_UNIT_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVERT_MEASURE_UNIT_NAMENull() {
                this[this.tableT2_FAC_GEO.VERT_MEASURE_UNIT_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVERT_MEASURE_PREC_TXTNull() {
                return this.IsNull(this.tableT2_FAC_GEO.VERT_MEASURE_PREC_TXTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVERT_MEASURE_PREC_TXTNull() {
                this[this.tableT2_FAC_GEO.VERT_MEASURE_PREC_TXTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVERT_MEASURE_RESULT_QUAL_CDNull() {
                return this.IsNull(this.tableT2_FAC_GEO.VERT_MEASURE_RESULT_QUAL_CDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVERT_MEASURE_RESULT_QUAL_CDNull() {
                this[this.tableT2_FAC_GEO.VERT_MEASURE_RESULT_QUAL_CDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVERT_MEASURE_RESULT_QUAL_CDLISTIDNull() {
                return this.IsNull(this.tableT2_FAC_GEO.VERT_MEASURE_RESULT_QUAL_CDLISTIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVERT_MEASURE_RESULT_QUAL_CDLISTIDNull() {
                this[this.tableT2_FAC_GEO.VERT_MEASURE_RESULT_QUAL_CDLISTIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVERT_MEASURE_RESULT_QUAL_NAMENull() {
                return this.IsNull(this.tableT2_FAC_GEO.VERT_MEASURE_RESULT_QUAL_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVERT_MEASURE_RESULT_QUAL_NAMENull() {
                this[this.tableT2_FAC_GEO.VERT_MEASURE_RESULT_QUAL_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVERT_COLL_METH_IDCODENull() {
                return this.IsNull(this.tableT2_FAC_GEO.VERT_COLL_METH_IDCODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVERT_COLL_METH_IDCODENull() {
                this[this.tableT2_FAC_GEO.VERT_COLL_METH_IDCODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVERT_COLL_METH_CDLISTIDNull() {
                return this.IsNull(this.tableT2_FAC_GEO.VERT_COLL_METH_CDLISTIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVERT_COLL_METH_CDLISTIDNull() {
                this[this.tableT2_FAC_GEO.VERT_COLL_METH_CDLISTIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVERT_COLL_METH_NAMENull() {
                return this.IsNull(this.tableT2_FAC_GEO.VERT_COLL_METH_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVERT_COLL_METH_NAMENull() {
                this[this.tableT2_FAC_GEO.VERT_COLL_METH_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVERT_COLL_METH_DESCNull() {
                return this.IsNull(this.tableT2_FAC_GEO.VERT_COLL_METH_DESCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVERT_COLL_METH_DESCNull() {
                this[this.tableT2_FAC_GEO.VERT_COLL_METH_DESCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVERT_COLL_METH_DEVIATIONSNull() {
                return this.IsNull(this.tableT2_FAC_GEO.VERT_COLL_METH_DEVIATIONSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVERT_COLL_METH_DEVIATIONSNull() {
                this[this.tableT2_FAC_GEO.VERT_COLL_METH_DEVIATIONSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVERT_REF_DATUM_CDNull() {
                return this.IsNull(this.tableT2_FAC_GEO.VERT_REF_DATUM_CDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVERT_REF_DATUM_CDNull() {
                this[this.tableT2_FAC_GEO.VERT_REF_DATUM_CDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVERT_REF_DATUM_CDLISTIDNull() {
                return this.IsNull(this.tableT2_FAC_GEO.VERT_REF_DATUM_CDLISTIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVERT_REF_DATUM_CDLISTIDNull() {
                this[this.tableT2_FAC_GEO.VERT_REF_DATUM_CDLISTIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVERT_REF_DATUM_NMNull() {
                return this.IsNull(this.tableT2_FAC_GEO.VERT_REF_DATUM_NMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVERT_REF_DATUM_NMNull() {
                this[this.tableT2_FAC_GEO.VERT_REF_DATUM_NMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVERIF_METH_IDCODENull() {
                return this.IsNull(this.tableT2_FAC_GEO.VERIF_METH_IDCODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVERIF_METH_IDCODENull() {
                this[this.tableT2_FAC_GEO.VERIF_METH_IDCODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVERIF_METH_CDLISTIDNull() {
                return this.IsNull(this.tableT2_FAC_GEO.VERIF_METH_CDLISTIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVERIF_METH_CDLISTIDNull() {
                this[this.tableT2_FAC_GEO.VERIF_METH_CDLISTIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVERIF_METH_NAMENull() {
                return this.IsNull(this.tableT2_FAC_GEO.VERIF_METH_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVERIF_METH_NAMENull() {
                this[this.tableT2_FAC_GEO.VERIF_METH_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVERIF_METH_DESCNull() {
                return this.IsNull(this.tableT2_FAC_GEO.VERIF_METH_DESCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVERIF_METH_DESCNull() {
                this[this.tableT2_FAC_GEO.VERIF_METH_DESCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVERIF_METH_DEVIATIONSNull() {
                return this.IsNull(this.tableT2_FAC_GEO.VERIF_METH_DEVIATIONSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVERIF_METH_DEVIATIONSNull() {
                this[this.tableT2_FAC_GEO.VERIF_METH_DEVIATIONSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOORD_DATA_SRC_CDNull() {
                return this.IsNull(this.tableT2_FAC_GEO.COORD_DATA_SRC_CDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOORD_DATA_SRC_CDNull() {
                this[this.tableT2_FAC_GEO.COORD_DATA_SRC_CDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOORD_DATA_SRC_CDLISTIDNull() {
                return this.IsNull(this.tableT2_FAC_GEO.COORD_DATA_SRC_CDLISTIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOORD_DATA_SRC_CDLISTIDNull() {
                this[this.tableT2_FAC_GEO.COORD_DATA_SRC_CDLISTIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOORD_DATA_SRC_NMNull() {
                return this.IsNull(this.tableT2_FAC_GEO.COORD_DATA_SRC_NMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOORD_DATA_SRC_NMNull() {
                this[this.tableT2_FAC_GEO.COORD_DATA_SRC_NMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGEO_TYPE_CDNull() {
                return this.IsNull(this.tableT2_FAC_GEO.GEO_TYPE_CDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGEO_TYPE_CDNull() {
                this[this.tableT2_FAC_GEO.GEO_TYPE_CDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGEO_TYPE_CDLISTIDNull() {
                return this.IsNull(this.tableT2_FAC_GEO.GEO_TYPE_CDLISTIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGEO_TYPE_CDLISTIDNull() {
                this[this.tableT2_FAC_GEO.GEO_TYPE_CDLISTIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGEO_TYPE_NMNull() {
                return this.IsNull(this.tableT2_FAC_GEO.GEO_TYPE_NMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGEO_TYPE_NMNull() {
                this[this.tableT2_FAC_GEO.GEO_TYPE_NMColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T2_FAC_INDRow : global::System.Data.DataRow {
            
            private T2_FAC_INDDataTable tableT2_FAC_IND;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T2_FAC_INDRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT2_FAC_IND = ((T2_FAC_INDDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PK_GUID {
                get {
                    return ((string)(this[this.tableT2_FAC_IND.PK_GUIDColumn]));
                }
                set {
                    this[this.tableT2_FAC_IND.PK_GUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FK_GUID {
                get {
                    if (this.IsFK_GUIDNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_IND.FK_GUIDColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_IND.FK_GUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IndividualIdentifier {
                get {
                    if (this.IsIndividualIdentifierNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_IND.IndividualIdentifierColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_IND.IndividualIdentifierColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IndividualTitleText {
                get {
                    if (this.IsIndividualTitleTextNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_IND.IndividualTitleTextColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_IND.IndividualTitleTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NamePrefixText {
                get {
                    if (this.IsNamePrefixTextNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_IND.NamePrefixTextColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_IND.NamePrefixTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IndividualFullName {
                get {
                    if (this.IsIndividualFullNameNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_IND.IndividualFullNameColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_IND.IndividualFullNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FirstName {
                get {
                    if (this.IsFirstNameNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_IND.FirstNameColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_IND.FirstNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MiddleName {
                get {
                    if (this.IsMiddleNameNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_IND.MiddleNameColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_IND.MiddleNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LastName {
                get {
                    if (this.IsLastNameNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_IND.LastNameColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_IND.LastNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NameSuffixText {
                get {
                    if (this.IsNameSuffixTextNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_IND.NameSuffixTextColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_IND.NameSuffixTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MailingAddressText {
                get {
                    if (this.IsMailingAddressTextNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_IND.MailingAddressTextColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_IND.MailingAddressTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MailingSupplementalAddressText {
                get {
                    if (this.IsMailingSupplementalAddressTextNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_IND.MailingSupplementalAddressTextColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_IND.MailingSupplementalAddressTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MailingAddressCityName {
                get {
                    if (this.IsMailingAddressCityNameNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_IND.MailingAddressCityNameColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_IND.MailingAddressCityNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MailingStateCode {
                get {
                    if (this.IsMailingStateCodeNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_IND.MailingStateCodeColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_IND.MailingStateCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MailingStateCodeListIdentifier {
                get {
                    if (this.IsMailingStateCodeListIdentifierNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_IND.MailingStateCodeListIdentifierColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_IND.MailingStateCodeListIdentifierColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MailingStateName {
                get {
                    if (this.IsMailingStateNameNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_IND.MailingStateNameColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_IND.MailingStateNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MailingAddressPostalCode {
                get {
                    if (this.IsMailingAddressPostalCodeNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_IND.MailingAddressPostalCodeColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_IND.MailingAddressPostalCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MailingCountryCode {
                get {
                    if (this.IsMailingCountryCodeNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_IND.MailingCountryCodeColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_IND.MailingCountryCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MailingCountryCodeListIdentifier {
                get {
                    if (this.IsMailingCountryCodeListIdentifierNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_IND.MailingCountryCodeListIdentifierColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_IND.MailingCountryCodeListIdentifierColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MailingCountryName {
                get {
                    if (this.IsMailingCountryNameNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_IND.MailingCountryNameColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_IND.MailingCountryNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_SITERow T2_FAC_SITERow {
                get {
                    return ((T2_FAC_SITERow)(this.GetParentRow(this.Table.ParentRelations["FK_T2_FAC_IND_T2_FAC_SITE"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_T2_FAC_IND_T2_FAC_SITE"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFK_GUIDNull() {
                return this.IsNull(this.tableT2_FAC_IND.FK_GUIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFK_GUIDNull() {
                this[this.tableT2_FAC_IND.FK_GUIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIndividualIdentifierNull() {
                return this.IsNull(this.tableT2_FAC_IND.IndividualIdentifierColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIndividualIdentifierNull() {
                this[this.tableT2_FAC_IND.IndividualIdentifierColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIndividualTitleTextNull() {
                return this.IsNull(this.tableT2_FAC_IND.IndividualTitleTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIndividualTitleTextNull() {
                this[this.tableT2_FAC_IND.IndividualTitleTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNamePrefixTextNull() {
                return this.IsNull(this.tableT2_FAC_IND.NamePrefixTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNamePrefixTextNull() {
                this[this.tableT2_FAC_IND.NamePrefixTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIndividualFullNameNull() {
                return this.IsNull(this.tableT2_FAC_IND.IndividualFullNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIndividualFullNameNull() {
                this[this.tableT2_FAC_IND.IndividualFullNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFirstNameNull() {
                return this.IsNull(this.tableT2_FAC_IND.FirstNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFirstNameNull() {
                this[this.tableT2_FAC_IND.FirstNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMiddleNameNull() {
                return this.IsNull(this.tableT2_FAC_IND.MiddleNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMiddleNameNull() {
                this[this.tableT2_FAC_IND.MiddleNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastNameNull() {
                return this.IsNull(this.tableT2_FAC_IND.LastNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastNameNull() {
                this[this.tableT2_FAC_IND.LastNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameSuffixTextNull() {
                return this.IsNull(this.tableT2_FAC_IND.NameSuffixTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameSuffixTextNull() {
                this[this.tableT2_FAC_IND.NameSuffixTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMailingAddressTextNull() {
                return this.IsNull(this.tableT2_FAC_IND.MailingAddressTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMailingAddressTextNull() {
                this[this.tableT2_FAC_IND.MailingAddressTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMailingSupplementalAddressTextNull() {
                return this.IsNull(this.tableT2_FAC_IND.MailingSupplementalAddressTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMailingSupplementalAddressTextNull() {
                this[this.tableT2_FAC_IND.MailingSupplementalAddressTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMailingAddressCityNameNull() {
                return this.IsNull(this.tableT2_FAC_IND.MailingAddressCityNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMailingAddressCityNameNull() {
                this[this.tableT2_FAC_IND.MailingAddressCityNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMailingStateCodeNull() {
                return this.IsNull(this.tableT2_FAC_IND.MailingStateCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMailingStateCodeNull() {
                this[this.tableT2_FAC_IND.MailingStateCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMailingStateCodeListIdentifierNull() {
                return this.IsNull(this.tableT2_FAC_IND.MailingStateCodeListIdentifierColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMailingStateCodeListIdentifierNull() {
                this[this.tableT2_FAC_IND.MailingStateCodeListIdentifierColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMailingStateNameNull() {
                return this.IsNull(this.tableT2_FAC_IND.MailingStateNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMailingStateNameNull() {
                this[this.tableT2_FAC_IND.MailingStateNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMailingAddressPostalCodeNull() {
                return this.IsNull(this.tableT2_FAC_IND.MailingAddressPostalCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMailingAddressPostalCodeNull() {
                this[this.tableT2_FAC_IND.MailingAddressPostalCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMailingCountryCodeNull() {
                return this.IsNull(this.tableT2_FAC_IND.MailingCountryCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMailingCountryCodeNull() {
                this[this.tableT2_FAC_IND.MailingCountryCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMailingCountryCodeListIdentifierNull() {
                return this.IsNull(this.tableT2_FAC_IND.MailingCountryCodeListIdentifierColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMailingCountryCodeListIdentifierNull() {
                this[this.tableT2_FAC_IND.MailingCountryCodeListIdentifierColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMailingCountryNameNull() {
                return this.IsNull(this.tableT2_FAC_IND.MailingCountryNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMailingCountryNameNull() {
                this[this.tableT2_FAC_IND.MailingCountryNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_IND_EMAILRow[] GetT2_FAC_IND_EMAILRows() {
                if ((this.Table.ChildRelations["FK_T2_FAC_IND_EMAIL_T2_FAC_IND"] == null)) {
                    return new T2_FAC_IND_EMAILRow[0];
                }
                else {
                    return ((T2_FAC_IND_EMAILRow[])(base.GetChildRows(this.Table.ChildRelations["FK_T2_FAC_IND_EMAIL_T2_FAC_IND"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_IND_PHONERow[] GetT2_FAC_IND_PHONERows() {
                if ((this.Table.ChildRelations["FK_T2_FAC_IND_PHONE_T2_FAC_IND"] == null)) {
                    return new T2_FAC_IND_PHONERow[0];
                }
                else {
                    return ((T2_FAC_IND_PHONERow[])(base.GetChildRows(this.Table.ChildRelations["FK_T2_FAC_IND_PHONE_T2_FAC_IND"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_IND_TYPERow[] GetT2_FAC_IND_TYPERows() {
                if ((this.Table.ChildRelations["FK_T2_FAC_IND_TYPE_T2_FAC_IND"] == null)) {
                    return new T2_FAC_IND_TYPERow[0];
                }
                else {
                    return ((T2_FAC_IND_TYPERow[])(base.GetChildRows(this.Table.ChildRelations["FK_T2_FAC_IND_TYPE_T2_FAC_IND"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T2_FAC_IND_EMAILRow : global::System.Data.DataRow {
            
            private T2_FAC_IND_EMAILDataTable tableT2_FAC_IND_EMAIL;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T2_FAC_IND_EMAILRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT2_FAC_IND_EMAIL = ((T2_FAC_IND_EMAILDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PK_GUID {
                get {
                    return ((string)(this[this.tableT2_FAC_IND_EMAIL.PK_GUIDColumn]));
                }
                set {
                    this[this.tableT2_FAC_IND_EMAIL.PK_GUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FK_GUID {
                get {
                    return ((string)(this[this.tableT2_FAC_IND_EMAIL.FK_GUIDColumn]));
                }
                set {
                    this[this.tableT2_FAC_IND_EMAIL.FK_GUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ElectronicAddressText {
                get {
                    if (this.IsElectronicAddressTextNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_IND_EMAIL.ElectronicAddressTextColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_IND_EMAIL.ElectronicAddressTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ElectronicAddressTypeName {
                get {
                    if (this.IsElectronicAddressTypeNameNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_IND_EMAIL.ElectronicAddressTypeNameColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_IND_EMAIL.ElectronicAddressTypeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_INDRow T2_FAC_INDRow {
                get {
                    return ((T2_FAC_INDRow)(this.GetParentRow(this.Table.ParentRelations["FK_T2_FAC_IND_EMAIL_T2_FAC_IND"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_T2_FAC_IND_EMAIL_T2_FAC_IND"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsElectronicAddressTextNull() {
                return this.IsNull(this.tableT2_FAC_IND_EMAIL.ElectronicAddressTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetElectronicAddressTextNull() {
                this[this.tableT2_FAC_IND_EMAIL.ElectronicAddressTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsElectronicAddressTypeNameNull() {
                return this.IsNull(this.tableT2_FAC_IND_EMAIL.ElectronicAddressTypeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetElectronicAddressTypeNameNull() {
                this[this.tableT2_FAC_IND_EMAIL.ElectronicAddressTypeNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T2_FAC_IND_PHONERow : global::System.Data.DataRow {
            
            private T2_FAC_IND_PHONEDataTable tableT2_FAC_IND_PHONE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T2_FAC_IND_PHONERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT2_FAC_IND_PHONE = ((T2_FAC_IND_PHONEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PK_GUID {
                get {
                    return ((string)(this[this.tableT2_FAC_IND_PHONE.PK_GUIDColumn]));
                }
                set {
                    this[this.tableT2_FAC_IND_PHONE.PK_GUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FK_GUID {
                get {
                    return ((string)(this[this.tableT2_FAC_IND_PHONE.FK_GUIDColumn]));
                }
                set {
                    this[this.tableT2_FAC_IND_PHONE.FK_GUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TelephoneNumberText {
                get {
                    if (this.IsTelephoneNumberTextNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_IND_PHONE.TelephoneNumberTextColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_IND_PHONE.TelephoneNumberTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TelephoneNumberTypeName {
                get {
                    if (this.IsTelephoneNumberTypeNameNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_IND_PHONE.TelephoneNumberTypeNameColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_IND_PHONE.TelephoneNumberTypeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TelephoneExtensionNumberText {
                get {
                    if (this.IsTelephoneExtensionNumberTextNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_IND_PHONE.TelephoneExtensionNumberTextColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_IND_PHONE.TelephoneExtensionNumberTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_INDRow T2_FAC_INDRow {
                get {
                    return ((T2_FAC_INDRow)(this.GetParentRow(this.Table.ParentRelations["FK_T2_FAC_IND_PHONE_T2_FAC_IND"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_T2_FAC_IND_PHONE_T2_FAC_IND"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTelephoneNumberTextNull() {
                return this.IsNull(this.tableT2_FAC_IND_PHONE.TelephoneNumberTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTelephoneNumberTextNull() {
                this[this.tableT2_FAC_IND_PHONE.TelephoneNumberTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTelephoneNumberTypeNameNull() {
                return this.IsNull(this.tableT2_FAC_IND_PHONE.TelephoneNumberTypeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTelephoneNumberTypeNameNull() {
                this[this.tableT2_FAC_IND_PHONE.TelephoneNumberTypeNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTelephoneExtensionNumberTextNull() {
                return this.IsNull(this.tableT2_FAC_IND_PHONE.TelephoneExtensionNumberTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTelephoneExtensionNumberTextNull() {
                this[this.tableT2_FAC_IND_PHONE.TelephoneExtensionNumberTextColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T2_FAC_IND_TYPERow : global::System.Data.DataRow {
            
            private T2_FAC_IND_TYPEDataTable tableT2_FAC_IND_TYPE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T2_FAC_IND_TYPERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT2_FAC_IND_TYPE = ((T2_FAC_IND_TYPEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PK_GUID {
                get {
                    return ((string)(this[this.tableT2_FAC_IND_TYPE.PK_GUIDColumn]));
                }
                set {
                    this[this.tableT2_FAC_IND_TYPE.PK_GUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FK_GUID {
                get {
                    return ((string)(this[this.tableT2_FAC_IND_TYPE.FK_GUIDColumn]));
                }
                set {
                    this[this.tableT2_FAC_IND_TYPE.FK_GUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ContactType {
                get {
                    if (this.IsContactTypeNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_IND_TYPE.ContactTypeColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_IND_TYPE.ContactTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_INDRow T2_FAC_INDRow {
                get {
                    return ((T2_FAC_INDRow)(this.GetParentRow(this.Table.ParentRelations["FK_T2_FAC_IND_TYPE_T2_FAC_IND"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_T2_FAC_IND_TYPE_T2_FAC_IND"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContactTypeNull() {
                return this.IsNull(this.tableT2_FAC_IND_TYPE.ContactTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContactTypeNull() {
                this[this.tableT2_FAC_IND_TYPE.ContactTypeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T2_FAC_NAICSRow : global::System.Data.DataRow {
            
            private T2_FAC_NAICSDataTable tableT2_FAC_NAICS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T2_FAC_NAICSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT2_FAC_NAICS = ((T2_FAC_NAICSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PK_GUID {
                get {
                    return ((string)(this[this.tableT2_FAC_NAICS.PK_GUIDColumn]));
                }
                set {
                    this[this.tableT2_FAC_NAICS.PK_GUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FK_GUID {
                get {
                    return ((string)(this[this.tableT2_FAC_NAICS.FK_GUIDColumn]));
                }
                set {
                    this[this.tableT2_FAC_NAICS.FK_GUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NAICSCode {
                get {
                    if (this.IsNAICSCodeNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_NAICS.NAICSCodeColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_NAICS.NAICSCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NAICSIndustryCode {
                get {
                    if (this.IsNAICSIndustryCodeNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_NAICS.NAICSIndustryCodeColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_NAICS.NAICSIndustryCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NAICSGroupCode {
                get {
                    if (this.IsNAICSGroupCodeNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_NAICS.NAICSGroupCodeColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_NAICS.NAICSGroupCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NAICSSubsectorCode {
                get {
                    if (this.IsNAICSSubsectorCodeNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_NAICS.NAICSSubsectorCodeColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_NAICS.NAICSSubsectorCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NAICSSectorCode {
                get {
                    if (this.IsNAICSSectorCodeNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_NAICS.NAICSSectorCodeColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_NAICS.NAICSSectorCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_SITERow T2_FAC_SITERow {
                get {
                    return ((T2_FAC_SITERow)(this.GetParentRow(this.Table.ParentRelations["FK_T2_FAC_NAICS_T2_FAC_SITE"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_T2_FAC_NAICS_T2_FAC_SITE"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNAICSCodeNull() {
                return this.IsNull(this.tableT2_FAC_NAICS.NAICSCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNAICSCodeNull() {
                this[this.tableT2_FAC_NAICS.NAICSCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNAICSIndustryCodeNull() {
                return this.IsNull(this.tableT2_FAC_NAICS.NAICSIndustryCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNAICSIndustryCodeNull() {
                this[this.tableT2_FAC_NAICS.NAICSIndustryCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNAICSGroupCodeNull() {
                return this.IsNull(this.tableT2_FAC_NAICS.NAICSGroupCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNAICSGroupCodeNull() {
                this[this.tableT2_FAC_NAICS.NAICSGroupCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNAICSSubsectorCodeNull() {
                return this.IsNull(this.tableT2_FAC_NAICS.NAICSSubsectorCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNAICSSubsectorCodeNull() {
                this[this.tableT2_FAC_NAICS.NAICSSubsectorCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNAICSSectorCodeNull() {
                return this.IsNull(this.tableT2_FAC_NAICS.NAICSSectorCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNAICSSectorCodeNull() {
                this[this.tableT2_FAC_NAICS.NAICSSectorCodeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T2_FAC_NPDES_IDRow : global::System.Data.DataRow {
            
            private T2_FAC_NPDES_IDDataTable tableT2_FAC_NPDES_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T2_FAC_NPDES_IDRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT2_FAC_NPDES_ID = ((T2_FAC_NPDES_IDDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PK_GUID {
                get {
                    return ((string)(this[this.tableT2_FAC_NPDES_ID.PK_GUIDColumn]));
                }
                set {
                    this[this.tableT2_FAC_NPDES_ID.PK_GUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FK_GUID {
                get {
                    return ((string)(this[this.tableT2_FAC_NPDES_ID.FK_GUIDColumn]));
                }
                set {
                    this[this.tableT2_FAC_NPDES_ID.FK_GUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NPDESIdentificationNumber {
                get {
                    if (this.IsNPDESIdentificationNumberNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_NPDES_ID.NPDESIdentificationNumberColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_NPDES_ID.NPDESIdentificationNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_SITERow T2_FAC_SITERow {
                get {
                    return ((T2_FAC_SITERow)(this.GetParentRow(this.Table.ParentRelations["FK_T2_FAC_NPDES_ID_T2_FAC_SITE"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_T2_FAC_NPDES_ID_T2_FAC_SITE"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNPDESIdentificationNumberNull() {
                return this.IsNull(this.tableT2_FAC_NPDES_ID.NPDESIdentificationNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNPDESIdentificationNumberNull() {
                this[this.tableT2_FAC_NPDES_ID.NPDESIdentificationNumberColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T2_FAC_RCRA_IDRow : global::System.Data.DataRow {
            
            private T2_FAC_RCRA_IDDataTable tableT2_FAC_RCRA_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T2_FAC_RCRA_IDRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT2_FAC_RCRA_ID = ((T2_FAC_RCRA_IDDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PK_GUID {
                get {
                    return ((string)(this[this.tableT2_FAC_RCRA_ID.PK_GUIDColumn]));
                }
                set {
                    this[this.tableT2_FAC_RCRA_ID.PK_GUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FK_GUID {
                get {
                    return ((string)(this[this.tableT2_FAC_RCRA_ID.FK_GUIDColumn]));
                }
                set {
                    this[this.tableT2_FAC_RCRA_ID.FK_GUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RCRAIdentificationNumber {
                get {
                    if (this.IsRCRAIdentificationNumberNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_RCRA_ID.RCRAIdentificationNumberColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_RCRA_ID.RCRAIdentificationNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_SITERow T2_FAC_SITERow {
                get {
                    return ((T2_FAC_SITERow)(this.GetParentRow(this.Table.ParentRelations["FK_T2_FAC_RCRA_ID_T2_FAC_SITE"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_T2_FAC_RCRA_ID_T2_FAC_SITE"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRCRAIdentificationNumberNull() {
                return this.IsNull(this.tableT2_FAC_RCRA_ID.RCRAIdentificationNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRCRAIdentificationNumberNull() {
                this[this.tableT2_FAC_RCRA_ID.RCRAIdentificationNumberColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T2_FAC_SICRow : global::System.Data.DataRow {
            
            private T2_FAC_SICDataTable tableT2_FAC_SIC;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T2_FAC_SICRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT2_FAC_SIC = ((T2_FAC_SICDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PK_GUID {
                get {
                    return ((string)(this[this.tableT2_FAC_SIC.PK_GUIDColumn]));
                }
                set {
                    this[this.tableT2_FAC_SIC.PK_GUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FK_GUID {
                get {
                    return ((string)(this[this.tableT2_FAC_SIC.FK_GUIDColumn]));
                }
                set {
                    this[this.tableT2_FAC_SIC.FK_GUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SICCode {
                get {
                    if (this.IsSICCodeNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_SIC.SICCodeColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_SIC.SICCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SICPrimaryIndicator {
                get {
                    if (this.IsSICPrimaryIndicatorNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_SIC.SICPrimaryIndicatorColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_SIC.SICPrimaryIndicatorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_SITERow T2_FAC_SITERow {
                get {
                    return ((T2_FAC_SITERow)(this.GetParentRow(this.Table.ParentRelations["FK_T2_FAC_SIC_T2_FAC_SITE"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_T2_FAC_SIC_T2_FAC_SITE"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSICCodeNull() {
                return this.IsNull(this.tableT2_FAC_SIC.SICCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSICCodeNull() {
                this[this.tableT2_FAC_SIC.SICCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSICPrimaryIndicatorNull() {
                return this.IsNull(this.tableT2_FAC_SIC.SICPrimaryIndicatorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSICPrimaryIndicatorNull() {
                this[this.tableT2_FAC_SIC.SICPrimaryIndicatorColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T2_FAC_SITERow : global::System.Data.DataRow {
            
            private T2_FAC_SITEDataTable tableT2_FAC_SITE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T2_FAC_SITERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT2_FAC_SITE = ((T2_FAC_SITEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PK_GUID {
                get {
                    return ((string)(this[this.tableT2_FAC_SITE.PK_GUIDColumn]));
                }
                set {
                    this[this.tableT2_FAC_SITE.PK_GUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FK_GUID {
                get {
                    return ((string)(this[this.tableT2_FAC_SITE.FK_GUIDColumn]));
                }
                set {
                    this[this.tableT2_FAC_SITE.FK_GUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FacilitySiteIdentifier {
                get {
                    if (this.IsFacilitySiteIdentifierNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_SITE.FacilitySiteIdentifierColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_SITE.FacilitySiteIdentifierColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FacilitySiteName {
                get {
                    if (this.IsFacilitySiteNameNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_SITE.FacilitySiteNameColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_SITE.FacilitySiteNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FacilityStatus {
                get {
                    if (this.IsFacilityStatusNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_SITE.FacilityStatusColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_SITE.FacilityStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LocationAddressText {
                get {
                    if (this.IsLocationAddressTextNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_SITE.LocationAddressTextColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_SITE.LocationAddressTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SupplementalLocationText {
                get {
                    if (this.IsSupplementalLocationTextNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_SITE.SupplementalLocationTextColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_SITE.SupplementalLocationTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LocalityName {
                get {
                    if (this.IsLocalityNameNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_SITE.LocalityNameColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_SITE.LocalityNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StateCode {
                get {
                    if (this.IsStateCodeNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_SITE.StateCodeColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_SITE.StateCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StateCodeListIdentifier {
                get {
                    if (this.IsStateCodeListIdentifierNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_SITE.StateCodeListIdentifierColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_SITE.StateCodeListIdentifierColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StateName {
                get {
                    if (this.IsStateNameNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_SITE.StateNameColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_SITE.StateNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AddressPostalCode {
                get {
                    if (this.IsAddressPostalCodeNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_SITE.AddressPostalCodeColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_SITE.AddressPostalCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CountryCode {
                get {
                    if (this.IsCountryCodeNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_SITE.CountryCodeColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_SITE.CountryCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CountryCodeListIdentifier {
                get {
                    if (this.IsCountryCodeListIdentifierNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_SITE.CountryCodeListIdentifierColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_SITE.CountryCodeListIdentifierColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CountryName {
                get {
                    if (this.IsCountryNameNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_SITE.CountryNameColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_SITE.CountryNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CountyCode {
                get {
                    if (this.IsCountyCodeNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_SITE.CountyCodeColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_SITE.CountyCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CountyCodeListIdentifier {
                get {
                    if (this.IsCountyCodeListIdentifierNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_SITE.CountyCodeListIdentifierColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_SITE.CountyCodeListIdentifierColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CountyName {
                get {
                    if (this.IsCountyNameNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_SITE.CountyNameColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_SITE.CountyNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TribalCode {
                get {
                    if (this.IsTribalCodeNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_SITE.TribalCodeColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_SITE.TribalCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TribalCodeListIdentifier {
                get {
                    if (this.IsTribalCodeListIdentifierNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_SITE.TribalCodeListIdentifierColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_SITE.TribalCodeListIdentifierColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TribalName {
                get {
                    if (this.IsTribalNameNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_SITE.TribalNameColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_SITE.TribalNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TribalLandName {
                get {
                    if (this.IsTribalLandNameNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_SITE.TribalLandNameColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_SITE.TribalLandNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TribalLandIndicator {
                get {
                    if (this.IsTribalLandIndicatorNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_SITE.TribalLandIndicatorColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_SITE.TribalLandIndicatorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LocationDescriptionText {
                get {
                    if (this.IsLocationDescriptionTextNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_SITE.LocationDescriptionTextColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_SITE.LocationDescriptionTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MailingFacilitySiteName {
                get {
                    if (this.IsMailingFacilitySiteNameNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_SITE.MailingFacilitySiteNameColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_SITE.MailingFacilitySiteNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MailingAddressText {
                get {
                    if (this.IsMailingAddressTextNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_SITE.MailingAddressTextColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_SITE.MailingAddressTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MailingSupplementalAddressText {
                get {
                    if (this.IsMailingSupplementalAddressTextNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_SITE.MailingSupplementalAddressTextColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_SITE.MailingSupplementalAddressTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MailingAddressCityName {
                get {
                    if (this.IsMailingAddressCityNameNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_SITE.MailingAddressCityNameColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_SITE.MailingAddressCityNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MailingStateCode {
                get {
                    if (this.IsMailingStateCodeNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_SITE.MailingStateCodeColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_SITE.MailingStateCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MailingStateCodeListIdentifier {
                get {
                    if (this.IsMailingStateCodeListIdentifierNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_SITE.MailingStateCodeListIdentifierColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_SITE.MailingStateCodeListIdentifierColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MailingStateName {
                get {
                    if (this.IsMailingStateNameNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_SITE.MailingStateNameColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_SITE.MailingStateNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MailingAddressPostalCode {
                get {
                    if (this.IsMailingAddressPostalCodeNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_SITE.MailingAddressPostalCodeColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_SITE.MailingAddressPostalCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MailingCountryCode {
                get {
                    if (this.IsMailingCountryCodeNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_SITE.MailingCountryCodeColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_SITE.MailingCountryCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MailingCountryCodeListIdentifier {
                get {
                    if (this.IsMailingCountryCodeListIdentifierNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_SITE.MailingCountryCodeListIdentifierColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_SITE.MailingCountryCodeListIdentifierColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MailingCountryName {
                get {
                    if (this.IsMailingCountryNameNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_SITE.MailingCountryNameColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_SITE.MailingCountryNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ParentCompanyNameNAIndicator {
                get {
                    if (this.IsParentCompanyNameNAIndicatorNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_SITE.ParentCompanyNameNAIndicatorColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_SITE.ParentCompanyNameNAIndicatorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ParentCompanyNameText {
                get {
                    if (this.IsParentCompanyNameTextNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_SITE.ParentCompanyNameTextColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_SITE.ParentCompanyNameTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ParentDunBradstreetCode {
                get {
                    if (this.IsParentDunBradstreetCodeNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_SITE.ParentDunBradstreetCodeColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_SITE.ParentDunBradstreetCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FireDistrict {
                get {
                    if (this.IsFireDistrictNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_SITE.FireDistrictColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_SITE.FireDistrictColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_REPORTRow T2_REPORTRow {
                get {
                    return ((T2_REPORTRow)(this.GetParentRow(this.Table.ParentRelations["FK_T2_FAC_SITE_T2_REPORT"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_T2_FAC_SITE_T2_REPORT"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFacilitySiteIdentifierNull() {
                return this.IsNull(this.tableT2_FAC_SITE.FacilitySiteIdentifierColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFacilitySiteIdentifierNull() {
                this[this.tableT2_FAC_SITE.FacilitySiteIdentifierColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFacilitySiteNameNull() {
                return this.IsNull(this.tableT2_FAC_SITE.FacilitySiteNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFacilitySiteNameNull() {
                this[this.tableT2_FAC_SITE.FacilitySiteNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFacilityStatusNull() {
                return this.IsNull(this.tableT2_FAC_SITE.FacilityStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFacilityStatusNull() {
                this[this.tableT2_FAC_SITE.FacilityStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocationAddressTextNull() {
                return this.IsNull(this.tableT2_FAC_SITE.LocationAddressTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocationAddressTextNull() {
                this[this.tableT2_FAC_SITE.LocationAddressTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplementalLocationTextNull() {
                return this.IsNull(this.tableT2_FAC_SITE.SupplementalLocationTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplementalLocationTextNull() {
                this[this.tableT2_FAC_SITE.SupplementalLocationTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocalityNameNull() {
                return this.IsNull(this.tableT2_FAC_SITE.LocalityNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocalityNameNull() {
                this[this.tableT2_FAC_SITE.LocalityNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStateCodeNull() {
                return this.IsNull(this.tableT2_FAC_SITE.StateCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStateCodeNull() {
                this[this.tableT2_FAC_SITE.StateCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStateCodeListIdentifierNull() {
                return this.IsNull(this.tableT2_FAC_SITE.StateCodeListIdentifierColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStateCodeListIdentifierNull() {
                this[this.tableT2_FAC_SITE.StateCodeListIdentifierColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStateNameNull() {
                return this.IsNull(this.tableT2_FAC_SITE.StateNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStateNameNull() {
                this[this.tableT2_FAC_SITE.StateNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddressPostalCodeNull() {
                return this.IsNull(this.tableT2_FAC_SITE.AddressPostalCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddressPostalCodeNull() {
                this[this.tableT2_FAC_SITE.AddressPostalCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCountryCodeNull() {
                return this.IsNull(this.tableT2_FAC_SITE.CountryCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCountryCodeNull() {
                this[this.tableT2_FAC_SITE.CountryCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCountryCodeListIdentifierNull() {
                return this.IsNull(this.tableT2_FAC_SITE.CountryCodeListIdentifierColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCountryCodeListIdentifierNull() {
                this[this.tableT2_FAC_SITE.CountryCodeListIdentifierColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCountryNameNull() {
                return this.IsNull(this.tableT2_FAC_SITE.CountryNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCountryNameNull() {
                this[this.tableT2_FAC_SITE.CountryNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCountyCodeNull() {
                return this.IsNull(this.tableT2_FAC_SITE.CountyCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCountyCodeNull() {
                this[this.tableT2_FAC_SITE.CountyCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCountyCodeListIdentifierNull() {
                return this.IsNull(this.tableT2_FAC_SITE.CountyCodeListIdentifierColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCountyCodeListIdentifierNull() {
                this[this.tableT2_FAC_SITE.CountyCodeListIdentifierColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCountyNameNull() {
                return this.IsNull(this.tableT2_FAC_SITE.CountyNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCountyNameNull() {
                this[this.tableT2_FAC_SITE.CountyNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTribalCodeNull() {
                return this.IsNull(this.tableT2_FAC_SITE.TribalCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTribalCodeNull() {
                this[this.tableT2_FAC_SITE.TribalCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTribalCodeListIdentifierNull() {
                return this.IsNull(this.tableT2_FAC_SITE.TribalCodeListIdentifierColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTribalCodeListIdentifierNull() {
                this[this.tableT2_FAC_SITE.TribalCodeListIdentifierColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTribalNameNull() {
                return this.IsNull(this.tableT2_FAC_SITE.TribalNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTribalNameNull() {
                this[this.tableT2_FAC_SITE.TribalNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTribalLandNameNull() {
                return this.IsNull(this.tableT2_FAC_SITE.TribalLandNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTribalLandNameNull() {
                this[this.tableT2_FAC_SITE.TribalLandNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTribalLandIndicatorNull() {
                return this.IsNull(this.tableT2_FAC_SITE.TribalLandIndicatorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTribalLandIndicatorNull() {
                this[this.tableT2_FAC_SITE.TribalLandIndicatorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocationDescriptionTextNull() {
                return this.IsNull(this.tableT2_FAC_SITE.LocationDescriptionTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocationDescriptionTextNull() {
                this[this.tableT2_FAC_SITE.LocationDescriptionTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMailingFacilitySiteNameNull() {
                return this.IsNull(this.tableT2_FAC_SITE.MailingFacilitySiteNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMailingFacilitySiteNameNull() {
                this[this.tableT2_FAC_SITE.MailingFacilitySiteNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMailingAddressTextNull() {
                return this.IsNull(this.tableT2_FAC_SITE.MailingAddressTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMailingAddressTextNull() {
                this[this.tableT2_FAC_SITE.MailingAddressTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMailingSupplementalAddressTextNull() {
                return this.IsNull(this.tableT2_FAC_SITE.MailingSupplementalAddressTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMailingSupplementalAddressTextNull() {
                this[this.tableT2_FAC_SITE.MailingSupplementalAddressTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMailingAddressCityNameNull() {
                return this.IsNull(this.tableT2_FAC_SITE.MailingAddressCityNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMailingAddressCityNameNull() {
                this[this.tableT2_FAC_SITE.MailingAddressCityNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMailingStateCodeNull() {
                return this.IsNull(this.tableT2_FAC_SITE.MailingStateCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMailingStateCodeNull() {
                this[this.tableT2_FAC_SITE.MailingStateCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMailingStateCodeListIdentifierNull() {
                return this.IsNull(this.tableT2_FAC_SITE.MailingStateCodeListIdentifierColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMailingStateCodeListIdentifierNull() {
                this[this.tableT2_FAC_SITE.MailingStateCodeListIdentifierColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMailingStateNameNull() {
                return this.IsNull(this.tableT2_FAC_SITE.MailingStateNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMailingStateNameNull() {
                this[this.tableT2_FAC_SITE.MailingStateNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMailingAddressPostalCodeNull() {
                return this.IsNull(this.tableT2_FAC_SITE.MailingAddressPostalCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMailingAddressPostalCodeNull() {
                this[this.tableT2_FAC_SITE.MailingAddressPostalCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMailingCountryCodeNull() {
                return this.IsNull(this.tableT2_FAC_SITE.MailingCountryCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMailingCountryCodeNull() {
                this[this.tableT2_FAC_SITE.MailingCountryCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMailingCountryCodeListIdentifierNull() {
                return this.IsNull(this.tableT2_FAC_SITE.MailingCountryCodeListIdentifierColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMailingCountryCodeListIdentifierNull() {
                this[this.tableT2_FAC_SITE.MailingCountryCodeListIdentifierColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMailingCountryNameNull() {
                return this.IsNull(this.tableT2_FAC_SITE.MailingCountryNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMailingCountryNameNull() {
                this[this.tableT2_FAC_SITE.MailingCountryNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParentCompanyNameNAIndicatorNull() {
                return this.IsNull(this.tableT2_FAC_SITE.ParentCompanyNameNAIndicatorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParentCompanyNameNAIndicatorNull() {
                this[this.tableT2_FAC_SITE.ParentCompanyNameNAIndicatorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParentCompanyNameTextNull() {
                return this.IsNull(this.tableT2_FAC_SITE.ParentCompanyNameTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParentCompanyNameTextNull() {
                this[this.tableT2_FAC_SITE.ParentCompanyNameTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParentDunBradstreetCodeNull() {
                return this.IsNull(this.tableT2_FAC_SITE.ParentDunBradstreetCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParentDunBradstreetCodeNull() {
                this[this.tableT2_FAC_SITE.ParentDunBradstreetCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFireDistrictNull() {
                return this.IsNull(this.tableT2_FAC_SITE.FireDistrictColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFireDistrictNull() {
                this[this.tableT2_FAC_SITE.FireDistrictColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_CHEM_INVRow[] GetT2_CHEM_INVRows() {
                if ((this.Table.ChildRelations["FK_T2_CHEM_INV_T2_FAC_SITE"] == null)) {
                    return new T2_CHEM_INVRow[0];
                }
                else {
                    return ((T2_CHEM_INVRow[])(base.GetChildRows(this.Table.ChildRelations["FK_T2_CHEM_INV_T2_FAC_SITE"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_DUNDB_IDRow[] GetT2_FAC_DUNDB_IDRows() {
                if ((this.Table.ChildRelations["FK_T2_FAC_DUNDB_ID_T2_FAC_SITE"] == null)) {
                    return new T2_FAC_DUNDB_IDRow[0];
                }
                else {
                    return ((T2_FAC_DUNDB_IDRow[])(base.GetChildRows(this.Table.ChildRelations["FK_T2_FAC_DUNDB_ID_T2_FAC_SITE"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_GEORow[] GetT2_FAC_GEORows() {
                if ((this.Table.ChildRelations["FK_T2_FAC_GEO_T2_FAC_SITE"] == null)) {
                    return new T2_FAC_GEORow[0];
                }
                else {
                    return ((T2_FAC_GEORow[])(base.GetChildRows(this.Table.ChildRelations["FK_T2_FAC_GEO_T2_FAC_SITE"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_INDRow[] GetT2_FAC_INDRows() {
                if ((this.Table.ChildRelations["FK_T2_FAC_IND_T2_FAC_SITE"] == null)) {
                    return new T2_FAC_INDRow[0];
                }
                else {
                    return ((T2_FAC_INDRow[])(base.GetChildRows(this.Table.ChildRelations["FK_T2_FAC_IND_T2_FAC_SITE"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_NAICSRow[] GetT2_FAC_NAICSRows() {
                if ((this.Table.ChildRelations["FK_T2_FAC_NAICS_T2_FAC_SITE"] == null)) {
                    return new T2_FAC_NAICSRow[0];
                }
                else {
                    return ((T2_FAC_NAICSRow[])(base.GetChildRows(this.Table.ChildRelations["FK_T2_FAC_NAICS_T2_FAC_SITE"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_NPDES_IDRow[] GetT2_FAC_NPDES_IDRows() {
                if ((this.Table.ChildRelations["FK_T2_FAC_NPDES_ID_T2_FAC_SITE"] == null)) {
                    return new T2_FAC_NPDES_IDRow[0];
                }
                else {
                    return ((T2_FAC_NPDES_IDRow[])(base.GetChildRows(this.Table.ChildRelations["FK_T2_FAC_NPDES_ID_T2_FAC_SITE"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_RCRA_IDRow[] GetT2_FAC_RCRA_IDRows() {
                if ((this.Table.ChildRelations["FK_T2_FAC_RCRA_ID_T2_FAC_SITE"] == null)) {
                    return new T2_FAC_RCRA_IDRow[0];
                }
                else {
                    return ((T2_FAC_RCRA_IDRow[])(base.GetChildRows(this.Table.ChildRelations["FK_T2_FAC_RCRA_ID_T2_FAC_SITE"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_SICRow[] GetT2_FAC_SICRows() {
                if ((this.Table.ChildRelations["FK_T2_FAC_SIC_T2_FAC_SITE"] == null)) {
                    return new T2_FAC_SICRow[0];
                }
                else {
                    return ((T2_FAC_SICRow[])(base.GetChildRows(this.Table.ChildRelations["FK_T2_FAC_SIC_T2_FAC_SITE"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_UIC_IDRow[] GetT2_FAC_UIC_IDRows() {
                if ((this.Table.ChildRelations["FK_T2_FAC_UIC_ID_T2_FAC_SITE"] == null)) {
                    return new T2_FAC_UIC_IDRow[0];
                }
                else {
                    return ((T2_FAC_UIC_IDRow[])(base.GetChildRows(this.Table.ChildRelations["FK_T2_FAC_UIC_ID_T2_FAC_SITE"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T2_FAC_UIC_IDRow : global::System.Data.DataRow {
            
            private T2_FAC_UIC_IDDataTable tableT2_FAC_UIC_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T2_FAC_UIC_IDRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT2_FAC_UIC_ID = ((T2_FAC_UIC_IDDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PK_GUID {
                get {
                    return ((string)(this[this.tableT2_FAC_UIC_ID.PK_GUIDColumn]));
                }
                set {
                    this[this.tableT2_FAC_UIC_ID.PK_GUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FK_GUID {
                get {
                    return ((string)(this[this.tableT2_FAC_UIC_ID.FK_GUIDColumn]));
                }
                set {
                    this[this.tableT2_FAC_UIC_ID.FK_GUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UICIdentificationNumber {
                get {
                    if (this.IsUICIdentificationNumberNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_FAC_UIC_ID.UICIdentificationNumberColumn]));
                    }
                }
                set {
                    this[this.tableT2_FAC_UIC_ID.UICIdentificationNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_SITERow T2_FAC_SITERow {
                get {
                    return ((T2_FAC_SITERow)(this.GetParentRow(this.Table.ParentRelations["FK_T2_FAC_UIC_ID_T2_FAC_SITE"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_T2_FAC_UIC_ID_T2_FAC_SITE"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUICIdentificationNumberNull() {
                return this.IsNull(this.tableT2_FAC_UIC_ID.UICIdentificationNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUICIdentificationNumberNull() {
                this[this.tableT2_FAC_UIC_ID.UICIdentificationNumberColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T2_REPORTRow : global::System.Data.DataRow {
            
            private T2_REPORTDataTable tableT2_REPORT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T2_REPORTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT2_REPORT = ((T2_REPORTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PK_GUID {
                get {
                    return ((string)(this[this.tableT2_REPORT.PK_GUIDColumn]));
                }
                set {
                    this[this.tableT2_REPORT.PK_GUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FK_GUID {
                get {
                    return ((string)(this[this.tableT2_REPORT.FK_GUIDColumn]));
                }
                set {
                    this[this.tableT2_REPORT.FK_GUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReportIdentifier {
                get {
                    if (this.IsReportIdentifierNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_REPORT.ReportIdentifierColumn]));
                    }
                }
                set {
                    this[this.tableT2_REPORT.ReportIdentifierColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReportDueDate {
                get {
                    if (this.IsReportDueDateNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_REPORT.ReportDueDateColumn]));
                    }
                }
                set {
                    this[this.tableT2_REPORT.ReportDueDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReportReceivedDate {
                get {
                    if (this.IsReportReceivedDateNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_REPORT.ReportReceivedDateColumn]));
                    }
                }
                set {
                    this[this.tableT2_REPORT.ReportReceivedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReportRecipientName {
                get {
                    if (this.IsReportRecipientNameNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_REPORT.ReportRecipientNameColumn]));
                    }
                }
                set {
                    this[this.tableT2_REPORT.ReportRecipientNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReportingPeriodStartDate {
                get {
                    if (this.IsReportingPeriodStartDateNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_REPORT.ReportingPeriodStartDateColumn]));
                    }
                }
                set {
                    this[this.tableT2_REPORT.ReportingPeriodStartDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReportingPeriodEndDate {
                get {
                    if (this.IsReportingPeriodEndDateNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_REPORT.ReportingPeriodEndDateColumn]));
                    }
                }
                set {
                    this[this.tableT2_REPORT.ReportingPeriodEndDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RevisionIndicator {
                get {
                    if (this.IsRevisionIndicatorNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_REPORT.RevisionIndicatorColumn]));
                    }
                }
                set {
                    this[this.tableT2_REPORT.RevisionIndicatorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReplacedReportIdentifier {
                get {
                    if (this.IsReplacedReportIdentifierNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_REPORT.ReplacedReportIdentifierColumn]));
                    }
                }
                set {
                    this[this.tableT2_REPORT.ReplacedReportIdentifierColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReportCreateByName {
                get {
                    if (this.IsReportCreateByNameNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_REPORT.ReportCreateByNameColumn]));
                    }
                }
                set {
                    this[this.tableT2_REPORT.ReportCreateByNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReportCreateDate {
                get {
                    if (this.IsReportCreateDateNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_REPORT.ReportCreateDateColumn]));
                    }
                }
                set {
                    this[this.tableT2_REPORT.ReportCreateDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReportCreateTime {
                get {
                    if (this.IsReportCreateTimeNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_REPORT.ReportCreateTimeColumn]));
                    }
                }
                set {
                    this[this.tableT2_REPORT.ReportCreateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReportType {
                get {
                    if (this.IsReportTypeNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableT2_REPORT.ReportTypeColumn]));
                    }
                }
                set {
                    this[this.tableT2_REPORT.ReportTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_SUBMISSIONRow T2_SUBMISSIONRow {
                get {
                    return ((T2_SUBMISSIONRow)(this.GetParentRow(this.Table.ParentRelations["FK_T2_REPORT_T2_SUBMISSION"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_T2_REPORT_T2_SUBMISSION"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReportIdentifierNull() {
                return this.IsNull(this.tableT2_REPORT.ReportIdentifierColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReportIdentifierNull() {
                this[this.tableT2_REPORT.ReportIdentifierColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReportDueDateNull() {
                return this.IsNull(this.tableT2_REPORT.ReportDueDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReportDueDateNull() {
                this[this.tableT2_REPORT.ReportDueDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReportReceivedDateNull() {
                return this.IsNull(this.tableT2_REPORT.ReportReceivedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReportReceivedDateNull() {
                this[this.tableT2_REPORT.ReportReceivedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReportRecipientNameNull() {
                return this.IsNull(this.tableT2_REPORT.ReportRecipientNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReportRecipientNameNull() {
                this[this.tableT2_REPORT.ReportRecipientNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReportingPeriodStartDateNull() {
                return this.IsNull(this.tableT2_REPORT.ReportingPeriodStartDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReportingPeriodStartDateNull() {
                this[this.tableT2_REPORT.ReportingPeriodStartDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReportingPeriodEndDateNull() {
                return this.IsNull(this.tableT2_REPORT.ReportingPeriodEndDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReportingPeriodEndDateNull() {
                this[this.tableT2_REPORT.ReportingPeriodEndDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRevisionIndicatorNull() {
                return this.IsNull(this.tableT2_REPORT.RevisionIndicatorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRevisionIndicatorNull() {
                this[this.tableT2_REPORT.RevisionIndicatorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReplacedReportIdentifierNull() {
                return this.IsNull(this.tableT2_REPORT.ReplacedReportIdentifierColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReplacedReportIdentifierNull() {
                this[this.tableT2_REPORT.ReplacedReportIdentifierColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReportCreateByNameNull() {
                return this.IsNull(this.tableT2_REPORT.ReportCreateByNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReportCreateByNameNull() {
                this[this.tableT2_REPORT.ReportCreateByNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReportCreateDateNull() {
                return this.IsNull(this.tableT2_REPORT.ReportCreateDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReportCreateDateNull() {
                this[this.tableT2_REPORT.ReportCreateDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReportCreateTimeNull() {
                return this.IsNull(this.tableT2_REPORT.ReportCreateTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReportCreateTimeNull() {
                this[this.tableT2_REPORT.ReportCreateTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReportTypeNull() {
                return this.IsNull(this.tableT2_REPORT.ReportTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReportTypeNull() {
                this[this.tableT2_REPORT.ReportTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_SITERow[] GetT2_FAC_SITERows() {
                if ((this.Table.ChildRelations["FK_T2_FAC_SITE_T2_REPORT"] == null)) {
                    return new T2_FAC_SITERow[0];
                }
                else {
                    return ((T2_FAC_SITERow[])(base.GetChildRows(this.Table.ChildRelations["FK_T2_FAC_SITE_T2_REPORT"])));
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T2_SUBMISSIONRowChangeEvent : global::System.EventArgs {
            
            private T2_SUBMISSIONRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_SUBMISSIONRowChangeEvent(T2_SUBMISSIONRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_SUBMISSIONRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T2_CHEM_INVRowChangeEvent : global::System.EventArgs {
            
            private T2_CHEM_INVRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_CHEM_INVRowChangeEvent(T2_CHEM_INVRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_CHEM_INVRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T2_CHEM_INV_DTLSRowChangeEvent : global::System.EventArgs {
            
            private T2_CHEM_INV_DTLSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_CHEM_INV_DTLSRowChangeEvent(T2_CHEM_INV_DTLSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_CHEM_INV_DTLSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T2_CHEM_INV_HAZRowChangeEvent : global::System.EventArgs {
            
            private T2_CHEM_INV_HAZRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_CHEM_INV_HAZRowChangeEvent(T2_CHEM_INV_HAZRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_CHEM_INV_HAZRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T2_CHEM_INV_HLTHRowChangeEvent : global::System.EventArgs {
            
            private T2_CHEM_INV_HLTHRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_CHEM_INV_HLTHRowChangeEvent(T2_CHEM_INV_HLTHRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_CHEM_INV_HLTHRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T2_CHEM_INV_PHYSRowChangeEvent : global::System.EventArgs {
            
            private T2_CHEM_INV_PHYSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_CHEM_INV_PHYSRowChangeEvent(T2_CHEM_INV_PHYSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_CHEM_INV_PHYSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T2_CHEM_LOCRowChangeEvent : global::System.EventArgs {
            
            private T2_CHEM_LOCRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_CHEM_LOCRowChangeEvent(T2_CHEM_LOCRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_CHEM_LOCRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T2_CHEM_MIXRowChangeEvent : global::System.EventArgs {
            
            private T2_CHEM_MIXRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_CHEM_MIXRowChangeEvent(T2_CHEM_MIXRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_CHEM_MIXRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T2_FAC_DUNDB_IDRowChangeEvent : global::System.EventArgs {
            
            private T2_FAC_DUNDB_IDRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_DUNDB_IDRowChangeEvent(T2_FAC_DUNDB_IDRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_DUNDB_IDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T2_FAC_GEORowChangeEvent : global::System.EventArgs {
            
            private T2_FAC_GEORow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_GEORowChangeEvent(T2_FAC_GEORow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_GEORow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T2_FAC_INDRowChangeEvent : global::System.EventArgs {
            
            private T2_FAC_INDRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_INDRowChangeEvent(T2_FAC_INDRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_INDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T2_FAC_IND_EMAILRowChangeEvent : global::System.EventArgs {
            
            private T2_FAC_IND_EMAILRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_IND_EMAILRowChangeEvent(T2_FAC_IND_EMAILRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_IND_EMAILRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T2_FAC_IND_PHONERowChangeEvent : global::System.EventArgs {
            
            private T2_FAC_IND_PHONERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_IND_PHONERowChangeEvent(T2_FAC_IND_PHONERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_IND_PHONERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T2_FAC_IND_TYPERowChangeEvent : global::System.EventArgs {
            
            private T2_FAC_IND_TYPERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_IND_TYPERowChangeEvent(T2_FAC_IND_TYPERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_IND_TYPERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T2_FAC_NAICSRowChangeEvent : global::System.EventArgs {
            
            private T2_FAC_NAICSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_NAICSRowChangeEvent(T2_FAC_NAICSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_NAICSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T2_FAC_NPDES_IDRowChangeEvent : global::System.EventArgs {
            
            private T2_FAC_NPDES_IDRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_NPDES_IDRowChangeEvent(T2_FAC_NPDES_IDRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_NPDES_IDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T2_FAC_RCRA_IDRowChangeEvent : global::System.EventArgs {
            
            private T2_FAC_RCRA_IDRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_RCRA_IDRowChangeEvent(T2_FAC_RCRA_IDRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_RCRA_IDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T2_FAC_SICRowChangeEvent : global::System.EventArgs {
            
            private T2_FAC_SICRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_SICRowChangeEvent(T2_FAC_SICRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_SICRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T2_FAC_SITERowChangeEvent : global::System.EventArgs {
            
            private T2_FAC_SITERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_SITERowChangeEvent(T2_FAC_SITERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_SITERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T2_FAC_UIC_IDRowChangeEvent : global::System.EventArgs {
            
            private T2_FAC_UIC_IDRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_UIC_IDRowChangeEvent(T2_FAC_UIC_IDRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_FAC_UIC_IDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T2_REPORTRowChangeEvent : global::System.EventArgs {
            
            private T2_REPORTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_REPORTRowChangeEvent(T2_REPORTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T2_REPORTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591