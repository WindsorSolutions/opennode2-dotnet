<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd 
                http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd 
                http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd 
                http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">

    <!-- DAOs -->
    <bean id="accountDao" class="com.windsor.node.data.dao.jdbc.JdbcAccountDao">
        <property name="dataSource" ref="jdbcDataSource" />
        <property name="idGenerator" ref="idGenerator" />
        <property name="userAccessPolicyDao" ref="policyDao" />
    </bean>

    <bean id="policyDao" class="com.windsor.node.data.dao.jdbc.JdbcUserAccessPolicyDao">
        <property name="dataSource" ref="jdbcDataSource" />
        <property name="idGenerator" ref="idGenerator" />
    </bean>

    <bean id="activityDao" class="com.windsor.node.data.dao.jdbc.JdbcActivityDao">
        <property name="dataSource" ref="jdbcDataSource" />
        <property name="idGenerator" ref="idGenerator" />
    </bean>

    <bean id="flowDao" class="com.windsor.node.data.dao.jdbc.JdbcFlowDao">
        <property name="dataSource" ref="jdbcDataSource" />
        <property name="scheduleDao" ref="scheduleDao" />
        <property name="serviceDao" ref="serviceDao" />
        <property name="idGenerator" ref="idGenerator" />
        <property name="userAccessPolicyDao" ref="policyDao" />
    </bean>

    <bean id="notificationDao" class="com.windsor.node.data.dao.jdbc.JdbcNotificationDao">
        <property name="dataSource" ref="jdbcDataSource" />
        <property name="flowDao" ref="flowDao" />
        <property name="accountDao" ref="accountDao" />
        <property name="idGenerator" ref="idGenerator" />
    </bean>

    <bean id="scheduleDao" class="com.windsor.node.data.dao.jdbc.JdbcScheduleDao">
        <property name="activityDao" ref="activityDao" />
        <property name="dataSource" ref="jdbcDataSource" />
        <property name="idGenerator" ref="idGenerator" />
    </bean>

    <bean id="configDao" class="com.windsor.node.data.dao.jdbc.JdbcConfigDao">
        <property name="dataSource" ref="jdbcDataSource" />
        <property name="idGenerator" ref="idGenerator" />
    </bean>

    <bean id="partnerDao" class="com.windsor.node.data.dao.jdbc.JdbcPartnerDao">
        <property name="dataSource" ref="jdbcDataSource" />
        <property name="idGenerator" ref="idGenerator" />
    </bean>

    <bean id="transactionDao" class="com.windsor.node.data.dao.jdbc.JdbcTransactionDao">
        <property name="dataSource" ref="jdbcDataSource" />
        <property name="idGenerator" ref="idGenerator" />
        <property name="flowDao" ref="flowDao" />
        <property name="accountDao" ref="accountDao" />
        <property name="partnerDao" ref="partnerDao" />
    </bean>

    <bean id="requestDao" class="com.windsor.node.data.dao.jdbc.JdbcRequestDao">
        <property name="dataSource" ref="jdbcDataSource" />
        <property name="serviceDao" ref="serviceDao" />
        <property name="idGenerator" ref="idGenerator" />
    </bean>

    <bean id="serviceDao" class="com.windsor.node.data.dao.jdbc.JdbcServiceDao">
        <property name="dataSource" ref="jdbcDataSource" />
        <property name="connectionDao" ref="connectionDao" />
        <property name="idGenerator" ref="idGenerator" />
    </bean>

    <bean id="connectionDao" class="com.windsor.node.data.dao.jdbc.JdbcConnectionDao">
        <property name="dataSource" ref="jdbcDataSource" />
        <property name="idGenerator" ref="idGenerator" />
    </bean>

    <bean id="pluginDao" class="com.windsor.node.data.dao.jdbc.JdbcPluginDao">
        <property name="dataSource" ref="jdbcDataSource" />
        <property name="idGenerator" ref="idGenerator" />
    </bean>

    <bean id="flowSecurityDao" class="com.windsor.node.data.dao.jdbc.JdbcFlowSecurityDao">
        <property name="dataSource" ref="jdbcDataSource" />
        <property name="idGenerator" ref="idGenerator" />
    </bean>

    <!--
        transaction mgmt for schedule DAO to prevent phantom "double
        schedules" in active-active websphere clusters that share a Node Admin
        db
    -->
    <!--
        the transactional advice (what 'happens'; see the <aop:advisor/> bean
        below)
    -->
    <tx:advice id="txAdvice" transaction-manager="txManager">
        <!-- the transactional semantics... -->
        <tx:attributes>
            <tx:method name="getForNextExec" read-only="false" isolation="SERIALIZABLE" propagation="REQUIRED" timeout="-1"/>
        </tx:attributes>
    </tx:advice>
    <!--
        ensure that the above transactional advice runs for a specific method
    -->
    <aop:config>
        <aop:pointcut id="scheduleDaoGetForNextExec"
            expression="execution(* com.windsor.node.data.dao.jdbc.JdbcScheduleDao.getForNextExec(..))" />
        <aop:advisor advice-ref="txAdvice" pointcut-ref="scheduleDaoGetForNextExec" />
    </aop:config>
    <!-- similarly, don't forget the PlatformTransactionManager -->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="jdbcDataSource" />
    </bean>

    <!-- end transaction declarations -->

    <!-- dataSource for all daos -->
    <!-- <bean id="jdbcDataSource" class="org.apache.commons.dbcp.BasicDataSource"
        destroy-method="close">
        <property name="driverClassName">
            <value>${jdbc.driverClassName}</value>
        </property>
        <property name="url">
            <value>${jdbc.url}</value>
        </property>
        <property name="username">
            <value>${jdbc.username}</value>
        </property>
        <property name="password">
            <value>${jdbc.password}</value>
        </property>
        <property name="poolPreparedStatements">
            <value>true</value>
        </property>

        <property name="initialSize">
            <value>${jdbc.initialSize}</value>
        </property>
        <property name="maxActive">
            <value>${jdbc.maxActive}</value>
        </property>
        <property name="maxIdle">
            <value>${jdbc.maxIdle}</value>
        </property>
        <property name="testOnBorrow" value="true"/>
        <property name="testOnReturn" value="false"/>
        <property name="testWhileIdle" value="true"/>
        <property name="timeBetweenEvictionRunsMillis" value="10000"/>
        <property name="numTestsPerEvictionRun" value="5"/>
        <property name="minEvictableIdleTimeMillis" value="300000" />
        <property name="validationQuery" value="select count(1) from NAccount"/>
    </bean> -->

    <!-- <bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
        <property name="dataSource.url">
            <value>${jdbc.url}</value>
        </property>
        <property name="dataSource.user">
            <value>${jdbc.username}</value>
        </property>
        <property name="dataSource.password">
            <value>${jdbc.password}</value>
        </property>
        <property name="dataSource.autoCommit" value="false" />
        <property name="poolName" value="springHikariCP" />
        <property name="dataSource.connectionTestQuery" value="select count(1) from NAccount"/>
    </bean> -->

    <!-- <bean id="jdbcDataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="shutdown">
        <constructor-arg ref="hikariConfig" />
        <property name="url">
            <value>${jdbc.url}</value>
        </property>
        <property name="user">
            <value>${jdbc.username}</value>
        </property>
        <property name="password">
            <value>${jdbc.password}</value>
        </property>
        <property name="autoCommit" value="false" />
        <property name="poolName" value="springHikariCP" />
        <property name="connectionTestQuery" value="select count(1) from NAccount"/>
    </bean> -->

    <bean id="jdbcDataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="shutdown">
        <constructor-arg>
            <bean class="com.zaxxer.hikari.HikariConfig">
                <constructor-arg>
                    <props>
                        <prop key="dataSource.URL">${jdbc.url}</prop>
                        <prop key="dataSource.user">${jdbc.username}</prop>
                        <prop key="dataSource.password">${jdbc.password}</prop>
                    </props>
                </constructor-arg>
                <property name="dataSourceClassName" value="${jdbc.dataSourceClassName}" />
                <property name="connectionTestQuery" value="select count(1) from NAccount" />
                <property name="connectionTimeout" value="60000"/>
                <!-- <property name="autoCommit" value="false" /> -->
                <property name="poolName" value="springHikariCP" />
            </bean>
        </constructor-arg>
    </bean>

</beans>