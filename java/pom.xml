<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 
                      http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.windsor.node</groupId>
    <artifactId>node</artifactId>
    <packaging>pom</packaging>
    <version>2.07-SNAPSHOT</version>
    <name>OpenNode2</name>
    <description>Node - Parent Project</description>
    <url>http://code.google.com/p/opennode2/</url>
    <inceptionYear>2009</inceptionYear>
    <organization>
        <name>Windsor Solutions, Inc.</name>
        <url>http://www.windsorsolutions.com/</url>
    </organization>
    <licenses>
        <license>
            <name>BSD License</name>
            <url>http://opennode2.googlecode.com/files/opennode2_license.txt</url>
            <distribution>repo</distribution>
        </license>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>
    <developers>
        <developer>
            <id>ageery</id>
            <name>Andrew Geery</name>
            <email>andrew_geery@windsorsolutions.com</email>
            <url>http://www.windsorsolutions.com</url>
            <organization>Windsor Solutions, Inc.</organization>
            <organizationUrl>http://www.windsorsolutions.com</organizationUrl>
            <roles>
                <role>developer</role>
            </roles>
            <timezone>-5</timezone>
        </developer>
        <developer>
            <id>rpitre</id>
            <name>Russell Pitre</name>
            <email>russell_pitre@windsorsolutions.com</email>
            <url>http://www.windsorsolutions.com</url>
            <organization>Windsor Solutions, Inc.</organization>
            <organizationUrl>http://www.windsorsolutions.com</organizationUrl>
            <roles>
                <role>developer</role>
            </roles>
            <timezone>-5</timezone>
        </developer>
        <developer>
            <id>tmurdock</id>
            <name>Tyler Murdock</name>
            <email>tyler_murdock@windsorsolutions.com</email>
            <url>http://www.windsorsolutions.com</url>
            <organization>Windsor Solutions, Inc.</organization>
            <organizationUrl>http://www.windsorsolutions.com</organizationUrl>
            <roles>
                <role>developer</role>
            </roles>
            <timezone>-8</timezone>
        </developer>
    </developers>
    <modules>
        <module>node-core</module>
        <module>node-app</module>
        <module>node-util</module>
        <module>node-plugin</module>
    </modules>
    <properties>
        <specification.vendor>Environmental Council of the States (ECOS)</specification.vendor>
        <specification.vendor.url>http://www.ecos.org/</specification.vendor.url>

        <!-- Distribution settings (@see assembly.xml in node-app-assemble module) -->
        <dist.name>ecos-generic</dist.name>
        <dist.resources.basedir>${project.basedir}/../../resources/distribution</dist.resources.basedir>
        <dist.resources.overlay.basedir>${project.basedir}/../../resources/distribution-overlay</dist.resources.overlay.basedir>
        <dist.resources.overlay.dir>${dist.resources.overlay.basedir}/${dist.name}</dist.resources.overlay.dir>
		
		<!-- Environment specific resources directory (@see node-app pom for usage -->
		<node.app.env.resources.dir>${project.basedir}/src/main/env/${dist.name}</node.app.env.resources.dir>

		<!-- User specific resources directory. If this directory is found in any 
			of the node-app modules, it will be added as a resource directory to the 
			project. Unfortunately the file path needs to live inside the project in 
			order for this to work in Eclipse. This direcotry is a good place to put 
			resources that need to be on the classpath during development. A couple of 
			use cases are as follows. First, the ability to have a custom logback config. 
			Second, each developer may have a custom spring config file to override bean 
			definitions. The directory should never be checked into source control as 
			it may contain sensitive information such as passwords or other confidential 
			information. One last note, be careful when building the node for distribution 
			as the contents in these developer specfic directory will be packaged, either 
			remove the directory or check out a fresh copy of the source from svn, hopefully 
			the CI server is building the distribution zip anyways. -->
		<node.app.user.resources.dir>${project.basedir}/src/main/env/user-${user.name}</node.app.user.resources.dir>
 
        <!-- Build settings -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- Library version properties -->
        <version.org.springframework>2.5.6.SEC03</version.org.springframework>
        <!--
            .
            .
            .
            .
        -->
        <springframework.version>2.5.6.SEC03</springframework.version>
        <commons.beanutils.version>1.8.0</commons.beanutils.version>
        <!-- The default node.home property, will be filtered into the build XML config files 
        and can be overridden if necessary.  An example might be a build that will be deployed on the 
        same server as another instance of OpenNode2, they cannot both have the same node.home on
        the file system.  The second deployment could override this property via a profile (perhaps
        in ~/.m2/settings.xml) and be rebuilt to avoid editing deployed war files after the fact -->
        <node.home>/var/opennode2_home</node.home>
    </properties>
    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <configuration>
                        <source>1.6</source>
                        <target>1.6</target>
                        <compilerArgument>-proc:none</compilerArgument>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>2.1</version> <!-- FIXME Latest version is 2.4-->
                    <configuration>
                        <archive>
                            <addMavenDescriptor>false</addMavenDescriptor>
                            <manifest>
                                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                                <addDefaultSpecificationEntries>false</addDefaultSpecificationEntries>
                            </manifest>
                            <manifestEntries>
                                <Implementation-Vendor-URL>${project.organization.url}</Implementation-Vendor-URL>
                                <Specification-Vendor>${specification.vendor}</Specification-Vendor>
                                <Specification-Vendor-URL>${specification.vendor.url}</Specification-Vendor-URL>
                            </manifestEntries>
                        </archive>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>2.3</version>
                    <configuration>
                        <archive>
                            <addMavenDescriptor>false</addMavenDescriptor>
                            <manifest>
                                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                                <addDefaultSpecificationEntries>false</addDefaultSpecificationEntries>
                            </manifest>
                            <manifestEntries>
                                <Implementation-Vendor-URL>${project.organization.url}</Implementation-Vendor-URL>
                                <Specification-Vendor>${specification.vendor}</Specification-Vendor>
                                <Specification-Vendor-URL>${specification.vendor.url}</Specification-Vendor-URL>
                            </manifestEntries>
                        </archive>
                        <!-- Protects binary files from being corrupted by this plugin's filtering -->
                        <webResources>
                            <resource>
                                <directory>src/main/webapp</directory>
                                <filtering>true</filtering>
                                <excludes>
                                    <exclude>**/*.class</exclude>
                                    <exclude>**/*.mar</exclude>
                                </excludes>
                            </resource>
                        </webResources>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>2.3</version>
                </plugin>
                <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
                <plugin>
                	<groupId>org.eclipse.m2e</groupId>
                	<artifactId>lifecycle-mapping</artifactId>
                	<version>1.0.0</version>
                	<configuration>
                		<lifecycleMappingMetadata>
                			<pluginExecutions>
                				<pluginExecution>
                					<pluginExecutionFilter>
                						<groupId>org.jvnet.hyperjaxb3</groupId>
                						<artifactId>maven-hyperjaxb3-plugin</artifactId>
                						<versionRange>[0.5.6,)</versionRange>
                						<goals>
                							<goal>generate</goal>
                						</goals>
                					</pluginExecutionFilter>
                					<action>
                						<execute/>
                					</action>
                				</pluginExecution>
                			</pluginExecutions>
                		</lifecycleMappingMetadata>
                	</configuration>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>

            <!-- FIXME - Work in progress...

            - Generated license header is a bit ugly
            - Exception thrown on .sql files, but license is still prepended to file
            - Files with existing licenses will need to have license removed
            - licenseResolver - Unable to use a file:// URL

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <version>1.3</version>
                <configuration>
                    <inceptionYear>2009</inceptionYear>
                    <organizationName>The Environmental Council of the States (ECOS)</organizationName>
                    <projectName>ECOS OpenNode2</projectName>
                    <licenseName>opennode2</licenseName>
                    <licenseResolver>http://opennode2.googlecode.com/svn/trunk/java/resources/license</licenseResolver>
                </configuration>
                <executions>
                    <execution>
                        <id>update-file-header</id>
                        <goals>
                            <goal>update-file-header</goal>
                        </goals>
                        <phase>process-sources</phase>
                        <configuration>
                            <addJavaLicenseAfterPackage>false</addJavaLicenseAfterPackage>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            
            -->
        </plugins>
    </build>
    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
        	<groupId>com.sun.xml.bind</groupId>
        	<artifactId>jaxb-impl</artifactId>
        	<version>2.2.7-b41</version>
        </dependency>
        <dependency>
        	<groupId>org.hibernate.javax.persistence</groupId>
        	<artifactId>hibernate-jpa-2.0-api</artifactId>
        </dependency>
        <dependency>
        	<groupId>org.jvnet.hyperjaxb3</groupId>
        	<artifactId>hyperjaxb3-ejb-runtime</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>commons-lang</groupId>
                    <artifactId>commons-lang</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>4.1.6.Final</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <version>4.1.6.Final</version>
        </dependency>
        <dependency>
            <groupId>xalan</groupId>
            <artifactId>xalan</artifactId>
            <version>2.7.1</version>
        </dependency>
    </dependencies>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>commons-collections</groupId>
                <artifactId>commons-collections</artifactId>
                <version>3.2.1</version>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>1.4</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>3.1</version>
            </dependency>
            <dependency>
            <groupId>commons-lang</groupId>
                <artifactId>commons-lang</artifactId>
                <version>2.6</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring</artifactId>
                <version>${springframework.version}</version>
                <exclusions>
                    <exclusion>
                        <artifactId>spring-beans</artifactId>
                        <groupId>org.springframework</groupId>
                    </exclusion>
                    <exclusion>
                        <groupId>commons-logging</groupId>
                        <artifactId>commons-logging</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.safehaus.jug</groupId>
                <artifactId>jug</artifactId>
                <version>2.0.0</version>
                <classifier>asl</classifier>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>1.6.4</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <!-- <version>0.9.30</version> -->
                <version>1.0.0</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>jcl-over-slf4j</artifactId>
                <version>1.6.4</version>
            </dependency>
            <dependency>
                <groupId>commons-beanutils</groupId>
                <artifactId>commons-beanutils</artifactId>
                <version>${commons.beanutils.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>commons-logging</groupId>
                        <artifactId>commons-logging</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>commons-beanutils</groupId>
                <artifactId>commons-beanutils-bean-collections</artifactId>
                <version>${commons.beanutils.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>commons-logging</groupId>
                        <artifactId>commons-logging</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>commons-beanutils</groupId>
                <artifactId>commons-beanutils-core</artifactId>
                <version>${commons.beanutils.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>commons-logging</groupId>
                        <artifactId>commons-logging</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-webmvc</artifactId>
                <version>${springframework.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>commons-logging</groupId>
                        <artifactId>commons-logging</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>javax.activation</groupId>
                <artifactId>activation</artifactId>
                <version>1.1</version>
            </dependency>
            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>1.3</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.javax.persistence</groupId>
                <artifactId>hibernate-jpa-2.0-api</artifactId>
                <version>1.0.1.Final</version>
            </dependency>
            <dependency>
                <groupId>org.jvnet.hyperjaxb3</groupId>
                <artifactId>hyperjaxb3-ejb-runtime</artifactId>
                <version>0.5.6</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <repositories>
        <repository>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <id>windsor-maven</id>
            <url>http://maven.windsorsolutions.biz/nexus/content/groups/public/</url>
        </repository>
    </repositories>
</project>