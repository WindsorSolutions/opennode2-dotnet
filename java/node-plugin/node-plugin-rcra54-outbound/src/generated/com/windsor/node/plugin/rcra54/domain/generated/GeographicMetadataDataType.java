//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.06.15 at 06:46:14 PM EDT 
//


package com.windsor.node.plugin.rcra54.domain.generated;

import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.Date;
import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.datatype.XMLGregorianCalendar;
import org.jvnet.hyperjaxb3.xml.bind.annotation.adapters.XMLGregorianCalendarAsDate;
import org.jvnet.hyperjaxb3.xml.bind.annotation.adapters.XmlAdapterUtils;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * Metadata for the geographic coordinates of the Handler.
 * 
 * <p>Java class for GeographicMetadataDataType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="GeographicMetadataDataType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}DataCollectionDate"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}HorizontalAccuracyMeasure" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}SourceMapScaleNumeric" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}CoordinateDataSourceDataOwnerCode" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}CoordinateDataSourceCode" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}CoordinateDataSourceName" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}GeographicReferencePointDataOwnerCode" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}GeographicReferencePointCode" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}GeographicReferencePointName" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}GeometricTypeDataOwnerCode" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}GeometricTypeCode" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}GeometricTypeName" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}HorizontalCollectionMethodDataOwnerCode" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}HorizontalCollectionMethodCode" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}HorizontalCollectionMethodName" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}HorizontalCoordinateReferenceSystemDatumDataOwnerCode" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}HorizontalCoordinateReferenceSystemDatumCode" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}HorizontalCoordinateReferenceSystemDatumName" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}VerificationMethodDataOwnerCode" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}VerificationMethodCode" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}VerificationMethodName" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "GeographicMetadataDataType", propOrder = {
    "dataCollectionDate",
    "horizontalAccuracyMeasure",
    "sourceMapScaleNumeric",
    "coordinateDataSourceDataOwnerCode",
    "coordinateDataSourceCode",
    "coordinateDataSourceName",
    "geographicReferencePointDataOwnerCode",
    "geographicReferencePointCode",
    "geographicReferencePointName",
    "geometricTypeDataOwnerCode",
    "geometricTypeCode",
    "geometricTypeName",
    "horizontalCollectionMethodDataOwnerCode",
    "horizontalCollectionMethodCode",
    "horizontalCollectionMethodName",
    "horizontalCoordinateReferenceSystemDatumDataOwnerCode",
    "horizontalCoordinateReferenceSystemDatumCode",
    "horizontalCoordinateReferenceSystemDatumName",
    "verificationMethodDataOwnerCode",
    "verificationMethodCode",
    "verificationMethodName"
})
@Entity(name = "GeographicMetadataDataType")
@Table(name = "RCRA_GEOGMETA")
@Inheritance(strategy = InheritanceType.JOINED)
public class GeographicMetadataDataType
    implements Equals, HashCode
{

    @XmlElement(name = "DataCollectionDate", required = true)
    protected XMLGregorianCalendar dataCollectionDate;
    @XmlElement(name = "HorizontalAccuracyMeasure")
    protected BigInteger horizontalAccuracyMeasure;
    @XmlElement(name = "SourceMapScaleNumeric")
    protected BigDecimal sourceMapScaleNumeric;
    @XmlElement(name = "CoordinateDataSourceDataOwnerCode")
    protected String coordinateDataSourceDataOwnerCode;
    @XmlElement(name = "CoordinateDataSourceCode")
    protected String coordinateDataSourceCode;
    @XmlElement(name = "CoordinateDataSourceName")
    protected String coordinateDataSourceName;
    @XmlElement(name = "GeographicReferencePointDataOwnerCode")
    protected String geographicReferencePointDataOwnerCode;
    @XmlElement(name = "GeographicReferencePointCode")
    protected String geographicReferencePointCode;
    @XmlElement(name = "GeographicReferencePointName")
    protected String geographicReferencePointName;
    @XmlElement(name = "GeometricTypeDataOwnerCode")
    protected String geometricTypeDataOwnerCode;
    @XmlElement(name = "GeometricTypeCode")
    protected String geometricTypeCode;
    @XmlElement(name = "GeometricTypeName")
    protected String geometricTypeName;
    @XmlElement(name = "HorizontalCollectionMethodDataOwnerCode")
    protected String horizontalCollectionMethodDataOwnerCode;
    @XmlElement(name = "HorizontalCollectionMethodCode")
    protected String horizontalCollectionMethodCode;
    @XmlElement(name = "HorizontalCollectionMethodName")
    protected String horizontalCollectionMethodName;
    @XmlElement(name = "HorizontalCoordinateReferenceSystemDatumDataOwnerCode")
    protected String horizontalCoordinateReferenceSystemDatumDataOwnerCode;
    @XmlElement(name = "HorizontalCoordinateReferenceSystemDatumCode")
    protected String horizontalCoordinateReferenceSystemDatumCode;
    @XmlElement(name = "HorizontalCoordinateReferenceSystemDatumName")
    protected String horizontalCoordinateReferenceSystemDatumName;
    @XmlElement(name = "VerificationMethodDataOwnerCode")
    protected String verificationMethodDataOwnerCode;
    @XmlElement(name = "VerificationMethodCode")
    protected String verificationMethodCode;
    @XmlElement(name = "VerificationMethodName")
    protected String verificationMethodName;
    @XmlAttribute(name = "Id")
    protected Long id;

    /**
     * Gets the value of the dataCollectionDate property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    @Transient
    public XMLGregorianCalendar getDataCollectionDate() {
        return dataCollectionDate;
    }

    /**
     * Sets the value of the dataCollectionDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setDataCollectionDate(XMLGregorianCalendar value) {
        this.dataCollectionDate = value;
    }

    /**
     * Gets the value of the horizontalAccuracyMeasure property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    @Basic
    @Column(name = "HORIZACCURACYMSR", precision = 6, scale = 0)
    public BigInteger getHorizontalAccuracyMeasure() {
        return horizontalAccuracyMeasure;
    }

    /**
     * Sets the value of the horizontalAccuracyMeasure property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setHorizontalAccuracyMeasure(BigInteger value) {
        this.horizontalAccuracyMeasure = value;
    }

    /**
     * Gets the value of the sourceMapScaleNumeric property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    @Basic
    @Column(name = "SOURCEMAPSCALE", precision = 10, scale = 10)
    public BigDecimal getSourceMapScaleNumeric() {
        return sourceMapScaleNumeric;
    }

    /**
     * Sets the value of the sourceMapScaleNumeric property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setSourceMapScaleNumeric(BigDecimal value) {
        this.sourceMapScaleNumeric = value;
    }

    /**
     * Gets the value of the coordinateDataSourceDataOwnerCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "COORDDATSOURCEDATOWNRCODE", length = 2)
    public String getCoordinateDataSourceDataOwnerCode() {
        return coordinateDataSourceDataOwnerCode;
    }

    /**
     * Sets the value of the coordinateDataSourceDataOwnerCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCoordinateDataSourceDataOwnerCode(String value) {
        this.coordinateDataSourceDataOwnerCode = value;
    }

    /**
     * Gets the value of the coordinateDataSourceCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "COORDDATSOURCECODE", length = 3)
    public String getCoordinateDataSourceCode() {
        return coordinateDataSourceCode;
    }

    /**
     * Sets the value of the coordinateDataSourceCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCoordinateDataSourceCode(String value) {
        this.coordinateDataSourceCode = value;
    }

    /**
     * Gets the value of the coordinateDataSourceName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "COORDDATSOURCENAME", length = 255)
    public String getCoordinateDataSourceName() {
        return coordinateDataSourceName;
    }

    /**
     * Sets the value of the coordinateDataSourceName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCoordinateDataSourceName(String value) {
        this.coordinateDataSourceName = value;
    }

    /**
     * Gets the value of the geographicReferencePointDataOwnerCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "GEOGREFPOINTDATOWNRCODE", length = 2)
    public String getGeographicReferencePointDataOwnerCode() {
        return geographicReferencePointDataOwnerCode;
    }

    /**
     * Sets the value of the geographicReferencePointDataOwnerCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setGeographicReferencePointDataOwnerCode(String value) {
        this.geographicReferencePointDataOwnerCode = value;
    }

    /**
     * Gets the value of the geographicReferencePointCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "GEOGREFPOINTCODE", length = 3)
    public String getGeographicReferencePointCode() {
        return geographicReferencePointCode;
    }

    /**
     * Sets the value of the geographicReferencePointCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setGeographicReferencePointCode(String value) {
        this.geographicReferencePointCode = value;
    }

    /**
     * Gets the value of the geographicReferencePointName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "GEOGREFPOINTNAME", length = 255)
    public String getGeographicReferencePointName() {
        return geographicReferencePointName;
    }

    /**
     * Sets the value of the geographicReferencePointName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setGeographicReferencePointName(String value) {
        this.geographicReferencePointName = value;
    }

    /**
     * Gets the value of the geometricTypeDataOwnerCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "GEOMTYPEDATOWNRCODE", length = 2)
    public String getGeometricTypeDataOwnerCode() {
        return geometricTypeDataOwnerCode;
    }

    /**
     * Sets the value of the geometricTypeDataOwnerCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setGeometricTypeDataOwnerCode(String value) {
        this.geometricTypeDataOwnerCode = value;
    }

    /**
     * Gets the value of the geometricTypeCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "GEOMTYPECODE", length = 3)
    public String getGeometricTypeCode() {
        return geometricTypeCode;
    }

    /**
     * Sets the value of the geometricTypeCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setGeometricTypeCode(String value) {
        this.geometricTypeCode = value;
    }

    /**
     * Gets the value of the geometricTypeName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "GEOMTYPENAME", length = 255)
    public String getGeometricTypeName() {
        return geometricTypeName;
    }

    /**
     * Sets the value of the geometricTypeName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setGeometricTypeName(String value) {
        this.geometricTypeName = value;
    }

    /**
     * Gets the value of the horizontalCollectionMethodDataOwnerCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "HORIZCOLLMETHODDATOWNRCODE", length = 2)
    public String getHorizontalCollectionMethodDataOwnerCode() {
        return horizontalCollectionMethodDataOwnerCode;
    }

    /**
     * Sets the value of the horizontalCollectionMethodDataOwnerCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setHorizontalCollectionMethodDataOwnerCode(String value) {
        this.horizontalCollectionMethodDataOwnerCode = value;
    }

    /**
     * Gets the value of the horizontalCollectionMethodCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "HORIZCOLLMETHODCODE", length = 3)
    public String getHorizontalCollectionMethodCode() {
        return horizontalCollectionMethodCode;
    }

    /**
     * Sets the value of the horizontalCollectionMethodCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setHorizontalCollectionMethodCode(String value) {
        this.horizontalCollectionMethodCode = value;
    }

    /**
     * Gets the value of the horizontalCollectionMethodName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "HORIZCOLLMETHODNAME", length = 255)
    public String getHorizontalCollectionMethodName() {
        return horizontalCollectionMethodName;
    }

    /**
     * Sets the value of the horizontalCollectionMethodName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setHorizontalCollectionMethodName(String value) {
        this.horizontalCollectionMethodName = value;
    }

    /**
     * Gets the value of the horizontalCoordinateReferenceSystemDatumDataOwnerCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "HORIZCOORDREFSYSDATDATOWNRCODE", length = 2)
    public String getHorizontalCoordinateReferenceSystemDatumDataOwnerCode() {
        return horizontalCoordinateReferenceSystemDatumDataOwnerCode;
    }

    /**
     * Sets the value of the horizontalCoordinateReferenceSystemDatumDataOwnerCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setHorizontalCoordinateReferenceSystemDatumDataOwnerCode(String value) {
        this.horizontalCoordinateReferenceSystemDatumDataOwnerCode = value;
    }

    /**
     * Gets the value of the horizontalCoordinateReferenceSystemDatumCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "HORIZCOORDREFSYSDATCODE", length = 3)
    public String getHorizontalCoordinateReferenceSystemDatumCode() {
        return horizontalCoordinateReferenceSystemDatumCode;
    }

    /**
     * Sets the value of the horizontalCoordinateReferenceSystemDatumCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setHorizontalCoordinateReferenceSystemDatumCode(String value) {
        this.horizontalCoordinateReferenceSystemDatumCode = value;
    }

    /**
     * Gets the value of the horizontalCoordinateReferenceSystemDatumName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "HORIZCOORDREFSYSDATUM", length = 255)
    public String getHorizontalCoordinateReferenceSystemDatumName() {
        return horizontalCoordinateReferenceSystemDatumName;
    }

    /**
     * Sets the value of the horizontalCoordinateReferenceSystemDatumName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setHorizontalCoordinateReferenceSystemDatumName(String value) {
        this.horizontalCoordinateReferenceSystemDatumName = value;
    }

    /**
     * Gets the value of the verificationMethodDataOwnerCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "VERMETHODDATOWNRCODE", length = 2)
    public String getVerificationMethodDataOwnerCode() {
        return verificationMethodDataOwnerCode;
    }

    /**
     * Sets the value of the verificationMethodDataOwnerCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setVerificationMethodDataOwnerCode(String value) {
        this.verificationMethodDataOwnerCode = value;
    }

    /**
     * Gets the value of the verificationMethodCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "VERMETHODCODE", length = 3)
    public String getVerificationMethodCode() {
        return verificationMethodCode;
    }

    /**
     * Sets the value of the verificationMethodCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setVerificationMethodCode(String value) {
        this.verificationMethodCode = value;
    }

    /**
     * Gets the value of the verificationMethodName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "VERMETHODNAME", length = 255)
    public String getVerificationMethodName() {
        return verificationMethodName;
    }

    /**
     * Sets the value of the verificationMethodName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setVerificationMethodName(String value) {
        this.verificationMethodName = value;
    }

    /**
     * Gets the value of the id property.
     * 
     * @return
     *     possible object is
     *     {@link Long }
     *     
     */
    @Id
    @Column(name = "ID")
    @GeneratedValue(generator = "ColSequence", strategy = GenerationType.AUTO)
    @SequenceGenerator(name = "ColSequence", sequenceName = "COLUMN_ID_SEQUENCE", allocationSize = 1)
    public Long getId() {
        return id;
    }

    /**
     * Sets the value of the id property.
     * 
     * @param value
     *     allowed object is
     *     {@link Long }
     *     
     */
    public void setId(Long value) {
        this.id = value;
    }

    @Basic
    @Column(name = "DATCOLLDATEITEM")
    @Temporal(TemporalType.DATE)
    public Date getDataCollectionDateItem() {
        return XmlAdapterUtils.unmarshall(XMLGregorianCalendarAsDate.class, this.getDataCollectionDate());
    }

    public void setDataCollectionDateItem(Date target) {
        setDataCollectionDate(XmlAdapterUtils.marshall(XMLGregorianCalendarAsDate.class, target));
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof GeographicMetadataDataType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final GeographicMetadataDataType that = ((GeographicMetadataDataType) object);
        {
            XMLGregorianCalendar lhsDataCollectionDate;
            lhsDataCollectionDate = this.getDataCollectionDate();
            XMLGregorianCalendar rhsDataCollectionDate;
            rhsDataCollectionDate = that.getDataCollectionDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dataCollectionDate", lhsDataCollectionDate), LocatorUtils.property(thatLocator, "dataCollectionDate", rhsDataCollectionDate), lhsDataCollectionDate, rhsDataCollectionDate)) {
                return false;
            }
        }
        {
            BigInteger lhsHorizontalAccuracyMeasure;
            lhsHorizontalAccuracyMeasure = this.getHorizontalAccuracyMeasure();
            BigInteger rhsHorizontalAccuracyMeasure;
            rhsHorizontalAccuracyMeasure = that.getHorizontalAccuracyMeasure();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "horizontalAccuracyMeasure", lhsHorizontalAccuracyMeasure), LocatorUtils.property(thatLocator, "horizontalAccuracyMeasure", rhsHorizontalAccuracyMeasure), lhsHorizontalAccuracyMeasure, rhsHorizontalAccuracyMeasure)) {
                return false;
            }
        }
        {
            BigDecimal lhsSourceMapScaleNumeric;
            lhsSourceMapScaleNumeric = this.getSourceMapScaleNumeric();
            BigDecimal rhsSourceMapScaleNumeric;
            rhsSourceMapScaleNumeric = that.getSourceMapScaleNumeric();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "sourceMapScaleNumeric", lhsSourceMapScaleNumeric), LocatorUtils.property(thatLocator, "sourceMapScaleNumeric", rhsSourceMapScaleNumeric), lhsSourceMapScaleNumeric, rhsSourceMapScaleNumeric)) {
                return false;
            }
        }
        {
            String lhsCoordinateDataSourceDataOwnerCode;
            lhsCoordinateDataSourceDataOwnerCode = this.getCoordinateDataSourceDataOwnerCode();
            String rhsCoordinateDataSourceDataOwnerCode;
            rhsCoordinateDataSourceDataOwnerCode = that.getCoordinateDataSourceDataOwnerCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "coordinateDataSourceDataOwnerCode", lhsCoordinateDataSourceDataOwnerCode), LocatorUtils.property(thatLocator, "coordinateDataSourceDataOwnerCode", rhsCoordinateDataSourceDataOwnerCode), lhsCoordinateDataSourceDataOwnerCode, rhsCoordinateDataSourceDataOwnerCode)) {
                return false;
            }
        }
        {
            String lhsCoordinateDataSourceCode;
            lhsCoordinateDataSourceCode = this.getCoordinateDataSourceCode();
            String rhsCoordinateDataSourceCode;
            rhsCoordinateDataSourceCode = that.getCoordinateDataSourceCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "coordinateDataSourceCode", lhsCoordinateDataSourceCode), LocatorUtils.property(thatLocator, "coordinateDataSourceCode", rhsCoordinateDataSourceCode), lhsCoordinateDataSourceCode, rhsCoordinateDataSourceCode)) {
                return false;
            }
        }
        {
            String lhsCoordinateDataSourceName;
            lhsCoordinateDataSourceName = this.getCoordinateDataSourceName();
            String rhsCoordinateDataSourceName;
            rhsCoordinateDataSourceName = that.getCoordinateDataSourceName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "coordinateDataSourceName", lhsCoordinateDataSourceName), LocatorUtils.property(thatLocator, "coordinateDataSourceName", rhsCoordinateDataSourceName), lhsCoordinateDataSourceName, rhsCoordinateDataSourceName)) {
                return false;
            }
        }
        {
            String lhsGeographicReferencePointDataOwnerCode;
            lhsGeographicReferencePointDataOwnerCode = this.getGeographicReferencePointDataOwnerCode();
            String rhsGeographicReferencePointDataOwnerCode;
            rhsGeographicReferencePointDataOwnerCode = that.getGeographicReferencePointDataOwnerCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "geographicReferencePointDataOwnerCode", lhsGeographicReferencePointDataOwnerCode), LocatorUtils.property(thatLocator, "geographicReferencePointDataOwnerCode", rhsGeographicReferencePointDataOwnerCode), lhsGeographicReferencePointDataOwnerCode, rhsGeographicReferencePointDataOwnerCode)) {
                return false;
            }
        }
        {
            String lhsGeographicReferencePointCode;
            lhsGeographicReferencePointCode = this.getGeographicReferencePointCode();
            String rhsGeographicReferencePointCode;
            rhsGeographicReferencePointCode = that.getGeographicReferencePointCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "geographicReferencePointCode", lhsGeographicReferencePointCode), LocatorUtils.property(thatLocator, "geographicReferencePointCode", rhsGeographicReferencePointCode), lhsGeographicReferencePointCode, rhsGeographicReferencePointCode)) {
                return false;
            }
        }
        {
            String lhsGeographicReferencePointName;
            lhsGeographicReferencePointName = this.getGeographicReferencePointName();
            String rhsGeographicReferencePointName;
            rhsGeographicReferencePointName = that.getGeographicReferencePointName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "geographicReferencePointName", lhsGeographicReferencePointName), LocatorUtils.property(thatLocator, "geographicReferencePointName", rhsGeographicReferencePointName), lhsGeographicReferencePointName, rhsGeographicReferencePointName)) {
                return false;
            }
        }
        {
            String lhsGeometricTypeDataOwnerCode;
            lhsGeometricTypeDataOwnerCode = this.getGeometricTypeDataOwnerCode();
            String rhsGeometricTypeDataOwnerCode;
            rhsGeometricTypeDataOwnerCode = that.getGeometricTypeDataOwnerCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "geometricTypeDataOwnerCode", lhsGeometricTypeDataOwnerCode), LocatorUtils.property(thatLocator, "geometricTypeDataOwnerCode", rhsGeometricTypeDataOwnerCode), lhsGeometricTypeDataOwnerCode, rhsGeometricTypeDataOwnerCode)) {
                return false;
            }
        }
        {
            String lhsGeometricTypeCode;
            lhsGeometricTypeCode = this.getGeometricTypeCode();
            String rhsGeometricTypeCode;
            rhsGeometricTypeCode = that.getGeometricTypeCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "geometricTypeCode", lhsGeometricTypeCode), LocatorUtils.property(thatLocator, "geometricTypeCode", rhsGeometricTypeCode), lhsGeometricTypeCode, rhsGeometricTypeCode)) {
                return false;
            }
        }
        {
            String lhsGeometricTypeName;
            lhsGeometricTypeName = this.getGeometricTypeName();
            String rhsGeometricTypeName;
            rhsGeometricTypeName = that.getGeometricTypeName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "geometricTypeName", lhsGeometricTypeName), LocatorUtils.property(thatLocator, "geometricTypeName", rhsGeometricTypeName), lhsGeometricTypeName, rhsGeometricTypeName)) {
                return false;
            }
        }
        {
            String lhsHorizontalCollectionMethodDataOwnerCode;
            lhsHorizontalCollectionMethodDataOwnerCode = this.getHorizontalCollectionMethodDataOwnerCode();
            String rhsHorizontalCollectionMethodDataOwnerCode;
            rhsHorizontalCollectionMethodDataOwnerCode = that.getHorizontalCollectionMethodDataOwnerCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "horizontalCollectionMethodDataOwnerCode", lhsHorizontalCollectionMethodDataOwnerCode), LocatorUtils.property(thatLocator, "horizontalCollectionMethodDataOwnerCode", rhsHorizontalCollectionMethodDataOwnerCode), lhsHorizontalCollectionMethodDataOwnerCode, rhsHorizontalCollectionMethodDataOwnerCode)) {
                return false;
            }
        }
        {
            String lhsHorizontalCollectionMethodCode;
            lhsHorizontalCollectionMethodCode = this.getHorizontalCollectionMethodCode();
            String rhsHorizontalCollectionMethodCode;
            rhsHorizontalCollectionMethodCode = that.getHorizontalCollectionMethodCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "horizontalCollectionMethodCode", lhsHorizontalCollectionMethodCode), LocatorUtils.property(thatLocator, "horizontalCollectionMethodCode", rhsHorizontalCollectionMethodCode), lhsHorizontalCollectionMethodCode, rhsHorizontalCollectionMethodCode)) {
                return false;
            }
        }
        {
            String lhsHorizontalCollectionMethodName;
            lhsHorizontalCollectionMethodName = this.getHorizontalCollectionMethodName();
            String rhsHorizontalCollectionMethodName;
            rhsHorizontalCollectionMethodName = that.getHorizontalCollectionMethodName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "horizontalCollectionMethodName", lhsHorizontalCollectionMethodName), LocatorUtils.property(thatLocator, "horizontalCollectionMethodName", rhsHorizontalCollectionMethodName), lhsHorizontalCollectionMethodName, rhsHorizontalCollectionMethodName)) {
                return false;
            }
        }
        {
            String lhsHorizontalCoordinateReferenceSystemDatumDataOwnerCode;
            lhsHorizontalCoordinateReferenceSystemDatumDataOwnerCode = this.getHorizontalCoordinateReferenceSystemDatumDataOwnerCode();
            String rhsHorizontalCoordinateReferenceSystemDatumDataOwnerCode;
            rhsHorizontalCoordinateReferenceSystemDatumDataOwnerCode = that.getHorizontalCoordinateReferenceSystemDatumDataOwnerCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "horizontalCoordinateReferenceSystemDatumDataOwnerCode", lhsHorizontalCoordinateReferenceSystemDatumDataOwnerCode), LocatorUtils.property(thatLocator, "horizontalCoordinateReferenceSystemDatumDataOwnerCode", rhsHorizontalCoordinateReferenceSystemDatumDataOwnerCode), lhsHorizontalCoordinateReferenceSystemDatumDataOwnerCode, rhsHorizontalCoordinateReferenceSystemDatumDataOwnerCode)) {
                return false;
            }
        }
        {
            String lhsHorizontalCoordinateReferenceSystemDatumCode;
            lhsHorizontalCoordinateReferenceSystemDatumCode = this.getHorizontalCoordinateReferenceSystemDatumCode();
            String rhsHorizontalCoordinateReferenceSystemDatumCode;
            rhsHorizontalCoordinateReferenceSystemDatumCode = that.getHorizontalCoordinateReferenceSystemDatumCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "horizontalCoordinateReferenceSystemDatumCode", lhsHorizontalCoordinateReferenceSystemDatumCode), LocatorUtils.property(thatLocator, "horizontalCoordinateReferenceSystemDatumCode", rhsHorizontalCoordinateReferenceSystemDatumCode), lhsHorizontalCoordinateReferenceSystemDatumCode, rhsHorizontalCoordinateReferenceSystemDatumCode)) {
                return false;
            }
        }
        {
            String lhsHorizontalCoordinateReferenceSystemDatumName;
            lhsHorizontalCoordinateReferenceSystemDatumName = this.getHorizontalCoordinateReferenceSystemDatumName();
            String rhsHorizontalCoordinateReferenceSystemDatumName;
            rhsHorizontalCoordinateReferenceSystemDatumName = that.getHorizontalCoordinateReferenceSystemDatumName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "horizontalCoordinateReferenceSystemDatumName", lhsHorizontalCoordinateReferenceSystemDatumName), LocatorUtils.property(thatLocator, "horizontalCoordinateReferenceSystemDatumName", rhsHorizontalCoordinateReferenceSystemDatumName), lhsHorizontalCoordinateReferenceSystemDatumName, rhsHorizontalCoordinateReferenceSystemDatumName)) {
                return false;
            }
        }
        {
            String lhsVerificationMethodDataOwnerCode;
            lhsVerificationMethodDataOwnerCode = this.getVerificationMethodDataOwnerCode();
            String rhsVerificationMethodDataOwnerCode;
            rhsVerificationMethodDataOwnerCode = that.getVerificationMethodDataOwnerCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "verificationMethodDataOwnerCode", lhsVerificationMethodDataOwnerCode), LocatorUtils.property(thatLocator, "verificationMethodDataOwnerCode", rhsVerificationMethodDataOwnerCode), lhsVerificationMethodDataOwnerCode, rhsVerificationMethodDataOwnerCode)) {
                return false;
            }
        }
        {
            String lhsVerificationMethodCode;
            lhsVerificationMethodCode = this.getVerificationMethodCode();
            String rhsVerificationMethodCode;
            rhsVerificationMethodCode = that.getVerificationMethodCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "verificationMethodCode", lhsVerificationMethodCode), LocatorUtils.property(thatLocator, "verificationMethodCode", rhsVerificationMethodCode), lhsVerificationMethodCode, rhsVerificationMethodCode)) {
                return false;
            }
        }
        {
            String lhsVerificationMethodName;
            lhsVerificationMethodName = this.getVerificationMethodName();
            String rhsVerificationMethodName;
            rhsVerificationMethodName = that.getVerificationMethodName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "verificationMethodName", lhsVerificationMethodName), LocatorUtils.property(thatLocator, "verificationMethodName", rhsVerificationMethodName), lhsVerificationMethodName, rhsVerificationMethodName)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            XMLGregorianCalendar theDataCollectionDate;
            theDataCollectionDate = this.getDataCollectionDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dataCollectionDate", theDataCollectionDate), currentHashCode, theDataCollectionDate);
        }
        {
            BigInteger theHorizontalAccuracyMeasure;
            theHorizontalAccuracyMeasure = this.getHorizontalAccuracyMeasure();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "horizontalAccuracyMeasure", theHorizontalAccuracyMeasure), currentHashCode, theHorizontalAccuracyMeasure);
        }
        {
            BigDecimal theSourceMapScaleNumeric;
            theSourceMapScaleNumeric = this.getSourceMapScaleNumeric();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "sourceMapScaleNumeric", theSourceMapScaleNumeric), currentHashCode, theSourceMapScaleNumeric);
        }
        {
            String theCoordinateDataSourceDataOwnerCode;
            theCoordinateDataSourceDataOwnerCode = this.getCoordinateDataSourceDataOwnerCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "coordinateDataSourceDataOwnerCode", theCoordinateDataSourceDataOwnerCode), currentHashCode, theCoordinateDataSourceDataOwnerCode);
        }
        {
            String theCoordinateDataSourceCode;
            theCoordinateDataSourceCode = this.getCoordinateDataSourceCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "coordinateDataSourceCode", theCoordinateDataSourceCode), currentHashCode, theCoordinateDataSourceCode);
        }
        {
            String theCoordinateDataSourceName;
            theCoordinateDataSourceName = this.getCoordinateDataSourceName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "coordinateDataSourceName", theCoordinateDataSourceName), currentHashCode, theCoordinateDataSourceName);
        }
        {
            String theGeographicReferencePointDataOwnerCode;
            theGeographicReferencePointDataOwnerCode = this.getGeographicReferencePointDataOwnerCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "geographicReferencePointDataOwnerCode", theGeographicReferencePointDataOwnerCode), currentHashCode, theGeographicReferencePointDataOwnerCode);
        }
        {
            String theGeographicReferencePointCode;
            theGeographicReferencePointCode = this.getGeographicReferencePointCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "geographicReferencePointCode", theGeographicReferencePointCode), currentHashCode, theGeographicReferencePointCode);
        }
        {
            String theGeographicReferencePointName;
            theGeographicReferencePointName = this.getGeographicReferencePointName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "geographicReferencePointName", theGeographicReferencePointName), currentHashCode, theGeographicReferencePointName);
        }
        {
            String theGeometricTypeDataOwnerCode;
            theGeometricTypeDataOwnerCode = this.getGeometricTypeDataOwnerCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "geometricTypeDataOwnerCode", theGeometricTypeDataOwnerCode), currentHashCode, theGeometricTypeDataOwnerCode);
        }
        {
            String theGeometricTypeCode;
            theGeometricTypeCode = this.getGeometricTypeCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "geometricTypeCode", theGeometricTypeCode), currentHashCode, theGeometricTypeCode);
        }
        {
            String theGeometricTypeName;
            theGeometricTypeName = this.getGeometricTypeName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "geometricTypeName", theGeometricTypeName), currentHashCode, theGeometricTypeName);
        }
        {
            String theHorizontalCollectionMethodDataOwnerCode;
            theHorizontalCollectionMethodDataOwnerCode = this.getHorizontalCollectionMethodDataOwnerCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "horizontalCollectionMethodDataOwnerCode", theHorizontalCollectionMethodDataOwnerCode), currentHashCode, theHorizontalCollectionMethodDataOwnerCode);
        }
        {
            String theHorizontalCollectionMethodCode;
            theHorizontalCollectionMethodCode = this.getHorizontalCollectionMethodCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "horizontalCollectionMethodCode", theHorizontalCollectionMethodCode), currentHashCode, theHorizontalCollectionMethodCode);
        }
        {
            String theHorizontalCollectionMethodName;
            theHorizontalCollectionMethodName = this.getHorizontalCollectionMethodName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "horizontalCollectionMethodName", theHorizontalCollectionMethodName), currentHashCode, theHorizontalCollectionMethodName);
        }
        {
            String theHorizontalCoordinateReferenceSystemDatumDataOwnerCode;
            theHorizontalCoordinateReferenceSystemDatumDataOwnerCode = this.getHorizontalCoordinateReferenceSystemDatumDataOwnerCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "horizontalCoordinateReferenceSystemDatumDataOwnerCode", theHorizontalCoordinateReferenceSystemDatumDataOwnerCode), currentHashCode, theHorizontalCoordinateReferenceSystemDatumDataOwnerCode);
        }
        {
            String theHorizontalCoordinateReferenceSystemDatumCode;
            theHorizontalCoordinateReferenceSystemDatumCode = this.getHorizontalCoordinateReferenceSystemDatumCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "horizontalCoordinateReferenceSystemDatumCode", theHorizontalCoordinateReferenceSystemDatumCode), currentHashCode, theHorizontalCoordinateReferenceSystemDatumCode);
        }
        {
            String theHorizontalCoordinateReferenceSystemDatumName;
            theHorizontalCoordinateReferenceSystemDatumName = this.getHorizontalCoordinateReferenceSystemDatumName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "horizontalCoordinateReferenceSystemDatumName", theHorizontalCoordinateReferenceSystemDatumName), currentHashCode, theHorizontalCoordinateReferenceSystemDatumName);
        }
        {
            String theVerificationMethodDataOwnerCode;
            theVerificationMethodDataOwnerCode = this.getVerificationMethodDataOwnerCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "verificationMethodDataOwnerCode", theVerificationMethodDataOwnerCode), currentHashCode, theVerificationMethodDataOwnerCode);
        }
        {
            String theVerificationMethodCode;
            theVerificationMethodCode = this.getVerificationMethodCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "verificationMethodCode", theVerificationMethodCode), currentHashCode, theVerificationMethodCode);
        }
        {
            String theVerificationMethodName;
            theVerificationMethodName = this.getVerificationMethodName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "verificationMethodName", theVerificationMethodName), currentHashCode, theVerificationMethodName);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
