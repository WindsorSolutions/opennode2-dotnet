//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.06.15 at 06:46:14 PM EDT 
//


package com.windsor.node.plugin.rcra54.domain.generated;

import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.datatype.XMLGregorianCalendar;
import org.jvnet.hyperjaxb3.xml.bind.annotation.adapters.XMLGregorianCalendarAsDate;
import org.jvnet.hyperjaxb3.xml.bind.annotation.adapters.XmlAdapterUtils;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * Characteristics of process unit group details.
 * 
 * <p>Java class for PermitUnitDetailDataType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="PermitUnitDetailDataType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}TransactionCode" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}PermitUnitDetailSequenceNumber"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}ProcessUnitDataOwnerCode" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}ProcessUnitCode" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}ProcessUnitText" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}PermitStatusEffectiveDate" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}PermitUnitCapacityQuantity" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}CapacityTypeCode" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}CapacityTypeText" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}CommercialStatusCode" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}CommercialStatusText" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}LegalOperatingStatusDataOwnerCode" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}LegalOperatingStatusCode" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}LegalOperatingStatusText" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}MeasurementUnitDataOwnerCode" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}MeasurementUnitCode" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}MeasurementUnitText" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}NumberOfUnitsCount" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}StandardPermitIndicator" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}SupplementalInformationText" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}PermitRelatedEvent" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}HandlerWasteCodeDetails" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "PermitUnitDetailDataType", propOrder = {
    "transactionCode",
    "permitUnitDetailSequenceNumber",
    "processUnitDataOwnerCode",
    "processUnitCode",
    "processUnitText",
    "permitStatusEffectiveDate",
    "permitUnitCapacityQuantity",
    "capacityTypeCode",
    "capacityTypeText",
    "commercialStatusCode",
    "commercialStatusText",
    "legalOperatingStatusDataOwnerCode",
    "legalOperatingStatusCode",
    "legalOperatingStatusText",
    "measurementUnitDataOwnerCode",
    "measurementUnitCode",
    "measurementUnitText",
    "numberOfUnitsCount",
    "standardPermitIndicator",
    "supplementalInformationText",
    "permitRelatedEvent",
    "handlerWasteCodeDetails"
})
@Entity(name = "PermitUnitDetailDataType")
@Table(name = "RCRA_PERMITUNITDETAIL")
@Inheritance(strategy = InheritanceType.JOINED)
public class PermitUnitDetailDataType
    implements Equals, HashCode
{

    @XmlElement(name = "TransactionCode")
    protected String transactionCode;
    @XmlElement(name = "PermitUnitDetailSequenceNumber", required = true)
    protected BigInteger permitUnitDetailSequenceNumber;
    @XmlElement(name = "ProcessUnitDataOwnerCode")
    protected String processUnitDataOwnerCode;
    @XmlElement(name = "ProcessUnitCode")
    protected String processUnitCode;
    @XmlElement(name = "ProcessUnitText")
    protected String processUnitText;
    @XmlElement(name = "PermitStatusEffectiveDate")
    protected XMLGregorianCalendar permitStatusEffectiveDate;
    @XmlElement(name = "PermitUnitCapacityQuantity")
    protected BigDecimal permitUnitCapacityQuantity;
    @XmlElement(name = "CapacityTypeCode")
    protected String capacityTypeCode;
    @XmlElement(name = "CapacityTypeText")
    protected String capacityTypeText;
    @XmlElement(name = "CommercialStatusCode")
    protected String commercialStatusCode;
    @XmlElement(name = "CommercialStatusText")
    protected String commercialStatusText;
    @XmlElement(name = "LegalOperatingStatusDataOwnerCode")
    protected String legalOperatingStatusDataOwnerCode;
    @XmlElement(name = "LegalOperatingStatusCode")
    protected String legalOperatingStatusCode;
    @XmlElement(name = "LegalOperatingStatusText")
    protected String legalOperatingStatusText;
    @XmlElement(name = "MeasurementUnitDataOwnerCode")
    protected String measurementUnitDataOwnerCode;
    @XmlElement(name = "MeasurementUnitCode")
    protected String measurementUnitCode;
    @XmlElement(name = "MeasurementUnitText")
    protected String measurementUnitText;
    @XmlElement(name = "NumberOfUnitsCount")
    protected BigInteger numberOfUnitsCount;
    @XmlElement(name = "StandardPermitIndicator")
    protected String standardPermitIndicator;
    @XmlElement(name = "SupplementalInformationText")
    protected String supplementalInformationText;
    @XmlElement(name = "PermitRelatedEvent")
    protected List<PermitRelatedEventDataType> permitRelatedEvent;
    @XmlElement(name = "HandlerWasteCodeDetails")
    protected List<HandlerWasteCodeDataType> handlerWasteCodeDetails;
    @XmlAttribute(name = "Id")
    protected Long id;

    /**
     * Gets the value of the transactionCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "TRANSACTIONCODE", length = 1)
    public String getTransactionCode() {
        return transactionCode;
    }

    /**
     * Sets the value of the transactionCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTransactionCode(String value) {
        this.transactionCode = value;
    }

    /**
     * Gets the value of the permitUnitDetailSequenceNumber property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    @Basic
    @Column(name = "PERMITUNITDETAILSEQNUMBER", precision = 3, scale = 0)
    public BigInteger getPermitUnitDetailSequenceNumber() {
        return permitUnitDetailSequenceNumber;
    }

    /**
     * Sets the value of the permitUnitDetailSequenceNumber property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setPermitUnitDetailSequenceNumber(BigInteger value) {
        this.permitUnitDetailSequenceNumber = value;
    }

    /**
     * Gets the value of the processUnitDataOwnerCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "PROCESSUNITDATOWNRCODE", length = 2)
    public String getProcessUnitDataOwnerCode() {
        return processUnitDataOwnerCode;
    }

    /**
     * Sets the value of the processUnitDataOwnerCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setProcessUnitDataOwnerCode(String value) {
        this.processUnitDataOwnerCode = value;
    }

    /**
     * Gets the value of the processUnitCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "PROCESSUNITCODE", length = 3)
    public String getProcessUnitCode() {
        return processUnitCode;
    }

    /**
     * Sets the value of the processUnitCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setProcessUnitCode(String value) {
        this.processUnitCode = value;
    }

    /**
     * Gets the value of the processUnitText property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "PROCESSUNITTXT", length = 255)
    public String getProcessUnitText() {
        return processUnitText;
    }

    /**
     * Sets the value of the processUnitText property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setProcessUnitText(String value) {
        this.processUnitText = value;
    }

    /**
     * Gets the value of the permitStatusEffectiveDate property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    @Transient
    public XMLGregorianCalendar getPermitStatusEffectiveDate() {
        return permitStatusEffectiveDate;
    }

    /**
     * Sets the value of the permitStatusEffectiveDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setPermitStatusEffectiveDate(XMLGregorianCalendar value) {
        this.permitStatusEffectiveDate = value;
    }

    /**
     * Gets the value of the permitUnitCapacityQuantity property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    @Basic
    @Column(name = "PERMITUNITCAPQUANT", precision = 14, scale = 3)
    public BigDecimal getPermitUnitCapacityQuantity() {
        return permitUnitCapacityQuantity;
    }

    /**
     * Sets the value of the permitUnitCapacityQuantity property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setPermitUnitCapacityQuantity(BigDecimal value) {
        this.permitUnitCapacityQuantity = value;
    }

    /**
     * Gets the value of the capacityTypeCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "CAPTYPECODE", length = 1)
    public String getCapacityTypeCode() {
        return capacityTypeCode;
    }

    /**
     * Sets the value of the capacityTypeCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCapacityTypeCode(String value) {
        this.capacityTypeCode = value;
    }

    /**
     * Gets the value of the capacityTypeText property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "CAPTYPETXT", length = 255)
    public String getCapacityTypeText() {
        return capacityTypeText;
    }

    /**
     * Sets the value of the capacityTypeText property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCapacityTypeText(String value) {
        this.capacityTypeText = value;
    }

    /**
     * Gets the value of the commercialStatusCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "COMMERCIALSTATUSCODE", length = 1)
    public String getCommercialStatusCode() {
        return commercialStatusCode;
    }

    /**
     * Sets the value of the commercialStatusCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCommercialStatusCode(String value) {
        this.commercialStatusCode = value;
    }

    /**
     * Gets the value of the commercialStatusText property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "COMMERCIALSTATUSTXT", length = 255)
    public String getCommercialStatusText() {
        return commercialStatusText;
    }

    /**
     * Sets the value of the commercialStatusText property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCommercialStatusText(String value) {
        this.commercialStatusText = value;
    }

    /**
     * Gets the value of the legalOperatingStatusDataOwnerCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "LEGALOPERSTATUSDATOWNRCODE", length = 2)
    public String getLegalOperatingStatusDataOwnerCode() {
        return legalOperatingStatusDataOwnerCode;
    }

    /**
     * Sets the value of the legalOperatingStatusDataOwnerCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLegalOperatingStatusDataOwnerCode(String value) {
        this.legalOperatingStatusDataOwnerCode = value;
    }

    /**
     * Gets the value of the legalOperatingStatusCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "LEGALOPERSTATUSCODE", length = 4)
    public String getLegalOperatingStatusCode() {
        return legalOperatingStatusCode;
    }

    /**
     * Sets the value of the legalOperatingStatusCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLegalOperatingStatusCode(String value) {
        this.legalOperatingStatusCode = value;
    }

    /**
     * Gets the value of the legalOperatingStatusText property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "LEGALOPERSTATUSTXT", length = 255)
    public String getLegalOperatingStatusText() {
        return legalOperatingStatusText;
    }

    /**
     * Sets the value of the legalOperatingStatusText property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLegalOperatingStatusText(String value) {
        this.legalOperatingStatusText = value;
    }

    /**
     * Gets the value of the measurementUnitDataOwnerCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "MSRUNITDATOWNRCODE", length = 2)
    public String getMeasurementUnitDataOwnerCode() {
        return measurementUnitDataOwnerCode;
    }

    /**
     * Sets the value of the measurementUnitDataOwnerCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setMeasurementUnitDataOwnerCode(String value) {
        this.measurementUnitDataOwnerCode = value;
    }

    /**
     * Gets the value of the measurementUnitCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "MSRUNITCODE", length = 1)
    public String getMeasurementUnitCode() {
        return measurementUnitCode;
    }

    /**
     * Sets the value of the measurementUnitCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setMeasurementUnitCode(String value) {
        this.measurementUnitCode = value;
    }

    /**
     * Gets the value of the measurementUnitText property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "MSRUNITTXT", length = 255)
    public String getMeasurementUnitText() {
        return measurementUnitText;
    }

    /**
     * Sets the value of the measurementUnitText property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setMeasurementUnitText(String value) {
        this.measurementUnitText = value;
    }

    /**
     * Gets the value of the numberOfUnitsCount property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    @Basic
    @Column(name = "NUMBEROFUNITSCOUNT", precision = 7, scale = 0)
    public BigInteger getNumberOfUnitsCount() {
        return numberOfUnitsCount;
    }

    /**
     * Sets the value of the numberOfUnitsCount property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setNumberOfUnitsCount(BigInteger value) {
        this.numberOfUnitsCount = value;
    }

    /**
     * Gets the value of the standardPermitIndicator property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "STANDARDPERMITIND", length = 1)
    public String getStandardPermitIndicator() {
        return standardPermitIndicator;
    }

    /**
     * Sets the value of the standardPermitIndicator property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setStandardPermitIndicator(String value) {
        this.standardPermitIndicator = value;
    }

    /**
     * Gets the value of the supplementalInformationText property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "SUPPINFTXT", length = 2000)
    public String getSupplementalInformationText() {
        return supplementalInformationText;
    }

    /**
     * Sets the value of the supplementalInformationText property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSupplementalInformationText(String value) {
        this.supplementalInformationText = value;
    }

    /**
     * Gets the value of the permitRelatedEvent property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the permitRelatedEvent property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getPermitRelatedEvent().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link PermitRelatedEventDataType }
     * 
     * 
     */
    @OneToMany(targetEntity = PermitRelatedEventDataType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "PERMITUNITDETAILID")
    public List<PermitRelatedEventDataType> getPermitRelatedEvent() {
        if (permitRelatedEvent == null) {
            permitRelatedEvent = new ArrayList<PermitRelatedEventDataType>();
        }
        return this.permitRelatedEvent;
    }

    /**
     * 
     * 
     */
    public void setPermitRelatedEvent(List<PermitRelatedEventDataType> permitRelatedEvent) {
        this.permitRelatedEvent = permitRelatedEvent;
    }

    /**
     * Gets the value of the handlerWasteCodeDetails property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the handlerWasteCodeDetails property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getHandlerWasteCodeDetails().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link HandlerWasteCodeDataType }
     * 
     * 
     */
    @OneToMany(targetEntity = HandlerWasteCodeDataType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "PERMITUNITDETAILID")
    public List<HandlerWasteCodeDataType> getHandlerWasteCodeDetails() {
        if (handlerWasteCodeDetails == null) {
            handlerWasteCodeDetails = new ArrayList<HandlerWasteCodeDataType>();
        }
        return this.handlerWasteCodeDetails;
    }

    /**
     * 
     * 
     */
    public void setHandlerWasteCodeDetails(List<HandlerWasteCodeDataType> handlerWasteCodeDetails) {
        this.handlerWasteCodeDetails = handlerWasteCodeDetails;
    }

    /**
     * Gets the value of the id property.
     * 
     * @return
     *     possible object is
     *     {@link Long }
     *     
     */
    @Id
    @Column(name = "ID")
    @GeneratedValue(generator = "ColSequence", strategy = GenerationType.AUTO)
    @SequenceGenerator(name = "ColSequence", sequenceName = "COLUMN_ID_SEQUENCE", allocationSize = 1)
    public Long getId() {
        return id;
    }

    /**
     * Sets the value of the id property.
     * 
     * @param value
     *     allowed object is
     *     {@link Long }
     *     
     */
    public void setId(Long value) {
        this.id = value;
    }

    @Basic
    @Column(name = "PERMITSTATUSEFFECTIVEDATEITEM")
    @Temporal(TemporalType.DATE)
    public Date getPermitStatusEffectiveDateItem() {
        return XmlAdapterUtils.unmarshall(XMLGregorianCalendarAsDate.class, this.getPermitStatusEffectiveDate());
    }

    public void setPermitStatusEffectiveDateItem(Date target) {
        setPermitStatusEffectiveDate(XmlAdapterUtils.marshall(XMLGregorianCalendarAsDate.class, target));
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof PermitUnitDetailDataType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final PermitUnitDetailDataType that = ((PermitUnitDetailDataType) object);
        {
            String lhsTransactionCode;
            lhsTransactionCode = this.getTransactionCode();
            String rhsTransactionCode;
            rhsTransactionCode = that.getTransactionCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "transactionCode", lhsTransactionCode), LocatorUtils.property(thatLocator, "transactionCode", rhsTransactionCode), lhsTransactionCode, rhsTransactionCode)) {
                return false;
            }
        }
        {
            BigInteger lhsPermitUnitDetailSequenceNumber;
            lhsPermitUnitDetailSequenceNumber = this.getPermitUnitDetailSequenceNumber();
            BigInteger rhsPermitUnitDetailSequenceNumber;
            rhsPermitUnitDetailSequenceNumber = that.getPermitUnitDetailSequenceNumber();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "permitUnitDetailSequenceNumber", lhsPermitUnitDetailSequenceNumber), LocatorUtils.property(thatLocator, "permitUnitDetailSequenceNumber", rhsPermitUnitDetailSequenceNumber), lhsPermitUnitDetailSequenceNumber, rhsPermitUnitDetailSequenceNumber)) {
                return false;
            }
        }
        {
            String lhsProcessUnitDataOwnerCode;
            lhsProcessUnitDataOwnerCode = this.getProcessUnitDataOwnerCode();
            String rhsProcessUnitDataOwnerCode;
            rhsProcessUnitDataOwnerCode = that.getProcessUnitDataOwnerCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "processUnitDataOwnerCode", lhsProcessUnitDataOwnerCode), LocatorUtils.property(thatLocator, "processUnitDataOwnerCode", rhsProcessUnitDataOwnerCode), lhsProcessUnitDataOwnerCode, rhsProcessUnitDataOwnerCode)) {
                return false;
            }
        }
        {
            String lhsProcessUnitCode;
            lhsProcessUnitCode = this.getProcessUnitCode();
            String rhsProcessUnitCode;
            rhsProcessUnitCode = that.getProcessUnitCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "processUnitCode", lhsProcessUnitCode), LocatorUtils.property(thatLocator, "processUnitCode", rhsProcessUnitCode), lhsProcessUnitCode, rhsProcessUnitCode)) {
                return false;
            }
        }
        {
            String lhsProcessUnitText;
            lhsProcessUnitText = this.getProcessUnitText();
            String rhsProcessUnitText;
            rhsProcessUnitText = that.getProcessUnitText();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "processUnitText", lhsProcessUnitText), LocatorUtils.property(thatLocator, "processUnitText", rhsProcessUnitText), lhsProcessUnitText, rhsProcessUnitText)) {
                return false;
            }
        }
        {
            XMLGregorianCalendar lhsPermitStatusEffectiveDate;
            lhsPermitStatusEffectiveDate = this.getPermitStatusEffectiveDate();
            XMLGregorianCalendar rhsPermitStatusEffectiveDate;
            rhsPermitStatusEffectiveDate = that.getPermitStatusEffectiveDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "permitStatusEffectiveDate", lhsPermitStatusEffectiveDate), LocatorUtils.property(thatLocator, "permitStatusEffectiveDate", rhsPermitStatusEffectiveDate), lhsPermitStatusEffectiveDate, rhsPermitStatusEffectiveDate)) {
                return false;
            }
        }
        {
            BigDecimal lhsPermitUnitCapacityQuantity;
            lhsPermitUnitCapacityQuantity = this.getPermitUnitCapacityQuantity();
            BigDecimal rhsPermitUnitCapacityQuantity;
            rhsPermitUnitCapacityQuantity = that.getPermitUnitCapacityQuantity();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "permitUnitCapacityQuantity", lhsPermitUnitCapacityQuantity), LocatorUtils.property(thatLocator, "permitUnitCapacityQuantity", rhsPermitUnitCapacityQuantity), lhsPermitUnitCapacityQuantity, rhsPermitUnitCapacityQuantity)) {
                return false;
            }
        }
        {
            String lhsCapacityTypeCode;
            lhsCapacityTypeCode = this.getCapacityTypeCode();
            String rhsCapacityTypeCode;
            rhsCapacityTypeCode = that.getCapacityTypeCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "capacityTypeCode", lhsCapacityTypeCode), LocatorUtils.property(thatLocator, "capacityTypeCode", rhsCapacityTypeCode), lhsCapacityTypeCode, rhsCapacityTypeCode)) {
                return false;
            }
        }
        {
            String lhsCapacityTypeText;
            lhsCapacityTypeText = this.getCapacityTypeText();
            String rhsCapacityTypeText;
            rhsCapacityTypeText = that.getCapacityTypeText();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "capacityTypeText", lhsCapacityTypeText), LocatorUtils.property(thatLocator, "capacityTypeText", rhsCapacityTypeText), lhsCapacityTypeText, rhsCapacityTypeText)) {
                return false;
            }
        }
        {
            String lhsCommercialStatusCode;
            lhsCommercialStatusCode = this.getCommercialStatusCode();
            String rhsCommercialStatusCode;
            rhsCommercialStatusCode = that.getCommercialStatusCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "commercialStatusCode", lhsCommercialStatusCode), LocatorUtils.property(thatLocator, "commercialStatusCode", rhsCommercialStatusCode), lhsCommercialStatusCode, rhsCommercialStatusCode)) {
                return false;
            }
        }
        {
            String lhsCommercialStatusText;
            lhsCommercialStatusText = this.getCommercialStatusText();
            String rhsCommercialStatusText;
            rhsCommercialStatusText = that.getCommercialStatusText();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "commercialStatusText", lhsCommercialStatusText), LocatorUtils.property(thatLocator, "commercialStatusText", rhsCommercialStatusText), lhsCommercialStatusText, rhsCommercialStatusText)) {
                return false;
            }
        }
        {
            String lhsLegalOperatingStatusDataOwnerCode;
            lhsLegalOperatingStatusDataOwnerCode = this.getLegalOperatingStatusDataOwnerCode();
            String rhsLegalOperatingStatusDataOwnerCode;
            rhsLegalOperatingStatusDataOwnerCode = that.getLegalOperatingStatusDataOwnerCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "legalOperatingStatusDataOwnerCode", lhsLegalOperatingStatusDataOwnerCode), LocatorUtils.property(thatLocator, "legalOperatingStatusDataOwnerCode", rhsLegalOperatingStatusDataOwnerCode), lhsLegalOperatingStatusDataOwnerCode, rhsLegalOperatingStatusDataOwnerCode)) {
                return false;
            }
        }
        {
            String lhsLegalOperatingStatusCode;
            lhsLegalOperatingStatusCode = this.getLegalOperatingStatusCode();
            String rhsLegalOperatingStatusCode;
            rhsLegalOperatingStatusCode = that.getLegalOperatingStatusCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "legalOperatingStatusCode", lhsLegalOperatingStatusCode), LocatorUtils.property(thatLocator, "legalOperatingStatusCode", rhsLegalOperatingStatusCode), lhsLegalOperatingStatusCode, rhsLegalOperatingStatusCode)) {
                return false;
            }
        }
        {
            String lhsLegalOperatingStatusText;
            lhsLegalOperatingStatusText = this.getLegalOperatingStatusText();
            String rhsLegalOperatingStatusText;
            rhsLegalOperatingStatusText = that.getLegalOperatingStatusText();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "legalOperatingStatusText", lhsLegalOperatingStatusText), LocatorUtils.property(thatLocator, "legalOperatingStatusText", rhsLegalOperatingStatusText), lhsLegalOperatingStatusText, rhsLegalOperatingStatusText)) {
                return false;
            }
        }
        {
            String lhsMeasurementUnitDataOwnerCode;
            lhsMeasurementUnitDataOwnerCode = this.getMeasurementUnitDataOwnerCode();
            String rhsMeasurementUnitDataOwnerCode;
            rhsMeasurementUnitDataOwnerCode = that.getMeasurementUnitDataOwnerCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "measurementUnitDataOwnerCode", lhsMeasurementUnitDataOwnerCode), LocatorUtils.property(thatLocator, "measurementUnitDataOwnerCode", rhsMeasurementUnitDataOwnerCode), lhsMeasurementUnitDataOwnerCode, rhsMeasurementUnitDataOwnerCode)) {
                return false;
            }
        }
        {
            String lhsMeasurementUnitCode;
            lhsMeasurementUnitCode = this.getMeasurementUnitCode();
            String rhsMeasurementUnitCode;
            rhsMeasurementUnitCode = that.getMeasurementUnitCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "measurementUnitCode", lhsMeasurementUnitCode), LocatorUtils.property(thatLocator, "measurementUnitCode", rhsMeasurementUnitCode), lhsMeasurementUnitCode, rhsMeasurementUnitCode)) {
                return false;
            }
        }
        {
            String lhsMeasurementUnitText;
            lhsMeasurementUnitText = this.getMeasurementUnitText();
            String rhsMeasurementUnitText;
            rhsMeasurementUnitText = that.getMeasurementUnitText();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "measurementUnitText", lhsMeasurementUnitText), LocatorUtils.property(thatLocator, "measurementUnitText", rhsMeasurementUnitText), lhsMeasurementUnitText, rhsMeasurementUnitText)) {
                return false;
            }
        }
        {
            BigInteger lhsNumberOfUnitsCount;
            lhsNumberOfUnitsCount = this.getNumberOfUnitsCount();
            BigInteger rhsNumberOfUnitsCount;
            rhsNumberOfUnitsCount = that.getNumberOfUnitsCount();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "numberOfUnitsCount", lhsNumberOfUnitsCount), LocatorUtils.property(thatLocator, "numberOfUnitsCount", rhsNumberOfUnitsCount), lhsNumberOfUnitsCount, rhsNumberOfUnitsCount)) {
                return false;
            }
        }
        {
            String lhsStandardPermitIndicator;
            lhsStandardPermitIndicator = this.getStandardPermitIndicator();
            String rhsStandardPermitIndicator;
            rhsStandardPermitIndicator = that.getStandardPermitIndicator();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "standardPermitIndicator", lhsStandardPermitIndicator), LocatorUtils.property(thatLocator, "standardPermitIndicator", rhsStandardPermitIndicator), lhsStandardPermitIndicator, rhsStandardPermitIndicator)) {
                return false;
            }
        }
        {
            String lhsSupplementalInformationText;
            lhsSupplementalInformationText = this.getSupplementalInformationText();
            String rhsSupplementalInformationText;
            rhsSupplementalInformationText = that.getSupplementalInformationText();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "supplementalInformationText", lhsSupplementalInformationText), LocatorUtils.property(thatLocator, "supplementalInformationText", rhsSupplementalInformationText), lhsSupplementalInformationText, rhsSupplementalInformationText)) {
                return false;
            }
        }
        {
            List<PermitRelatedEventDataType> lhsPermitRelatedEvent;
            lhsPermitRelatedEvent = (((this.permitRelatedEvent!= null)&&(!this.permitRelatedEvent.isEmpty()))?this.getPermitRelatedEvent():null);
            List<PermitRelatedEventDataType> rhsPermitRelatedEvent;
            rhsPermitRelatedEvent = (((that.permitRelatedEvent!= null)&&(!that.permitRelatedEvent.isEmpty()))?that.getPermitRelatedEvent():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "permitRelatedEvent", lhsPermitRelatedEvent), LocatorUtils.property(thatLocator, "permitRelatedEvent", rhsPermitRelatedEvent), lhsPermitRelatedEvent, rhsPermitRelatedEvent)) {
                return false;
            }
        }
        {
            List<HandlerWasteCodeDataType> lhsHandlerWasteCodeDetails;
            lhsHandlerWasteCodeDetails = (((this.handlerWasteCodeDetails!= null)&&(!this.handlerWasteCodeDetails.isEmpty()))?this.getHandlerWasteCodeDetails():null);
            List<HandlerWasteCodeDataType> rhsHandlerWasteCodeDetails;
            rhsHandlerWasteCodeDetails = (((that.handlerWasteCodeDetails!= null)&&(!that.handlerWasteCodeDetails.isEmpty()))?that.getHandlerWasteCodeDetails():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "handlerWasteCodeDetails", lhsHandlerWasteCodeDetails), LocatorUtils.property(thatLocator, "handlerWasteCodeDetails", rhsHandlerWasteCodeDetails), lhsHandlerWasteCodeDetails, rhsHandlerWasteCodeDetails)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            String theTransactionCode;
            theTransactionCode = this.getTransactionCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "transactionCode", theTransactionCode), currentHashCode, theTransactionCode);
        }
        {
            BigInteger thePermitUnitDetailSequenceNumber;
            thePermitUnitDetailSequenceNumber = this.getPermitUnitDetailSequenceNumber();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "permitUnitDetailSequenceNumber", thePermitUnitDetailSequenceNumber), currentHashCode, thePermitUnitDetailSequenceNumber);
        }
        {
            String theProcessUnitDataOwnerCode;
            theProcessUnitDataOwnerCode = this.getProcessUnitDataOwnerCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "processUnitDataOwnerCode", theProcessUnitDataOwnerCode), currentHashCode, theProcessUnitDataOwnerCode);
        }
        {
            String theProcessUnitCode;
            theProcessUnitCode = this.getProcessUnitCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "processUnitCode", theProcessUnitCode), currentHashCode, theProcessUnitCode);
        }
        {
            String theProcessUnitText;
            theProcessUnitText = this.getProcessUnitText();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "processUnitText", theProcessUnitText), currentHashCode, theProcessUnitText);
        }
        {
            XMLGregorianCalendar thePermitStatusEffectiveDate;
            thePermitStatusEffectiveDate = this.getPermitStatusEffectiveDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "permitStatusEffectiveDate", thePermitStatusEffectiveDate), currentHashCode, thePermitStatusEffectiveDate);
        }
        {
            BigDecimal thePermitUnitCapacityQuantity;
            thePermitUnitCapacityQuantity = this.getPermitUnitCapacityQuantity();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "permitUnitCapacityQuantity", thePermitUnitCapacityQuantity), currentHashCode, thePermitUnitCapacityQuantity);
        }
        {
            String theCapacityTypeCode;
            theCapacityTypeCode = this.getCapacityTypeCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "capacityTypeCode", theCapacityTypeCode), currentHashCode, theCapacityTypeCode);
        }
        {
            String theCapacityTypeText;
            theCapacityTypeText = this.getCapacityTypeText();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "capacityTypeText", theCapacityTypeText), currentHashCode, theCapacityTypeText);
        }
        {
            String theCommercialStatusCode;
            theCommercialStatusCode = this.getCommercialStatusCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "commercialStatusCode", theCommercialStatusCode), currentHashCode, theCommercialStatusCode);
        }
        {
            String theCommercialStatusText;
            theCommercialStatusText = this.getCommercialStatusText();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "commercialStatusText", theCommercialStatusText), currentHashCode, theCommercialStatusText);
        }
        {
            String theLegalOperatingStatusDataOwnerCode;
            theLegalOperatingStatusDataOwnerCode = this.getLegalOperatingStatusDataOwnerCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "legalOperatingStatusDataOwnerCode", theLegalOperatingStatusDataOwnerCode), currentHashCode, theLegalOperatingStatusDataOwnerCode);
        }
        {
            String theLegalOperatingStatusCode;
            theLegalOperatingStatusCode = this.getLegalOperatingStatusCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "legalOperatingStatusCode", theLegalOperatingStatusCode), currentHashCode, theLegalOperatingStatusCode);
        }
        {
            String theLegalOperatingStatusText;
            theLegalOperatingStatusText = this.getLegalOperatingStatusText();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "legalOperatingStatusText", theLegalOperatingStatusText), currentHashCode, theLegalOperatingStatusText);
        }
        {
            String theMeasurementUnitDataOwnerCode;
            theMeasurementUnitDataOwnerCode = this.getMeasurementUnitDataOwnerCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "measurementUnitDataOwnerCode", theMeasurementUnitDataOwnerCode), currentHashCode, theMeasurementUnitDataOwnerCode);
        }
        {
            String theMeasurementUnitCode;
            theMeasurementUnitCode = this.getMeasurementUnitCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "measurementUnitCode", theMeasurementUnitCode), currentHashCode, theMeasurementUnitCode);
        }
        {
            String theMeasurementUnitText;
            theMeasurementUnitText = this.getMeasurementUnitText();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "measurementUnitText", theMeasurementUnitText), currentHashCode, theMeasurementUnitText);
        }
        {
            BigInteger theNumberOfUnitsCount;
            theNumberOfUnitsCount = this.getNumberOfUnitsCount();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "numberOfUnitsCount", theNumberOfUnitsCount), currentHashCode, theNumberOfUnitsCount);
        }
        {
            String theStandardPermitIndicator;
            theStandardPermitIndicator = this.getStandardPermitIndicator();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "standardPermitIndicator", theStandardPermitIndicator), currentHashCode, theStandardPermitIndicator);
        }
        {
            String theSupplementalInformationText;
            theSupplementalInformationText = this.getSupplementalInformationText();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "supplementalInformationText", theSupplementalInformationText), currentHashCode, theSupplementalInformationText);
        }
        {
            List<PermitRelatedEventDataType> thePermitRelatedEvent;
            thePermitRelatedEvent = (((this.permitRelatedEvent!= null)&&(!this.permitRelatedEvent.isEmpty()))?this.getPermitRelatedEvent():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "permitRelatedEvent", thePermitRelatedEvent), currentHashCode, thePermitRelatedEvent);
        }
        {
            List<HandlerWasteCodeDataType> theHandlerWasteCodeDetails;
            theHandlerWasteCodeDetails = (((this.handlerWasteCodeDetails!= null)&&(!this.handlerWasteCodeDetails.isEmpty()))?this.getHandlerWasteCodeDetails():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "handlerWasteCodeDetails", theHandlerWasteCodeDetails), currentHashCode, theHandlerWasteCodeDetails);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
