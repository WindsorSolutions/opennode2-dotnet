//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.06.15 at 06:46:14 PM EDT 
//


package com.windsor.node.plugin.rcra54.domain.generated;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.datatype.XMLGregorianCalendar;

import org.jvnet.hyperjaxb3.xml.bind.annotation.adapters.XMLGregorianCalendarAsDate;
import org.jvnet.hyperjaxb3.xml.bind.annotation.adapters.XmlAdapterUtils;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * Handler identification and activity data.
 * 
 * <p>Java class for HandlerDataType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="HandlerDataType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}TransactionCode" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}ActivityLocationCode"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}SourceTypeCode"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}SourceTypeText" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}SourceRecordSequenceNumber"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}ReceiveDate" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}HandlerName" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}AcknowledgeReceiptDate" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}NonNotifierIndicator" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}NonNotifierIndicatorText" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}TreatmentStorageDisposalDate" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}NatureOfBusinessText" minOccurs="0"/> *         
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}OffsiteWasteReceiptCode" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}AccessibilityCode" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}AccessibilityCodeText" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}CountyCodeOwner" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}CountyCode" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}CountyName" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}HandlerSupplementalInformationText" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}HandlerInternalSupplementalInformationText" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}ShortTermSupplementalInformationText" minOccurs="0"/>         
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}LocationAddress" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}MailingAddress" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}ContactAddress" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}PermitContactAddress" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}UsedOil" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}WasteActivitySite" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}StateWasteGenerator" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}FederalWasteGenerator" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}LaboratoryHazardousWaste" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}HazardousSecondaryMaterial" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}Certification" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}NAICSIdentity" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}FacilityOwnerOperator" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}EnvironmentalPermit" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}StateActivity" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}HandlerUniversalWaste" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}HandlerWasteCodeDetails" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "HandlerDataType", propOrder = {
    "transactionCode",
    "activityLocationCode",
    "sourceTypeCode",
    "sourceTypeText",
    "sourceRecordSequenceNumber",
    "receiveDate",
    "handlerName",
    "acknowledgeReceiptDate",
    "nonNotifierIndicator",
    "nonNotifierIndicatorText",
    "treatmentStorageDisposalDate",
    "natureOfBusinessText",
    "offsiteWasteReceiptCode",
    "accessibilityCode",
    "accessibilityCodeText",
    "countyCodeOwner",
    "countyCode",
    "countyName",
    "handlerSupplementalInformationText",
    "handlerInternalSupplementalInformationText",
    "shortTermSupplementalInformationText",
    "locationAddress",
    "mailingAddress",
    "contactAddress",
    "permitContactAddress",
    "usedOil",
    "wasteActivitySite",
    "stateWasteGenerator",
    "federalWasteGenerator",
    "laboratoryHazardousWaste",
    "hazardousSecondaryMaterial",
    "certification",
    "naicsIdentity",
    "facilityOwnerOperator",
    "environmentalPermit",
    "stateActivity",
    "handlerUniversalWaste",
    "handlerWasteCodeDetails"
})
@Entity(name = "HandlerDataType")
@Table(name = "RCRA_HANDLER")
@Inheritance(strategy = InheritanceType.JOINED)
public class HandlerDataType
    implements Equals, HashCode
{

    @XmlElement(name = "TransactionCode")
    protected String transactionCode;
    @XmlElement(name = "ActivityLocationCode", required = true)
    protected String activityLocationCode;
    @XmlElement(name = "SourceTypeCode", required = true)
    protected String sourceTypeCode;
    @XmlElement(name = "SourceTypeText")
    protected String sourceTypeText;
    @XmlElement(name = "SourceRecordSequenceNumber", required = true)
    protected BigInteger sourceRecordSequenceNumber;
    @XmlElement(name = "ReceiveDate")
    protected XMLGregorianCalendar receiveDate;
    @XmlElement(name = "HandlerName")
    protected String handlerName;
    @XmlElement(name = "AcknowledgeReceiptDate")
    protected XMLGregorianCalendar acknowledgeReceiptDate;
    @XmlElement(name = "NonNotifierIndicator")
    protected String nonNotifierIndicator;
    @XmlElement(name = "NonNotifierIndicatorText")
    protected String nonNotifierIndicatorText;
    @XmlElement(name = "TreatmentStorageDisposalDate")
    protected XMLGregorianCalendar treatmentStorageDisposalDate;
    @XmlElement(name = "NatureOfBusinessText")
    protected String natureOfBusinessText;
    @XmlElement(name = "OffsiteWasteReceiptCode")
    protected String offsiteWasteReceiptCode;
    @XmlElement(name = "AccessibilityCode")
    protected String accessibilityCode;
    @XmlElement(name = "AccessibilityCodeText")
    protected String accessibilityCodeText;
    @XmlElement(name = "CountyCodeOwner")
    protected String countyCodeOwner;
    @XmlElement(name = "CountyCode")
    protected String countyCode;
    @XmlElement(name = "CountyName")
    protected String countyName;
    @XmlElement(name = "HandlerSupplementalInformationText")
    protected String handlerSupplementalInformationText;
    @XmlElement(name = "HandlerInternalSupplementalInformationText")
    protected String handlerInternalSupplementalInformationText;
    @XmlElement(name = "ShortTermSupplementalInformationText")
    protected String shortTermSupplementalInformationText;
    @XmlElement(name = "LocationAddress")
    protected LocationAddressDataType locationAddress;
    @XmlElement(name = "MailingAddress")
    protected MailingAddressDataType mailingAddress;
    @XmlElement(name = "ContactAddress")
    protected ContactAddressDataType contactAddress;
    @XmlElement(name = "PermitContactAddress")
    protected ContactAddressDataType permitContactAddress;
    @XmlElement(name = "UsedOil")
    protected UsedOilDataType usedOil;
    @XmlElement(name = "WasteActivitySite")
    protected SiteWasteActivityDataType wasteActivitySite;
    @XmlElement(name = "StateWasteGenerator")
    protected WasteGeneratorDataType stateWasteGenerator;
    @XmlElement(name = "FederalWasteGenerator")
    protected WasteGeneratorDataType federalWasteGenerator;
    @XmlElement(name = "LaboratoryHazardousWaste")
    protected LaboratoryHazardousWasteDataType laboratoryHazardousWaste;
    @XmlElement(name = "HazardousSecondaryMaterial")
    protected HazardousSecondaryMaterialDataType hazardousSecondaryMaterial;
    @XmlElement(name = "Certification")
    protected List<CertificationDataType> certification;
    @XmlElement(name = "NAICSIdentity")
    protected List<NAICSIdentityDataType> naicsIdentity;
    @XmlElement(name = "FacilityOwnerOperator")
    protected List<FacilityOwnerOperatorDataType> facilityOwnerOperator;
    @XmlElement(name = "EnvironmentalPermit")
    protected List<EnvironmentalPermitDataType> environmentalPermit;
    @XmlElement(name = "StateActivity")
    protected List<StateActivityDataType> stateActivity;
    @XmlElement(name = "HandlerUniversalWaste")
    protected List<UniversalWasteActivityDataType> handlerUniversalWaste;
    @XmlElement(name = "HandlerWasteCodeDetails")
    protected List<HandlerWasteCodeDataType> handlerWasteCodeDetails;    
    @XmlAttribute(name = "Id")
    protected Long id;

    /**
     * Gets the value of the transactionCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "TRANSACTIONCODE", length = 1)
    public String getTransactionCode() {
        return transactionCode;
    }

    /**
     * Sets the value of the transactionCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTransactionCode(String value) {
        this.transactionCode = value;
    }

    /**
     * Gets the value of the activityLocationCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "ACTLOCCODE", length = 255)
    public String getActivityLocationCode() {
        return activityLocationCode;
    }

    /**
     * Sets the value of the activityLocationCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setActivityLocationCode(String value) {
        this.activityLocationCode = value;
    }

    /**
     * Gets the value of the sourceTypeCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "SOURCETYPECODE", length = 1)
    public String getSourceTypeCode() {
        return sourceTypeCode;
    }

    /**
     * Sets the value of the sourceTypeCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSourceTypeCode(String value) {
        this.sourceTypeCode = value;
    }

    /**
     * Gets the value of the sourceTypeText property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "SOURCETYPETXT", length = 255)
    public String getSourceTypeText() {
        return sourceTypeText;
    }

    /**
     * Sets the value of the sourceTypeText property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSourceTypeText(String value) {
        this.sourceTypeText = value;
    }

    /**
     * Gets the value of the sourceRecordSequenceNumber property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    @Basic
    @Column(name = "SOURCERECSEQNUMBER", precision = 6, scale = 0)
    public BigInteger getSourceRecordSequenceNumber() {
        return sourceRecordSequenceNumber;
    }

    /**
     * Sets the value of the sourceRecordSequenceNumber property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setSourceRecordSequenceNumber(BigInteger value) {
        this.sourceRecordSequenceNumber = value;
    }

    /**
     * Gets the value of the receiveDate property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    @Transient
    public XMLGregorianCalendar getReceiveDate() {
        return receiveDate;
    }

    /**
     * Sets the value of the receiveDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setReceiveDate(XMLGregorianCalendar value) {
        this.receiveDate = value;
    }

    /**
     * Gets the value of the handlerName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "HANDLERNAME", length = 80)
    public String getHandlerName() {
        return handlerName;
    }

    /**
     * Sets the value of the handlerName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setHandlerName(String value) {
        this.handlerName = value;
    }

    /**
     * Gets the value of the acknowledgeReceiptDate property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    @Transient
    public XMLGregorianCalendar getAcknowledgeReceiptDate() {
        return acknowledgeReceiptDate;
    }

    /**
     * Sets the value of the acknowledgeReceiptDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setAcknowledgeReceiptDate(XMLGregorianCalendar value) {
        this.acknowledgeReceiptDate = value;
    }

    /**
     * Gets the value of the nonNotifierIndicator property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "NONNOTIFIERIND", length = 1)
    public String getNonNotifierIndicator() {
        return nonNotifierIndicator;
    }

    /**
     * Sets the value of the nonNotifierIndicator property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setNonNotifierIndicator(String value) {
        this.nonNotifierIndicator = value;
    }

    /**
     * Gets the value of the nonNotifierIndicatorText property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "NONNOTIFIERINDTXT", length = 255)
    public String getNonNotifierIndicatorText() {
        return nonNotifierIndicatorText;
    }

    /**
     * Sets the value of the nonNotifierIndicatorText property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setNonNotifierIndicatorText(String value) {
        this.nonNotifierIndicatorText = value;
    }

    /**
     * Gets the value of the treatmentStorageDisposalDate property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    @Transient
    public XMLGregorianCalendar getTreatmentStorageDisposalDate() {
        return treatmentStorageDisposalDate;
    }

    /**
     * Sets the value of the treatmentStorageDisposalDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setTreatmentStorageDisposalDate(XMLGregorianCalendar value) {
        this.treatmentStorageDisposalDate = value;
    }

    /**
     * Gets the value of the offsiteWasteReceiptCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "OFFSITEWASTERECEIPTCODE", length = 1)
    public String getOffsiteWasteReceiptCode() {
        return offsiteWasteReceiptCode;
    }

    /**
     * Sets the value of the offsiteWasteReceiptCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setOffsiteWasteReceiptCode(String value) {
        this.offsiteWasteReceiptCode = value;
    }

    /**
     * Gets the value of the accessibilityCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "ACCESSIBILITYCODE", length = 1)
    public String getAccessibilityCode() {
        return accessibilityCode;
    }

    /**
     * Sets the value of the accessibilityCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAccessibilityCode(String value) {
        this.accessibilityCode = value;
    }

    /**
     * Gets the value of the accessibilityCodeText property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "ACCESSIBILITYCODETXT", length = 255)
    public String getAccessibilityCodeText() {
        return accessibilityCodeText;
    }

    /**
     * Sets the value of the accessibilityCodeText property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAccessibilityCodeText(String value) {
        this.accessibilityCodeText = value;
    }

    /**
     * Gets the value of the countyCodeOwner property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "COUNTYCODEOWNR", length = 2)
    public String getCountyCodeOwner() {
        return countyCodeOwner;
    }

    /**
     * Sets the value of the countyCodeOwner property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCountyCodeOwner(String value) {
        this.countyCodeOwner = value;
    }

    /**
     * Gets the value of the countyCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "COUNTYCODE", length = 5)
    public String getCountyCode() {
        return countyCode;
    }

    /**
     * Sets the value of the countyCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCountyCode(String value) {
        this.countyCode = value;
    }

    /**
     * Gets the value of the countyName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "COUNTYNAME", length = 255)
    public String getCountyName() {
        return countyName;
    }

    /**
     * Sets the value of the countyName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCountyName(String value) {
        this.countyName = value;
    }

    /**
     * Gets the value of the handlerSupplementalInformationText property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "HANDLERSUPPINFTXT", length = 4000)
    public String getHandlerSupplementalInformationText() {
        return handlerSupplementalInformationText;
    }

    /**
     * Sets the value of the handlerSupplementalInformationText property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setHandlerSupplementalInformationText(String value) {
        this.handlerSupplementalInformationText = value;
    }

    @Basic
    @Column(name = "NATUREOFBUSINESSTXT", length = 4000)
    public String getNatureOfBusinessText() {
		return natureOfBusinessText;
	}

	public void setNatureOfBusinessText(String natureOfBusinessText) {
		this.natureOfBusinessText = natureOfBusinessText;
	}

    @Basic
    @Column(name = "HANDLERINTERNALSUPPINFTXT", length = 4000)
	public String getHandlerInternalSupplementalInformationText() {
		return handlerInternalSupplementalInformationText;
	}

	public void setHandlerInternalSupplementalInformationText(String handlerInternalSupplementalInformationText) {
		this.handlerInternalSupplementalInformationText = handlerInternalSupplementalInformationText;
	}

    @Basic
    @Column(name = "SHORTTERMSUPPINFTXT", length = 4000)
	public String getShortTermSupplementalInformationText() {
		return shortTermSupplementalInformationText;
	}

	public void setShortTermSupplementalInformationText(String shortTermSupplementalInformationText) {
		this.shortTermSupplementalInformationText = shortTermSupplementalInformationText;
	}
    
    /**
     * Gets the value of the locationAddress property.
     * 
     * @return
     *     possible object is
     *     {@link LocationAddressDataType }
     *     
     */
    @OneToOne(targetEntity = LocationAddressDataType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "LOCADDRESSID")
    public LocationAddressDataType getLocationAddress() {
        return locationAddress;
    }

    /**
     * Sets the value of the locationAddress property.
     * 
     * @param value
     *     allowed object is
     *     {@link LocationAddressDataType }
     *     
     */
    public void setLocationAddress(LocationAddressDataType value) {
        this.locationAddress = value;
    }

    /**
     * Gets the value of the mailingAddress property.
     * 
     * @return
     *     possible object is
     *     {@link MailingAddressDataType }
     *     
     */
    @OneToOne(targetEntity = MailingAddressDataType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "MAILINGADDRESSID")
    public MailingAddressDataType getMailingAddress() {
        return mailingAddress;
    }

    /**
     * Sets the value of the mailingAddress property.
     * 
     * @param value
     *     allowed object is
     *     {@link MailingAddressDataType }
     *     
     */
    public void setMailingAddress(MailingAddressDataType value) {
        this.mailingAddress = value;
    }

    /**
     * Gets the value of the contactAddress property.
     * 
     * @return
     *     possible object is
     *     {@link ContactAddressDataType }
     *     
     */
    @OneToOne(targetEntity = ContactAddressDataType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "CONTACTADDRESSID")
    public ContactAddressDataType getContactAddress() {
        return contactAddress;
    }

    /**
     * Sets the value of the contactAddress property.
     * 
     * @param value
     *     allowed object is
     *     {@link ContactAddressDataType }
     *     
     */
    public void setContactAddress(ContactAddressDataType value) {
        this.contactAddress = value;
    }

    /**
     * Gets the value of the permitContactAddress property.
     * 
     * @return
     *     possible object is
     *     {@link ContactAddressDataType }
     *     
     */
    @OneToOne(targetEntity = ContactAddressDataType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "PERMITCONTACTADDRESSID")
    public ContactAddressDataType getPermitContactAddress() {
        return permitContactAddress;
    }

    /**
     * Sets the value of the permitContactAddress property.
     * 
     * @param value
     *     allowed object is
     *     {@link ContactAddressDataType }
     *     
     */
    public void setPermitContactAddress(ContactAddressDataType value) {
        this.permitContactAddress = value;
    }

    /**
     * Gets the value of the usedOil property.
     * 
     * @return
     *     possible object is
     *     {@link UsedOilDataType }
     *     
     */
    @OneToOne(targetEntity = UsedOilDataType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "USEDOILID")
    public UsedOilDataType getUsedOil() {
        return usedOil;
    }

    /**
     * Sets the value of the usedOil property.
     * 
     * @param value
     *     allowed object is
     *     {@link UsedOilDataType }
     *     
     */
    public void setUsedOil(UsedOilDataType value) {
        this.usedOil = value;
    }

    /**
     * Gets the value of the wasteActivitySite property.
     * 
     * @return
     *     possible object is
     *     {@link SiteWasteActivityDataType }
     *     
     */
    @OneToOne(targetEntity = SiteWasteActivityDataType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "SITEWASTEACTID")
    public SiteWasteActivityDataType getWasteActivitySite() {
        return wasteActivitySite;
    }

    /**
     * Sets the value of the wasteActivitySite property.
     * 
     * @param value
     *     allowed object is
     *     {@link SiteWasteActivityDataType }
     *     
     */
    public void setWasteActivitySite(SiteWasteActivityDataType value) {
        this.wasteActivitySite = value;
    }

    /**
     * Gets the value of the stateWasteGenerator property.
     * 
     * @return
     *     possible object is
     *     {@link WasteGeneratorDataType }
     *     
     */
    @OneToOne(targetEntity = WasteGeneratorDataType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "STATEWASTEGENRTRID")
    public WasteGeneratorDataType getStateWasteGenerator() {
        return stateWasteGenerator;
    }

    /**
     * Sets the value of the stateWasteGenerator property.
     * 
     * @param value
     *     allowed object is
     *     {@link WasteGeneratorDataType }
     *     
     */
    public void setStateWasteGenerator(WasteGeneratorDataType value) {
        this.stateWasteGenerator = value;
    }

    /**
     * Gets the value of the federalWasteGenerator property.
     * 
     * @return
     *     possible object is
     *     {@link WasteGeneratorDataType }
     *     
     */
    @OneToOne(targetEntity = WasteGeneratorDataType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "WASTEGENRTRID")
    public WasteGeneratorDataType getFederalWasteGenerator() {
        return federalWasteGenerator;
    }

    /**
     * Sets the value of the federalWasteGenerator property.
     * 
     * @param value
     *     allowed object is
     *     {@link WasteGeneratorDataType }
     *     
     */
    public void setFederalWasteGenerator(WasteGeneratorDataType value) {
        this.federalWasteGenerator = value;
    }

    /**
     * Gets the value of the laboratoryHazardousWaste property.
     * 
     * @return
     *     possible object is
     *     {@link LaboratoryHazardousWasteDataType }
     *     
     */
    @OneToOne(targetEntity = LaboratoryHazardousWasteDataType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "LABHZRDWASTEID")
    public LaboratoryHazardousWasteDataType getLaboratoryHazardousWaste() {
        return laboratoryHazardousWaste;
    }

    /**
     * Sets the value of the laboratoryHazardousWaste property.
     * 
     * @param value
     *     allowed object is
     *     {@link LaboratoryHazardousWasteDataType }
     *     
     */
    public void setLaboratoryHazardousWaste(LaboratoryHazardousWasteDataType value) {
        this.laboratoryHazardousWaste = value;
    }

    /**
     * Gets the value of the hazardousSecondaryMaterial property.
     * 
     * @return
     *     possible object is
     *     {@link HazardousSecondaryMaterialDataType }
     *     
     */
    @OneToOne(targetEntity = HazardousSecondaryMaterialDataType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "HZRDSECONDARYMTRLID")
    public HazardousSecondaryMaterialDataType getHazardousSecondaryMaterial() {
        return hazardousSecondaryMaterial;
    }

    /**
     * Sets the value of the hazardousSecondaryMaterial property.
     * 
     * @param value
     *     allowed object is
     *     {@link HazardousSecondaryMaterialDataType }
     *     
     */
    public void setHazardousSecondaryMaterial(HazardousSecondaryMaterialDataType value) {
        this.hazardousSecondaryMaterial = value;
    }

    /**
     * Gets the value of the certification property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the certification property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getCertification().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link CertificationDataType }
     * 
     * 
     */
    @OneToMany(targetEntity = CertificationDataType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "HANDLERID")
    public List<CertificationDataType> getCertification() {
        if (certification == null) {
            certification = new ArrayList<CertificationDataType>();
        }
        return this.certification;
    }

    /**
     * 
     * 
     */
    public void setCertification(List<CertificationDataType> certification) {
        this.certification = certification;
    }

    /**
     * Gets the value of the naicsIdentity property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the naicsIdentity property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getNAICSIdentity().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link NAICSIdentityDataType }
     * 
     * 
     */
    @OneToMany(targetEntity = NAICSIdentityDataType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "HANDLERID")
    public List<NAICSIdentityDataType> getNAICSIdentity() {
        if (naicsIdentity == null) {
            naicsIdentity = new ArrayList<NAICSIdentityDataType>();
        }
        return this.naicsIdentity;
    }

    /**
     * 
     * 
     */
    public void setNAICSIdentity(List<NAICSIdentityDataType> naicsIdentity) {
        this.naicsIdentity = naicsIdentity;
    }

    /**
     * Gets the value of the facilityOwnerOperator property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the facilityOwnerOperator property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getFacilityOwnerOperator().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link FacilityOwnerOperatorDataType }
     * 
     * 
     */
    @OneToMany(targetEntity = FacilityOwnerOperatorDataType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "HANDLERID")
    public List<FacilityOwnerOperatorDataType> getFacilityOwnerOperator() {
        if (facilityOwnerOperator == null) {
            facilityOwnerOperator = new ArrayList<FacilityOwnerOperatorDataType>();
        }
        return this.facilityOwnerOperator;
    }

    /**
     * 
     * 
     */
    public void setFacilityOwnerOperator(List<FacilityOwnerOperatorDataType> facilityOwnerOperator) {
        this.facilityOwnerOperator = facilityOwnerOperator;
    }

    /**
     * Gets the value of the environmentalPermit property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the environmentalPermit property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getEnvironmentalPermit().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link EnvironmentalPermitDataType }
     * 
     * 
     */
    @OneToMany(targetEntity = EnvironmentalPermitDataType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "HANDLERID")
    public List<EnvironmentalPermitDataType> getEnvironmentalPermit() {
        if (environmentalPermit == null) {
            environmentalPermit = new ArrayList<EnvironmentalPermitDataType>();
        }
        return this.environmentalPermit;
    }

    /**
     * 
     * 
     */
    public void setEnvironmentalPermit(List<EnvironmentalPermitDataType> environmentalPermit) {
        this.environmentalPermit = environmentalPermit;
    }

    /**
     * Gets the value of the stateActivity property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the stateActivity property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getStateActivity().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link StateActivityDataType }
     * 
     * 
     */
    @OneToMany(targetEntity = StateActivityDataType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "HANDLERID")
    public List<StateActivityDataType> getStateActivity() {
        if (stateActivity == null) {
            stateActivity = new ArrayList<StateActivityDataType>();
        }
        return this.stateActivity;
    }

    /**
     * 
     * 
     */
    public void setStateActivity(List<StateActivityDataType> stateActivity) {
        this.stateActivity = stateActivity;
    }

    /**
     * Gets the value of the handlerUniversalWaste property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the handlerUniversalWaste property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getHandlerUniversalWaste().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link UniversalWasteActivityDataType }
     * 
     * 
     */
    @OneToMany(targetEntity = UniversalWasteActivityDataType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "HANDLERID")
    public List<UniversalWasteActivityDataType> getHandlerUniversalWaste() {
        if (handlerUniversalWaste == null) {
            handlerUniversalWaste = new ArrayList<UniversalWasteActivityDataType>();
        }
        return this.handlerUniversalWaste;
    }

    /**
     * 
     * 
     */
    public void setHandlerUniversalWaste(List<UniversalWasteActivityDataType> handlerUniversalWaste) {
        this.handlerUniversalWaste = handlerUniversalWaste;
    }

    /**
     * Gets the value of the handlerWasteCodeDetails property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the handlerWasteCodeDetails property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getHandlerWasteCodeDetails().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link HandlerWasteCodeDataType }
     * 
     * 
     */
    @OneToMany(targetEntity = HandlerWasteCodeDataType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "HANDLERID")
    public List<HandlerWasteCodeDataType> getHandlerWasteCodeDetails() {
        if (handlerWasteCodeDetails == null) {
            handlerWasteCodeDetails = new ArrayList<HandlerWasteCodeDataType>();
        }
        return this.handlerWasteCodeDetails;
    }

    /**
     * 
     * 
     */
    public void setHandlerWasteCodeDetails(List<HandlerWasteCodeDataType> handlerWasteCodeDetails) {
        this.handlerWasteCodeDetails = handlerWasteCodeDetails;
    }

	/**
     * Gets the value of the id property.
     * 
     * @return
     *     possible object is
     *     {@link Long }
     *     
     */
    @Id
    @Column(name = "ID")
    @GeneratedValue(generator = "ColSequence", strategy = GenerationType.AUTO)
    @SequenceGenerator(name = "ColSequence", sequenceName = "COLUMN_ID_SEQUENCE", allocationSize = 1)
    public Long getId() {
        return id;
    }

    /**
     * Sets the value of the id property.
     * 
     * @param value
     *     allowed object is
     *     {@link Long }
     *     
     */
    public void setId(Long value) {
        this.id = value;
    }

    @Basic
    @Column(name = "RECEIVEDATEITEM")
    @Temporal(TemporalType.DATE)
    public Date getReceiveDateItem() {
        return XmlAdapterUtils.unmarshall(XMLGregorianCalendarAsDate.class, this.getReceiveDate());
    }

    public void setReceiveDateItem(Date target) {
        setReceiveDate(XmlAdapterUtils.marshall(XMLGregorianCalendarAsDate.class, target));
    }

    @Basic
    @Column(name = "ACKRECEIPTDATEITEM")
    @Temporal(TemporalType.DATE)
    public Date getAcknowledgeReceiptDateItem() {
        return XmlAdapterUtils.unmarshall(XMLGregorianCalendarAsDate.class, this.getAcknowledgeReceiptDate());
    }

    public void setAcknowledgeReceiptDateItem(Date target) {
        setAcknowledgeReceiptDate(XmlAdapterUtils.marshall(XMLGregorianCalendarAsDate.class, target));
    }

    @Basic
    @Column(name = "TRTMNTSTORAGEDISPDATEITEM")
    @Temporal(TemporalType.DATE)
    public Date getTreatmentStorageDisposalDateItem() {
        return XmlAdapterUtils.unmarshall(XMLGregorianCalendarAsDate.class, this.getTreatmentStorageDisposalDate());
    }

    public void setTreatmentStorageDisposalDateItem(Date target) {
        setTreatmentStorageDisposalDate(XmlAdapterUtils.marshall(XMLGregorianCalendarAsDate.class, target));
    }

    @Override
	public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof HandlerDataType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final HandlerDataType that = ((HandlerDataType) object);
        {
            String lhsTransactionCode;
            lhsTransactionCode = this.getTransactionCode();
            String rhsTransactionCode;
            rhsTransactionCode = that.getTransactionCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "transactionCode", lhsTransactionCode), LocatorUtils.property(thatLocator, "transactionCode", rhsTransactionCode), lhsTransactionCode, rhsTransactionCode)) {
                return false;
            }
        }
        {
            String lhsActivityLocationCode;
            lhsActivityLocationCode = this.getActivityLocationCode();
            String rhsActivityLocationCode;
            rhsActivityLocationCode = that.getActivityLocationCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "activityLocationCode", lhsActivityLocationCode), LocatorUtils.property(thatLocator, "activityLocationCode", rhsActivityLocationCode), lhsActivityLocationCode, rhsActivityLocationCode)) {
                return false;
            }
        }
        {
            String lhsSourceTypeCode;
            lhsSourceTypeCode = this.getSourceTypeCode();
            String rhsSourceTypeCode;
            rhsSourceTypeCode = that.getSourceTypeCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "sourceTypeCode", lhsSourceTypeCode), LocatorUtils.property(thatLocator, "sourceTypeCode", rhsSourceTypeCode), lhsSourceTypeCode, rhsSourceTypeCode)) {
                return false;
            }
        }
        {
            String lhsSourceTypeText;
            lhsSourceTypeText = this.getSourceTypeText();
            String rhsSourceTypeText;
            rhsSourceTypeText = that.getSourceTypeText();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "sourceTypeText", lhsSourceTypeText), LocatorUtils.property(thatLocator, "sourceTypeText", rhsSourceTypeText), lhsSourceTypeText, rhsSourceTypeText)) {
                return false;
            }
        }
        {
            BigInteger lhsSourceRecordSequenceNumber;
            lhsSourceRecordSequenceNumber = this.getSourceRecordSequenceNumber();
            BigInteger rhsSourceRecordSequenceNumber;
            rhsSourceRecordSequenceNumber = that.getSourceRecordSequenceNumber();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "sourceRecordSequenceNumber", lhsSourceRecordSequenceNumber), LocatorUtils.property(thatLocator, "sourceRecordSequenceNumber", rhsSourceRecordSequenceNumber), lhsSourceRecordSequenceNumber, rhsSourceRecordSequenceNumber)) {
                return false;
            }
        }
        {
            XMLGregorianCalendar lhsReceiveDate;
            lhsReceiveDate = this.getReceiveDate();
            XMLGregorianCalendar rhsReceiveDate;
            rhsReceiveDate = that.getReceiveDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "receiveDate", lhsReceiveDate), LocatorUtils.property(thatLocator, "receiveDate", rhsReceiveDate), lhsReceiveDate, rhsReceiveDate)) {
                return false;
            }
        }
        {
            String lhsHandlerName;
            lhsHandlerName = this.getHandlerName();
            String rhsHandlerName;
            rhsHandlerName = that.getHandlerName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "handlerName", lhsHandlerName), LocatorUtils.property(thatLocator, "handlerName", rhsHandlerName), lhsHandlerName, rhsHandlerName)) {
                return false;
            }
        }
        {
            XMLGregorianCalendar lhsAcknowledgeReceiptDate;
            lhsAcknowledgeReceiptDate = this.getAcknowledgeReceiptDate();
            XMLGregorianCalendar rhsAcknowledgeReceiptDate;
            rhsAcknowledgeReceiptDate = that.getAcknowledgeReceiptDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "acknowledgeReceiptDate", lhsAcknowledgeReceiptDate), LocatorUtils.property(thatLocator, "acknowledgeReceiptDate", rhsAcknowledgeReceiptDate), lhsAcknowledgeReceiptDate, rhsAcknowledgeReceiptDate)) {
                return false;
            }
        }
        {
            String lhsNonNotifierIndicator;
            lhsNonNotifierIndicator = this.getNonNotifierIndicator();
            String rhsNonNotifierIndicator;
            rhsNonNotifierIndicator = that.getNonNotifierIndicator();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "nonNotifierIndicator", lhsNonNotifierIndicator), LocatorUtils.property(thatLocator, "nonNotifierIndicator", rhsNonNotifierIndicator), lhsNonNotifierIndicator, rhsNonNotifierIndicator)) {
                return false;
            }
        }
        {
            String lhsNonNotifierIndicatorText;
            lhsNonNotifierIndicatorText = this.getNonNotifierIndicatorText();
            String rhsNonNotifierIndicatorText;
            rhsNonNotifierIndicatorText = that.getNonNotifierIndicatorText();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "nonNotifierIndicatorText", lhsNonNotifierIndicatorText), LocatorUtils.property(thatLocator, "nonNotifierIndicatorText", rhsNonNotifierIndicatorText), lhsNonNotifierIndicatorText, rhsNonNotifierIndicatorText)) {
                return false;
            }
        }
        {
            XMLGregorianCalendar lhsTreatmentStorageDisposalDate;
            lhsTreatmentStorageDisposalDate = this.getTreatmentStorageDisposalDate();
            XMLGregorianCalendar rhsTreatmentStorageDisposalDate;
            rhsTreatmentStorageDisposalDate = that.getTreatmentStorageDisposalDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "treatmentStorageDisposalDate", lhsTreatmentStorageDisposalDate), LocatorUtils.property(thatLocator, "treatmentStorageDisposalDate", rhsTreatmentStorageDisposalDate), lhsTreatmentStorageDisposalDate, rhsTreatmentStorageDisposalDate)) {
                return false;
            }
        }
        {
            String lhsOffsiteWasteReceiptCode;
            lhsOffsiteWasteReceiptCode = this.getOffsiteWasteReceiptCode();
            String rhsOffsiteWasteReceiptCode;
            rhsOffsiteWasteReceiptCode = that.getOffsiteWasteReceiptCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "offsiteWasteReceiptCode", lhsOffsiteWasteReceiptCode), LocatorUtils.property(thatLocator, "offsiteWasteReceiptCode", rhsOffsiteWasteReceiptCode), lhsOffsiteWasteReceiptCode, rhsOffsiteWasteReceiptCode)) {
                return false;
            }
        }
        {
            String lhsAccessibilityCode;
            lhsAccessibilityCode = this.getAccessibilityCode();
            String rhsAccessibilityCode;
            rhsAccessibilityCode = that.getAccessibilityCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "accessibilityCode", lhsAccessibilityCode), LocatorUtils.property(thatLocator, "accessibilityCode", rhsAccessibilityCode), lhsAccessibilityCode, rhsAccessibilityCode)) {
                return false;
            }
        }
        {
            String lhsAccessibilityCodeText;
            lhsAccessibilityCodeText = this.getAccessibilityCodeText();
            String rhsAccessibilityCodeText;
            rhsAccessibilityCodeText = that.getAccessibilityCodeText();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "accessibilityCodeText", lhsAccessibilityCodeText), LocatorUtils.property(thatLocator, "accessibilityCodeText", rhsAccessibilityCodeText), lhsAccessibilityCodeText, rhsAccessibilityCodeText)) {
                return false;
            }
        }
        {
            String lhsCountyCodeOwner;
            lhsCountyCodeOwner = this.getCountyCodeOwner();
            String rhsCountyCodeOwner;
            rhsCountyCodeOwner = that.getCountyCodeOwner();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "countyCodeOwner", lhsCountyCodeOwner), LocatorUtils.property(thatLocator, "countyCodeOwner", rhsCountyCodeOwner), lhsCountyCodeOwner, rhsCountyCodeOwner)) {
                return false;
            }
        }
        {
            String lhsCountyCode;
            lhsCountyCode = this.getCountyCode();
            String rhsCountyCode;
            rhsCountyCode = that.getCountyCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "countyCode", lhsCountyCode), LocatorUtils.property(thatLocator, "countyCode", rhsCountyCode), lhsCountyCode, rhsCountyCode)) {
                return false;
            }
        }
        {
            String lhsCountyName;
            lhsCountyName = this.getCountyName();
            String rhsCountyName;
            rhsCountyName = that.getCountyName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "countyName", lhsCountyName), LocatorUtils.property(thatLocator, "countyName", rhsCountyName), lhsCountyName, rhsCountyName)) {
                return false;
            }
        }
        {
            String lhsHandlerSupplementalInformationText;
            lhsHandlerSupplementalInformationText = this.getHandlerSupplementalInformationText();
            String rhsHandlerSupplementalInformationText;
            rhsHandlerSupplementalInformationText = that.getHandlerSupplementalInformationText();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "handlerSupplementalInformationText", lhsHandlerSupplementalInformationText), LocatorUtils.property(thatLocator, "handlerSupplementalInformationText", rhsHandlerSupplementalInformationText), lhsHandlerSupplementalInformationText, rhsHandlerSupplementalInformationText)) {
                return false;
            }
        }
        {
            LocationAddressDataType lhsLocationAddress;
            lhsLocationAddress = this.getLocationAddress();
            LocationAddressDataType rhsLocationAddress;
            rhsLocationAddress = that.getLocationAddress();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "locationAddress", lhsLocationAddress), LocatorUtils.property(thatLocator, "locationAddress", rhsLocationAddress), lhsLocationAddress, rhsLocationAddress)) {
                return false;
            }
        }
        {
            MailingAddressDataType lhsMailingAddress;
            lhsMailingAddress = this.getMailingAddress();
            MailingAddressDataType rhsMailingAddress;
            rhsMailingAddress = that.getMailingAddress();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "mailingAddress", lhsMailingAddress), LocatorUtils.property(thatLocator, "mailingAddress", rhsMailingAddress), lhsMailingAddress, rhsMailingAddress)) {
                return false;
            }
        }
        {
            ContactAddressDataType lhsContactAddress;
            lhsContactAddress = this.getContactAddress();
            ContactAddressDataType rhsContactAddress;
            rhsContactAddress = that.getContactAddress();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "contactAddress", lhsContactAddress), LocatorUtils.property(thatLocator, "contactAddress", rhsContactAddress), lhsContactAddress, rhsContactAddress)) {
                return false;
            }
        }
        {
            ContactAddressDataType lhsPermitContactAddress;
            lhsPermitContactAddress = this.getPermitContactAddress();
            ContactAddressDataType rhsPermitContactAddress;
            rhsPermitContactAddress = that.getPermitContactAddress();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "permitContactAddress", lhsPermitContactAddress), LocatorUtils.property(thatLocator, "permitContactAddress", rhsPermitContactAddress), lhsPermitContactAddress, rhsPermitContactAddress)) {
                return false;
            }
        }
        {
            UsedOilDataType lhsUsedOil;
            lhsUsedOil = this.getUsedOil();
            UsedOilDataType rhsUsedOil;
            rhsUsedOil = that.getUsedOil();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "usedOil", lhsUsedOil), LocatorUtils.property(thatLocator, "usedOil", rhsUsedOil), lhsUsedOil, rhsUsedOil)) {
                return false;
            }
        }
        {
            SiteWasteActivityDataType lhsWasteActivitySite;
            lhsWasteActivitySite = this.getWasteActivitySite();
            SiteWasteActivityDataType rhsWasteActivitySite;
            rhsWasteActivitySite = that.getWasteActivitySite();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "wasteActivitySite", lhsWasteActivitySite), LocatorUtils.property(thatLocator, "wasteActivitySite", rhsWasteActivitySite), lhsWasteActivitySite, rhsWasteActivitySite)) {
                return false;
            }
        }
        {
            WasteGeneratorDataType lhsStateWasteGenerator;
            lhsStateWasteGenerator = this.getStateWasteGenerator();
            WasteGeneratorDataType rhsStateWasteGenerator;
            rhsStateWasteGenerator = that.getStateWasteGenerator();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "stateWasteGenerator", lhsStateWasteGenerator), LocatorUtils.property(thatLocator, "stateWasteGenerator", rhsStateWasteGenerator), lhsStateWasteGenerator, rhsStateWasteGenerator)) {
                return false;
            }
        }
        {
            WasteGeneratorDataType lhsFederalWasteGenerator;
            lhsFederalWasteGenerator = this.getFederalWasteGenerator();
            WasteGeneratorDataType rhsFederalWasteGenerator;
            rhsFederalWasteGenerator = that.getFederalWasteGenerator();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "federalWasteGenerator", lhsFederalWasteGenerator), LocatorUtils.property(thatLocator, "federalWasteGenerator", rhsFederalWasteGenerator), lhsFederalWasteGenerator, rhsFederalWasteGenerator)) {
                return false;
            }
        }
        {
            LaboratoryHazardousWasteDataType lhsLaboratoryHazardousWaste;
            lhsLaboratoryHazardousWaste = this.getLaboratoryHazardousWaste();
            LaboratoryHazardousWasteDataType rhsLaboratoryHazardousWaste;
            rhsLaboratoryHazardousWaste = that.getLaboratoryHazardousWaste();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "laboratoryHazardousWaste", lhsLaboratoryHazardousWaste), LocatorUtils.property(thatLocator, "laboratoryHazardousWaste", rhsLaboratoryHazardousWaste), lhsLaboratoryHazardousWaste, rhsLaboratoryHazardousWaste)) {
                return false;
            }
        }
        {
            HazardousSecondaryMaterialDataType lhsHazardousSecondaryMaterial;
            lhsHazardousSecondaryMaterial = this.getHazardousSecondaryMaterial();
            HazardousSecondaryMaterialDataType rhsHazardousSecondaryMaterial;
            rhsHazardousSecondaryMaterial = that.getHazardousSecondaryMaterial();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "hazardousSecondaryMaterial", lhsHazardousSecondaryMaterial), LocatorUtils.property(thatLocator, "hazardousSecondaryMaterial", rhsHazardousSecondaryMaterial), lhsHazardousSecondaryMaterial, rhsHazardousSecondaryMaterial)) {
                return false;
            }
        }
        {
            String lhsNatureOfBusinessText;
            lhsNatureOfBusinessText = this.getNatureOfBusinessText();
            String rhsNatureOfBusinessText;
            rhsNatureOfBusinessText = that.getNatureOfBusinessText();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "natureOfBusinessText", lhsNatureOfBusinessText), LocatorUtils.property(thatLocator, "natureOfBusinessText", rhsNatureOfBusinessText), lhsNatureOfBusinessText, rhsNatureOfBusinessText)) {
                return false;
            }
        }        
        {
            String lhsHandlerInternalSupplementalInformationText;
            lhsHandlerInternalSupplementalInformationText = this.getHandlerInternalSupplementalInformationText();
            String rhsHandlerInternalSupplementalInformationText;
            rhsHandlerInternalSupplementalInformationText = that.getHandlerInternalSupplementalInformationText();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "handlerInternalSupplementalInformationText", lhsHandlerInternalSupplementalInformationText), LocatorUtils.property(thatLocator, "handlerInternalSupplementalInformationText", rhsHandlerInternalSupplementalInformationText), lhsHandlerInternalSupplementalInformationText, rhsHandlerInternalSupplementalInformationText)) {
                return false;
            }
        }
        {
            String lhsShortTermSupplementalInformationText;
            lhsShortTermSupplementalInformationText = this.getShortTermSupplementalInformationText();
            String rhsShortTermSupplementalInformationText;
            rhsShortTermSupplementalInformationText = that.getShortTermSupplementalInformationText();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "handlerInternalSupplementalInformationText", lhsShortTermSupplementalInformationText), LocatorUtils.property(thatLocator, "handlerInternalSupplementalInformationText", rhsShortTermSupplementalInformationText), lhsShortTermSupplementalInformationText, rhsShortTermSupplementalInformationText)) {
                return false;
            }
        }
        {
            List<CertificationDataType> lhsCertification;
            lhsCertification = (((this.certification!= null)&&(!this.certification.isEmpty()))?this.getCertification():null);
            List<CertificationDataType> rhsCertification;
            rhsCertification = (((that.certification!= null)&&(!that.certification.isEmpty()))?that.getCertification():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "certification", lhsCertification), LocatorUtils.property(thatLocator, "certification", rhsCertification), lhsCertification, rhsCertification)) {
                return false;
            }
        }
        {
            List<NAICSIdentityDataType> lhsNAICSIdentity;
            lhsNAICSIdentity = (((this.naicsIdentity!= null)&&(!this.naicsIdentity.isEmpty()))?this.getNAICSIdentity():null);
            List<NAICSIdentityDataType> rhsNAICSIdentity;
            rhsNAICSIdentity = (((that.naicsIdentity!= null)&&(!that.naicsIdentity.isEmpty()))?that.getNAICSIdentity():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "naicsIdentity", lhsNAICSIdentity), LocatorUtils.property(thatLocator, "naicsIdentity", rhsNAICSIdentity), lhsNAICSIdentity, rhsNAICSIdentity)) {
                return false;
            }
        }
        {
            List<FacilityOwnerOperatorDataType> lhsFacilityOwnerOperator;
            lhsFacilityOwnerOperator = (((this.facilityOwnerOperator!= null)&&(!this.facilityOwnerOperator.isEmpty()))?this.getFacilityOwnerOperator():null);
            List<FacilityOwnerOperatorDataType> rhsFacilityOwnerOperator;
            rhsFacilityOwnerOperator = (((that.facilityOwnerOperator!= null)&&(!that.facilityOwnerOperator.isEmpty()))?that.getFacilityOwnerOperator():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "facilityOwnerOperator", lhsFacilityOwnerOperator), LocatorUtils.property(thatLocator, "facilityOwnerOperator", rhsFacilityOwnerOperator), lhsFacilityOwnerOperator, rhsFacilityOwnerOperator)) {
                return false;
            }
        }
        {
            List<EnvironmentalPermitDataType> lhsEnvironmentalPermit;
            lhsEnvironmentalPermit = (((this.environmentalPermit!= null)&&(!this.environmentalPermit.isEmpty()))?this.getEnvironmentalPermit():null);
            List<EnvironmentalPermitDataType> rhsEnvironmentalPermit;
            rhsEnvironmentalPermit = (((that.environmentalPermit!= null)&&(!that.environmentalPermit.isEmpty()))?that.getEnvironmentalPermit():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "environmentalPermit", lhsEnvironmentalPermit), LocatorUtils.property(thatLocator, "environmentalPermit", rhsEnvironmentalPermit), lhsEnvironmentalPermit, rhsEnvironmentalPermit)) {
                return false;
            }
        }
        {
            List<StateActivityDataType> lhsStateActivity;
            lhsStateActivity = (((this.stateActivity!= null)&&(!this.stateActivity.isEmpty()))?this.getStateActivity():null);
            List<StateActivityDataType> rhsStateActivity;
            rhsStateActivity = (((that.stateActivity!= null)&&(!that.stateActivity.isEmpty()))?that.getStateActivity():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "stateActivity", lhsStateActivity), LocatorUtils.property(thatLocator, "stateActivity", rhsStateActivity), lhsStateActivity, rhsStateActivity)) {
                return false;
            }
        }
        {
            List<UniversalWasteActivityDataType> lhsHandlerUniversalWaste;
            lhsHandlerUniversalWaste = (((this.handlerUniversalWaste!= null)&&(!this.handlerUniversalWaste.isEmpty()))?this.getHandlerUniversalWaste():null);
            List<UniversalWasteActivityDataType> rhsHandlerUniversalWaste;
            rhsHandlerUniversalWaste = (((that.handlerUniversalWaste!= null)&&(!that.handlerUniversalWaste.isEmpty()))?that.getHandlerUniversalWaste():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "handlerUniversalWaste", lhsHandlerUniversalWaste), LocatorUtils.property(thatLocator, "handlerUniversalWaste", rhsHandlerUniversalWaste), lhsHandlerUniversalWaste, rhsHandlerUniversalWaste)) {
                return false;
            }
        }
        {
            List<HandlerWasteCodeDataType> lhsHandlerWasteCodeDetails;
            lhsHandlerWasteCodeDetails = (((this.handlerWasteCodeDetails!= null)&&(!this.handlerWasteCodeDetails.isEmpty()))?this.getHandlerWasteCodeDetails():null);
            List<HandlerWasteCodeDataType> rhsHandlerWasteCodeDetails;
            rhsHandlerWasteCodeDetails = (((that.handlerWasteCodeDetails!= null)&&(!that.handlerWasteCodeDetails.isEmpty()))?that.getHandlerWasteCodeDetails():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "handlerWasteCodeDetails", lhsHandlerWasteCodeDetails), LocatorUtils.property(thatLocator, "handlerWasteCodeDetails", rhsHandlerWasteCodeDetails), lhsHandlerWasteCodeDetails, rhsHandlerWasteCodeDetails)) {
                return false;
            }
        }
        return true;
    }

    @Override
	public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    @Override
	public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            String theTransactionCode;
            theTransactionCode = this.getTransactionCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "transactionCode", theTransactionCode), currentHashCode, theTransactionCode);
        }
        {
            String theActivityLocationCode;
            theActivityLocationCode = this.getActivityLocationCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "activityLocationCode", theActivityLocationCode), currentHashCode, theActivityLocationCode);
        }
        {
            String theSourceTypeCode;
            theSourceTypeCode = this.getSourceTypeCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "sourceTypeCode", theSourceTypeCode), currentHashCode, theSourceTypeCode);
        }
        {
            String theSourceTypeText;
            theSourceTypeText = this.getSourceTypeText();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "sourceTypeText", theSourceTypeText), currentHashCode, theSourceTypeText);
        }
        {
            BigInteger theSourceRecordSequenceNumber;
            theSourceRecordSequenceNumber = this.getSourceRecordSequenceNumber();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "sourceRecordSequenceNumber", theSourceRecordSequenceNumber), currentHashCode, theSourceRecordSequenceNumber);
        }
        {
            XMLGregorianCalendar theReceiveDate;
            theReceiveDate = this.getReceiveDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "receiveDate", theReceiveDate), currentHashCode, theReceiveDate);
        }
        {
            String theHandlerName;
            theHandlerName = this.getHandlerName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "handlerName", theHandlerName), currentHashCode, theHandlerName);
        }
        {
            XMLGregorianCalendar theAcknowledgeReceiptDate;
            theAcknowledgeReceiptDate = this.getAcknowledgeReceiptDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "acknowledgeReceiptDate", theAcknowledgeReceiptDate), currentHashCode, theAcknowledgeReceiptDate);
        }
        {
            String theNonNotifierIndicator;
            theNonNotifierIndicator = this.getNonNotifierIndicator();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "nonNotifierIndicator", theNonNotifierIndicator), currentHashCode, theNonNotifierIndicator);
        }
        {
            String theNonNotifierIndicatorText;
            theNonNotifierIndicatorText = this.getNonNotifierIndicatorText();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "nonNotifierIndicatorText", theNonNotifierIndicatorText), currentHashCode, theNonNotifierIndicatorText);
        }
        {
            XMLGregorianCalendar theTreatmentStorageDisposalDate;
            theTreatmentStorageDisposalDate = this.getTreatmentStorageDisposalDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "treatmentStorageDisposalDate", theTreatmentStorageDisposalDate), currentHashCode, theTreatmentStorageDisposalDate);
        }
        {
            String theOffsiteWasteReceiptCode;
            theOffsiteWasteReceiptCode = this.getOffsiteWasteReceiptCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "offsiteWasteReceiptCode", theOffsiteWasteReceiptCode), currentHashCode, theOffsiteWasteReceiptCode);
        }
        {
            String theAccessibilityCode;
            theAccessibilityCode = this.getAccessibilityCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "accessibilityCode", theAccessibilityCode), currentHashCode, theAccessibilityCode);
        }
        {
            String theAccessibilityCodeText;
            theAccessibilityCodeText = this.getAccessibilityCodeText();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "accessibilityCodeText", theAccessibilityCodeText), currentHashCode, theAccessibilityCodeText);
        }
        {
            String theCountyCodeOwner;
            theCountyCodeOwner = this.getCountyCodeOwner();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "countyCodeOwner", theCountyCodeOwner), currentHashCode, theCountyCodeOwner);
        }
        {
            String theCountyCode;
            theCountyCode = this.getCountyCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "countyCode", theCountyCode), currentHashCode, theCountyCode);
        }
        {
            String theCountyName;
            theCountyName = this.getCountyName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "countyName", theCountyName), currentHashCode, theCountyName);
        }
        {
            String theHandlerSupplementalInformationText;
            theHandlerSupplementalInformationText = this.getHandlerSupplementalInformationText();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "handlerSupplementalInformationText", theHandlerSupplementalInformationText), currentHashCode, theHandlerSupplementalInformationText);
        }
        {
            String theNatureOfBusinessText;
            theNatureOfBusinessText = this.getNatureOfBusinessText();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "natureOfBusinessText", theNatureOfBusinessText), currentHashCode, theNatureOfBusinessText);
        }
        {
            String theHandlerSupplementalInformationText;
            theHandlerSupplementalInformationText = this.getHandlerSupplementalInformationText();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "handlerSupplementalInformationText", theHandlerSupplementalInformationText), currentHashCode, theHandlerSupplementalInformationText);
        }
        {
            String theShortTermSupplementalInformationText;
            theShortTermSupplementalInformationText = this.getShortTermSupplementalInformationText();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "handlerSupplementalInformationText", theShortTermSupplementalInformationText), currentHashCode, theShortTermSupplementalInformationText);
        }
        {
            LocationAddressDataType theLocationAddress;
            theLocationAddress = this.getLocationAddress();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "locationAddress", theLocationAddress), currentHashCode, theLocationAddress);
        }
        {
            MailingAddressDataType theMailingAddress;
            theMailingAddress = this.getMailingAddress();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "mailingAddress", theMailingAddress), currentHashCode, theMailingAddress);
        }
        {
            ContactAddressDataType theContactAddress;
            theContactAddress = this.getContactAddress();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "contactAddress", theContactAddress), currentHashCode, theContactAddress);
        }
        {
            ContactAddressDataType thePermitContactAddress;
            thePermitContactAddress = this.getPermitContactAddress();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "permitContactAddress", thePermitContactAddress), currentHashCode, thePermitContactAddress);
        }
        {
            UsedOilDataType theUsedOil;
            theUsedOil = this.getUsedOil();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "usedOil", theUsedOil), currentHashCode, theUsedOil);
        }
        {
            SiteWasteActivityDataType theWasteActivitySite;
            theWasteActivitySite = this.getWasteActivitySite();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "wasteActivitySite", theWasteActivitySite), currentHashCode, theWasteActivitySite);
        }
        {
            WasteGeneratorDataType theStateWasteGenerator;
            theStateWasteGenerator = this.getStateWasteGenerator();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "stateWasteGenerator", theStateWasteGenerator), currentHashCode, theStateWasteGenerator);
        }
        {
            WasteGeneratorDataType theFederalWasteGenerator;
            theFederalWasteGenerator = this.getFederalWasteGenerator();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "federalWasteGenerator", theFederalWasteGenerator), currentHashCode, theFederalWasteGenerator);
        }
        {
            LaboratoryHazardousWasteDataType theLaboratoryHazardousWaste;
            theLaboratoryHazardousWaste = this.getLaboratoryHazardousWaste();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "laboratoryHazardousWaste", theLaboratoryHazardousWaste), currentHashCode, theLaboratoryHazardousWaste);
        }
        {
            HazardousSecondaryMaterialDataType theHazardousSecondaryMaterial;
            theHazardousSecondaryMaterial = this.getHazardousSecondaryMaterial();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "hazardousSecondaryMaterial", theHazardousSecondaryMaterial), currentHashCode, theHazardousSecondaryMaterial);
        }
        {
            List<CertificationDataType> theCertification;
            theCertification = (((this.certification!= null)&&(!this.certification.isEmpty()))?this.getCertification():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "certification", theCertification), currentHashCode, theCertification);
        }
        {
            List<NAICSIdentityDataType> theNAICSIdentity;
            theNAICSIdentity = (((this.naicsIdentity!= null)&&(!this.naicsIdentity.isEmpty()))?this.getNAICSIdentity():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "naicsIdentity", theNAICSIdentity), currentHashCode, theNAICSIdentity);
        }
        {
            List<FacilityOwnerOperatorDataType> theFacilityOwnerOperator;
            theFacilityOwnerOperator = (((this.facilityOwnerOperator!= null)&&(!this.facilityOwnerOperator.isEmpty()))?this.getFacilityOwnerOperator():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "facilityOwnerOperator", theFacilityOwnerOperator), currentHashCode, theFacilityOwnerOperator);
        }
        {
            List<EnvironmentalPermitDataType> theEnvironmentalPermit;
            theEnvironmentalPermit = (((this.environmentalPermit!= null)&&(!this.environmentalPermit.isEmpty()))?this.getEnvironmentalPermit():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "environmentalPermit", theEnvironmentalPermit), currentHashCode, theEnvironmentalPermit);
        }
        {
            List<StateActivityDataType> theStateActivity;
            theStateActivity = (((this.stateActivity!= null)&&(!this.stateActivity.isEmpty()))?this.getStateActivity():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "stateActivity", theStateActivity), currentHashCode, theStateActivity);
        }
        {
            List<UniversalWasteActivityDataType> theHandlerUniversalWaste;
            theHandlerUniversalWaste = (((this.handlerUniversalWaste!= null)&&(!this.handlerUniversalWaste.isEmpty()))?this.getHandlerUniversalWaste():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "handlerUniversalWaste", theHandlerUniversalWaste), currentHashCode, theHandlerUniversalWaste);
        }
        {
            List<HandlerWasteCodeDataType> theHandlerWasteCodeDetails;
            theHandlerWasteCodeDetails = (((this.handlerWasteCodeDetails!= null)&&(!this.handlerWasteCodeDetails.isEmpty()))?this.getHandlerWasteCodeDetails():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "handlerWasteCodeDetails", theHandlerWasteCodeDetails), currentHashCode, theHandlerWasteCodeDetails);
        }
        return currentHashCode;
    }

    @Override
	public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
