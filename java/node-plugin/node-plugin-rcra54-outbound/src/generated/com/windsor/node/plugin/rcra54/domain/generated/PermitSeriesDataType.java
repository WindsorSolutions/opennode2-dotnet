//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.06.15 at 06:46:14 PM EDT 
//


package com.windsor.node.plugin.rcra54.domain.generated;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;
import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * Permit series data.
 * 
 * <p>Java class for PermitSeriesDataType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="PermitSeriesDataType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}TransactionCode" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}PermitSeriesSequenceNumber"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}PermitSeriesName" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}ResponsiblePersonDataOwnerCode" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}ResponsiblePersonID" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}SupplementalInformationText" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}PermitEvent" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "PermitSeriesDataType", propOrder = {
    "transactionCode",
    "permitSeriesSequenceNumber",
    "permitSeriesName",
    "responsiblePersonDataOwnerCode",
    "responsiblePersonID",
    "supplementalInformationText",
    "permitEvent"
})
@Entity(name = "PermitSeriesDataType")
@Table(name = "RCRA_PERMITSERIES")
@Inheritance(strategy = InheritanceType.JOINED)
public class PermitSeriesDataType
    implements Equals, HashCode
{

    @XmlElement(name = "TransactionCode")
    protected String transactionCode;
    @XmlElement(name = "PermitSeriesSequenceNumber", required = true)
    protected BigInteger permitSeriesSequenceNumber;
    @XmlElement(name = "PermitSeriesName")
    protected String permitSeriesName;
    @XmlElement(name = "ResponsiblePersonDataOwnerCode")
    protected String responsiblePersonDataOwnerCode;
    @XmlElement(name = "ResponsiblePersonID")
    protected String responsiblePersonID;
    @XmlElement(name = "SupplementalInformationText")
    protected String supplementalInformationText;
    @XmlElement(name = "PermitEvent")
    protected List<PermitEventDataType> permitEvent;
    @XmlAttribute(name = "Id")
    protected Long id;

    /**
     * Gets the value of the transactionCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "TRANSACTIONCODE", length = 1)
    public String getTransactionCode() {
        return transactionCode;
    }

    /**
     * Sets the value of the transactionCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTransactionCode(String value) {
        this.transactionCode = value;
    }

    /**
     * Gets the value of the permitSeriesSequenceNumber property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    @Basic
    @Column(name = "PERMITSERIESSEQNUMBER", precision = 4, scale = 0)
    public BigInteger getPermitSeriesSequenceNumber() {
        return permitSeriesSequenceNumber;
    }

    /**
     * Sets the value of the permitSeriesSequenceNumber property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setPermitSeriesSequenceNumber(BigInteger value) {
        this.permitSeriesSequenceNumber = value;
    }

    /**
     * Gets the value of the permitSeriesName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "PERMITSERIESNAME", length = 40)
    public String getPermitSeriesName() {
        return permitSeriesName;
    }

    /**
     * Sets the value of the permitSeriesName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPermitSeriesName(String value) {
        this.permitSeriesName = value;
    }

    /**
     * Gets the value of the responsiblePersonDataOwnerCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "RSPPERSONDATOWNRCODE", length = 2)
    public String getResponsiblePersonDataOwnerCode() {
        return responsiblePersonDataOwnerCode;
    }

    /**
     * Sets the value of the responsiblePersonDataOwnerCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setResponsiblePersonDataOwnerCode(String value) {
        this.responsiblePersonDataOwnerCode = value;
    }

    /**
     * Gets the value of the responsiblePersonID property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "RSPPERSONID", length = 5)
    public String getResponsiblePersonID() {
        return responsiblePersonID;
    }

    /**
     * Sets the value of the responsiblePersonID property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setResponsiblePersonID(String value) {
        this.responsiblePersonID = value;
    }

    /**
     * Gets the value of the supplementalInformationText property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "SUPPINFTXT", length = 2000)
    public String getSupplementalInformationText() {
        return supplementalInformationText;
    }

    /**
     * Sets the value of the supplementalInformationText property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSupplementalInformationText(String value) {
        this.supplementalInformationText = value;
    }

    /**
     * Gets the value of the permitEvent property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the permitEvent property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getPermitEvent().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link PermitEventDataType }
     * 
     * 
     */
    @OneToMany(targetEntity = PermitEventDataType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "PERMITSERIESID")
    public List<PermitEventDataType> getPermitEvent() {
        if (permitEvent == null) {
            permitEvent = new ArrayList<PermitEventDataType>();
        }
        return this.permitEvent;
    }

    /**
     * 
     * 
     */
    public void setPermitEvent(List<PermitEventDataType> permitEvent) {
        this.permitEvent = permitEvent;
    }

    /**
     * Gets the value of the id property.
     * 
     * @return
     *     possible object is
     *     {@link Long }
     *     
     */
    @Id
    @Column(name = "ID")
    @GeneratedValue(generator = "ColSequence", strategy = GenerationType.AUTO)
    @SequenceGenerator(name = "ColSequence", sequenceName = "COLUMN_ID_SEQUENCE", allocationSize = 1)
    public Long getId() {
        return id;
    }

    /**
     * Sets the value of the id property.
     * 
     * @param value
     *     allowed object is
     *     {@link Long }
     *     
     */
    public void setId(Long value) {
        this.id = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof PermitSeriesDataType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final PermitSeriesDataType that = ((PermitSeriesDataType) object);
        {
            String lhsTransactionCode;
            lhsTransactionCode = this.getTransactionCode();
            String rhsTransactionCode;
            rhsTransactionCode = that.getTransactionCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "transactionCode", lhsTransactionCode), LocatorUtils.property(thatLocator, "transactionCode", rhsTransactionCode), lhsTransactionCode, rhsTransactionCode)) {
                return false;
            }
        }
        {
            BigInteger lhsPermitSeriesSequenceNumber;
            lhsPermitSeriesSequenceNumber = this.getPermitSeriesSequenceNumber();
            BigInteger rhsPermitSeriesSequenceNumber;
            rhsPermitSeriesSequenceNumber = that.getPermitSeriesSequenceNumber();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "permitSeriesSequenceNumber", lhsPermitSeriesSequenceNumber), LocatorUtils.property(thatLocator, "permitSeriesSequenceNumber", rhsPermitSeriesSequenceNumber), lhsPermitSeriesSequenceNumber, rhsPermitSeriesSequenceNumber)) {
                return false;
            }
        }
        {
            String lhsPermitSeriesName;
            lhsPermitSeriesName = this.getPermitSeriesName();
            String rhsPermitSeriesName;
            rhsPermitSeriesName = that.getPermitSeriesName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "permitSeriesName", lhsPermitSeriesName), LocatorUtils.property(thatLocator, "permitSeriesName", rhsPermitSeriesName), lhsPermitSeriesName, rhsPermitSeriesName)) {
                return false;
            }
        }
        {
            String lhsResponsiblePersonDataOwnerCode;
            lhsResponsiblePersonDataOwnerCode = this.getResponsiblePersonDataOwnerCode();
            String rhsResponsiblePersonDataOwnerCode;
            rhsResponsiblePersonDataOwnerCode = that.getResponsiblePersonDataOwnerCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "responsiblePersonDataOwnerCode", lhsResponsiblePersonDataOwnerCode), LocatorUtils.property(thatLocator, "responsiblePersonDataOwnerCode", rhsResponsiblePersonDataOwnerCode), lhsResponsiblePersonDataOwnerCode, rhsResponsiblePersonDataOwnerCode)) {
                return false;
            }
        }
        {
            String lhsResponsiblePersonID;
            lhsResponsiblePersonID = this.getResponsiblePersonID();
            String rhsResponsiblePersonID;
            rhsResponsiblePersonID = that.getResponsiblePersonID();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "responsiblePersonID", lhsResponsiblePersonID), LocatorUtils.property(thatLocator, "responsiblePersonID", rhsResponsiblePersonID), lhsResponsiblePersonID, rhsResponsiblePersonID)) {
                return false;
            }
        }
        {
            String lhsSupplementalInformationText;
            lhsSupplementalInformationText = this.getSupplementalInformationText();
            String rhsSupplementalInformationText;
            rhsSupplementalInformationText = that.getSupplementalInformationText();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "supplementalInformationText", lhsSupplementalInformationText), LocatorUtils.property(thatLocator, "supplementalInformationText", rhsSupplementalInformationText), lhsSupplementalInformationText, rhsSupplementalInformationText)) {
                return false;
            }
        }
        {
            List<PermitEventDataType> lhsPermitEvent;
            lhsPermitEvent = (((this.permitEvent!= null)&&(!this.permitEvent.isEmpty()))?this.getPermitEvent():null);
            List<PermitEventDataType> rhsPermitEvent;
            rhsPermitEvent = (((that.permitEvent!= null)&&(!that.permitEvent.isEmpty()))?that.getPermitEvent():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "permitEvent", lhsPermitEvent), LocatorUtils.property(thatLocator, "permitEvent", rhsPermitEvent), lhsPermitEvent, rhsPermitEvent)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            String theTransactionCode;
            theTransactionCode = this.getTransactionCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "transactionCode", theTransactionCode), currentHashCode, theTransactionCode);
        }
        {
            BigInteger thePermitSeriesSequenceNumber;
            thePermitSeriesSequenceNumber = this.getPermitSeriesSequenceNumber();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "permitSeriesSequenceNumber", thePermitSeriesSequenceNumber), currentHashCode, thePermitSeriesSequenceNumber);
        }
        {
            String thePermitSeriesName;
            thePermitSeriesName = this.getPermitSeriesName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "permitSeriesName", thePermitSeriesName), currentHashCode, thePermitSeriesName);
        }
        {
            String theResponsiblePersonDataOwnerCode;
            theResponsiblePersonDataOwnerCode = this.getResponsiblePersonDataOwnerCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "responsiblePersonDataOwnerCode", theResponsiblePersonDataOwnerCode), currentHashCode, theResponsiblePersonDataOwnerCode);
        }
        {
            String theResponsiblePersonID;
            theResponsiblePersonID = this.getResponsiblePersonID();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "responsiblePersonID", theResponsiblePersonID), currentHashCode, theResponsiblePersonID);
        }
        {
            String theSupplementalInformationText;
            theSupplementalInformationText = this.getSupplementalInformationText();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "supplementalInformationText", theSupplementalInformationText), currentHashCode, theSupplementalInformationText);
        }
        {
            List<PermitEventDataType> thePermitEvent;
            thePermitEvent = (((this.permitEvent!= null)&&(!this.permitEvent.isEmpty()))?this.getPermitEvent():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "permitEvent", thePermitEvent), currentHashCode, thePermitEvent);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
