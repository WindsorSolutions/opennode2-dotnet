//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.06.15 at 06:46:14 PM EDT 
//


package com.windsor.node.plugin.rcra54.domain.generated;

import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;

import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;


/**
 * Site waste activity codes.
 * 
 * <p>Java class for SiteWasteActivityDataType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="SiteWasteActivityDataType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}LandTypeCode" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}LandTypeText" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}StateDistrictOwnerName" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}StateDistrictCode" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}StateDistrictCodeText" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}ImporterActivityCode" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}MixedWasteGeneratorCode" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}RecyclerActivityCode" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}TransporterActivityCode" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}TreatmentStorageDisposalActivityCode" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}UndergroundInjectionActivityCode" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}UniversalWasteDestinationFacilityIndicator" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}OnsiteBurnerExemptionCode" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}FurnaceExemptionCode" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}ShortTermGeneratorIndicator" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}TransferFacilityIndicator" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "SiteWasteActivityDataType", propOrder = {
    "landTypeCode",
    "landTypeText",
    "stateDistrictOwnerName",
    "stateDistrictCode",
    "stateDistrictCodeText",
    "importerActivityCode",
    "mixedWasteGeneratorCode",
    "recyclerActivityCode",
    "transporterActivityCode",
    "treatmentStorageDisposalActivityCode",
    "undergroundInjectionActivityCode",
    "universalWasteDestinationFacilityIndicator",
    "onsiteBurnerExemptionCode",
    "furnaceExemptionCode",
    "shortTermGeneratorIndicator",
        "transferFacilityIndicator",
        "recognizedTraderExporterIndicator",
        "recognizedTraderImporterIndicator",
        "slabExporterIndicator",
        "slabImporterIndicator"
})
@Entity(name = "SiteWasteActivityDataType")
@Table(name = "RCRA_SITEWASTEACT")
@Inheritance(strategy = InheritanceType.JOINED)
public class SiteWasteActivityDataType
    implements Equals, HashCode
{

    @XmlElement(name = "LandTypeCode")
    protected String landTypeCode;
    @XmlElement(name = "LandTypeText")
    protected String landTypeText;
    @XmlElement(name = "StateDistrictOwnerName")
    protected String stateDistrictOwnerName;
    @XmlElement(name = "StateDistrictCode")
    protected String stateDistrictCode;
    @XmlElement(name = "StateDistrictCodeText")
    protected String stateDistrictCodeText;
    @XmlElement(name = "ImporterActivityCode")
    protected String importerActivityCode;
    @XmlElement(name = "MixedWasteGeneratorCode")
    protected String mixedWasteGeneratorCode;
    @XmlElement(name = "RecyclerActivityCode")
    protected String recyclerActivityCode;
    @XmlElement(name = "TransporterActivityCode")
    protected String transporterActivityCode;
    @XmlElement(name = "TreatmentStorageDisposalActivityCode")
    protected String treatmentStorageDisposalActivityCode;
    @XmlElement(name = "UndergroundInjectionActivityCode")
    protected String undergroundInjectionActivityCode;
    @XmlElement(name = "UniversalWasteDestinationFacilityIndicator")
    protected String universalWasteDestinationFacilityIndicator;
    @XmlElement(name = "OnsiteBurnerExemptionCode")
    protected String onsiteBurnerExemptionCode;
    @XmlElement(name = "FurnaceExemptionCode")
    protected String furnaceExemptionCode;
    @XmlElement(name = "ShortTermGeneratorIndicator")
    protected String shortTermGeneratorIndicator;
    @XmlElement(name = "TransferFacilityIndicator")
    protected String transferFacilityIndicator;
    @XmlElement(name = "RecognizedTraderExporterIndicator")
    protected String recognizedTraderExporterIndicator;
    @XmlElement(name = "RecognizedTraderImporterIndicator")
    protected String recognizedTraderImporterIndicator;
    @XmlElement(name = "SlabExporterIndicator")
    protected String slabExporterIndicator;
    @XmlElement(name = "SlabImporterIndicator")
    protected String slabImporterIndicator;
    @XmlAttribute(name = "Id")
    protected Long id;

    /**
     * Gets the value of the landTypeCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "LANDTYPECODE", length = 1)
    public String getLandTypeCode() {
        return landTypeCode;
    }

    /**
     * Sets the value of the landTypeCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLandTypeCode(String value) {
        this.landTypeCode = value;
    }

    /**
     * Gets the value of the landTypeText property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "LANDTYPETXT", length = 255)
    public String getLandTypeText() {
        return landTypeText;
    }

    /**
     * Sets the value of the landTypeText property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLandTypeText(String value) {
        this.landTypeText = value;
    }

    /**
     * Gets the value of the stateDistrictOwnerName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "STATEDISTRICTOWNRNAME", length = 2)
    public String getStateDistrictOwnerName() {
        return stateDistrictOwnerName;
    }

    /**
     * Sets the value of the stateDistrictOwnerName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setStateDistrictOwnerName(String value) {
        this.stateDistrictOwnerName = value;
    }

    /**
     * Gets the value of the stateDistrictCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "STATEDISTRICTCODE", length = 10)
    public String getStateDistrictCode() {
        return stateDistrictCode;
    }

    /**
     * Sets the value of the stateDistrictCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setStateDistrictCode(String value) {
        this.stateDistrictCode = value;
    }

    /**
     * Gets the value of the stateDistrictCodeText property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "STATEDISTRICTCODETXT", length = 255)
    public String getStateDistrictCodeText() {
        return stateDistrictCodeText;
    }

    /**
     * Sets the value of the stateDistrictCodeText property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setStateDistrictCodeText(String value) {
        this.stateDistrictCodeText = value;
    }

    /**
     * Gets the value of the importerActivityCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "IMPORTERACTCODE", length = 1)
    public String getImporterActivityCode() {
        return importerActivityCode;
    }

    /**
     * Sets the value of the importerActivityCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setImporterActivityCode(String value) {
        this.importerActivityCode = value;
    }

    /**
     * Gets the value of the mixedWasteGeneratorCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "MIXEDWASTEGENRTRCODE", length = 1)
    public String getMixedWasteGeneratorCode() {
        return mixedWasteGeneratorCode;
    }

    /**
     * Sets the value of the mixedWasteGeneratorCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setMixedWasteGeneratorCode(String value) {
        this.mixedWasteGeneratorCode = value;
    }

    /**
     * Gets the value of the recyclerActivityCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "RECYCLERACTCODE", length = 1)
    public String getRecyclerActivityCode() {
        return recyclerActivityCode;
    }

    /**
     * Sets the value of the recyclerActivityCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setRecyclerActivityCode(String value) {
        this.recyclerActivityCode = value;
    }

    /**
     * Gets the value of the transporterActivityCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "TRNSPRTRACTCODE", length = 1)
    public String getTransporterActivityCode() {
        return transporterActivityCode;
    }

    /**
     * Sets the value of the transporterActivityCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTransporterActivityCode(String value) {
        this.transporterActivityCode = value;
    }

    /**
     * Gets the value of the treatmentStorageDisposalActivityCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "TRTMNTSTORAGEDISPACTCODE", length = 1)
    public String getTreatmentStorageDisposalActivityCode() {
        return treatmentStorageDisposalActivityCode;
    }

    /**
     * Sets the value of the treatmentStorageDisposalActivityCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTreatmentStorageDisposalActivityCode(String value) {
        this.treatmentStorageDisposalActivityCode = value;
    }

    /**
     * Gets the value of the undergroundInjectionActivityCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "UNDRGRNDINJECTIONACTCODE", length = 1)
    public String getUndergroundInjectionActivityCode() {
        return undergroundInjectionActivityCode;
    }

    /**
     * Sets the value of the undergroundInjectionActivityCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setUndergroundInjectionActivityCode(String value) {
        this.undergroundInjectionActivityCode = value;
    }

    /**
     * Gets the value of the universalWasteDestinationFacilityIndicator property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "UNVWASTEDESTINATIONFACIND", length = 1)
    public String getUniversalWasteDestinationFacilityIndicator() {
        return universalWasteDestinationFacilityIndicator;
    }

    /**
     * Sets the value of the universalWasteDestinationFacilityIndicator property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setUniversalWasteDestinationFacilityIndicator(String value) {
        this.universalWasteDestinationFacilityIndicator = value;
    }

    /**
     * Gets the value of the onsiteBurnerExemptionCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "ONSITEBURNEREXEMPTIONCODE", length = 1)
    public String getOnsiteBurnerExemptionCode() {
        return onsiteBurnerExemptionCode;
    }

    /**
     * Sets the value of the onsiteBurnerExemptionCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setOnsiteBurnerExemptionCode(String value) {
        this.onsiteBurnerExemptionCode = value;
    }

    /**
     * Gets the value of the furnaceExemptionCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "FURNACEEXEMPTIONCODE", length = 1)
    public String getFurnaceExemptionCode() {
        return furnaceExemptionCode;
    }

    /**
     * Sets the value of the furnaceExemptionCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setFurnaceExemptionCode(String value) {
        this.furnaceExemptionCode = value;
    }

    /**
     * Gets the value of the shortTermGeneratorIndicator property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "SHORTTERMGENRTRIND", length = 1)
    public String getShortTermGeneratorIndicator() {
        return shortTermGeneratorIndicator;
    }

    /**
     * Sets the value of the shortTermGeneratorIndicator property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setShortTermGeneratorIndicator(String value) {
        this.shortTermGeneratorIndicator = value;
    }

    /**
     * Gets the value of the transferFacilityIndicator property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "TRANSFERFACIND", length = 1)
    public String getTransferFacilityIndicator() {
        return transferFacilityIndicator;
    }

    /**
     * Sets the value of the transferFacilityIndicator property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTransferFacilityIndicator(String value) {
        this.transferFacilityIndicator = value;
    }

    @Basic
    @Column(name = "RECOGNIZEDTRADEREXPORTERIND", length = 1)
    public String getRecognizedTraderExporterIndicator() {
        return recognizedTraderExporterIndicator;
    }

    public void setRecognizedTraderExporterIndicator(String recognizedTraderExporterIndicator) {
        this.recognizedTraderExporterIndicator = recognizedTraderExporterIndicator;
    }

    @Basic
    @Column(name = "RECOGNIZEDTRADERIMPORTERIND", length = 1)
    public String getRecognizedTraderImporterIndicator() {
        return recognizedTraderImporterIndicator;
    }

    public void setRecognizedTraderImporterIndicator(String recognizedTraderImporterIndicator) {
        this.recognizedTraderImporterIndicator = recognizedTraderImporterIndicator;
    }

    @Basic
    @Column(name = "SLABEXPORTERIND", length = 1)
    public String getSlabExporterIndicator() {
        return slabExporterIndicator;
    }

    public void setSlabExporterIndicator(String slabExporterIndicator) {
        this.slabExporterIndicator = slabExporterIndicator;
    }

    @Basic
    @Column(name = "SLABIMPORTERIND", length = 1)
    public String getSlabImporterIndicator() {
        return slabImporterIndicator;
    }

    public void setSlabImporterIndicator(String slabImporterIndicator) {
        this.slabImporterIndicator = slabImporterIndicator;
    }

    /**
     * Gets the value of the id property.
     * 
     * @return
     *     possible object is
     *     {@link Long }
     *     
     */
    @Id
    @Column(name = "ID")
    @GeneratedValue(generator = "ColSequence", strategy = GenerationType.AUTO)
    @SequenceGenerator(name = "ColSequence", sequenceName = "COLUMN_ID_SEQUENCE", allocationSize = 1)
    public Long getId() {
        return id;
    }

    /**
     * Sets the value of the id property.
     * 
     * @param value
     *     allowed object is
     *     {@link Long }
     *     
     */
    public void setId(Long value) {
        this.id = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof SiteWasteActivityDataType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final SiteWasteActivityDataType that = ((SiteWasteActivityDataType) object);
        {
            String lhsLandTypeCode;
            lhsLandTypeCode = this.getLandTypeCode();
            String rhsLandTypeCode;
            rhsLandTypeCode = that.getLandTypeCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "landTypeCode", lhsLandTypeCode), LocatorUtils.property(thatLocator, "landTypeCode", rhsLandTypeCode), lhsLandTypeCode, rhsLandTypeCode)) {
                return false;
            }
        }
        {
            String lhsLandTypeText;
            lhsLandTypeText = this.getLandTypeText();
            String rhsLandTypeText;
            rhsLandTypeText = that.getLandTypeText();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "landTypeText", lhsLandTypeText), LocatorUtils.property(thatLocator, "landTypeText", rhsLandTypeText), lhsLandTypeText, rhsLandTypeText)) {
                return false;
            }
        }
        {
            String lhsStateDistrictOwnerName;
            lhsStateDistrictOwnerName = this.getStateDistrictOwnerName();
            String rhsStateDistrictOwnerName;
            rhsStateDistrictOwnerName = that.getStateDistrictOwnerName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "stateDistrictOwnerName", lhsStateDistrictOwnerName), LocatorUtils.property(thatLocator, "stateDistrictOwnerName", rhsStateDistrictOwnerName), lhsStateDistrictOwnerName, rhsStateDistrictOwnerName)) {
                return false;
            }
        }
        {
            String lhsStateDistrictCode;
            lhsStateDistrictCode = this.getStateDistrictCode();
            String rhsStateDistrictCode;
            rhsStateDistrictCode = that.getStateDistrictCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "stateDistrictCode", lhsStateDistrictCode), LocatorUtils.property(thatLocator, "stateDistrictCode", rhsStateDistrictCode), lhsStateDistrictCode, rhsStateDistrictCode)) {
                return false;
            }
        }
        {
            String lhsStateDistrictCodeText;
            lhsStateDistrictCodeText = this.getStateDistrictCodeText();
            String rhsStateDistrictCodeText;
            rhsStateDistrictCodeText = that.getStateDistrictCodeText();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "stateDistrictCodeText", lhsStateDistrictCodeText), LocatorUtils.property(thatLocator, "stateDistrictCodeText", rhsStateDistrictCodeText), lhsStateDistrictCodeText, rhsStateDistrictCodeText)) {
                return false;
            }
        }
        {
            String lhsImporterActivityCode;
            lhsImporterActivityCode = this.getImporterActivityCode();
            String rhsImporterActivityCode;
            rhsImporterActivityCode = that.getImporterActivityCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "importerActivityCode", lhsImporterActivityCode), LocatorUtils.property(thatLocator, "importerActivityCode", rhsImporterActivityCode), lhsImporterActivityCode, rhsImporterActivityCode)) {
                return false;
            }
        }
        {
            String lhsMixedWasteGeneratorCode;
            lhsMixedWasteGeneratorCode = this.getMixedWasteGeneratorCode();
            String rhsMixedWasteGeneratorCode;
            rhsMixedWasteGeneratorCode = that.getMixedWasteGeneratorCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "mixedWasteGeneratorCode", lhsMixedWasteGeneratorCode), LocatorUtils.property(thatLocator, "mixedWasteGeneratorCode", rhsMixedWasteGeneratorCode), lhsMixedWasteGeneratorCode, rhsMixedWasteGeneratorCode)) {
                return false;
            }
        }
        {
            String lhsRecyclerActivityCode;
            lhsRecyclerActivityCode = this.getRecyclerActivityCode();
            String rhsRecyclerActivityCode;
            rhsRecyclerActivityCode = that.getRecyclerActivityCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "recyclerActivityCode", lhsRecyclerActivityCode), LocatorUtils.property(thatLocator, "recyclerActivityCode", rhsRecyclerActivityCode), lhsRecyclerActivityCode, rhsRecyclerActivityCode)) {
                return false;
            }
        }
        {
            String lhsTransporterActivityCode;
            lhsTransporterActivityCode = this.getTransporterActivityCode();
            String rhsTransporterActivityCode;
            rhsTransporterActivityCode = that.getTransporterActivityCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "transporterActivityCode", lhsTransporterActivityCode), LocatorUtils.property(thatLocator, "transporterActivityCode", rhsTransporterActivityCode), lhsTransporterActivityCode, rhsTransporterActivityCode)) {
                return false;
            }
        }
        {
            String lhsTreatmentStorageDisposalActivityCode;
            lhsTreatmentStorageDisposalActivityCode = this.getTreatmentStorageDisposalActivityCode();
            String rhsTreatmentStorageDisposalActivityCode;
            rhsTreatmentStorageDisposalActivityCode = that.getTreatmentStorageDisposalActivityCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "treatmentStorageDisposalActivityCode", lhsTreatmentStorageDisposalActivityCode), LocatorUtils.property(thatLocator, "treatmentStorageDisposalActivityCode", rhsTreatmentStorageDisposalActivityCode), lhsTreatmentStorageDisposalActivityCode, rhsTreatmentStorageDisposalActivityCode)) {
                return false;
            }
        }
        {
            String lhsUndergroundInjectionActivityCode;
            lhsUndergroundInjectionActivityCode = this.getUndergroundInjectionActivityCode();
            String rhsUndergroundInjectionActivityCode;
            rhsUndergroundInjectionActivityCode = that.getUndergroundInjectionActivityCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "undergroundInjectionActivityCode", lhsUndergroundInjectionActivityCode), LocatorUtils.property(thatLocator, "undergroundInjectionActivityCode", rhsUndergroundInjectionActivityCode), lhsUndergroundInjectionActivityCode, rhsUndergroundInjectionActivityCode)) {
                return false;
            }
        }
        {
            String lhsUniversalWasteDestinationFacilityIndicator;
            lhsUniversalWasteDestinationFacilityIndicator = this.getUniversalWasteDestinationFacilityIndicator();
            String rhsUniversalWasteDestinationFacilityIndicator;
            rhsUniversalWasteDestinationFacilityIndicator = that.getUniversalWasteDestinationFacilityIndicator();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "universalWasteDestinationFacilityIndicator", lhsUniversalWasteDestinationFacilityIndicator), LocatorUtils.property(thatLocator, "universalWasteDestinationFacilityIndicator", rhsUniversalWasteDestinationFacilityIndicator), lhsUniversalWasteDestinationFacilityIndicator, rhsUniversalWasteDestinationFacilityIndicator)) {
                return false;
            }
        }
        {
            String lhsOnsiteBurnerExemptionCode;
            lhsOnsiteBurnerExemptionCode = this.getOnsiteBurnerExemptionCode();
            String rhsOnsiteBurnerExemptionCode;
            rhsOnsiteBurnerExemptionCode = that.getOnsiteBurnerExemptionCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "onsiteBurnerExemptionCode", lhsOnsiteBurnerExemptionCode), LocatorUtils.property(thatLocator, "onsiteBurnerExemptionCode", rhsOnsiteBurnerExemptionCode), lhsOnsiteBurnerExemptionCode, rhsOnsiteBurnerExemptionCode)) {
                return false;
            }
        }
        {
            String lhsFurnaceExemptionCode;
            lhsFurnaceExemptionCode = this.getFurnaceExemptionCode();
            String rhsFurnaceExemptionCode;
            rhsFurnaceExemptionCode = that.getFurnaceExemptionCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "furnaceExemptionCode", lhsFurnaceExemptionCode), LocatorUtils.property(thatLocator, "furnaceExemptionCode", rhsFurnaceExemptionCode), lhsFurnaceExemptionCode, rhsFurnaceExemptionCode)) {
                return false;
            }
        }
        {
            String lhsShortTermGeneratorIndicator;
            lhsShortTermGeneratorIndicator = this.getShortTermGeneratorIndicator();
            String rhsShortTermGeneratorIndicator;
            rhsShortTermGeneratorIndicator = that.getShortTermGeneratorIndicator();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "shortTermGeneratorIndicator", lhsShortTermGeneratorIndicator), LocatorUtils.property(thatLocator, "shortTermGeneratorIndicator", rhsShortTermGeneratorIndicator), lhsShortTermGeneratorIndicator, rhsShortTermGeneratorIndicator)) {
                return false;
            }
        }
        {
            String lhsTransferFacilityIndicator;
            lhsTransferFacilityIndicator = this.getTransferFacilityIndicator();
            String rhsTransferFacilityIndicator;
            rhsTransferFacilityIndicator = that.getTransferFacilityIndicator();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "transferFacilityIndicator", lhsTransferFacilityIndicator), LocatorUtils.property(thatLocator, "transferFacilityIndicator", rhsTransferFacilityIndicator), lhsTransferFacilityIndicator, rhsTransferFacilityIndicator)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            String theLandTypeCode;
            theLandTypeCode = this.getLandTypeCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "landTypeCode", theLandTypeCode), currentHashCode, theLandTypeCode);
        }
        {
            String theLandTypeText;
            theLandTypeText = this.getLandTypeText();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "landTypeText", theLandTypeText), currentHashCode, theLandTypeText);
        }
        {
            String theStateDistrictOwnerName;
            theStateDistrictOwnerName = this.getStateDistrictOwnerName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "stateDistrictOwnerName", theStateDistrictOwnerName), currentHashCode, theStateDistrictOwnerName);
        }
        {
            String theStateDistrictCode;
            theStateDistrictCode = this.getStateDistrictCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "stateDistrictCode", theStateDistrictCode), currentHashCode, theStateDistrictCode);
        }
        {
            String theStateDistrictCodeText;
            theStateDistrictCodeText = this.getStateDistrictCodeText();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "stateDistrictCodeText", theStateDistrictCodeText), currentHashCode, theStateDistrictCodeText);
        }
        {
            String theImporterActivityCode;
            theImporterActivityCode = this.getImporterActivityCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "importerActivityCode", theImporterActivityCode), currentHashCode, theImporterActivityCode);
        }
        {
            String theMixedWasteGeneratorCode;
            theMixedWasteGeneratorCode = this.getMixedWasteGeneratorCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "mixedWasteGeneratorCode", theMixedWasteGeneratorCode), currentHashCode, theMixedWasteGeneratorCode);
        }
        {
            String theRecyclerActivityCode;
            theRecyclerActivityCode = this.getRecyclerActivityCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "recyclerActivityCode", theRecyclerActivityCode), currentHashCode, theRecyclerActivityCode);
        }
        {
            String theTransporterActivityCode;
            theTransporterActivityCode = this.getTransporterActivityCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "transporterActivityCode", theTransporterActivityCode), currentHashCode, theTransporterActivityCode);
        }
        {
            String theTreatmentStorageDisposalActivityCode;
            theTreatmentStorageDisposalActivityCode = this.getTreatmentStorageDisposalActivityCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "treatmentStorageDisposalActivityCode", theTreatmentStorageDisposalActivityCode), currentHashCode, theTreatmentStorageDisposalActivityCode);
        }
        {
            String theUndergroundInjectionActivityCode;
            theUndergroundInjectionActivityCode = this.getUndergroundInjectionActivityCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "undergroundInjectionActivityCode", theUndergroundInjectionActivityCode), currentHashCode, theUndergroundInjectionActivityCode);
        }
        {
            String theUniversalWasteDestinationFacilityIndicator;
            theUniversalWasteDestinationFacilityIndicator = this.getUniversalWasteDestinationFacilityIndicator();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "universalWasteDestinationFacilityIndicator", theUniversalWasteDestinationFacilityIndicator), currentHashCode, theUniversalWasteDestinationFacilityIndicator);
        }
        {
            String theOnsiteBurnerExemptionCode;
            theOnsiteBurnerExemptionCode = this.getOnsiteBurnerExemptionCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "onsiteBurnerExemptionCode", theOnsiteBurnerExemptionCode), currentHashCode, theOnsiteBurnerExemptionCode);
        }
        {
            String theFurnaceExemptionCode;
            theFurnaceExemptionCode = this.getFurnaceExemptionCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "furnaceExemptionCode", theFurnaceExemptionCode), currentHashCode, theFurnaceExemptionCode);
        }
        {
            String theShortTermGeneratorIndicator;
            theShortTermGeneratorIndicator = this.getShortTermGeneratorIndicator();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "shortTermGeneratorIndicator", theShortTermGeneratorIndicator), currentHashCode, theShortTermGeneratorIndicator);
        }
        {
            String theTransferFacilityIndicator;
            theTransferFacilityIndicator = this.getTransferFacilityIndicator();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "transferFacilityIndicator", theTransferFacilityIndicator), currentHashCode, theTransferFacilityIndicator);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
