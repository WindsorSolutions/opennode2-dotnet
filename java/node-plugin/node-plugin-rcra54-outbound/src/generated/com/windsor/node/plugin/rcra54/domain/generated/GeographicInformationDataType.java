//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.06.15 at 06:46:14 PM EDT 
//


package com.windsor.node.plugin.rcra54.domain.generated;

import java.math.BigInteger;
import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.OneToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.georss.georss._10.WhereType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * Used to define the geographic coordinates of the Handler.
 * 
 * <p>Java class for GeographicInformationDataType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="GeographicInformationDataType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}TransactionCode" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}GeographicInformationOwner"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}GeographicInformationSequenceNumber"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}PermitUnitSequenceNumber" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}AreaSequenceNumber" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}AreaAcreage" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}GeographicMetadata" minOccurs="0"/>
 *         &lt;element ref="{http://www.georss.org/georss/10}where" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/RCRA/5}LocationCommentsText" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "GeographicInformationDataType", propOrder = {
    "transactionCode",
    "geographicInformationOwner",
    "geographicInformationSequenceNumber",
    "permitUnitSequenceNumber",
    "areaSequenceNumber",
    "areaAcreage",
    "geographicMetadata",
    "where",
    "locationCommentsText"
})
@Entity(name = "GeographicInformationDataType")
@Table(name = "RCRA_GEOGINF")
@Inheritance(strategy = InheritanceType.JOINED)
public class GeographicInformationDataType
    implements Equals, HashCode
{

    @XmlElement(name = "TransactionCode")
    protected String transactionCode;
    @XmlElement(name = "GeographicInformationOwner", required = true)
    protected String geographicInformationOwner;
    @XmlElement(name = "GeographicInformationSequenceNumber", required = true)
    protected BigInteger geographicInformationSequenceNumber;
    @XmlElement(name = "PermitUnitSequenceNumber")
    protected BigInteger permitUnitSequenceNumber;
    @XmlElement(name = "AreaSequenceNumber")
    protected BigInteger areaSequenceNumber;
    @XmlElement(name = "AreaAcreage")
    protected AreaAcreageDataType areaAcreage;
    @XmlElement(name = "GeographicMetadata")
    protected GeographicMetadataDataType geographicMetadata;
    @XmlElement(namespace = "http://www.georss.org/georss/10")
    protected WhereType where;
    @XmlElement(name = "LocationCommentsText")
    protected String locationCommentsText;
    @XmlAttribute(name = "Id")
    protected Long id;

    /**
     * Gets the value of the transactionCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "TRANSACTIONCODE", length = 1)
    public String getTransactionCode() {
        return transactionCode;
    }

    /**
     * Sets the value of the transactionCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTransactionCode(String value) {
        this.transactionCode = value;
    }

    /**
     * Gets the value of the geographicInformationOwner property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "GEOGINFOWNR", length = 2)
    public String getGeographicInformationOwner() {
        return geographicInformationOwner;
    }

    /**
     * Sets the value of the geographicInformationOwner property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setGeographicInformationOwner(String value) {
        this.geographicInformationOwner = value;
    }

    /**
     * Gets the value of the geographicInformationSequenceNumber property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    @Basic
    @Column(name = "GEOGINFSEQNUMBER", precision = 4, scale = 0)
    public BigInteger getGeographicInformationSequenceNumber() {
        return geographicInformationSequenceNumber;
    }

    /**
     * Sets the value of the geographicInformationSequenceNumber property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setGeographicInformationSequenceNumber(BigInteger value) {
        this.geographicInformationSequenceNumber = value;
    }

    /**
     * Gets the value of the permitUnitSequenceNumber property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    @Basic
    @Column(name = "PERMITUNITSEQNUMBER", precision = 4, scale = 0)
    public BigInteger getPermitUnitSequenceNumber() {
        return permitUnitSequenceNumber;
    }

    /**
     * Sets the value of the permitUnitSequenceNumber property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setPermitUnitSequenceNumber(BigInteger value) {
        this.permitUnitSequenceNumber = value;
    }

    /**
     * Gets the value of the areaSequenceNumber property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    @Basic
    @Column(name = "AREASEQNUMBER", precision = 4, scale = 0)
    public BigInteger getAreaSequenceNumber() {
        return areaSequenceNumber;
    }

    /**
     * Sets the value of the areaSequenceNumber property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setAreaSequenceNumber(BigInteger value) {
        this.areaSequenceNumber = value;
    }

    /**
     * Gets the value of the areaAcreage property.
     * 
     * @return
     *     possible object is
     *     {@link AreaAcreageDataType }
     *     
     */
    @OneToOne(targetEntity = AreaAcreageDataType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "AREAACREAGEID")
    public AreaAcreageDataType getAreaAcreage() {
        return areaAcreage;
    }

    /**
     * Sets the value of the areaAcreage property.
     * 
     * @param value
     *     allowed object is
     *     {@link AreaAcreageDataType }
     *     
     */
    public void setAreaAcreage(AreaAcreageDataType value) {
        this.areaAcreage = value;
    }

    /**
     * Gets the value of the geographicMetadata property.
     * 
     * @return
     *     possible object is
     *     {@link GeographicMetadataDataType }
     *     
     */
    @OneToOne(targetEntity = GeographicMetadataDataType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "GEOGMETAID")
    public GeographicMetadataDataType getGeographicMetadata() {
        return geographicMetadata;
    }

    /**
     * Sets the value of the geographicMetadata property.
     * 
     * @param value
     *     allowed object is
     *     {@link GeographicMetadataDataType }
     *     
     */
    public void setGeographicMetadata(GeographicMetadataDataType value) {
        this.geographicMetadata = value;
    }

    /**
     * Gets the value of the where property.
     * 
     * @return
     *     possible object is
     *     {@link WhereType }
     *     
     */
    @OneToOne(targetEntity = WhereType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "WHEREID")
    public WhereType getWhere() {
        return where;
    }

    /**
     * Sets the value of the where property.
     * 
     * @param value
     *     allowed object is
     *     {@link WhereType }
     *     
     */
    public void setWhere(WhereType value) {
        this.where = value;
    }

    /**
     * Gets the value of the locationCommentsText property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "LOCCOMMENTSTXT", length = 2000)
    public String getLocationCommentsText() {
        return locationCommentsText;
    }

    /**
     * Sets the value of the locationCommentsText property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLocationCommentsText(String value) {
        this.locationCommentsText = value;
    }

    /**
     * Gets the value of the id property.
     * 
     * @return
     *     possible object is
     *     {@link Long }
     *     
     */
    @Id
    @Column(name = "ID")
    @GeneratedValue(generator = "ColSequence", strategy = GenerationType.AUTO)
    @SequenceGenerator(name = "ColSequence", sequenceName = "COLUMN_ID_SEQUENCE", allocationSize = 1)
    public Long getId() {
        return id;
    }

    /**
     * Sets the value of the id property.
     * 
     * @param value
     *     allowed object is
     *     {@link Long }
     *     
     */
    public void setId(Long value) {
        this.id = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof GeographicInformationDataType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final GeographicInformationDataType that = ((GeographicInformationDataType) object);
        {
            String lhsTransactionCode;
            lhsTransactionCode = this.getTransactionCode();
            String rhsTransactionCode;
            rhsTransactionCode = that.getTransactionCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "transactionCode", lhsTransactionCode), LocatorUtils.property(thatLocator, "transactionCode", rhsTransactionCode), lhsTransactionCode, rhsTransactionCode)) {
                return false;
            }
        }
        {
            String lhsGeographicInformationOwner;
            lhsGeographicInformationOwner = this.getGeographicInformationOwner();
            String rhsGeographicInformationOwner;
            rhsGeographicInformationOwner = that.getGeographicInformationOwner();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "geographicInformationOwner", lhsGeographicInformationOwner), LocatorUtils.property(thatLocator, "geographicInformationOwner", rhsGeographicInformationOwner), lhsGeographicInformationOwner, rhsGeographicInformationOwner)) {
                return false;
            }
        }
        {
            BigInteger lhsGeographicInformationSequenceNumber;
            lhsGeographicInformationSequenceNumber = this.getGeographicInformationSequenceNumber();
            BigInteger rhsGeographicInformationSequenceNumber;
            rhsGeographicInformationSequenceNumber = that.getGeographicInformationSequenceNumber();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "geographicInformationSequenceNumber", lhsGeographicInformationSequenceNumber), LocatorUtils.property(thatLocator, "geographicInformationSequenceNumber", rhsGeographicInformationSequenceNumber), lhsGeographicInformationSequenceNumber, rhsGeographicInformationSequenceNumber)) {
                return false;
            }
        }
        {
            BigInteger lhsPermitUnitSequenceNumber;
            lhsPermitUnitSequenceNumber = this.getPermitUnitSequenceNumber();
            BigInteger rhsPermitUnitSequenceNumber;
            rhsPermitUnitSequenceNumber = that.getPermitUnitSequenceNumber();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "permitUnitSequenceNumber", lhsPermitUnitSequenceNumber), LocatorUtils.property(thatLocator, "permitUnitSequenceNumber", rhsPermitUnitSequenceNumber), lhsPermitUnitSequenceNumber, rhsPermitUnitSequenceNumber)) {
                return false;
            }
        }
        {
            BigInteger lhsAreaSequenceNumber;
            lhsAreaSequenceNumber = this.getAreaSequenceNumber();
            BigInteger rhsAreaSequenceNumber;
            rhsAreaSequenceNumber = that.getAreaSequenceNumber();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "areaSequenceNumber", lhsAreaSequenceNumber), LocatorUtils.property(thatLocator, "areaSequenceNumber", rhsAreaSequenceNumber), lhsAreaSequenceNumber, rhsAreaSequenceNumber)) {
                return false;
            }
        }
        {
            AreaAcreageDataType lhsAreaAcreage;
            lhsAreaAcreage = this.getAreaAcreage();
            AreaAcreageDataType rhsAreaAcreage;
            rhsAreaAcreage = that.getAreaAcreage();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "areaAcreage", lhsAreaAcreage), LocatorUtils.property(thatLocator, "areaAcreage", rhsAreaAcreage), lhsAreaAcreage, rhsAreaAcreage)) {
                return false;
            }
        }
        {
            GeographicMetadataDataType lhsGeographicMetadata;
            lhsGeographicMetadata = this.getGeographicMetadata();
            GeographicMetadataDataType rhsGeographicMetadata;
            rhsGeographicMetadata = that.getGeographicMetadata();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "geographicMetadata", lhsGeographicMetadata), LocatorUtils.property(thatLocator, "geographicMetadata", rhsGeographicMetadata), lhsGeographicMetadata, rhsGeographicMetadata)) {
                return false;
            }
        }
        {
            WhereType lhsWhere;
            lhsWhere = this.getWhere();
            WhereType rhsWhere;
            rhsWhere = that.getWhere();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "where", lhsWhere), LocatorUtils.property(thatLocator, "where", rhsWhere), lhsWhere, rhsWhere)) {
                return false;
            }
        }
        {
            String lhsLocationCommentsText;
            lhsLocationCommentsText = this.getLocationCommentsText();
            String rhsLocationCommentsText;
            rhsLocationCommentsText = that.getLocationCommentsText();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "locationCommentsText", lhsLocationCommentsText), LocatorUtils.property(thatLocator, "locationCommentsText", rhsLocationCommentsText), lhsLocationCommentsText, rhsLocationCommentsText)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            String theTransactionCode;
            theTransactionCode = this.getTransactionCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "transactionCode", theTransactionCode), currentHashCode, theTransactionCode);
        }
        {
            String theGeographicInformationOwner;
            theGeographicInformationOwner = this.getGeographicInformationOwner();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "geographicInformationOwner", theGeographicInformationOwner), currentHashCode, theGeographicInformationOwner);
        }
        {
            BigInteger theGeographicInformationSequenceNumber;
            theGeographicInformationSequenceNumber = this.getGeographicInformationSequenceNumber();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "geographicInformationSequenceNumber", theGeographicInformationSequenceNumber), currentHashCode, theGeographicInformationSequenceNumber);
        }
        {
            BigInteger thePermitUnitSequenceNumber;
            thePermitUnitSequenceNumber = this.getPermitUnitSequenceNumber();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "permitUnitSequenceNumber", thePermitUnitSequenceNumber), currentHashCode, thePermitUnitSequenceNumber);
        }
        {
            BigInteger theAreaSequenceNumber;
            theAreaSequenceNumber = this.getAreaSequenceNumber();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "areaSequenceNumber", theAreaSequenceNumber), currentHashCode, theAreaSequenceNumber);
        }
        {
            AreaAcreageDataType theAreaAcreage;
            theAreaAcreage = this.getAreaAcreage();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "areaAcreage", theAreaAcreage), currentHashCode, theAreaAcreage);
        }
        {
            GeographicMetadataDataType theGeographicMetadata;
            theGeographicMetadata = this.getGeographicMetadata();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "geographicMetadata", theGeographicMetadata), currentHashCode, theGeographicMetadata);
        }
        {
            WhereType theWhere;
            theWhere = this.getWhere();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "where", theWhere), currentHashCode, theWhere);
        }
        {
            String theLocationCommentsText;
            theLocationCommentsText = this.getLocationCommentsText();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "locationCommentsText", theLocationCommentsText), currentHashCode, theLocationCommentsText);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
