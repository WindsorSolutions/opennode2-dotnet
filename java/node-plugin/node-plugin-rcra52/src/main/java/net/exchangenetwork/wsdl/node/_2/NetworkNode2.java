
package net.exchangenetwork.wsdl.node._2;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * Network Node 2.0 definitions for the Environmental Information Exchange Network
 * 
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "NetworkNode2", targetNamespace = "http://www.exchangenetwork.net/wsdl/node/2", wsdlLocation = "https://testngn.epacdxnode.net/ngn-enws20/services/NetworkNode2ServiceConditionalMTOM?wsdl")
public class NetworkNode2
    extends Service
{

    private final static URL NETWORKNODE2_WSDL_LOCATION;
    private final static WebServiceException NETWORKNODE2_EXCEPTION;
    private final static QName NETWORKNODE2_QNAME = new QName("http://www.exchangenetwork.net/wsdl/node/2", "NetworkNode2");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("https://testngn.epacdxnode.net/ngn-enws20/services/NetworkNode2ServiceConditionalMTOM?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        NETWORKNODE2_WSDL_LOCATION = url;
        NETWORKNODE2_EXCEPTION = e;
    }

    public NetworkNode2() {
        super(__getWsdlLocation(), NETWORKNODE2_QNAME);
    }

    public NetworkNode2(WebServiceFeature... features) {
        super(__getWsdlLocation(), NETWORKNODE2_QNAME, features);
    }

    public NetworkNode2(URL wsdlLocation) {
        super(wsdlLocation, NETWORKNODE2_QNAME);
    }

    public NetworkNode2(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, NETWORKNODE2_QNAME, features);
    }

    public NetworkNode2(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public NetworkNode2(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns NetworkNodePortType2
     */
    @WebEndpoint(name = "NetworkNodePort2")
    public NetworkNodePortType2 getNetworkNodePort2() {
        return super.getPort(new QName("http://www.exchangenetwork.net/wsdl/node/2", "NetworkNodePort2"), NetworkNodePortType2.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns NetworkNodePortType2
     */
    @WebEndpoint(name = "NetworkNodePort2")
    public NetworkNodePortType2 getNetworkNodePort2(WebServiceFeature... features) {
        return super.getPort(new QName("http://www.exchangenetwork.net/wsdl/node/2", "NetworkNodePort2"), NetworkNodePortType2.class, features);
    }

    private static URL __getWsdlLocation() {
        if (NETWORKNODE2_EXCEPTION!= null) {
            throw NETWORKNODE2_EXCEPTION;
        }
        return NETWORKNODE2_WSDL_LOCATION;
    }

}
