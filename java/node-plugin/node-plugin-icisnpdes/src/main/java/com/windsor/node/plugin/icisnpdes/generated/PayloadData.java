//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.02.03 at 01:41:32 PM EST 
//


package com.windsor.node.plugin.icisnpdes.generated;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for PayloadData complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="PayloadData">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;choice>
 *         &lt;element name="BasicPermitData" type="{http://www.exchangenetwork.net/schema/icis/5}BasicPermitData" maxOccurs="unbounded"/>
 *         &lt;element name="BiosolidsPermitData" type="{http://www.exchangenetwork.net/schema/icis/5}BiosolidsPermitData" maxOccurs="unbounded"/>
 *         &lt;element name="BiosolidsProgramReportData" type="{http://www.exchangenetwork.net/schema/icis/5}BiosolidsProgramReportData" maxOccurs="unbounded"/>
 *         &lt;element name="CAFOAnnualReportData" type="{http://www.exchangenetwork.net/schema/icis/5}CAFOAnnualReportData" maxOccurs="unbounded"/>
 *         &lt;element name="CAFOPermitData" type="{http://www.exchangenetwork.net/schema/icis/5}CAFOPermitData" maxOccurs="unbounded"/>
 *         &lt;element name="ComplianceMonitoringData" type="{http://www.exchangenetwork.net/schema/icis/5}ComplianceMonitoringData" maxOccurs="unbounded"/>
 *         &lt;element name="ComplianceMonitoringLinkageData" type="{http://www.exchangenetwork.net/schema/icis/5}ComplianceMonitoringLinkageData" maxOccurs="unbounded"/>
 *         &lt;element name="ComplianceScheduleData" type="{http://www.exchangenetwork.net/schema/icis/5}ComplianceScheduleData" maxOccurs="unbounded"/>
 *         &lt;element name="CSOEventReportData" type="{http://www.exchangenetwork.net/schema/icis/5}CSOEventReportData" maxOccurs="unbounded"/>
 *         &lt;element name="CSOPermitData" type="{http://www.exchangenetwork.net/schema/icis/5}CSOPermitData" maxOccurs="unbounded"/>
 *         &lt;element name="DischargeMonitoringReportData" type="{http://www.exchangenetwork.net/schema/icis/5}DischargeMonitoringReportData" maxOccurs="unbounded"/>
 *         &lt;element name="DMRProgramReportLinkageData" type="{http://www.exchangenetwork.net/schema/icis/5}DMRProgramReportLinkageData" maxOccurs="unbounded"/>
 *         &lt;element name="DMRViolationData" type="{http://www.exchangenetwork.net/schema/icis/5}DMRViolationData" maxOccurs="unbounded"/>
 *         &lt;element name="EffluentTradePartnerData" type="{http://www.exchangenetwork.net/schema/icis/5}EffluentTradePartnerData" maxOccurs="unbounded"/>
 *         &lt;element name="EnforcementActionMilestoneData" type="{http://www.exchangenetwork.net/schema/icis/5}EnforcementActionMilestoneData" maxOccurs="unbounded"/>
 *         &lt;element name="EnforcementActionViolationLinkageData" type="{http://www.exchangenetwork.net/schema/icis/5}EnforcementActionViolationLinkageData" maxOccurs="unbounded"/>
 *         &lt;element name="FederalComplianceMonitoringData" type="{http://www.exchangenetwork.net/schema/icis/5}FederalComplianceMonitoringData" maxOccurs="unbounded"/>
 *         &lt;element name="FinalOrderViolationLinkageData" type="{http://www.exchangenetwork.net/schema/icis/5}FinalOrderViolationLinkageData" maxOccurs="unbounded"/>
 *         &lt;element name="FormalEnforcementActionData" type="{http://www.exchangenetwork.net/schema/icis/5}FormalEnforcementActionData" maxOccurs="unbounded"/>
 *         &lt;element name="GeneralPermitData" type="{http://www.exchangenetwork.net/schema/icis/5}GeneralPermitData" maxOccurs="unbounded"/>
 *         &lt;element name="HistoricalPermitScheduleEventsData" type="{http://www.exchangenetwork.net/schema/icis/5}HistoricalPermitScheduleEventsData" maxOccurs="unbounded"/>
 *         &lt;element name="InformalEnforcementActionData" type="{http://www.exchangenetwork.net/schema/icis/5}InformalEnforcementActionData" maxOccurs="unbounded"/>
 *         &lt;element name="LimitSetData" type="{http://www.exchangenetwork.net/schema/icis/5}LimitSetData" maxOccurs="unbounded"/>
 *         &lt;element name="LocalLimitsProgramReportData" type="{http://www.exchangenetwork.net/schema/icis/5}LocalLimitsProgramReportData" maxOccurs="unbounded"/>
 *         &lt;element name="MasterGeneralPermitData" type="{http://www.exchangenetwork.net/schema/icis/5}MasterGeneralPermitData" maxOccurs="unbounded"/>
 *         &lt;element name="NarrativeConditionScheduleData" type="{http://www.exchangenetwork.net/schema/icis/5}NarrativeConditionScheduleData" maxOccurs="unbounded"/>
 *         &lt;element name="ParameterLimitsData" type="{http://www.exchangenetwork.net/schema/icis/5}ParameterLimitsData" maxOccurs="unbounded"/>
 *         &lt;element name="PermitReissuanceData" type="{http://www.exchangenetwork.net/schema/icis/5}PermitReissuanceData" maxOccurs="unbounded"/>
 *         &lt;element name="PermittedFeatureData" type="{http://www.exchangenetwork.net/schema/icis/5}PermittedFeatureData" maxOccurs="unbounded"/>
 *         &lt;element name="PermitTerminationData" type="{http://www.exchangenetwork.net/schema/icis/5}PermitTerminationData" maxOccurs="unbounded"/>
 *         &lt;element name="PermitTrackingEventData" type="{http://www.exchangenetwork.net/schema/icis/5}PermitTrackingEventData" maxOccurs="unbounded"/>
 *         &lt;element name="POTWPermitData" type="{http://www.exchangenetwork.net/schema/icis/5}POTWPermitData" maxOccurs="unbounded"/>
 *         &lt;element name="PretreatmentPerformanceSummaryData" type="{http://www.exchangenetwork.net/schema/icis/5}PretreatmentPerformanceSummaryData" maxOccurs="unbounded"/>
 *         &lt;element name="PretreatmentPermitData" type="{http://www.exchangenetwork.net/schema/icis/5}PretreatmentPermitData" maxOccurs="unbounded"/>
 *         &lt;element name="ScheduleEventViolationData" type="{http://www.exchangenetwork.net/schema/icis/5}ScheduleEventViolationData" maxOccurs="unbounded"/>
 *         &lt;element name="SingleEventViolationData" type="{http://www.exchangenetwork.net/schema/icis/5}SingleEventViolationData" maxOccurs="unbounded"/>
 *         &lt;element name="SSOAnnualReportData" type="{http://www.exchangenetwork.net/schema/icis/5}SSOAnnualReportData" maxOccurs="unbounded"/>
 *         &lt;element name="SSOEventReportData" type="{http://www.exchangenetwork.net/schema/icis/5}SSOEventReportData" maxOccurs="unbounded"/>
 *         &lt;element name="SSOMonthlyEventReportData" type="{http://www.exchangenetwork.net/schema/icis/5}SSOMonthlyEventReportData" maxOccurs="unbounded"/>
 *         &lt;element name="SWConstructionPermitData" type="{http://www.exchangenetwork.net/schema/icis/5}SWConstructionPermitData" maxOccurs="unbounded"/>
 *         &lt;element name="SWEventReportData" type="{http://www.exchangenetwork.net/schema/icis/5}SWEventReportData" maxOccurs="unbounded"/>
 *         &lt;element name="SWIndustrialAnnualReportData" type="{http://www.exchangenetwork.net/schema/icis/5}SWIndustrialAnnualReportData" maxOccurs="unbounded"/>
 *         &lt;element name="SWIndustrialPermitData" type="{http://www.exchangenetwork.net/schema/icis/5}SWIndustrialPermitData" maxOccurs="unbounded"/>
 *         &lt;element name="SWMS4LargePermitData" type="{http://www.exchangenetwork.net/schema/icis/5}SWMS4LargePermitData" maxOccurs="unbounded"/>
 *         &lt;element name="SWMS4ProgramReportData" type="{http://www.exchangenetwork.net/schema/icis/5}SWMS4ProgramReportData" maxOccurs="unbounded"/>
 *         &lt;element name="SWMS4SmallPermitData" type="{http://www.exchangenetwork.net/schema/icis/5}SWMS4SmallPermitData" maxOccurs="unbounded"/>
 *         &lt;element name="UnpermittedFacilityData" type="{http://www.exchangenetwork.net/schema/icis/5}UnpermittedFacilityData" maxOccurs="unbounded"/>
 *       &lt;/choice>
 *       &lt;attribute name="Operation" use="required" type="{http://www.exchangenetwork.net/schema/icis/5}OperationType" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "PayloadData", propOrder = {
    "basicPermitData",
    "biosolidsPermitData",
    "biosolidsProgramReportData",
    "cafoAnnualReportData",
    "cafoPermitData",
    "complianceMonitoringData",
    "complianceMonitoringLinkageData",
    "complianceScheduleData",
    "csoEventReportData",
    "csoPermitData",
    "dischargeMonitoringReportData",
    "dmrProgramReportLinkageData",
    "dmrViolationData",
    "effluentTradePartnerData",
    "enforcementActionMilestoneData",
    "enforcementActionViolationLinkageData",
    "federalComplianceMonitoringData",
    "finalOrderViolationLinkageData",
    "formalEnforcementActionData",
    "generalPermitData",
    "historicalPermitScheduleEventsData",
    "informalEnforcementActionData",
    "limitSetData",
    "localLimitsProgramReportData",
    "masterGeneralPermitData",
    "narrativeConditionScheduleData",
    "parameterLimitsData",
    "permitReissuanceData",
    "permittedFeatureData",
    "permitTerminationData",
    "permitTrackingEventData",
    "potwPermitData",
    "pretreatmentPerformanceSummaryData",
    "pretreatmentPermitData",
    "scheduleEventViolationData",
    "singleEventViolationData",
    "ssoAnnualReportData",
    "ssoEventReportData",
    "ssoMonthlyEventReportData",
    "swConstructionPermitData",
    "swEventReportData",
    "swIndustrialAnnualReportData",
    "swIndustrialPermitData",
    "swms4LargePermitData",
    "swms4ProgramReportData",
    "swms4SmallPermitData",
    "unpermittedFacilityData"
})
public class PayloadData
    implements Serializable, Equals, HashCode
{

    private final static long serialVersionUID = 1L;
    @XmlElement(name = "BasicPermitData")
    protected List<BasicPermitData> basicPermitData;
    @XmlElement(name = "BiosolidsPermitData")
    protected List<BiosolidsPermitData> biosolidsPermitData;
    @XmlElement(name = "BiosolidsProgramReportData")
    protected List<BiosolidsProgramReportData> biosolidsProgramReportData;
    @XmlElement(name = "CAFOAnnualReportData")
    protected List<CAFOAnnualReportData> cafoAnnualReportData;
    @XmlElement(name = "CAFOPermitData")
    protected List<CAFOPermitData> cafoPermitData;
    @XmlElement(name = "ComplianceMonitoringData")
    protected List<ComplianceMonitoringData> complianceMonitoringData;
    @XmlElement(name = "ComplianceMonitoringLinkageData")
    protected List<ComplianceMonitoringLinkageData> complianceMonitoringLinkageData;
    @XmlElement(name = "ComplianceScheduleData")
    protected List<ComplianceScheduleData> complianceScheduleData;
    @XmlElement(name = "CSOEventReportData")
    protected List<CSOEventReportData> csoEventReportData;
    @XmlElement(name = "CSOPermitData")
    protected List<CSOPermitData> csoPermitData;
    @XmlElement(name = "DischargeMonitoringReportData")
    protected List<DischargeMonitoringReportData> dischargeMonitoringReportData;
    @XmlElement(name = "DMRProgramReportLinkageData")
    protected List<DMRProgramReportLinkageData> dmrProgramReportLinkageData;
    @XmlElement(name = "DMRViolationData")
    protected List<DMRViolationData> dmrViolationData;
    @XmlElement(name = "EffluentTradePartnerData")
    protected List<EffluentTradePartnerData> effluentTradePartnerData;
    @XmlElement(name = "EnforcementActionMilestoneData")
    protected List<EnforcementActionMilestoneData> enforcementActionMilestoneData;
    @XmlElement(name = "EnforcementActionViolationLinkageData")
    protected List<EnforcementActionViolationLinkageData> enforcementActionViolationLinkageData;
    @XmlElement(name = "FederalComplianceMonitoringData")
    protected List<FederalComplianceMonitoringData> federalComplianceMonitoringData;
    @XmlElement(name = "FinalOrderViolationLinkageData")
    protected List<FinalOrderViolationLinkageData> finalOrderViolationLinkageData;
    @XmlElement(name = "FormalEnforcementActionData")
    protected List<FormalEnforcementActionData> formalEnforcementActionData;
    @XmlElement(name = "GeneralPermitData")
    protected List<GeneralPermitData> generalPermitData;
    @XmlElement(name = "HistoricalPermitScheduleEventsData")
    protected List<HistoricalPermitScheduleEventsData> historicalPermitScheduleEventsData;
    @XmlElement(name = "InformalEnforcementActionData")
    protected List<InformalEnforcementActionData> informalEnforcementActionData;
    @XmlElement(name = "LimitSetData")
    protected List<LimitSetData> limitSetData;
    @XmlElement(name = "LocalLimitsProgramReportData")
    protected List<LocalLimitsProgramReportData> localLimitsProgramReportData;
    @XmlElement(name = "MasterGeneralPermitData")
    protected List<MasterGeneralPermitData> masterGeneralPermitData;
    @XmlElement(name = "NarrativeConditionScheduleData")
    protected List<NarrativeConditionScheduleData> narrativeConditionScheduleData;
    @XmlElement(name = "ParameterLimitsData")
    protected List<ParameterLimitsData> parameterLimitsData;
    @XmlElement(name = "PermitReissuanceData")
    protected List<PermitReissuanceData> permitReissuanceData;
    @XmlElement(name = "PermittedFeatureData")
    protected List<PermittedFeatureData> permittedFeatureData;
    @XmlElement(name = "PermitTerminationData")
    protected List<PermitTerminationData> permitTerminationData;
    @XmlElement(name = "PermitTrackingEventData")
    protected List<PermitTrackingEventData> permitTrackingEventData;
    @XmlElement(name = "POTWPermitData")
    protected List<POTWPermitData> potwPermitData;
    @XmlElement(name = "PretreatmentPerformanceSummaryData")
    protected List<PretreatmentPerformanceSummaryData> pretreatmentPerformanceSummaryData;
    @XmlElement(name = "PretreatmentPermitData")
    protected List<PretreatmentPermitData> pretreatmentPermitData;
    @XmlElement(name = "ScheduleEventViolationData")
    protected List<ScheduleEventViolationData> scheduleEventViolationData;
    @XmlElement(name = "SingleEventViolationData")
    protected List<SingleEventViolationData> singleEventViolationData;
    @XmlElement(name = "SSOAnnualReportData")
    protected List<SSOAnnualReportData> ssoAnnualReportData;
    @XmlElement(name = "SSOEventReportData")
    protected List<SSOEventReportData> ssoEventReportData;
    @XmlElement(name = "SSOMonthlyEventReportData")
    protected List<SSOMonthlyEventReportData> ssoMonthlyEventReportData;
    @XmlElement(name = "SWConstructionPermitData")
    protected List<SWConstructionPermitData> swConstructionPermitData;
    @XmlElement(name = "SWEventReportData")
    protected List<SWEventReportData> swEventReportData;
    @XmlElement(name = "SWIndustrialAnnualReportData")
    protected List<SWIndustrialAnnualReportData> swIndustrialAnnualReportData;
    @XmlElement(name = "SWIndustrialPermitData")
    protected List<SWIndustrialPermitData> swIndustrialPermitData;
    @XmlElement(name = "SWMS4LargePermitData")
    protected List<SWMS4LargePermitData> swms4LargePermitData;
    @XmlElement(name = "SWMS4ProgramReportData")
    protected List<SWMS4ProgramReportData> swms4ProgramReportData;
    @XmlElement(name = "SWMS4SmallPermitData")
    protected List<SWMS4SmallPermitData> swms4SmallPermitData;
    @XmlElement(name = "UnpermittedFacilityData")
    protected List<UnpermittedFacilityData> unpermittedFacilityData;
    @XmlAttribute(name = "Operation", required = true)
    protected OperationType operation;

    /**
     * Gets the value of the basicPermitData property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the basicPermitData property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getBasicPermitData().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link BasicPermitData }
     * 
     * 
     */
    public List<BasicPermitData> getBasicPermitData() {
        if (basicPermitData == null) {
            basicPermitData = new ArrayList<BasicPermitData>();
        }
        return this.basicPermitData;
    }

    /**
     * 
     * 
     */
    public void setBasicPermitData(List<BasicPermitData> basicPermitData) {
        this.basicPermitData = basicPermitData;
    }

    public boolean isSetBasicPermitData() {
        return ((this.basicPermitData!= null)&&(!this.basicPermitData.isEmpty()));
    }

    public void unsetBasicPermitData() {
        this.basicPermitData = null;
    }

    /**
     * Gets the value of the biosolidsPermitData property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the biosolidsPermitData property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getBiosolidsPermitData().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link BiosolidsPermitData }
     * 
     * 
     */
    public List<BiosolidsPermitData> getBiosolidsPermitData() {
        if (biosolidsPermitData == null) {
            biosolidsPermitData = new ArrayList<BiosolidsPermitData>();
        }
        return this.biosolidsPermitData;
    }

    /**
     * 
     * 
     */
    public void setBiosolidsPermitData(List<BiosolidsPermitData> biosolidsPermitData) {
        this.biosolidsPermitData = biosolidsPermitData;
    }

    public boolean isSetBiosolidsPermitData() {
        return ((this.biosolidsPermitData!= null)&&(!this.biosolidsPermitData.isEmpty()));
    }

    public void unsetBiosolidsPermitData() {
        this.biosolidsPermitData = null;
    }

    /**
     * Gets the value of the biosolidsProgramReportData property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the biosolidsProgramReportData property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getBiosolidsProgramReportData().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link BiosolidsProgramReportData }
     * 
     * 
     */
    public List<BiosolidsProgramReportData> getBiosolidsProgramReportData() {
        if (biosolidsProgramReportData == null) {
            biosolidsProgramReportData = new ArrayList<BiosolidsProgramReportData>();
        }
        return this.biosolidsProgramReportData;
    }

    /**
     * 
     * 
     */
    public void setBiosolidsProgramReportData(List<BiosolidsProgramReportData> biosolidsProgramReportData) {
        this.biosolidsProgramReportData = biosolidsProgramReportData;
    }

    public boolean isSetBiosolidsProgramReportData() {
        return ((this.biosolidsProgramReportData!= null)&&(!this.biosolidsProgramReportData.isEmpty()));
    }

    public void unsetBiosolidsProgramReportData() {
        this.biosolidsProgramReportData = null;
    }

    /**
     * Gets the value of the cafoAnnualReportData property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the cafoAnnualReportData property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getCAFOAnnualReportData().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link CAFOAnnualReportData }
     * 
     * 
     */
    public List<CAFOAnnualReportData> getCAFOAnnualReportData() {
        if (cafoAnnualReportData == null) {
            cafoAnnualReportData = new ArrayList<CAFOAnnualReportData>();
        }
        return this.cafoAnnualReportData;
    }

    /**
     * 
     * 
     */
    public void setCAFOAnnualReportData(List<CAFOAnnualReportData> cafoAnnualReportData) {
        this.cafoAnnualReportData = cafoAnnualReportData;
    }

    public boolean isSetCAFOAnnualReportData() {
        return ((this.cafoAnnualReportData!= null)&&(!this.cafoAnnualReportData.isEmpty()));
    }

    public void unsetCAFOAnnualReportData() {
        this.cafoAnnualReportData = null;
    }

    /**
     * Gets the value of the cafoPermitData property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the cafoPermitData property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getCAFOPermitData().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link CAFOPermitData }
     * 
     * 
     */
    public List<CAFOPermitData> getCAFOPermitData() {
        if (cafoPermitData == null) {
            cafoPermitData = new ArrayList<CAFOPermitData>();
        }
        return this.cafoPermitData;
    }

    /**
     * 
     * 
     */
    public void setCAFOPermitData(List<CAFOPermitData> cafoPermitData) {
        this.cafoPermitData = cafoPermitData;
    }

    public boolean isSetCAFOPermitData() {
        return ((this.cafoPermitData!= null)&&(!this.cafoPermitData.isEmpty()));
    }

    public void unsetCAFOPermitData() {
        this.cafoPermitData = null;
    }

    /**
     * Gets the value of the complianceMonitoringData property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the complianceMonitoringData property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getComplianceMonitoringData().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ComplianceMonitoringData }
     * 
     * 
     */
    public List<ComplianceMonitoringData> getComplianceMonitoringData() {
        if (complianceMonitoringData == null) {
            complianceMonitoringData = new ArrayList<ComplianceMonitoringData>();
        }
        return this.complianceMonitoringData;
    }

    /**
     * 
     * 
     */
    public void setComplianceMonitoringData(List<ComplianceMonitoringData> complianceMonitoringData) {
        this.complianceMonitoringData = complianceMonitoringData;
    }

    public boolean isSetComplianceMonitoringData() {
        return ((this.complianceMonitoringData!= null)&&(!this.complianceMonitoringData.isEmpty()));
    }

    public void unsetComplianceMonitoringData() {
        this.complianceMonitoringData = null;
    }

    /**
     * Gets the value of the complianceMonitoringLinkageData property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the complianceMonitoringLinkageData property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getComplianceMonitoringLinkageData().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ComplianceMonitoringLinkageData }
     * 
     * 
     */
    public List<ComplianceMonitoringLinkageData> getComplianceMonitoringLinkageData() {
        if (complianceMonitoringLinkageData == null) {
            complianceMonitoringLinkageData = new ArrayList<ComplianceMonitoringLinkageData>();
        }
        return this.complianceMonitoringLinkageData;
    }

    /**
     * 
     * 
     */
    public void setComplianceMonitoringLinkageData(List<ComplianceMonitoringLinkageData> complianceMonitoringLinkageData) {
        this.complianceMonitoringLinkageData = complianceMonitoringLinkageData;
    }

    public boolean isSetComplianceMonitoringLinkageData() {
        return ((this.complianceMonitoringLinkageData!= null)&&(!this.complianceMonitoringLinkageData.isEmpty()));
    }

    public void unsetComplianceMonitoringLinkageData() {
        this.complianceMonitoringLinkageData = null;
    }

    /**
     * Gets the value of the complianceScheduleData property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the complianceScheduleData property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getComplianceScheduleData().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ComplianceScheduleData }
     * 
     * 
     */
    public List<ComplianceScheduleData> getComplianceScheduleData() {
        if (complianceScheduleData == null) {
            complianceScheduleData = new ArrayList<ComplianceScheduleData>();
        }
        return this.complianceScheduleData;
    }

    /**
     * 
     * 
     */
    public void setComplianceScheduleData(List<ComplianceScheduleData> complianceScheduleData) {
        this.complianceScheduleData = complianceScheduleData;
    }

    public boolean isSetComplianceScheduleData() {
        return ((this.complianceScheduleData!= null)&&(!this.complianceScheduleData.isEmpty()));
    }

    public void unsetComplianceScheduleData() {
        this.complianceScheduleData = null;
    }

    /**
     * Gets the value of the csoEventReportData property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the csoEventReportData property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getCSOEventReportData().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link CSOEventReportData }
     * 
     * 
     */
    public List<CSOEventReportData> getCSOEventReportData() {
        if (csoEventReportData == null) {
            csoEventReportData = new ArrayList<CSOEventReportData>();
        }
        return this.csoEventReportData;
    }

    /**
     * 
     * 
     */
    public void setCSOEventReportData(List<CSOEventReportData> csoEventReportData) {
        this.csoEventReportData = csoEventReportData;
    }

    public boolean isSetCSOEventReportData() {
        return ((this.csoEventReportData!= null)&&(!this.csoEventReportData.isEmpty()));
    }

    public void unsetCSOEventReportData() {
        this.csoEventReportData = null;
    }

    /**
     * Gets the value of the csoPermitData property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the csoPermitData property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getCSOPermitData().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link CSOPermitData }
     * 
     * 
     */
    public List<CSOPermitData> getCSOPermitData() {
        if (csoPermitData == null) {
            csoPermitData = new ArrayList<CSOPermitData>();
        }
        return this.csoPermitData;
    }

    /**
     * 
     * 
     */
    public void setCSOPermitData(List<CSOPermitData> csoPermitData) {
        this.csoPermitData = csoPermitData;
    }

    public boolean isSetCSOPermitData() {
        return ((this.csoPermitData!= null)&&(!this.csoPermitData.isEmpty()));
    }

    public void unsetCSOPermitData() {
        this.csoPermitData = null;
    }

    /**
     * Gets the value of the dischargeMonitoringReportData property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the dischargeMonitoringReportData property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getDischargeMonitoringReportData().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link DischargeMonitoringReportData }
     * 
     * 
     */
    public List<DischargeMonitoringReportData> getDischargeMonitoringReportData() {
        if (dischargeMonitoringReportData == null) {
            dischargeMonitoringReportData = new ArrayList<DischargeMonitoringReportData>();
        }
        return this.dischargeMonitoringReportData;
    }

    /**
     * 
     * 
     */
    public void setDischargeMonitoringReportData(List<DischargeMonitoringReportData> dischargeMonitoringReportData) {
        this.dischargeMonitoringReportData = dischargeMonitoringReportData;
    }

    public boolean isSetDischargeMonitoringReportData() {
        return ((this.dischargeMonitoringReportData!= null)&&(!this.dischargeMonitoringReportData.isEmpty()));
    }

    public void unsetDischargeMonitoringReportData() {
        this.dischargeMonitoringReportData = null;
    }

    /**
     * Gets the value of the dmrProgramReportLinkageData property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the dmrProgramReportLinkageData property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getDMRProgramReportLinkageData().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link DMRProgramReportLinkageData }
     * 
     * 
     */
    public List<DMRProgramReportLinkageData> getDMRProgramReportLinkageData() {
        if (dmrProgramReportLinkageData == null) {
            dmrProgramReportLinkageData = new ArrayList<DMRProgramReportLinkageData>();
        }
        return this.dmrProgramReportLinkageData;
    }

    /**
     * 
     * 
     */
    public void setDMRProgramReportLinkageData(List<DMRProgramReportLinkageData> dmrProgramReportLinkageData) {
        this.dmrProgramReportLinkageData = dmrProgramReportLinkageData;
    }

    public boolean isSetDMRProgramReportLinkageData() {
        return ((this.dmrProgramReportLinkageData!= null)&&(!this.dmrProgramReportLinkageData.isEmpty()));
    }

    public void unsetDMRProgramReportLinkageData() {
        this.dmrProgramReportLinkageData = null;
    }

    /**
     * Gets the value of the dmrViolationData property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the dmrViolationData property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getDMRViolationData().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link DMRViolationData }
     * 
     * 
     */
    public List<DMRViolationData> getDMRViolationData() {
        if (dmrViolationData == null) {
            dmrViolationData = new ArrayList<DMRViolationData>();
        }
        return this.dmrViolationData;
    }

    /**
     * 
     * 
     */
    public void setDMRViolationData(List<DMRViolationData> dmrViolationData) {
        this.dmrViolationData = dmrViolationData;
    }

    public boolean isSetDMRViolationData() {
        return ((this.dmrViolationData!= null)&&(!this.dmrViolationData.isEmpty()));
    }

    public void unsetDMRViolationData() {
        this.dmrViolationData = null;
    }

    /**
     * Gets the value of the effluentTradePartnerData property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the effluentTradePartnerData property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getEffluentTradePartnerData().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link EffluentTradePartnerData }
     * 
     * 
     */
    public List<EffluentTradePartnerData> getEffluentTradePartnerData() {
        if (effluentTradePartnerData == null) {
            effluentTradePartnerData = new ArrayList<EffluentTradePartnerData>();
        }
        return this.effluentTradePartnerData;
    }

    /**
     * 
     * 
     */
    public void setEffluentTradePartnerData(List<EffluentTradePartnerData> effluentTradePartnerData) {
        this.effluentTradePartnerData = effluentTradePartnerData;
    }

    public boolean isSetEffluentTradePartnerData() {
        return ((this.effluentTradePartnerData!= null)&&(!this.effluentTradePartnerData.isEmpty()));
    }

    public void unsetEffluentTradePartnerData() {
        this.effluentTradePartnerData = null;
    }

    /**
     * Gets the value of the enforcementActionMilestoneData property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the enforcementActionMilestoneData property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getEnforcementActionMilestoneData().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link EnforcementActionMilestoneData }
     * 
     * 
     */
    public List<EnforcementActionMilestoneData> getEnforcementActionMilestoneData() {
        if (enforcementActionMilestoneData == null) {
            enforcementActionMilestoneData = new ArrayList<EnforcementActionMilestoneData>();
        }
        return this.enforcementActionMilestoneData;
    }

    /**
     * 
     * 
     */
    public void setEnforcementActionMilestoneData(List<EnforcementActionMilestoneData> enforcementActionMilestoneData) {
        this.enforcementActionMilestoneData = enforcementActionMilestoneData;
    }

    public boolean isSetEnforcementActionMilestoneData() {
        return ((this.enforcementActionMilestoneData!= null)&&(!this.enforcementActionMilestoneData.isEmpty()));
    }

    public void unsetEnforcementActionMilestoneData() {
        this.enforcementActionMilestoneData = null;
    }

    /**
     * Gets the value of the enforcementActionViolationLinkageData property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the enforcementActionViolationLinkageData property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getEnforcementActionViolationLinkageData().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link EnforcementActionViolationLinkageData }
     * 
     * 
     */
    public List<EnforcementActionViolationLinkageData> getEnforcementActionViolationLinkageData() {
        if (enforcementActionViolationLinkageData == null) {
            enforcementActionViolationLinkageData = new ArrayList<EnforcementActionViolationLinkageData>();
        }
        return this.enforcementActionViolationLinkageData;
    }

    /**
     * 
     * 
     */
    public void setEnforcementActionViolationLinkageData(List<EnforcementActionViolationLinkageData> enforcementActionViolationLinkageData) {
        this.enforcementActionViolationLinkageData = enforcementActionViolationLinkageData;
    }

    public boolean isSetEnforcementActionViolationLinkageData() {
        return ((this.enforcementActionViolationLinkageData!= null)&&(!this.enforcementActionViolationLinkageData.isEmpty()));
    }

    public void unsetEnforcementActionViolationLinkageData() {
        this.enforcementActionViolationLinkageData = null;
    }

    /**
     * Gets the value of the federalComplianceMonitoringData property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the federalComplianceMonitoringData property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getFederalComplianceMonitoringData().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link FederalComplianceMonitoringData }
     * 
     * 
     */
    public List<FederalComplianceMonitoringData> getFederalComplianceMonitoringData() {
        if (federalComplianceMonitoringData == null) {
            federalComplianceMonitoringData = new ArrayList<FederalComplianceMonitoringData>();
        }
        return this.federalComplianceMonitoringData;
    }

    /**
     * 
     * 
     */
    public void setFederalComplianceMonitoringData(List<FederalComplianceMonitoringData> federalComplianceMonitoringData) {
        this.federalComplianceMonitoringData = federalComplianceMonitoringData;
    }

    public boolean isSetFederalComplianceMonitoringData() {
        return ((this.federalComplianceMonitoringData!= null)&&(!this.federalComplianceMonitoringData.isEmpty()));
    }

    public void unsetFederalComplianceMonitoringData() {
        this.federalComplianceMonitoringData = null;
    }

    /**
     * Gets the value of the finalOrderViolationLinkageData property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the finalOrderViolationLinkageData property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getFinalOrderViolationLinkageData().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link FinalOrderViolationLinkageData }
     * 
     * 
     */
    public List<FinalOrderViolationLinkageData> getFinalOrderViolationLinkageData() {
        if (finalOrderViolationLinkageData == null) {
            finalOrderViolationLinkageData = new ArrayList<FinalOrderViolationLinkageData>();
        }
        return this.finalOrderViolationLinkageData;
    }

    /**
     * 
     * 
     */
    public void setFinalOrderViolationLinkageData(List<FinalOrderViolationLinkageData> finalOrderViolationLinkageData) {
        this.finalOrderViolationLinkageData = finalOrderViolationLinkageData;
    }

    public boolean isSetFinalOrderViolationLinkageData() {
        return ((this.finalOrderViolationLinkageData!= null)&&(!this.finalOrderViolationLinkageData.isEmpty()));
    }

    public void unsetFinalOrderViolationLinkageData() {
        this.finalOrderViolationLinkageData = null;
    }

    /**
     * Gets the value of the formalEnforcementActionData property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the formalEnforcementActionData property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getFormalEnforcementActionData().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link FormalEnforcementActionData }
     * 
     * 
     */
    public List<FormalEnforcementActionData> getFormalEnforcementActionData() {
        if (formalEnforcementActionData == null) {
            formalEnforcementActionData = new ArrayList<FormalEnforcementActionData>();
        }
        return this.formalEnforcementActionData;
    }

    /**
     * 
     * 
     */
    public void setFormalEnforcementActionData(List<FormalEnforcementActionData> formalEnforcementActionData) {
        this.formalEnforcementActionData = formalEnforcementActionData;
    }

    public boolean isSetFormalEnforcementActionData() {
        return ((this.formalEnforcementActionData!= null)&&(!this.formalEnforcementActionData.isEmpty()));
    }

    public void unsetFormalEnforcementActionData() {
        this.formalEnforcementActionData = null;
    }

    /**
     * Gets the value of the generalPermitData property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the generalPermitData property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getGeneralPermitData().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link GeneralPermitData }
     * 
     * 
     */
    public List<GeneralPermitData> getGeneralPermitData() {
        if (generalPermitData == null) {
            generalPermitData = new ArrayList<GeneralPermitData>();
        }
        return this.generalPermitData;
    }

    /**
     * 
     * 
     */
    public void setGeneralPermitData(List<GeneralPermitData> generalPermitData) {
        this.generalPermitData = generalPermitData;
    }

    public boolean isSetGeneralPermitData() {
        return ((this.generalPermitData!= null)&&(!this.generalPermitData.isEmpty()));
    }

    public void unsetGeneralPermitData() {
        this.generalPermitData = null;
    }

    /**
     * Gets the value of the historicalPermitScheduleEventsData property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the historicalPermitScheduleEventsData property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getHistoricalPermitScheduleEventsData().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link HistoricalPermitScheduleEventsData }
     * 
     * 
     */
    public List<HistoricalPermitScheduleEventsData> getHistoricalPermitScheduleEventsData() {
        if (historicalPermitScheduleEventsData == null) {
            historicalPermitScheduleEventsData = new ArrayList<HistoricalPermitScheduleEventsData>();
        }
        return this.historicalPermitScheduleEventsData;
    }

    /**
     * 
     * 
     */
    public void setHistoricalPermitScheduleEventsData(List<HistoricalPermitScheduleEventsData> historicalPermitScheduleEventsData) {
        this.historicalPermitScheduleEventsData = historicalPermitScheduleEventsData;
    }

    public boolean isSetHistoricalPermitScheduleEventsData() {
        return ((this.historicalPermitScheduleEventsData!= null)&&(!this.historicalPermitScheduleEventsData.isEmpty()));
    }

    public void unsetHistoricalPermitScheduleEventsData() {
        this.historicalPermitScheduleEventsData = null;
    }

    /**
     * Gets the value of the informalEnforcementActionData property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the informalEnforcementActionData property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getInformalEnforcementActionData().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link InformalEnforcementActionData }
     * 
     * 
     */
    public List<InformalEnforcementActionData> getInformalEnforcementActionData() {
        if (informalEnforcementActionData == null) {
            informalEnforcementActionData = new ArrayList<InformalEnforcementActionData>();
        }
        return this.informalEnforcementActionData;
    }

    /**
     * 
     * 
     */
    public void setInformalEnforcementActionData(List<InformalEnforcementActionData> informalEnforcementActionData) {
        this.informalEnforcementActionData = informalEnforcementActionData;
    }

    public boolean isSetInformalEnforcementActionData() {
        return ((this.informalEnforcementActionData!= null)&&(!this.informalEnforcementActionData.isEmpty()));
    }

    public void unsetInformalEnforcementActionData() {
        this.informalEnforcementActionData = null;
    }

    /**
     * Gets the value of the limitSetData property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the limitSetData property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getLimitSetData().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link LimitSetData }
     * 
     * 
     */
    public List<LimitSetData> getLimitSetData() {
        if (limitSetData == null) {
            limitSetData = new ArrayList<LimitSetData>();
        }
        return this.limitSetData;
    }

    /**
     * 
     * 
     */
    public void setLimitSetData(List<LimitSetData> limitSetData) {
        this.limitSetData = limitSetData;
    }

    public boolean isSetLimitSetData() {
        return ((this.limitSetData!= null)&&(!this.limitSetData.isEmpty()));
    }

    public void unsetLimitSetData() {
        this.limitSetData = null;
    }

    /**
     * Gets the value of the localLimitsProgramReportData property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the localLimitsProgramReportData property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getLocalLimitsProgramReportData().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link LocalLimitsProgramReportData }
     * 
     * 
     */
    public List<LocalLimitsProgramReportData> getLocalLimitsProgramReportData() {
        if (localLimitsProgramReportData == null) {
            localLimitsProgramReportData = new ArrayList<LocalLimitsProgramReportData>();
        }
        return this.localLimitsProgramReportData;
    }

    /**
     * 
     * 
     */
    public void setLocalLimitsProgramReportData(List<LocalLimitsProgramReportData> localLimitsProgramReportData) {
        this.localLimitsProgramReportData = localLimitsProgramReportData;
    }

    public boolean isSetLocalLimitsProgramReportData() {
        return ((this.localLimitsProgramReportData!= null)&&(!this.localLimitsProgramReportData.isEmpty()));
    }

    public void unsetLocalLimitsProgramReportData() {
        this.localLimitsProgramReportData = null;
    }

    /**
     * Gets the value of the masterGeneralPermitData property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the masterGeneralPermitData property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getMasterGeneralPermitData().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link MasterGeneralPermitData }
     * 
     * 
     */
    public List<MasterGeneralPermitData> getMasterGeneralPermitData() {
        if (masterGeneralPermitData == null) {
            masterGeneralPermitData = new ArrayList<MasterGeneralPermitData>();
        }
        return this.masterGeneralPermitData;
    }

    /**
     * 
     * 
     */
    public void setMasterGeneralPermitData(List<MasterGeneralPermitData> masterGeneralPermitData) {
        this.masterGeneralPermitData = masterGeneralPermitData;
    }

    public boolean isSetMasterGeneralPermitData() {
        return ((this.masterGeneralPermitData!= null)&&(!this.masterGeneralPermitData.isEmpty()));
    }

    public void unsetMasterGeneralPermitData() {
        this.masterGeneralPermitData = null;
    }

    /**
     * Gets the value of the narrativeConditionScheduleData property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the narrativeConditionScheduleData property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getNarrativeConditionScheduleData().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link NarrativeConditionScheduleData }
     * 
     * 
     */
    public List<NarrativeConditionScheduleData> getNarrativeConditionScheduleData() {
        if (narrativeConditionScheduleData == null) {
            narrativeConditionScheduleData = new ArrayList<NarrativeConditionScheduleData>();
        }
        return this.narrativeConditionScheduleData;
    }

    /**
     * 
     * 
     */
    public void setNarrativeConditionScheduleData(List<NarrativeConditionScheduleData> narrativeConditionScheduleData) {
        this.narrativeConditionScheduleData = narrativeConditionScheduleData;
    }

    public boolean isSetNarrativeConditionScheduleData() {
        return ((this.narrativeConditionScheduleData!= null)&&(!this.narrativeConditionScheduleData.isEmpty()));
    }

    public void unsetNarrativeConditionScheduleData() {
        this.narrativeConditionScheduleData = null;
    }

    /**
     * Gets the value of the parameterLimitsData property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the parameterLimitsData property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getParameterLimitsData().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ParameterLimitsData }
     * 
     * 
     */
    public List<ParameterLimitsData> getParameterLimitsData() {
        if (parameterLimitsData == null) {
            parameterLimitsData = new ArrayList<ParameterLimitsData>();
        }
        return this.parameterLimitsData;
    }

    /**
     * 
     * 
     */
    public void setParameterLimitsData(List<ParameterLimitsData> parameterLimitsData) {
        this.parameterLimitsData = parameterLimitsData;
    }

    public boolean isSetParameterLimitsData() {
        return ((this.parameterLimitsData!= null)&&(!this.parameterLimitsData.isEmpty()));
    }

    public void unsetParameterLimitsData() {
        this.parameterLimitsData = null;
    }

    /**
     * Gets the value of the permitReissuanceData property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the permitReissuanceData property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getPermitReissuanceData().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link PermitReissuanceData }
     * 
     * 
     */
    public List<PermitReissuanceData> getPermitReissuanceData() {
        if (permitReissuanceData == null) {
            permitReissuanceData = new ArrayList<PermitReissuanceData>();
        }
        return this.permitReissuanceData;
    }

    /**
     * 
     * 
     */
    public void setPermitReissuanceData(List<PermitReissuanceData> permitReissuanceData) {
        this.permitReissuanceData = permitReissuanceData;
    }

    public boolean isSetPermitReissuanceData() {
        return ((this.permitReissuanceData!= null)&&(!this.permitReissuanceData.isEmpty()));
    }

    public void unsetPermitReissuanceData() {
        this.permitReissuanceData = null;
    }

    /**
     * Gets the value of the permittedFeatureData property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the permittedFeatureData property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getPermittedFeatureData().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link PermittedFeatureData }
     * 
     * 
     */
    public List<PermittedFeatureData> getPermittedFeatureData() {
        if (permittedFeatureData == null) {
            permittedFeatureData = new ArrayList<PermittedFeatureData>();
        }
        return this.permittedFeatureData;
    }

    /**
     * 
     * 
     */
    public void setPermittedFeatureData(List<PermittedFeatureData> permittedFeatureData) {
        this.permittedFeatureData = permittedFeatureData;
    }

    public boolean isSetPermittedFeatureData() {
        return ((this.permittedFeatureData!= null)&&(!this.permittedFeatureData.isEmpty()));
    }

    public void unsetPermittedFeatureData() {
        this.permittedFeatureData = null;
    }

    /**
     * Gets the value of the permitTerminationData property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the permitTerminationData property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getPermitTerminationData().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link PermitTerminationData }
     * 
     * 
     */
    public List<PermitTerminationData> getPermitTerminationData() {
        if (permitTerminationData == null) {
            permitTerminationData = new ArrayList<PermitTerminationData>();
        }
        return this.permitTerminationData;
    }

    /**
     * 
     * 
     */
    public void setPermitTerminationData(List<PermitTerminationData> permitTerminationData) {
        this.permitTerminationData = permitTerminationData;
    }

    public boolean isSetPermitTerminationData() {
        return ((this.permitTerminationData!= null)&&(!this.permitTerminationData.isEmpty()));
    }

    public void unsetPermitTerminationData() {
        this.permitTerminationData = null;
    }

    /**
     * Gets the value of the permitTrackingEventData property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the permitTrackingEventData property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getPermitTrackingEventData().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link PermitTrackingEventData }
     * 
     * 
     */
    public List<PermitTrackingEventData> getPermitTrackingEventData() {
        if (permitTrackingEventData == null) {
            permitTrackingEventData = new ArrayList<PermitTrackingEventData>();
        }
        return this.permitTrackingEventData;
    }

    /**
     * 
     * 
     */
    public void setPermitTrackingEventData(List<PermitTrackingEventData> permitTrackingEventData) {
        this.permitTrackingEventData = permitTrackingEventData;
    }

    public boolean isSetPermitTrackingEventData() {
        return ((this.permitTrackingEventData!= null)&&(!this.permitTrackingEventData.isEmpty()));
    }

    public void unsetPermitTrackingEventData() {
        this.permitTrackingEventData = null;
    }

    /**
     * Gets the value of the potwPermitData property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the potwPermitData property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getPOTWPermitData().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link POTWPermitData }
     * 
     * 
     */
    public List<POTWPermitData> getPOTWPermitData() {
        if (potwPermitData == null) {
            potwPermitData = new ArrayList<POTWPermitData>();
        }
        return this.potwPermitData;
    }

    /**
     * 
     * 
     */
    public void setPOTWPermitData(List<POTWPermitData> potwPermitData) {
        this.potwPermitData = potwPermitData;
    }

    public boolean isSetPOTWPermitData() {
        return ((this.potwPermitData!= null)&&(!this.potwPermitData.isEmpty()));
    }

    public void unsetPOTWPermitData() {
        this.potwPermitData = null;
    }

    /**
     * Gets the value of the pretreatmentPerformanceSummaryData property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the pretreatmentPerformanceSummaryData property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getPretreatmentPerformanceSummaryData().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link PretreatmentPerformanceSummaryData }
     * 
     * 
     */
    public List<PretreatmentPerformanceSummaryData> getPretreatmentPerformanceSummaryData() {
        if (pretreatmentPerformanceSummaryData == null) {
            pretreatmentPerformanceSummaryData = new ArrayList<PretreatmentPerformanceSummaryData>();
        }
        return this.pretreatmentPerformanceSummaryData;
    }

    /**
     * 
     * 
     */
    public void setPretreatmentPerformanceSummaryData(List<PretreatmentPerformanceSummaryData> pretreatmentPerformanceSummaryData) {
        this.pretreatmentPerformanceSummaryData = pretreatmentPerformanceSummaryData;
    }

    public boolean isSetPretreatmentPerformanceSummaryData() {
        return ((this.pretreatmentPerformanceSummaryData!= null)&&(!this.pretreatmentPerformanceSummaryData.isEmpty()));
    }

    public void unsetPretreatmentPerformanceSummaryData() {
        this.pretreatmentPerformanceSummaryData = null;
    }

    /**
     * Gets the value of the pretreatmentPermitData property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the pretreatmentPermitData property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getPretreatmentPermitData().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link PretreatmentPermitData }
     * 
     * 
     */
    public List<PretreatmentPermitData> getPretreatmentPermitData() {
        if (pretreatmentPermitData == null) {
            pretreatmentPermitData = new ArrayList<PretreatmentPermitData>();
        }
        return this.pretreatmentPermitData;
    }

    /**
     * 
     * 
     */
    public void setPretreatmentPermitData(List<PretreatmentPermitData> pretreatmentPermitData) {
        this.pretreatmentPermitData = pretreatmentPermitData;
    }

    public boolean isSetPretreatmentPermitData() {
        return ((this.pretreatmentPermitData!= null)&&(!this.pretreatmentPermitData.isEmpty()));
    }

    public void unsetPretreatmentPermitData() {
        this.pretreatmentPermitData = null;
    }

    /**
     * Gets the value of the scheduleEventViolationData property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the scheduleEventViolationData property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getScheduleEventViolationData().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ScheduleEventViolationData }
     * 
     * 
     */
    public List<ScheduleEventViolationData> getScheduleEventViolationData() {
        if (scheduleEventViolationData == null) {
            scheduleEventViolationData = new ArrayList<ScheduleEventViolationData>();
        }
        return this.scheduleEventViolationData;
    }

    /**
     * 
     * 
     */
    public void setScheduleEventViolationData(List<ScheduleEventViolationData> scheduleEventViolationData) {
        this.scheduleEventViolationData = scheduleEventViolationData;
    }

    public boolean isSetScheduleEventViolationData() {
        return ((this.scheduleEventViolationData!= null)&&(!this.scheduleEventViolationData.isEmpty()));
    }

    public void unsetScheduleEventViolationData() {
        this.scheduleEventViolationData = null;
    }

    /**
     * Gets the value of the singleEventViolationData property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the singleEventViolationData property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getSingleEventViolationData().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link SingleEventViolationData }
     * 
     * 
     */
    public List<SingleEventViolationData> getSingleEventViolationData() {
        if (singleEventViolationData == null) {
            singleEventViolationData = new ArrayList<SingleEventViolationData>();
        }
        return this.singleEventViolationData;
    }

    /**
     * 
     * 
     */
    public void setSingleEventViolationData(List<SingleEventViolationData> singleEventViolationData) {
        this.singleEventViolationData = singleEventViolationData;
    }

    public boolean isSetSingleEventViolationData() {
        return ((this.singleEventViolationData!= null)&&(!this.singleEventViolationData.isEmpty()));
    }

    public void unsetSingleEventViolationData() {
        this.singleEventViolationData = null;
    }

    /**
     * Gets the value of the ssoAnnualReportData property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the ssoAnnualReportData property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getSSOAnnualReportData().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link SSOAnnualReportData }
     * 
     * 
     */
    public List<SSOAnnualReportData> getSSOAnnualReportData() {
        if (ssoAnnualReportData == null) {
            ssoAnnualReportData = new ArrayList<SSOAnnualReportData>();
        }
        return this.ssoAnnualReportData;
    }

    /**
     * 
     * 
     */
    public void setSSOAnnualReportData(List<SSOAnnualReportData> ssoAnnualReportData) {
        this.ssoAnnualReportData = ssoAnnualReportData;
    }

    public boolean isSetSSOAnnualReportData() {
        return ((this.ssoAnnualReportData!= null)&&(!this.ssoAnnualReportData.isEmpty()));
    }

    public void unsetSSOAnnualReportData() {
        this.ssoAnnualReportData = null;
    }

    /**
     * Gets the value of the ssoEventReportData property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the ssoEventReportData property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getSSOEventReportData().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link SSOEventReportData }
     * 
     * 
     */
    public List<SSOEventReportData> getSSOEventReportData() {
        if (ssoEventReportData == null) {
            ssoEventReportData = new ArrayList<SSOEventReportData>();
        }
        return this.ssoEventReportData;
    }

    /**
     * 
     * 
     */
    public void setSSOEventReportData(List<SSOEventReportData> ssoEventReportData) {
        this.ssoEventReportData = ssoEventReportData;
    }

    public boolean isSetSSOEventReportData() {
        return ((this.ssoEventReportData!= null)&&(!this.ssoEventReportData.isEmpty()));
    }

    public void unsetSSOEventReportData() {
        this.ssoEventReportData = null;
    }

    /**
     * Gets the value of the ssoMonthlyEventReportData property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the ssoMonthlyEventReportData property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getSSOMonthlyEventReportData().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link SSOMonthlyEventReportData }
     * 
     * 
     */
    public List<SSOMonthlyEventReportData> getSSOMonthlyEventReportData() {
        if (ssoMonthlyEventReportData == null) {
            ssoMonthlyEventReportData = new ArrayList<SSOMonthlyEventReportData>();
        }
        return this.ssoMonthlyEventReportData;
    }

    /**
     * 
     * 
     */
    public void setSSOMonthlyEventReportData(List<SSOMonthlyEventReportData> ssoMonthlyEventReportData) {
        this.ssoMonthlyEventReportData = ssoMonthlyEventReportData;
    }

    public boolean isSetSSOMonthlyEventReportData() {
        return ((this.ssoMonthlyEventReportData!= null)&&(!this.ssoMonthlyEventReportData.isEmpty()));
    }

    public void unsetSSOMonthlyEventReportData() {
        this.ssoMonthlyEventReportData = null;
    }

    /**
     * Gets the value of the swConstructionPermitData property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the swConstructionPermitData property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getSWConstructionPermitData().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link SWConstructionPermitData }
     * 
     * 
     */
    public List<SWConstructionPermitData> getSWConstructionPermitData() {
        if (swConstructionPermitData == null) {
            swConstructionPermitData = new ArrayList<SWConstructionPermitData>();
        }
        return this.swConstructionPermitData;
    }

    /**
     * 
     * 
     */
    public void setSWConstructionPermitData(List<SWConstructionPermitData> swConstructionPermitData) {
        this.swConstructionPermitData = swConstructionPermitData;
    }

    public boolean isSetSWConstructionPermitData() {
        return ((this.swConstructionPermitData!= null)&&(!this.swConstructionPermitData.isEmpty()));
    }

    public void unsetSWConstructionPermitData() {
        this.swConstructionPermitData = null;
    }

    /**
     * Gets the value of the swEventReportData property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the swEventReportData property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getSWEventReportData().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link SWEventReportData }
     * 
     * 
     */
    public List<SWEventReportData> getSWEventReportData() {
        if (swEventReportData == null) {
            swEventReportData = new ArrayList<SWEventReportData>();
        }
        return this.swEventReportData;
    }

    /**
     * 
     * 
     */
    public void setSWEventReportData(List<SWEventReportData> swEventReportData) {
        this.swEventReportData = swEventReportData;
    }

    public boolean isSetSWEventReportData() {
        return ((this.swEventReportData!= null)&&(!this.swEventReportData.isEmpty()));
    }

    public void unsetSWEventReportData() {
        this.swEventReportData = null;
    }

    /**
     * Gets the value of the swIndustrialAnnualReportData property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the swIndustrialAnnualReportData property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getSWIndustrialAnnualReportData().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link SWIndustrialAnnualReportData }
     * 
     * 
     */
    public List<SWIndustrialAnnualReportData> getSWIndustrialAnnualReportData() {
        if (swIndustrialAnnualReportData == null) {
            swIndustrialAnnualReportData = new ArrayList<SWIndustrialAnnualReportData>();
        }
        return this.swIndustrialAnnualReportData;
    }

    /**
     * 
     * 
     */
    public void setSWIndustrialAnnualReportData(List<SWIndustrialAnnualReportData> swIndustrialAnnualReportData) {
        this.swIndustrialAnnualReportData = swIndustrialAnnualReportData;
    }

    public boolean isSetSWIndustrialAnnualReportData() {
        return ((this.swIndustrialAnnualReportData!= null)&&(!this.swIndustrialAnnualReportData.isEmpty()));
    }

    public void unsetSWIndustrialAnnualReportData() {
        this.swIndustrialAnnualReportData = null;
    }

    /**
     * Gets the value of the swIndustrialPermitData property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the swIndustrialPermitData property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getSWIndustrialPermitData().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link SWIndustrialPermitData }
     * 
     * 
     */
    public List<SWIndustrialPermitData> getSWIndustrialPermitData() {
        if (swIndustrialPermitData == null) {
            swIndustrialPermitData = new ArrayList<SWIndustrialPermitData>();
        }
        return this.swIndustrialPermitData;
    }

    /**
     * 
     * 
     */
    public void setSWIndustrialPermitData(List<SWIndustrialPermitData> swIndustrialPermitData) {
        this.swIndustrialPermitData = swIndustrialPermitData;
    }

    public boolean isSetSWIndustrialPermitData() {
        return ((this.swIndustrialPermitData!= null)&&(!this.swIndustrialPermitData.isEmpty()));
    }

    public void unsetSWIndustrialPermitData() {
        this.swIndustrialPermitData = null;
    }

    /**
     * Gets the value of the swms4LargePermitData property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the swms4LargePermitData property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getSWMS4LargePermitData().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link SWMS4LargePermitData }
     * 
     * 
     */
    public List<SWMS4LargePermitData> getSWMS4LargePermitData() {
        if (swms4LargePermitData == null) {
            swms4LargePermitData = new ArrayList<SWMS4LargePermitData>();
        }
        return this.swms4LargePermitData;
    }

    /**
     * 
     * 
     */
    public void setSWMS4LargePermitData(List<SWMS4LargePermitData> swms4LargePermitData) {
        this.swms4LargePermitData = swms4LargePermitData;
    }

    public boolean isSetSWMS4LargePermitData() {
        return ((this.swms4LargePermitData!= null)&&(!this.swms4LargePermitData.isEmpty()));
    }

    public void unsetSWMS4LargePermitData() {
        this.swms4LargePermitData = null;
    }

    /**
     * Gets the value of the swms4ProgramReportData property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the swms4ProgramReportData property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getSWMS4ProgramReportData().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link SWMS4ProgramReportData }
     * 
     * 
     */
    public List<SWMS4ProgramReportData> getSWMS4ProgramReportData() {
        if (swms4ProgramReportData == null) {
            swms4ProgramReportData = new ArrayList<SWMS4ProgramReportData>();
        }
        return this.swms4ProgramReportData;
    }

    /**
     * 
     * 
     */
    public void setSWMS4ProgramReportData(List<SWMS4ProgramReportData> swms4ProgramReportData) {
        this.swms4ProgramReportData = swms4ProgramReportData;
    }

    public boolean isSetSWMS4ProgramReportData() {
        return ((this.swms4ProgramReportData!= null)&&(!this.swms4ProgramReportData.isEmpty()));
    }

    public void unsetSWMS4ProgramReportData() {
        this.swms4ProgramReportData = null;
    }

    /**
     * Gets the value of the swms4SmallPermitData property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the swms4SmallPermitData property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getSWMS4SmallPermitData().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link SWMS4SmallPermitData }
     * 
     * 
     */
    public List<SWMS4SmallPermitData> getSWMS4SmallPermitData() {
        if (swms4SmallPermitData == null) {
            swms4SmallPermitData = new ArrayList<SWMS4SmallPermitData>();
        }
        return this.swms4SmallPermitData;
    }

    /**
     * 
     * 
     */
    public void setSWMS4SmallPermitData(List<SWMS4SmallPermitData> swms4SmallPermitData) {
        this.swms4SmallPermitData = swms4SmallPermitData;
    }

    public boolean isSetSWMS4SmallPermitData() {
        return ((this.swms4SmallPermitData!= null)&&(!this.swms4SmallPermitData.isEmpty()));
    }

    public void unsetSWMS4SmallPermitData() {
        this.swms4SmallPermitData = null;
    }

    /**
     * Gets the value of the unpermittedFacilityData property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the unpermittedFacilityData property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getUnpermittedFacilityData().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link UnpermittedFacilityData }
     * 
     * 
     */
    public List<UnpermittedFacilityData> getUnpermittedFacilityData() {
        if (unpermittedFacilityData == null) {
            unpermittedFacilityData = new ArrayList<UnpermittedFacilityData>();
        }
        return this.unpermittedFacilityData;
    }

    /**
     * 
     * 
     */
    public void setUnpermittedFacilityData(List<UnpermittedFacilityData> unpermittedFacilityData) {
        this.unpermittedFacilityData = unpermittedFacilityData;
    }

    public boolean isSetUnpermittedFacilityData() {
        return ((this.unpermittedFacilityData!= null)&&(!this.unpermittedFacilityData.isEmpty()));
    }

    public void unsetUnpermittedFacilityData() {
        this.unpermittedFacilityData = null;
    }

    /**
     * Gets the value of the operation property.
     * 
     * @return
     *     possible object is
     *     {@link OperationType }
     *     
     */
    public OperationType getOperation() {
        return operation;
    }

    /**
     * Sets the value of the operation property.
     * 
     * @param value
     *     allowed object is
     *     {@link OperationType }
     *     
     */
    public void setOperation(OperationType value) {
        this.operation = value;
    }

    public boolean isSetOperation() {
        return (this.operation!= null);
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof PayloadData)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final PayloadData that = ((PayloadData) object);
        {
            List<BasicPermitData> lhsBasicPermitData;
            lhsBasicPermitData = (this.isSetBasicPermitData()?this.getBasicPermitData():null);
            List<BasicPermitData> rhsBasicPermitData;
            rhsBasicPermitData = (that.isSetBasicPermitData()?that.getBasicPermitData():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "basicPermitData", lhsBasicPermitData), LocatorUtils.property(thatLocator, "basicPermitData", rhsBasicPermitData), lhsBasicPermitData, rhsBasicPermitData)) {
                return false;
            }
        }
        {
            List<BiosolidsPermitData> lhsBiosolidsPermitData;
            lhsBiosolidsPermitData = (this.isSetBiosolidsPermitData()?this.getBiosolidsPermitData():null);
            List<BiosolidsPermitData> rhsBiosolidsPermitData;
            rhsBiosolidsPermitData = (that.isSetBiosolidsPermitData()?that.getBiosolidsPermitData():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "biosolidsPermitData", lhsBiosolidsPermitData), LocatorUtils.property(thatLocator, "biosolidsPermitData", rhsBiosolidsPermitData), lhsBiosolidsPermitData, rhsBiosolidsPermitData)) {
                return false;
            }
        }
        {
            List<BiosolidsProgramReportData> lhsBiosolidsProgramReportData;
            lhsBiosolidsProgramReportData = (this.isSetBiosolidsProgramReportData()?this.getBiosolidsProgramReportData():null);
            List<BiosolidsProgramReportData> rhsBiosolidsProgramReportData;
            rhsBiosolidsProgramReportData = (that.isSetBiosolidsProgramReportData()?that.getBiosolidsProgramReportData():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "biosolidsProgramReportData", lhsBiosolidsProgramReportData), LocatorUtils.property(thatLocator, "biosolidsProgramReportData", rhsBiosolidsProgramReportData), lhsBiosolidsProgramReportData, rhsBiosolidsProgramReportData)) {
                return false;
            }
        }
        {
            List<CAFOAnnualReportData> lhsCAFOAnnualReportData;
            lhsCAFOAnnualReportData = (this.isSetCAFOAnnualReportData()?this.getCAFOAnnualReportData():null);
            List<CAFOAnnualReportData> rhsCAFOAnnualReportData;
            rhsCAFOAnnualReportData = (that.isSetCAFOAnnualReportData()?that.getCAFOAnnualReportData():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "cafoAnnualReportData", lhsCAFOAnnualReportData), LocatorUtils.property(thatLocator, "cafoAnnualReportData", rhsCAFOAnnualReportData), lhsCAFOAnnualReportData, rhsCAFOAnnualReportData)) {
                return false;
            }
        }
        {
            List<CAFOPermitData> lhsCAFOPermitData;
            lhsCAFOPermitData = (this.isSetCAFOPermitData()?this.getCAFOPermitData():null);
            List<CAFOPermitData> rhsCAFOPermitData;
            rhsCAFOPermitData = (that.isSetCAFOPermitData()?that.getCAFOPermitData():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "cafoPermitData", lhsCAFOPermitData), LocatorUtils.property(thatLocator, "cafoPermitData", rhsCAFOPermitData), lhsCAFOPermitData, rhsCAFOPermitData)) {
                return false;
            }
        }
        {
            List<ComplianceMonitoringData> lhsComplianceMonitoringData;
            lhsComplianceMonitoringData = (this.isSetComplianceMonitoringData()?this.getComplianceMonitoringData():null);
            List<ComplianceMonitoringData> rhsComplianceMonitoringData;
            rhsComplianceMonitoringData = (that.isSetComplianceMonitoringData()?that.getComplianceMonitoringData():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "complianceMonitoringData", lhsComplianceMonitoringData), LocatorUtils.property(thatLocator, "complianceMonitoringData", rhsComplianceMonitoringData), lhsComplianceMonitoringData, rhsComplianceMonitoringData)) {
                return false;
            }
        }
        {
            List<ComplianceMonitoringLinkageData> lhsComplianceMonitoringLinkageData;
            lhsComplianceMonitoringLinkageData = (this.isSetComplianceMonitoringLinkageData()?this.getComplianceMonitoringLinkageData():null);
            List<ComplianceMonitoringLinkageData> rhsComplianceMonitoringLinkageData;
            rhsComplianceMonitoringLinkageData = (that.isSetComplianceMonitoringLinkageData()?that.getComplianceMonitoringLinkageData():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "complianceMonitoringLinkageData", lhsComplianceMonitoringLinkageData), LocatorUtils.property(thatLocator, "complianceMonitoringLinkageData", rhsComplianceMonitoringLinkageData), lhsComplianceMonitoringLinkageData, rhsComplianceMonitoringLinkageData)) {
                return false;
            }
        }
        {
            List<ComplianceScheduleData> lhsComplianceScheduleData;
            lhsComplianceScheduleData = (this.isSetComplianceScheduleData()?this.getComplianceScheduleData():null);
            List<ComplianceScheduleData> rhsComplianceScheduleData;
            rhsComplianceScheduleData = (that.isSetComplianceScheduleData()?that.getComplianceScheduleData():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "complianceScheduleData", lhsComplianceScheduleData), LocatorUtils.property(thatLocator, "complianceScheduleData", rhsComplianceScheduleData), lhsComplianceScheduleData, rhsComplianceScheduleData)) {
                return false;
            }
        }
        {
            List<CSOEventReportData> lhsCSOEventReportData;
            lhsCSOEventReportData = (this.isSetCSOEventReportData()?this.getCSOEventReportData():null);
            List<CSOEventReportData> rhsCSOEventReportData;
            rhsCSOEventReportData = (that.isSetCSOEventReportData()?that.getCSOEventReportData():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "csoEventReportData", lhsCSOEventReportData), LocatorUtils.property(thatLocator, "csoEventReportData", rhsCSOEventReportData), lhsCSOEventReportData, rhsCSOEventReportData)) {
                return false;
            }
        }
        {
            List<CSOPermitData> lhsCSOPermitData;
            lhsCSOPermitData = (this.isSetCSOPermitData()?this.getCSOPermitData():null);
            List<CSOPermitData> rhsCSOPermitData;
            rhsCSOPermitData = (that.isSetCSOPermitData()?that.getCSOPermitData():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "csoPermitData", lhsCSOPermitData), LocatorUtils.property(thatLocator, "csoPermitData", rhsCSOPermitData), lhsCSOPermitData, rhsCSOPermitData)) {
                return false;
            }
        }
        {
            List<DischargeMonitoringReportData> lhsDischargeMonitoringReportData;
            lhsDischargeMonitoringReportData = (this.isSetDischargeMonitoringReportData()?this.getDischargeMonitoringReportData():null);
            List<DischargeMonitoringReportData> rhsDischargeMonitoringReportData;
            rhsDischargeMonitoringReportData = (that.isSetDischargeMonitoringReportData()?that.getDischargeMonitoringReportData():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dischargeMonitoringReportData", lhsDischargeMonitoringReportData), LocatorUtils.property(thatLocator, "dischargeMonitoringReportData", rhsDischargeMonitoringReportData), lhsDischargeMonitoringReportData, rhsDischargeMonitoringReportData)) {
                return false;
            }
        }
        {
            List<DMRProgramReportLinkageData> lhsDMRProgramReportLinkageData;
            lhsDMRProgramReportLinkageData = (this.isSetDMRProgramReportLinkageData()?this.getDMRProgramReportLinkageData():null);
            List<DMRProgramReportLinkageData> rhsDMRProgramReportLinkageData;
            rhsDMRProgramReportLinkageData = (that.isSetDMRProgramReportLinkageData()?that.getDMRProgramReportLinkageData():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dmrProgramReportLinkageData", lhsDMRProgramReportLinkageData), LocatorUtils.property(thatLocator, "dmrProgramReportLinkageData", rhsDMRProgramReportLinkageData), lhsDMRProgramReportLinkageData, rhsDMRProgramReportLinkageData)) {
                return false;
            }
        }
        {
            List<DMRViolationData> lhsDMRViolationData;
            lhsDMRViolationData = (this.isSetDMRViolationData()?this.getDMRViolationData():null);
            List<DMRViolationData> rhsDMRViolationData;
            rhsDMRViolationData = (that.isSetDMRViolationData()?that.getDMRViolationData():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dmrViolationData", lhsDMRViolationData), LocatorUtils.property(thatLocator, "dmrViolationData", rhsDMRViolationData), lhsDMRViolationData, rhsDMRViolationData)) {
                return false;
            }
        }
        {
            List<EffluentTradePartnerData> lhsEffluentTradePartnerData;
            lhsEffluentTradePartnerData = (this.isSetEffluentTradePartnerData()?this.getEffluentTradePartnerData():null);
            List<EffluentTradePartnerData> rhsEffluentTradePartnerData;
            rhsEffluentTradePartnerData = (that.isSetEffluentTradePartnerData()?that.getEffluentTradePartnerData():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "effluentTradePartnerData", lhsEffluentTradePartnerData), LocatorUtils.property(thatLocator, "effluentTradePartnerData", rhsEffluentTradePartnerData), lhsEffluentTradePartnerData, rhsEffluentTradePartnerData)) {
                return false;
            }
        }
        {
            List<EnforcementActionMilestoneData> lhsEnforcementActionMilestoneData;
            lhsEnforcementActionMilestoneData = (this.isSetEnforcementActionMilestoneData()?this.getEnforcementActionMilestoneData():null);
            List<EnforcementActionMilestoneData> rhsEnforcementActionMilestoneData;
            rhsEnforcementActionMilestoneData = (that.isSetEnforcementActionMilestoneData()?that.getEnforcementActionMilestoneData():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "enforcementActionMilestoneData", lhsEnforcementActionMilestoneData), LocatorUtils.property(thatLocator, "enforcementActionMilestoneData", rhsEnforcementActionMilestoneData), lhsEnforcementActionMilestoneData, rhsEnforcementActionMilestoneData)) {
                return false;
            }
        }
        {
            List<EnforcementActionViolationLinkageData> lhsEnforcementActionViolationLinkageData;
            lhsEnforcementActionViolationLinkageData = (this.isSetEnforcementActionViolationLinkageData()?this.getEnforcementActionViolationLinkageData():null);
            List<EnforcementActionViolationLinkageData> rhsEnforcementActionViolationLinkageData;
            rhsEnforcementActionViolationLinkageData = (that.isSetEnforcementActionViolationLinkageData()?that.getEnforcementActionViolationLinkageData():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "enforcementActionViolationLinkageData", lhsEnforcementActionViolationLinkageData), LocatorUtils.property(thatLocator, "enforcementActionViolationLinkageData", rhsEnforcementActionViolationLinkageData), lhsEnforcementActionViolationLinkageData, rhsEnforcementActionViolationLinkageData)) {
                return false;
            }
        }
        {
            List<FederalComplianceMonitoringData> lhsFederalComplianceMonitoringData;
            lhsFederalComplianceMonitoringData = (this.isSetFederalComplianceMonitoringData()?this.getFederalComplianceMonitoringData():null);
            List<FederalComplianceMonitoringData> rhsFederalComplianceMonitoringData;
            rhsFederalComplianceMonitoringData = (that.isSetFederalComplianceMonitoringData()?that.getFederalComplianceMonitoringData():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "federalComplianceMonitoringData", lhsFederalComplianceMonitoringData), LocatorUtils.property(thatLocator, "federalComplianceMonitoringData", rhsFederalComplianceMonitoringData), lhsFederalComplianceMonitoringData, rhsFederalComplianceMonitoringData)) {
                return false;
            }
        }
        {
            List<FinalOrderViolationLinkageData> lhsFinalOrderViolationLinkageData;
            lhsFinalOrderViolationLinkageData = (this.isSetFinalOrderViolationLinkageData()?this.getFinalOrderViolationLinkageData():null);
            List<FinalOrderViolationLinkageData> rhsFinalOrderViolationLinkageData;
            rhsFinalOrderViolationLinkageData = (that.isSetFinalOrderViolationLinkageData()?that.getFinalOrderViolationLinkageData():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "finalOrderViolationLinkageData", lhsFinalOrderViolationLinkageData), LocatorUtils.property(thatLocator, "finalOrderViolationLinkageData", rhsFinalOrderViolationLinkageData), lhsFinalOrderViolationLinkageData, rhsFinalOrderViolationLinkageData)) {
                return false;
            }
        }
        {
            List<FormalEnforcementActionData> lhsFormalEnforcementActionData;
            lhsFormalEnforcementActionData = (this.isSetFormalEnforcementActionData()?this.getFormalEnforcementActionData():null);
            List<FormalEnforcementActionData> rhsFormalEnforcementActionData;
            rhsFormalEnforcementActionData = (that.isSetFormalEnforcementActionData()?that.getFormalEnforcementActionData():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "formalEnforcementActionData", lhsFormalEnforcementActionData), LocatorUtils.property(thatLocator, "formalEnforcementActionData", rhsFormalEnforcementActionData), lhsFormalEnforcementActionData, rhsFormalEnforcementActionData)) {
                return false;
            }
        }
        {
            List<GeneralPermitData> lhsGeneralPermitData;
            lhsGeneralPermitData = (this.isSetGeneralPermitData()?this.getGeneralPermitData():null);
            List<GeneralPermitData> rhsGeneralPermitData;
            rhsGeneralPermitData = (that.isSetGeneralPermitData()?that.getGeneralPermitData():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "generalPermitData", lhsGeneralPermitData), LocatorUtils.property(thatLocator, "generalPermitData", rhsGeneralPermitData), lhsGeneralPermitData, rhsGeneralPermitData)) {
                return false;
            }
        }
        {
            List<HistoricalPermitScheduleEventsData> lhsHistoricalPermitScheduleEventsData;
            lhsHistoricalPermitScheduleEventsData = (this.isSetHistoricalPermitScheduleEventsData()?this.getHistoricalPermitScheduleEventsData():null);
            List<HistoricalPermitScheduleEventsData> rhsHistoricalPermitScheduleEventsData;
            rhsHistoricalPermitScheduleEventsData = (that.isSetHistoricalPermitScheduleEventsData()?that.getHistoricalPermitScheduleEventsData():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "historicalPermitScheduleEventsData", lhsHistoricalPermitScheduleEventsData), LocatorUtils.property(thatLocator, "historicalPermitScheduleEventsData", rhsHistoricalPermitScheduleEventsData), lhsHistoricalPermitScheduleEventsData, rhsHistoricalPermitScheduleEventsData)) {
                return false;
            }
        }
        {
            List<InformalEnforcementActionData> lhsInformalEnforcementActionData;
            lhsInformalEnforcementActionData = (this.isSetInformalEnforcementActionData()?this.getInformalEnforcementActionData():null);
            List<InformalEnforcementActionData> rhsInformalEnforcementActionData;
            rhsInformalEnforcementActionData = (that.isSetInformalEnforcementActionData()?that.getInformalEnforcementActionData():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "informalEnforcementActionData", lhsInformalEnforcementActionData), LocatorUtils.property(thatLocator, "informalEnforcementActionData", rhsInformalEnforcementActionData), lhsInformalEnforcementActionData, rhsInformalEnforcementActionData)) {
                return false;
            }
        }
        {
            List<LimitSetData> lhsLimitSetData;
            lhsLimitSetData = (this.isSetLimitSetData()?this.getLimitSetData():null);
            List<LimitSetData> rhsLimitSetData;
            rhsLimitSetData = (that.isSetLimitSetData()?that.getLimitSetData():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "limitSetData", lhsLimitSetData), LocatorUtils.property(thatLocator, "limitSetData", rhsLimitSetData), lhsLimitSetData, rhsLimitSetData)) {
                return false;
            }
        }
        {
            List<LocalLimitsProgramReportData> lhsLocalLimitsProgramReportData;
            lhsLocalLimitsProgramReportData = (this.isSetLocalLimitsProgramReportData()?this.getLocalLimitsProgramReportData():null);
            List<LocalLimitsProgramReportData> rhsLocalLimitsProgramReportData;
            rhsLocalLimitsProgramReportData = (that.isSetLocalLimitsProgramReportData()?that.getLocalLimitsProgramReportData():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "localLimitsProgramReportData", lhsLocalLimitsProgramReportData), LocatorUtils.property(thatLocator, "localLimitsProgramReportData", rhsLocalLimitsProgramReportData), lhsLocalLimitsProgramReportData, rhsLocalLimitsProgramReportData)) {
                return false;
            }
        }
        {
            List<MasterGeneralPermitData> lhsMasterGeneralPermitData;
            lhsMasterGeneralPermitData = (this.isSetMasterGeneralPermitData()?this.getMasterGeneralPermitData():null);
            List<MasterGeneralPermitData> rhsMasterGeneralPermitData;
            rhsMasterGeneralPermitData = (that.isSetMasterGeneralPermitData()?that.getMasterGeneralPermitData():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "masterGeneralPermitData", lhsMasterGeneralPermitData), LocatorUtils.property(thatLocator, "masterGeneralPermitData", rhsMasterGeneralPermitData), lhsMasterGeneralPermitData, rhsMasterGeneralPermitData)) {
                return false;
            }
        }
        {
            List<NarrativeConditionScheduleData> lhsNarrativeConditionScheduleData;
            lhsNarrativeConditionScheduleData = (this.isSetNarrativeConditionScheduleData()?this.getNarrativeConditionScheduleData():null);
            List<NarrativeConditionScheduleData> rhsNarrativeConditionScheduleData;
            rhsNarrativeConditionScheduleData = (that.isSetNarrativeConditionScheduleData()?that.getNarrativeConditionScheduleData():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "narrativeConditionScheduleData", lhsNarrativeConditionScheduleData), LocatorUtils.property(thatLocator, "narrativeConditionScheduleData", rhsNarrativeConditionScheduleData), lhsNarrativeConditionScheduleData, rhsNarrativeConditionScheduleData)) {
                return false;
            }
        }
        {
            List<ParameterLimitsData> lhsParameterLimitsData;
            lhsParameterLimitsData = (this.isSetParameterLimitsData()?this.getParameterLimitsData():null);
            List<ParameterLimitsData> rhsParameterLimitsData;
            rhsParameterLimitsData = (that.isSetParameterLimitsData()?that.getParameterLimitsData():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "parameterLimitsData", lhsParameterLimitsData), LocatorUtils.property(thatLocator, "parameterLimitsData", rhsParameterLimitsData), lhsParameterLimitsData, rhsParameterLimitsData)) {
                return false;
            }
        }
        {
            List<PermitReissuanceData> lhsPermitReissuanceData;
            lhsPermitReissuanceData = (this.isSetPermitReissuanceData()?this.getPermitReissuanceData():null);
            List<PermitReissuanceData> rhsPermitReissuanceData;
            rhsPermitReissuanceData = (that.isSetPermitReissuanceData()?that.getPermitReissuanceData():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "permitReissuanceData", lhsPermitReissuanceData), LocatorUtils.property(thatLocator, "permitReissuanceData", rhsPermitReissuanceData), lhsPermitReissuanceData, rhsPermitReissuanceData)) {
                return false;
            }
        }
        {
            List<PermittedFeatureData> lhsPermittedFeatureData;
            lhsPermittedFeatureData = (this.isSetPermittedFeatureData()?this.getPermittedFeatureData():null);
            List<PermittedFeatureData> rhsPermittedFeatureData;
            rhsPermittedFeatureData = (that.isSetPermittedFeatureData()?that.getPermittedFeatureData():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "permittedFeatureData", lhsPermittedFeatureData), LocatorUtils.property(thatLocator, "permittedFeatureData", rhsPermittedFeatureData), lhsPermittedFeatureData, rhsPermittedFeatureData)) {
                return false;
            }
        }
        {
            List<PermitTerminationData> lhsPermitTerminationData;
            lhsPermitTerminationData = (this.isSetPermitTerminationData()?this.getPermitTerminationData():null);
            List<PermitTerminationData> rhsPermitTerminationData;
            rhsPermitTerminationData = (that.isSetPermitTerminationData()?that.getPermitTerminationData():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "permitTerminationData", lhsPermitTerminationData), LocatorUtils.property(thatLocator, "permitTerminationData", rhsPermitTerminationData), lhsPermitTerminationData, rhsPermitTerminationData)) {
                return false;
            }
        }
        {
            List<PermitTrackingEventData> lhsPermitTrackingEventData;
            lhsPermitTrackingEventData = (this.isSetPermitTrackingEventData()?this.getPermitTrackingEventData():null);
            List<PermitTrackingEventData> rhsPermitTrackingEventData;
            rhsPermitTrackingEventData = (that.isSetPermitTrackingEventData()?that.getPermitTrackingEventData():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "permitTrackingEventData", lhsPermitTrackingEventData), LocatorUtils.property(thatLocator, "permitTrackingEventData", rhsPermitTrackingEventData), lhsPermitTrackingEventData, rhsPermitTrackingEventData)) {
                return false;
            }
        }
        {
            List<POTWPermitData> lhsPOTWPermitData;
            lhsPOTWPermitData = (this.isSetPOTWPermitData()?this.getPOTWPermitData():null);
            List<POTWPermitData> rhsPOTWPermitData;
            rhsPOTWPermitData = (that.isSetPOTWPermitData()?that.getPOTWPermitData():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "potwPermitData", lhsPOTWPermitData), LocatorUtils.property(thatLocator, "potwPermitData", rhsPOTWPermitData), lhsPOTWPermitData, rhsPOTWPermitData)) {
                return false;
            }
        }
        {
            List<PretreatmentPerformanceSummaryData> lhsPretreatmentPerformanceSummaryData;
            lhsPretreatmentPerformanceSummaryData = (this.isSetPretreatmentPerformanceSummaryData()?this.getPretreatmentPerformanceSummaryData():null);
            List<PretreatmentPerformanceSummaryData> rhsPretreatmentPerformanceSummaryData;
            rhsPretreatmentPerformanceSummaryData = (that.isSetPretreatmentPerformanceSummaryData()?that.getPretreatmentPerformanceSummaryData():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "pretreatmentPerformanceSummaryData", lhsPretreatmentPerformanceSummaryData), LocatorUtils.property(thatLocator, "pretreatmentPerformanceSummaryData", rhsPretreatmentPerformanceSummaryData), lhsPretreatmentPerformanceSummaryData, rhsPretreatmentPerformanceSummaryData)) {
                return false;
            }
        }
        {
            List<PretreatmentPermitData> lhsPretreatmentPermitData;
            lhsPretreatmentPermitData = (this.isSetPretreatmentPermitData()?this.getPretreatmentPermitData():null);
            List<PretreatmentPermitData> rhsPretreatmentPermitData;
            rhsPretreatmentPermitData = (that.isSetPretreatmentPermitData()?that.getPretreatmentPermitData():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "pretreatmentPermitData", lhsPretreatmentPermitData), LocatorUtils.property(thatLocator, "pretreatmentPermitData", rhsPretreatmentPermitData), lhsPretreatmentPermitData, rhsPretreatmentPermitData)) {
                return false;
            }
        }
        {
            List<ScheduleEventViolationData> lhsScheduleEventViolationData;
            lhsScheduleEventViolationData = (this.isSetScheduleEventViolationData()?this.getScheduleEventViolationData():null);
            List<ScheduleEventViolationData> rhsScheduleEventViolationData;
            rhsScheduleEventViolationData = (that.isSetScheduleEventViolationData()?that.getScheduleEventViolationData():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "scheduleEventViolationData", lhsScheduleEventViolationData), LocatorUtils.property(thatLocator, "scheduleEventViolationData", rhsScheduleEventViolationData), lhsScheduleEventViolationData, rhsScheduleEventViolationData)) {
                return false;
            }
        }
        {
            List<SingleEventViolationData> lhsSingleEventViolationData;
            lhsSingleEventViolationData = (this.isSetSingleEventViolationData()?this.getSingleEventViolationData():null);
            List<SingleEventViolationData> rhsSingleEventViolationData;
            rhsSingleEventViolationData = (that.isSetSingleEventViolationData()?that.getSingleEventViolationData():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "singleEventViolationData", lhsSingleEventViolationData), LocatorUtils.property(thatLocator, "singleEventViolationData", rhsSingleEventViolationData), lhsSingleEventViolationData, rhsSingleEventViolationData)) {
                return false;
            }
        }
        {
            List<SSOAnnualReportData> lhsSSOAnnualReportData;
            lhsSSOAnnualReportData = (this.isSetSSOAnnualReportData()?this.getSSOAnnualReportData():null);
            List<SSOAnnualReportData> rhsSSOAnnualReportData;
            rhsSSOAnnualReportData = (that.isSetSSOAnnualReportData()?that.getSSOAnnualReportData():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "ssoAnnualReportData", lhsSSOAnnualReportData), LocatorUtils.property(thatLocator, "ssoAnnualReportData", rhsSSOAnnualReportData), lhsSSOAnnualReportData, rhsSSOAnnualReportData)) {
                return false;
            }
        }
        {
            List<SSOEventReportData> lhsSSOEventReportData;
            lhsSSOEventReportData = (this.isSetSSOEventReportData()?this.getSSOEventReportData():null);
            List<SSOEventReportData> rhsSSOEventReportData;
            rhsSSOEventReportData = (that.isSetSSOEventReportData()?that.getSSOEventReportData():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "ssoEventReportData", lhsSSOEventReportData), LocatorUtils.property(thatLocator, "ssoEventReportData", rhsSSOEventReportData), lhsSSOEventReportData, rhsSSOEventReportData)) {
                return false;
            }
        }
        {
            List<SSOMonthlyEventReportData> lhsSSOMonthlyEventReportData;
            lhsSSOMonthlyEventReportData = (this.isSetSSOMonthlyEventReportData()?this.getSSOMonthlyEventReportData():null);
            List<SSOMonthlyEventReportData> rhsSSOMonthlyEventReportData;
            rhsSSOMonthlyEventReportData = (that.isSetSSOMonthlyEventReportData()?that.getSSOMonthlyEventReportData():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "ssoMonthlyEventReportData", lhsSSOMonthlyEventReportData), LocatorUtils.property(thatLocator, "ssoMonthlyEventReportData", rhsSSOMonthlyEventReportData), lhsSSOMonthlyEventReportData, rhsSSOMonthlyEventReportData)) {
                return false;
            }
        }
        {
            List<SWConstructionPermitData> lhsSWConstructionPermitData;
            lhsSWConstructionPermitData = (this.isSetSWConstructionPermitData()?this.getSWConstructionPermitData():null);
            List<SWConstructionPermitData> rhsSWConstructionPermitData;
            rhsSWConstructionPermitData = (that.isSetSWConstructionPermitData()?that.getSWConstructionPermitData():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "swConstructionPermitData", lhsSWConstructionPermitData), LocatorUtils.property(thatLocator, "swConstructionPermitData", rhsSWConstructionPermitData), lhsSWConstructionPermitData, rhsSWConstructionPermitData)) {
                return false;
            }
        }
        {
            List<SWEventReportData> lhsSWEventReportData;
            lhsSWEventReportData = (this.isSetSWEventReportData()?this.getSWEventReportData():null);
            List<SWEventReportData> rhsSWEventReportData;
            rhsSWEventReportData = (that.isSetSWEventReportData()?that.getSWEventReportData():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "swEventReportData", lhsSWEventReportData), LocatorUtils.property(thatLocator, "swEventReportData", rhsSWEventReportData), lhsSWEventReportData, rhsSWEventReportData)) {
                return false;
            }
        }
        {
            List<SWIndustrialAnnualReportData> lhsSWIndustrialAnnualReportData;
            lhsSWIndustrialAnnualReportData = (this.isSetSWIndustrialAnnualReportData()?this.getSWIndustrialAnnualReportData():null);
            List<SWIndustrialAnnualReportData> rhsSWIndustrialAnnualReportData;
            rhsSWIndustrialAnnualReportData = (that.isSetSWIndustrialAnnualReportData()?that.getSWIndustrialAnnualReportData():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "swIndustrialAnnualReportData", lhsSWIndustrialAnnualReportData), LocatorUtils.property(thatLocator, "swIndustrialAnnualReportData", rhsSWIndustrialAnnualReportData), lhsSWIndustrialAnnualReportData, rhsSWIndustrialAnnualReportData)) {
                return false;
            }
        }
        {
            List<SWIndustrialPermitData> lhsSWIndustrialPermitData;
            lhsSWIndustrialPermitData = (this.isSetSWIndustrialPermitData()?this.getSWIndustrialPermitData():null);
            List<SWIndustrialPermitData> rhsSWIndustrialPermitData;
            rhsSWIndustrialPermitData = (that.isSetSWIndustrialPermitData()?that.getSWIndustrialPermitData():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "swIndustrialPermitData", lhsSWIndustrialPermitData), LocatorUtils.property(thatLocator, "swIndustrialPermitData", rhsSWIndustrialPermitData), lhsSWIndustrialPermitData, rhsSWIndustrialPermitData)) {
                return false;
            }
        }
        {
            List<SWMS4LargePermitData> lhsSWMS4LargePermitData;
            lhsSWMS4LargePermitData = (this.isSetSWMS4LargePermitData()?this.getSWMS4LargePermitData():null);
            List<SWMS4LargePermitData> rhsSWMS4LargePermitData;
            rhsSWMS4LargePermitData = (that.isSetSWMS4LargePermitData()?that.getSWMS4LargePermitData():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "swms4LargePermitData", lhsSWMS4LargePermitData), LocatorUtils.property(thatLocator, "swms4LargePermitData", rhsSWMS4LargePermitData), lhsSWMS4LargePermitData, rhsSWMS4LargePermitData)) {
                return false;
            }
        }
        {
            List<SWMS4ProgramReportData> lhsSWMS4ProgramReportData;
            lhsSWMS4ProgramReportData = (this.isSetSWMS4ProgramReportData()?this.getSWMS4ProgramReportData():null);
            List<SWMS4ProgramReportData> rhsSWMS4ProgramReportData;
            rhsSWMS4ProgramReportData = (that.isSetSWMS4ProgramReportData()?that.getSWMS4ProgramReportData():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "swms4ProgramReportData", lhsSWMS4ProgramReportData), LocatorUtils.property(thatLocator, "swms4ProgramReportData", rhsSWMS4ProgramReportData), lhsSWMS4ProgramReportData, rhsSWMS4ProgramReportData)) {
                return false;
            }
        }
        {
            List<SWMS4SmallPermitData> lhsSWMS4SmallPermitData;
            lhsSWMS4SmallPermitData = (this.isSetSWMS4SmallPermitData()?this.getSWMS4SmallPermitData():null);
            List<SWMS4SmallPermitData> rhsSWMS4SmallPermitData;
            rhsSWMS4SmallPermitData = (that.isSetSWMS4SmallPermitData()?that.getSWMS4SmallPermitData():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "swms4SmallPermitData", lhsSWMS4SmallPermitData), LocatorUtils.property(thatLocator, "swms4SmallPermitData", rhsSWMS4SmallPermitData), lhsSWMS4SmallPermitData, rhsSWMS4SmallPermitData)) {
                return false;
            }
        }
        {
            List<UnpermittedFacilityData> lhsUnpermittedFacilityData;
            lhsUnpermittedFacilityData = (this.isSetUnpermittedFacilityData()?this.getUnpermittedFacilityData():null);
            List<UnpermittedFacilityData> rhsUnpermittedFacilityData;
            rhsUnpermittedFacilityData = (that.isSetUnpermittedFacilityData()?that.getUnpermittedFacilityData():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "unpermittedFacilityData", lhsUnpermittedFacilityData), LocatorUtils.property(thatLocator, "unpermittedFacilityData", rhsUnpermittedFacilityData), lhsUnpermittedFacilityData, rhsUnpermittedFacilityData)) {
                return false;
            }
        }
        {
            OperationType lhsOperation;
            lhsOperation = this.getOperation();
            OperationType rhsOperation;
            rhsOperation = that.getOperation();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "operation", lhsOperation), LocatorUtils.property(thatLocator, "operation", rhsOperation), lhsOperation, rhsOperation)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            List<BasicPermitData> theBasicPermitData;
            theBasicPermitData = (this.isSetBasicPermitData()?this.getBasicPermitData():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "basicPermitData", theBasicPermitData), currentHashCode, theBasicPermitData);
        }
        {
            List<BiosolidsPermitData> theBiosolidsPermitData;
            theBiosolidsPermitData = (this.isSetBiosolidsPermitData()?this.getBiosolidsPermitData():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "biosolidsPermitData", theBiosolidsPermitData), currentHashCode, theBiosolidsPermitData);
        }
        {
            List<BiosolidsProgramReportData> theBiosolidsProgramReportData;
            theBiosolidsProgramReportData = (this.isSetBiosolidsProgramReportData()?this.getBiosolidsProgramReportData():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "biosolidsProgramReportData", theBiosolidsProgramReportData), currentHashCode, theBiosolidsProgramReportData);
        }
        {
            List<CAFOAnnualReportData> theCAFOAnnualReportData;
            theCAFOAnnualReportData = (this.isSetCAFOAnnualReportData()?this.getCAFOAnnualReportData():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "cafoAnnualReportData", theCAFOAnnualReportData), currentHashCode, theCAFOAnnualReportData);
        }
        {
            List<CAFOPermitData> theCAFOPermitData;
            theCAFOPermitData = (this.isSetCAFOPermitData()?this.getCAFOPermitData():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "cafoPermitData", theCAFOPermitData), currentHashCode, theCAFOPermitData);
        }
        {
            List<ComplianceMonitoringData> theComplianceMonitoringData;
            theComplianceMonitoringData = (this.isSetComplianceMonitoringData()?this.getComplianceMonitoringData():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "complianceMonitoringData", theComplianceMonitoringData), currentHashCode, theComplianceMonitoringData);
        }
        {
            List<ComplianceMonitoringLinkageData> theComplianceMonitoringLinkageData;
            theComplianceMonitoringLinkageData = (this.isSetComplianceMonitoringLinkageData()?this.getComplianceMonitoringLinkageData():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "complianceMonitoringLinkageData", theComplianceMonitoringLinkageData), currentHashCode, theComplianceMonitoringLinkageData);
        }
        {
            List<ComplianceScheduleData> theComplianceScheduleData;
            theComplianceScheduleData = (this.isSetComplianceScheduleData()?this.getComplianceScheduleData():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "complianceScheduleData", theComplianceScheduleData), currentHashCode, theComplianceScheduleData);
        }
        {
            List<CSOEventReportData> theCSOEventReportData;
            theCSOEventReportData = (this.isSetCSOEventReportData()?this.getCSOEventReportData():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "csoEventReportData", theCSOEventReportData), currentHashCode, theCSOEventReportData);
        }
        {
            List<CSOPermitData> theCSOPermitData;
            theCSOPermitData = (this.isSetCSOPermitData()?this.getCSOPermitData():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "csoPermitData", theCSOPermitData), currentHashCode, theCSOPermitData);
        }
        {
            List<DischargeMonitoringReportData> theDischargeMonitoringReportData;
            theDischargeMonitoringReportData = (this.isSetDischargeMonitoringReportData()?this.getDischargeMonitoringReportData():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dischargeMonitoringReportData", theDischargeMonitoringReportData), currentHashCode, theDischargeMonitoringReportData);
        }
        {
            List<DMRProgramReportLinkageData> theDMRProgramReportLinkageData;
            theDMRProgramReportLinkageData = (this.isSetDMRProgramReportLinkageData()?this.getDMRProgramReportLinkageData():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dmrProgramReportLinkageData", theDMRProgramReportLinkageData), currentHashCode, theDMRProgramReportLinkageData);
        }
        {
            List<DMRViolationData> theDMRViolationData;
            theDMRViolationData = (this.isSetDMRViolationData()?this.getDMRViolationData():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dmrViolationData", theDMRViolationData), currentHashCode, theDMRViolationData);
        }
        {
            List<EffluentTradePartnerData> theEffluentTradePartnerData;
            theEffluentTradePartnerData = (this.isSetEffluentTradePartnerData()?this.getEffluentTradePartnerData():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "effluentTradePartnerData", theEffluentTradePartnerData), currentHashCode, theEffluentTradePartnerData);
        }
        {
            List<EnforcementActionMilestoneData> theEnforcementActionMilestoneData;
            theEnforcementActionMilestoneData = (this.isSetEnforcementActionMilestoneData()?this.getEnforcementActionMilestoneData():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "enforcementActionMilestoneData", theEnforcementActionMilestoneData), currentHashCode, theEnforcementActionMilestoneData);
        }
        {
            List<EnforcementActionViolationLinkageData> theEnforcementActionViolationLinkageData;
            theEnforcementActionViolationLinkageData = (this.isSetEnforcementActionViolationLinkageData()?this.getEnforcementActionViolationLinkageData():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "enforcementActionViolationLinkageData", theEnforcementActionViolationLinkageData), currentHashCode, theEnforcementActionViolationLinkageData);
        }
        {
            List<FederalComplianceMonitoringData> theFederalComplianceMonitoringData;
            theFederalComplianceMonitoringData = (this.isSetFederalComplianceMonitoringData()?this.getFederalComplianceMonitoringData():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "federalComplianceMonitoringData", theFederalComplianceMonitoringData), currentHashCode, theFederalComplianceMonitoringData);
        }
        {
            List<FinalOrderViolationLinkageData> theFinalOrderViolationLinkageData;
            theFinalOrderViolationLinkageData = (this.isSetFinalOrderViolationLinkageData()?this.getFinalOrderViolationLinkageData():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "finalOrderViolationLinkageData", theFinalOrderViolationLinkageData), currentHashCode, theFinalOrderViolationLinkageData);
        }
        {
            List<FormalEnforcementActionData> theFormalEnforcementActionData;
            theFormalEnforcementActionData = (this.isSetFormalEnforcementActionData()?this.getFormalEnforcementActionData():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "formalEnforcementActionData", theFormalEnforcementActionData), currentHashCode, theFormalEnforcementActionData);
        }
        {
            List<GeneralPermitData> theGeneralPermitData;
            theGeneralPermitData = (this.isSetGeneralPermitData()?this.getGeneralPermitData():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "generalPermitData", theGeneralPermitData), currentHashCode, theGeneralPermitData);
        }
        {
            List<HistoricalPermitScheduleEventsData> theHistoricalPermitScheduleEventsData;
            theHistoricalPermitScheduleEventsData = (this.isSetHistoricalPermitScheduleEventsData()?this.getHistoricalPermitScheduleEventsData():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "historicalPermitScheduleEventsData", theHistoricalPermitScheduleEventsData), currentHashCode, theHistoricalPermitScheduleEventsData);
        }
        {
            List<InformalEnforcementActionData> theInformalEnforcementActionData;
            theInformalEnforcementActionData = (this.isSetInformalEnforcementActionData()?this.getInformalEnforcementActionData():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "informalEnforcementActionData", theInformalEnforcementActionData), currentHashCode, theInformalEnforcementActionData);
        }
        {
            List<LimitSetData> theLimitSetData;
            theLimitSetData = (this.isSetLimitSetData()?this.getLimitSetData():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "limitSetData", theLimitSetData), currentHashCode, theLimitSetData);
        }
        {
            List<LocalLimitsProgramReportData> theLocalLimitsProgramReportData;
            theLocalLimitsProgramReportData = (this.isSetLocalLimitsProgramReportData()?this.getLocalLimitsProgramReportData():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "localLimitsProgramReportData", theLocalLimitsProgramReportData), currentHashCode, theLocalLimitsProgramReportData);
        }
        {
            List<MasterGeneralPermitData> theMasterGeneralPermitData;
            theMasterGeneralPermitData = (this.isSetMasterGeneralPermitData()?this.getMasterGeneralPermitData():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "masterGeneralPermitData", theMasterGeneralPermitData), currentHashCode, theMasterGeneralPermitData);
        }
        {
            List<NarrativeConditionScheduleData> theNarrativeConditionScheduleData;
            theNarrativeConditionScheduleData = (this.isSetNarrativeConditionScheduleData()?this.getNarrativeConditionScheduleData():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "narrativeConditionScheduleData", theNarrativeConditionScheduleData), currentHashCode, theNarrativeConditionScheduleData);
        }
        {
            List<ParameterLimitsData> theParameterLimitsData;
            theParameterLimitsData = (this.isSetParameterLimitsData()?this.getParameterLimitsData():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "parameterLimitsData", theParameterLimitsData), currentHashCode, theParameterLimitsData);
        }
        {
            List<PermitReissuanceData> thePermitReissuanceData;
            thePermitReissuanceData = (this.isSetPermitReissuanceData()?this.getPermitReissuanceData():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "permitReissuanceData", thePermitReissuanceData), currentHashCode, thePermitReissuanceData);
        }
        {
            List<PermittedFeatureData> thePermittedFeatureData;
            thePermittedFeatureData = (this.isSetPermittedFeatureData()?this.getPermittedFeatureData():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "permittedFeatureData", thePermittedFeatureData), currentHashCode, thePermittedFeatureData);
        }
        {
            List<PermitTerminationData> thePermitTerminationData;
            thePermitTerminationData = (this.isSetPermitTerminationData()?this.getPermitTerminationData():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "permitTerminationData", thePermitTerminationData), currentHashCode, thePermitTerminationData);
        }
        {
            List<PermitTrackingEventData> thePermitTrackingEventData;
            thePermitTrackingEventData = (this.isSetPermitTrackingEventData()?this.getPermitTrackingEventData():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "permitTrackingEventData", thePermitTrackingEventData), currentHashCode, thePermitTrackingEventData);
        }
        {
            List<POTWPermitData> thePOTWPermitData;
            thePOTWPermitData = (this.isSetPOTWPermitData()?this.getPOTWPermitData():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "potwPermitData", thePOTWPermitData), currentHashCode, thePOTWPermitData);
        }
        {
            List<PretreatmentPerformanceSummaryData> thePretreatmentPerformanceSummaryData;
            thePretreatmentPerformanceSummaryData = (this.isSetPretreatmentPerformanceSummaryData()?this.getPretreatmentPerformanceSummaryData():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "pretreatmentPerformanceSummaryData", thePretreatmentPerformanceSummaryData), currentHashCode, thePretreatmentPerformanceSummaryData);
        }
        {
            List<PretreatmentPermitData> thePretreatmentPermitData;
            thePretreatmentPermitData = (this.isSetPretreatmentPermitData()?this.getPretreatmentPermitData():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "pretreatmentPermitData", thePretreatmentPermitData), currentHashCode, thePretreatmentPermitData);
        }
        {
            List<ScheduleEventViolationData> theScheduleEventViolationData;
            theScheduleEventViolationData = (this.isSetScheduleEventViolationData()?this.getScheduleEventViolationData():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "scheduleEventViolationData", theScheduleEventViolationData), currentHashCode, theScheduleEventViolationData);
        }
        {
            List<SingleEventViolationData> theSingleEventViolationData;
            theSingleEventViolationData = (this.isSetSingleEventViolationData()?this.getSingleEventViolationData():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "singleEventViolationData", theSingleEventViolationData), currentHashCode, theSingleEventViolationData);
        }
        {
            List<SSOAnnualReportData> theSSOAnnualReportData;
            theSSOAnnualReportData = (this.isSetSSOAnnualReportData()?this.getSSOAnnualReportData():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "ssoAnnualReportData", theSSOAnnualReportData), currentHashCode, theSSOAnnualReportData);
        }
        {
            List<SSOEventReportData> theSSOEventReportData;
            theSSOEventReportData = (this.isSetSSOEventReportData()?this.getSSOEventReportData():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "ssoEventReportData", theSSOEventReportData), currentHashCode, theSSOEventReportData);
        }
        {
            List<SSOMonthlyEventReportData> theSSOMonthlyEventReportData;
            theSSOMonthlyEventReportData = (this.isSetSSOMonthlyEventReportData()?this.getSSOMonthlyEventReportData():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "ssoMonthlyEventReportData", theSSOMonthlyEventReportData), currentHashCode, theSSOMonthlyEventReportData);
        }
        {
            List<SWConstructionPermitData> theSWConstructionPermitData;
            theSWConstructionPermitData = (this.isSetSWConstructionPermitData()?this.getSWConstructionPermitData():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "swConstructionPermitData", theSWConstructionPermitData), currentHashCode, theSWConstructionPermitData);
        }
        {
            List<SWEventReportData> theSWEventReportData;
            theSWEventReportData = (this.isSetSWEventReportData()?this.getSWEventReportData():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "swEventReportData", theSWEventReportData), currentHashCode, theSWEventReportData);
        }
        {
            List<SWIndustrialAnnualReportData> theSWIndustrialAnnualReportData;
            theSWIndustrialAnnualReportData = (this.isSetSWIndustrialAnnualReportData()?this.getSWIndustrialAnnualReportData():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "swIndustrialAnnualReportData", theSWIndustrialAnnualReportData), currentHashCode, theSWIndustrialAnnualReportData);
        }
        {
            List<SWIndustrialPermitData> theSWIndustrialPermitData;
            theSWIndustrialPermitData = (this.isSetSWIndustrialPermitData()?this.getSWIndustrialPermitData():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "swIndustrialPermitData", theSWIndustrialPermitData), currentHashCode, theSWIndustrialPermitData);
        }
        {
            List<SWMS4LargePermitData> theSWMS4LargePermitData;
            theSWMS4LargePermitData = (this.isSetSWMS4LargePermitData()?this.getSWMS4LargePermitData():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "swms4LargePermitData", theSWMS4LargePermitData), currentHashCode, theSWMS4LargePermitData);
        }
        {
            List<SWMS4ProgramReportData> theSWMS4ProgramReportData;
            theSWMS4ProgramReportData = (this.isSetSWMS4ProgramReportData()?this.getSWMS4ProgramReportData():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "swms4ProgramReportData", theSWMS4ProgramReportData), currentHashCode, theSWMS4ProgramReportData);
        }
        {
            List<SWMS4SmallPermitData> theSWMS4SmallPermitData;
            theSWMS4SmallPermitData = (this.isSetSWMS4SmallPermitData()?this.getSWMS4SmallPermitData():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "swms4SmallPermitData", theSWMS4SmallPermitData), currentHashCode, theSWMS4SmallPermitData);
        }
        {
            List<UnpermittedFacilityData> theUnpermittedFacilityData;
            theUnpermittedFacilityData = (this.isSetUnpermittedFacilityData()?this.getUnpermittedFacilityData():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "unpermittedFacilityData", theUnpermittedFacilityData), currentHashCode, theUnpermittedFacilityData);
        }
        {
            OperationType theOperation;
            theOperation = this.getOperation();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "operation", theOperation), currentHashCode, theOperation);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
