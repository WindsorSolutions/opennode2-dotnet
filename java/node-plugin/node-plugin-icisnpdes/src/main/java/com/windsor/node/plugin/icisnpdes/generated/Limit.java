//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.12.07 at 11:39:25 AM EST 
//


package com.windsor.node.plugin.icisnpdes.generated;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.CollectionTable;
import javax.persistence.Column;
import javax.persistence.ElementCollection;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlTransient;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import com.windsor.node.plugin.common.xml.bind.annotation.adapters.DateNoTimeZoneAdapter;
import com.windsor.node.plugin.common.xml.bind.annotation.adapters.IntegerAdapter;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for Limit complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="Limit">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}LimitStartDate"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}LimitEndDate"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}LimitTypeCode" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}MonthLimitApplies" maxOccurs="12" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}SampleTypeText" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}FrequencyOfAnalysisCode" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}EligibleForBurdenReduction" minOccurs="0"/>
 *         &lt;group ref="{http://www.exchangenetwork.net/schema/icis/5}StayDataGroup" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}EnforcementActionIdentifier" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}FinalOrderIdentifier" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}BasisOfLimit" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}LimitModificationTypeCode" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}LimitModificationEffectiveDate" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}LimitModificationTypeStayReasonText" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}LimitsUserDefinedField1" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}LimitsUserDefinedField2" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}LimitsUserDefinedField3" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}ConcentrationNumericConditionUnitMeasureCode" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}QuantityNumericConditionUnitMeasureCode" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}NumericCondition" maxOccurs="5" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Limit", propOrder = {
    "limitStartDate",
    "limitEndDate",
    "limitTypeCode",
    "monthLimitApplies",
    "sampleTypeText",
    "frequencyOfAnalysisCode",
    "eligibleForBurdenReduction",
    "limitStayTypeCode",
    "stayStartDate",
    "stayEndDate",
    "stayReasonText",
    "calculateViolationsIndicator",
    "enforcementActionIdentifier",
    "finalOrderIdentifier",
    "basisOfLimit",
    "limitModificationTypeCode",
    "limitModificationEffectiveDate",
    "limitModificationTypeStayReasonText",
    "limitsUserDefinedField1",
    "limitsUserDefinedField2",
    "limitsUserDefinedField3",
    "concentrationNumericConditionUnitMeasureCode",
    "quantityNumericConditionUnitMeasureCode",
    "numericCondition"
})
@Entity(name = "Limit")
@Table(name = "ICS_LMT")
@Inheritance(strategy = InheritanceType.JOINED)
public class Limit
    implements Serializable, Equals, HashCode
{

    private final static long serialVersionUID = 1L;
    @XmlElement(name = "LimitStartDate", required = true, type = String.class)
    @XmlJavaTypeAdapter(DateNoTimeZoneAdapter.class)
    @XmlSchemaType(name = "date")
    protected Date limitStartDate;
    @XmlElement(name = "LimitEndDate", required = true, type = String.class)
    @XmlJavaTypeAdapter(DateNoTimeZoneAdapter.class)
    @XmlSchemaType(name = "date")
    protected Date limitEndDate;
    @XmlElement(name = "LimitTypeCode")
    protected String limitTypeCode;
    @XmlElement(name = "MonthLimitApplies")
    protected List<MonthTextType> monthLimitApplies;
    @XmlElement(name = "SampleTypeText")
    protected String sampleTypeText;
    @XmlElement(name = "FrequencyOfAnalysisCode")
    protected String frequencyOfAnalysisCode;
    @XmlElement(name = "EligibleForBurdenReduction")
    protected YesNoIndicatorTypeBase eligibleForBurdenReduction;
    @XmlElement(name = "LimitStayTypeCode")
    protected String limitStayTypeCode;
    @XmlElement(name = "StayStartDate", type = String.class)
    @XmlJavaTypeAdapter(DateNoTimeZoneAdapter.class)
    protected Date stayStartDate;
    @XmlElement(name = "StayEndDate", type = String.class)
    @XmlJavaTypeAdapter(DateNoTimeZoneAdapter.class)
    protected Date stayEndDate;
    @XmlElement(name = "StayReasonText")
    protected String stayReasonText;
    @XmlElement(name = "CalculateViolationsIndicator")
    protected String calculateViolationsIndicator;
    @XmlElement(name = "EnforcementActionIdentifier")
    protected String enforcementActionIdentifier;
    @XmlElement(name = "FinalOrderIdentifier", type = String.class)
    @XmlJavaTypeAdapter(IntegerAdapter.class)
    protected Integer finalOrderIdentifier;
    @XmlElement(name = "BasisOfLimit")
    protected String basisOfLimit;
    @XmlElement(name = "LimitModificationTypeCode")
    protected String limitModificationTypeCode;
    @XmlElement(name = "LimitModificationEffectiveDate", type = String.class)
    @XmlJavaTypeAdapter(DateNoTimeZoneAdapter.class)
    protected Date limitModificationEffectiveDate;
    @XmlElement(name = "LimitModificationTypeStayReasonText")
    protected String limitModificationTypeStayReasonText;
    @XmlElement(name = "LimitsUserDefinedField1")
    protected String limitsUserDefinedField1;
    @XmlElement(name = "LimitsUserDefinedField2")
    protected String limitsUserDefinedField2;
    @XmlElement(name = "LimitsUserDefinedField3")
    protected String limitsUserDefinedField3;
    @XmlElement(name = "ConcentrationNumericConditionUnitMeasureCode")
    protected String concentrationNumericConditionUnitMeasureCode;
    @XmlElement(name = "QuantityNumericConditionUnitMeasureCode")
    protected String quantityNumericConditionUnitMeasureCode;
    @XmlElement(name = "NumericCondition")
    protected List<NumericCondition> numericCondition;
    @XmlTransient
    protected String dbid;

    /**
     * Gets the value of the limitStartDate property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "LMT_START_DATE")
    @Temporal(TemporalType.DATE)
    public Date getLimitStartDate() {
        return limitStartDate;
    }

    /**
     * Sets the value of the limitStartDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLimitStartDate(Date value) {
        this.limitStartDate = value;
    }

    @Transient
    public boolean isSetLimitStartDate() {
        return (this.limitStartDate!= null);
    }

    /**
     * Gets the value of the limitEndDate property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "LMT_END_DATE")
    @Temporal(TemporalType.DATE)
    public Date getLimitEndDate() {
        return limitEndDate;
    }

    /**
     * Sets the value of the limitEndDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLimitEndDate(Date value) {
        this.limitEndDate = value;
    }

    @Transient
    public boolean isSetLimitEndDate() {
        return (this.limitEndDate!= null);
    }

    /**
     * Gets the value of the limitTypeCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "LMT_TYPE_CODE", length = 3)
    public String getLimitTypeCode() {
        return limitTypeCode;
    }

    /**
     * Sets the value of the limitTypeCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLimitTypeCode(String value) {
        this.limitTypeCode = value;
    }

    @Transient
    public boolean isSetLimitTypeCode() {
        return (this.limitTypeCode!= null);
    }

    /**
     * Gets the value of the monthLimitApplies property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the monthLimitApplies property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getMonthLimitApplies().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link MonthTextType }
     * 
     * 
     */
    @ElementCollection
    @Column(name = "MN_LMT_APPLIES", length = 255)
    @Enumerated(EnumType.STRING)
    @CollectionTable(name = "ICS_MN_LMT_APPLIES", joinColumns = {
        @JoinColumn(name = "ICS_LMT_ID")
    })
    public List<MonthTextType> getMonthLimitApplies() {
        if (monthLimitApplies == null) {
            monthLimitApplies = new ArrayList<MonthTextType>();
        }
        return this.monthLimitApplies;
    }

    /**
     * 
     * 
     */
    public void setMonthLimitApplies(List<MonthTextType> monthLimitApplies) {
        this.monthLimitApplies = monthLimitApplies;
    }

    @Transient
    public boolean isSetMonthLimitApplies() {
        return ((this.monthLimitApplies!= null)&&(!this.monthLimitApplies.isEmpty()));
    }

    public void unsetMonthLimitApplies() {
        this.monthLimitApplies = null;
    }

    /**
     * Gets the value of the sampleTypeText property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "SMPL_TYPE_TXT", length = 3)
    public String getSampleTypeText() {
        return sampleTypeText;
    }

    /**
     * Sets the value of the sampleTypeText property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSampleTypeText(String value) {
        this.sampleTypeText = value;
    }

    @Transient
    public boolean isSetSampleTypeText() {
        return (this.sampleTypeText!= null);
    }

    /**
     * Gets the value of the frequencyOfAnalysisCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "FREQ_OF_ANALYSIS_CODE", length = 5)
    public String getFrequencyOfAnalysisCode() {
        return frequencyOfAnalysisCode;
    }

    /**
     * Sets the value of the frequencyOfAnalysisCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setFrequencyOfAnalysisCode(String value) {
        this.frequencyOfAnalysisCode = value;
    }

    @Transient
    public boolean isSetFrequencyOfAnalysisCode() {
        return (this.frequencyOfAnalysisCode!= null);
    }

    /**
     * Gets the value of the eligibleForBurdenReduction property.
     * 
     * @return
     *     possible object is
     *     {@link YesNoIndicatorTypeBase }
     *     
     */
    @Basic
    @Column(name = "ELIGIBLE_FOR_BURDEN_REDUCTION", columnDefinition = "char(1)", length = 1)
    @Enumerated(EnumType.STRING)
    public YesNoIndicatorTypeBase getEligibleForBurdenReduction() {
        return eligibleForBurdenReduction;
    }

    /**
     * Sets the value of the eligibleForBurdenReduction property.
     * 
     * @param value
     *     allowed object is
     *     {@link YesNoIndicatorTypeBase }
     *     
     */
    public void setEligibleForBurdenReduction(YesNoIndicatorTypeBase value) {
        this.eligibleForBurdenReduction = value;
    }

    @Transient
    public boolean isSetEligibleForBurdenReduction() {
        return (this.eligibleForBurdenReduction!= null);
    }

    /**
     * Gets the value of the limitStayTypeCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "LMT_STAY_TYPE_CODE", columnDefinition = "char(1)", length = 1)
    public String getLimitStayTypeCode() {
        return limitStayTypeCode;
    }

    /**
     * Sets the value of the limitStayTypeCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLimitStayTypeCode(String value) {
        this.limitStayTypeCode = value;
    }

    @Transient
    public boolean isSetLimitStayTypeCode() {
        return (this.limitStayTypeCode!= null);
    }

    /**
     * Gets the value of the stayStartDate property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "STAY_START_DATE")
    @Temporal(TemporalType.TIMESTAMP)
    public Date getStayStartDate() {
        return stayStartDate;
    }

    /**
     * Sets the value of the stayStartDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setStayStartDate(Date value) {
        this.stayStartDate = value;
    }

    @Transient
    public boolean isSetStayStartDate() {
        return (this.stayStartDate!= null);
    }

    /**
     * Gets the value of the stayEndDate property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "STAY_END_DATE")
    @Temporal(TemporalType.TIMESTAMP)
    public Date getStayEndDate() {
        return stayEndDate;
    }

    /**
     * Sets the value of the stayEndDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setStayEndDate(Date value) {
        this.stayEndDate = value;
    }

    @Transient
    public boolean isSetStayEndDate() {
        return (this.stayEndDate!= null);
    }

    /**
     * Gets the value of the stayReasonText property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "STAY_REASON_TXT", length = 500)
    public String getStayReasonText() {
        return stayReasonText;
    }

    /**
     * Sets the value of the stayReasonText property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setStayReasonText(String value) {
        this.stayReasonText = value;
    }

    @Transient
    public boolean isSetStayReasonText() {
        return (this.stayReasonText!= null);
    }

    /**
     * Gets the value of the calculateViolationsIndicator property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "CALCULATE_VIOL_IND", columnDefinition = "char(1)", length = 1)
    public String getCalculateViolationsIndicator() {
        return calculateViolationsIndicator;
    }

    /**
     * Sets the value of the calculateViolationsIndicator property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCalculateViolationsIndicator(String value) {
        this.calculateViolationsIndicator = value;
    }

    @Transient
    public boolean isSetCalculateViolationsIndicator() {
        return (this.calculateViolationsIndicator!= null);
    }

    /**
     * Gets the value of the enforcementActionIdentifier property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "ENFRC_ACTN_IDENT", length = 20)
    public String getEnforcementActionIdentifier() {
        return enforcementActionIdentifier;
    }

    /**
     * Sets the value of the enforcementActionIdentifier property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEnforcementActionIdentifier(String value) {
        this.enforcementActionIdentifier = value;
    }

    @Transient
    public boolean isSetEnforcementActionIdentifier() {
        return (this.enforcementActionIdentifier!= null);
    }

    /**
     * Gets the value of the finalOrderIdentifier property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "FINAL_ORDER_IDENT", scale = 0)
    public Integer getFinalOrderIdentifier() {
        return finalOrderIdentifier;
    }

    /**
     * Sets the value of the finalOrderIdentifier property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setFinalOrderIdentifier(Integer value) {
        this.finalOrderIdentifier = value;
    }

    @Transient
    public boolean isSetFinalOrderIdentifier() {
        return (this.finalOrderIdentifier!= null);
    }

    /**
     * Gets the value of the basisOfLimit property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "BASIS_OF_LMT", length = 3)
    public String getBasisOfLimit() {
        return basisOfLimit;
    }

    /**
     * Sets the value of the basisOfLimit property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setBasisOfLimit(String value) {
        this.basisOfLimit = value;
    }

    @Transient
    public boolean isSetBasisOfLimit() {
        return (this.basisOfLimit!= null);
    }

    /**
     * Gets the value of the limitModificationTypeCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "LMT_MOD_TYPE_CODE", length = 3)
    public String getLimitModificationTypeCode() {
        return limitModificationTypeCode;
    }

    /**
     * Sets the value of the limitModificationTypeCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLimitModificationTypeCode(String value) {
        this.limitModificationTypeCode = value;
    }

    @Transient
    public boolean isSetLimitModificationTypeCode() {
        return (this.limitModificationTypeCode!= null);
    }

    /**
     * Gets the value of the limitModificationEffectiveDate property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "LMT_MOD_EFFECTIVE_DATE")
    @Temporal(TemporalType.TIMESTAMP)
    public Date getLimitModificationEffectiveDate() {
        return limitModificationEffectiveDate;
    }

    /**
     * Sets the value of the limitModificationEffectiveDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLimitModificationEffectiveDate(Date value) {
        this.limitModificationEffectiveDate = value;
    }

    @Transient
    public boolean isSetLimitModificationEffectiveDate() {
        return (this.limitModificationEffectiveDate!= null);
    }

    /**
     * Gets the value of the limitModificationTypeStayReasonText property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "LMT_MOD_TYPE_STAY_REASON_TXT", length = 500)
    public String getLimitModificationTypeStayReasonText() {
        return limitModificationTypeStayReasonText;
    }

    /**
     * Sets the value of the limitModificationTypeStayReasonText property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLimitModificationTypeStayReasonText(String value) {
        this.limitModificationTypeStayReasonText = value;
    }

    @Transient
    public boolean isSetLimitModificationTypeStayReasonText() {
        return (this.limitModificationTypeStayReasonText!= null);
    }

    /**
     * Gets the value of the limitsUserDefinedField1 property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "LMTS_USR_DFND_FLD_1", columnDefinition = "char(1)", length = 1)
    public String getLimitsUserDefinedField1() {
        return limitsUserDefinedField1;
    }

    /**
     * Sets the value of the limitsUserDefinedField1 property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLimitsUserDefinedField1(String value) {
        this.limitsUserDefinedField1 = value;
    }

    @Transient
    public boolean isSetLimitsUserDefinedField1() {
        return (this.limitsUserDefinedField1 != null);
    }

    /**
     * Gets the value of the limitsUserDefinedField2 property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "LMTS_USR_DFND_FLD_2", length = 30)
    public String getLimitsUserDefinedField2() {
        return limitsUserDefinedField2;
    }

    /**
     * Sets the value of the limitsUserDefinedField2 property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLimitsUserDefinedField2(String value) {
        this.limitsUserDefinedField2 = value;
    }

    @Transient
    public boolean isSetLimitsUserDefinedField2() {
        return (this.limitsUserDefinedField2 != null);
    }

    /**
     * Gets the value of the limitsUserDefinedField3 property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "LMTS_USR_DFND_FLD_3", length = 150)
    public String getLimitsUserDefinedField3() {
        return limitsUserDefinedField3;
    }

    /**
     * Sets the value of the limitsUserDefinedField3 property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLimitsUserDefinedField3(String value) {
        this.limitsUserDefinedField3 = value;
    }

    @Transient
    public boolean isSetLimitsUserDefinedField3() {
        return (this.limitsUserDefinedField3 != null);
    }

    /**
     * Gets the value of the concentrationNumericConditionUnitMeasureCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "CONCEN_NUM_COND_UNIT_MEAS_CODE", length = 2)
    public String getConcentrationNumericConditionUnitMeasureCode() {
        return concentrationNumericConditionUnitMeasureCode;
    }

    /**
     * Sets the value of the concentrationNumericConditionUnitMeasureCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setConcentrationNumericConditionUnitMeasureCode(String value) {
        this.concentrationNumericConditionUnitMeasureCode = value;
    }

    @Transient
    public boolean isSetConcentrationNumericConditionUnitMeasureCode() {
        return (this.concentrationNumericConditionUnitMeasureCode!= null);
    }

    /**
     * Gets the value of the quantityNumericConditionUnitMeasureCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "QTY_NUM_COND_UNIT_MEAS_CODE", length = 2)
    public String getQuantityNumericConditionUnitMeasureCode() {
        return quantityNumericConditionUnitMeasureCode;
    }

    /**
     * Sets the value of the quantityNumericConditionUnitMeasureCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setQuantityNumericConditionUnitMeasureCode(String value) {
        this.quantityNumericConditionUnitMeasureCode = value;
    }

    @Transient
    public boolean isSetQuantityNumericConditionUnitMeasureCode() {
        return (this.quantityNumericConditionUnitMeasureCode!= null);
    }

    /**
     * Gets the value of the numericCondition property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the numericCondition property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getNumericCondition().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link NumericCondition }
     * 
     * 
     */
    @OneToMany(targetEntity = NumericCondition.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "ICS_LMT_ID")
    public List<NumericCondition> getNumericCondition() {
        if (numericCondition == null) {
            numericCondition = new ArrayList<NumericCondition>();
        }
        return this.numericCondition;
    }

    /**
     * 
     * 
     */
    public void setNumericCondition(List<NumericCondition> numericCondition) {
        this.numericCondition = numericCondition;
    }

    @Transient
    public boolean isSetNumericCondition() {
        return ((this.numericCondition!= null)&&(!this.numericCondition.isEmpty()));
    }

    public void unsetNumericCondition() {
        this.numericCondition = null;
    }

    /**
     * 
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Id
    @Column(name = "ICS_LMT_ID")
    @GeneratedValue(strategy = GenerationType.AUTO)
    public String getDbid() {
        return dbid;
    }

    /**
     * 
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDbid(String value) {
        this.dbid = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof Limit)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final Limit that = ((Limit) object);
        {
            Date lhsLimitStartDate;
            lhsLimitStartDate = this.getLimitStartDate();
            Date rhsLimitStartDate;
            rhsLimitStartDate = that.getLimitStartDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "limitStartDate", lhsLimitStartDate), LocatorUtils.property(thatLocator, "limitStartDate", rhsLimitStartDate), lhsLimitStartDate, rhsLimitStartDate)) {
                return false;
            }
        }
        {
            Date lhsLimitEndDate;
            lhsLimitEndDate = this.getLimitEndDate();
            Date rhsLimitEndDate;
            rhsLimitEndDate = that.getLimitEndDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "limitEndDate", lhsLimitEndDate), LocatorUtils.property(thatLocator, "limitEndDate", rhsLimitEndDate), lhsLimitEndDate, rhsLimitEndDate)) {
                return false;
            }
        }
        {
            String lhsLimitTypeCode;
            lhsLimitTypeCode = this.getLimitTypeCode();
            String rhsLimitTypeCode;
            rhsLimitTypeCode = that.getLimitTypeCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "limitTypeCode", lhsLimitTypeCode), LocatorUtils.property(thatLocator, "limitTypeCode", rhsLimitTypeCode), lhsLimitTypeCode, rhsLimitTypeCode)) {
                return false;
            }
        }
        {
            List<MonthTextType> lhsMonthLimitApplies;
            lhsMonthLimitApplies = (this.isSetMonthLimitApplies()?this.getMonthLimitApplies():null);
            List<MonthTextType> rhsMonthLimitApplies;
            rhsMonthLimitApplies = (that.isSetMonthLimitApplies()?that.getMonthLimitApplies():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "monthLimitApplies", lhsMonthLimitApplies), LocatorUtils.property(thatLocator, "monthLimitApplies", rhsMonthLimitApplies), lhsMonthLimitApplies, rhsMonthLimitApplies)) {
                return false;
            }
        }
        {
            String lhsSampleTypeText;
            lhsSampleTypeText = this.getSampleTypeText();
            String rhsSampleTypeText;
            rhsSampleTypeText = that.getSampleTypeText();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "sampleTypeText", lhsSampleTypeText), LocatorUtils.property(thatLocator, "sampleTypeText", rhsSampleTypeText), lhsSampleTypeText, rhsSampleTypeText)) {
                return false;
            }
        }
        {
            String lhsFrequencyOfAnalysisCode;
            lhsFrequencyOfAnalysisCode = this.getFrequencyOfAnalysisCode();
            String rhsFrequencyOfAnalysisCode;
            rhsFrequencyOfAnalysisCode = that.getFrequencyOfAnalysisCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "frequencyOfAnalysisCode", lhsFrequencyOfAnalysisCode), LocatorUtils.property(thatLocator, "frequencyOfAnalysisCode", rhsFrequencyOfAnalysisCode), lhsFrequencyOfAnalysisCode, rhsFrequencyOfAnalysisCode)) {
                return false;
            }
        }
        {
            YesNoIndicatorTypeBase lhsEligibleForBurdenReduction;
            lhsEligibleForBurdenReduction = this.getEligibleForBurdenReduction();
            YesNoIndicatorTypeBase rhsEligibleForBurdenReduction;
            rhsEligibleForBurdenReduction = that.getEligibleForBurdenReduction();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "eligibleForBurdenReduction", lhsEligibleForBurdenReduction), LocatorUtils.property(thatLocator, "eligibleForBurdenReduction", rhsEligibleForBurdenReduction), lhsEligibleForBurdenReduction, rhsEligibleForBurdenReduction)) {
                return false;
            }
        }
        {
            String lhsLimitStayTypeCode;
            lhsLimitStayTypeCode = this.getLimitStayTypeCode();
            String rhsLimitStayTypeCode;
            rhsLimitStayTypeCode = that.getLimitStayTypeCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "limitStayTypeCode", lhsLimitStayTypeCode), LocatorUtils.property(thatLocator, "limitStayTypeCode", rhsLimitStayTypeCode), lhsLimitStayTypeCode, rhsLimitStayTypeCode)) {
                return false;
            }
        }
        {
            Date lhsStayStartDate;
            lhsStayStartDate = this.getStayStartDate();
            Date rhsStayStartDate;
            rhsStayStartDate = that.getStayStartDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "stayStartDate", lhsStayStartDate), LocatorUtils.property(thatLocator, "stayStartDate", rhsStayStartDate), lhsStayStartDate, rhsStayStartDate)) {
                return false;
            }
        }
        {
            Date lhsStayEndDate;
            lhsStayEndDate = this.getStayEndDate();
            Date rhsStayEndDate;
            rhsStayEndDate = that.getStayEndDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "stayEndDate", lhsStayEndDate), LocatorUtils.property(thatLocator, "stayEndDate", rhsStayEndDate), lhsStayEndDate, rhsStayEndDate)) {
                return false;
            }
        }
        {
            String lhsStayReasonText;
            lhsStayReasonText = this.getStayReasonText();
            String rhsStayReasonText;
            rhsStayReasonText = that.getStayReasonText();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "stayReasonText", lhsStayReasonText), LocatorUtils.property(thatLocator, "stayReasonText", rhsStayReasonText), lhsStayReasonText, rhsStayReasonText)) {
                return false;
            }
        }
        {
            String lhsCalculateViolationsIndicator;
            lhsCalculateViolationsIndicator = this.getCalculateViolationsIndicator();
            String rhsCalculateViolationsIndicator;
            rhsCalculateViolationsIndicator = that.getCalculateViolationsIndicator();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "calculateViolationsIndicator", lhsCalculateViolationsIndicator), LocatorUtils.property(thatLocator, "calculateViolationsIndicator", rhsCalculateViolationsIndicator), lhsCalculateViolationsIndicator, rhsCalculateViolationsIndicator)) {
                return false;
            }
        }
        {
            String lhsEnforcementActionIdentifier;
            lhsEnforcementActionIdentifier = this.getEnforcementActionIdentifier();
            String rhsEnforcementActionIdentifier;
            rhsEnforcementActionIdentifier = that.getEnforcementActionIdentifier();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "enforcementActionIdentifier", lhsEnforcementActionIdentifier), LocatorUtils.property(thatLocator, "enforcementActionIdentifier", rhsEnforcementActionIdentifier), lhsEnforcementActionIdentifier, rhsEnforcementActionIdentifier)) {
                return false;
            }
        }
        {
            Integer lhsFinalOrderIdentifier;
            lhsFinalOrderIdentifier = this.getFinalOrderIdentifier();
            Integer rhsFinalOrderIdentifier;
            rhsFinalOrderIdentifier = that.getFinalOrderIdentifier();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "finalOrderIdentifier", lhsFinalOrderIdentifier), LocatorUtils.property(thatLocator, "finalOrderIdentifier", rhsFinalOrderIdentifier), lhsFinalOrderIdentifier, rhsFinalOrderIdentifier)) {
                return false;
            }
        }
        {
            String lhsBasisOfLimit;
            lhsBasisOfLimit = this.getBasisOfLimit();
            String rhsBasisOfLimit;
            rhsBasisOfLimit = that.getBasisOfLimit();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "basisOfLimit", lhsBasisOfLimit), LocatorUtils.property(thatLocator, "basisOfLimit", rhsBasisOfLimit), lhsBasisOfLimit, rhsBasisOfLimit)) {
                return false;
            }
        }
        {
            String lhsLimitModificationTypeCode;
            lhsLimitModificationTypeCode = this.getLimitModificationTypeCode();
            String rhsLimitModificationTypeCode;
            rhsLimitModificationTypeCode = that.getLimitModificationTypeCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "limitModificationTypeCode", lhsLimitModificationTypeCode), LocatorUtils.property(thatLocator, "limitModificationTypeCode", rhsLimitModificationTypeCode), lhsLimitModificationTypeCode, rhsLimitModificationTypeCode)) {
                return false;
            }
        }
        {
            Date lhsLimitModificationEffectiveDate;
            lhsLimitModificationEffectiveDate = this.getLimitModificationEffectiveDate();
            Date rhsLimitModificationEffectiveDate;
            rhsLimitModificationEffectiveDate = that.getLimitModificationEffectiveDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "limitModificationEffectiveDate", lhsLimitModificationEffectiveDate), LocatorUtils.property(thatLocator, "limitModificationEffectiveDate", rhsLimitModificationEffectiveDate), lhsLimitModificationEffectiveDate, rhsLimitModificationEffectiveDate)) {
                return false;
            }
        }
        {
            String lhsLimitModificationTypeStayReasonText;
            lhsLimitModificationTypeStayReasonText = this.getLimitModificationTypeStayReasonText();
            String rhsLimitModificationTypeStayReasonText;
            rhsLimitModificationTypeStayReasonText = that.getLimitModificationTypeStayReasonText();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "limitModificationTypeStayReasonText", lhsLimitModificationTypeStayReasonText), LocatorUtils.property(thatLocator, "limitModificationTypeStayReasonText", rhsLimitModificationTypeStayReasonText), lhsLimitModificationTypeStayReasonText, rhsLimitModificationTypeStayReasonText)) {
                return false;
            }
        }
        {
            String lhsLimitsUserDefinedField1;
            lhsLimitsUserDefinedField1 = this.getLimitsUserDefinedField1();
            String rhsLimitsUserDefinedField1;
            rhsLimitsUserDefinedField1 = that.getLimitsUserDefinedField1();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "limitsUserDefinedField1", lhsLimitsUserDefinedField1), LocatorUtils.property(thatLocator, "limitsUserDefinedField1", rhsLimitsUserDefinedField1), lhsLimitsUserDefinedField1, rhsLimitsUserDefinedField1)) {
                return false;
            }
        }
        {
            String lhsLimitsUserDefinedField2;
            lhsLimitsUserDefinedField2 = this.getLimitsUserDefinedField2();
            String rhsLimitsUserDefinedField2;
            rhsLimitsUserDefinedField2 = that.getLimitsUserDefinedField2();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "limitsUserDefinedField2", lhsLimitsUserDefinedField2), LocatorUtils.property(thatLocator, "limitsUserDefinedField2", rhsLimitsUserDefinedField2), lhsLimitsUserDefinedField2, rhsLimitsUserDefinedField2)) {
                return false;
            }
        }
        {
            String lhsLimitsUserDefinedField3;
            lhsLimitsUserDefinedField3 = this.getLimitsUserDefinedField3();
            String rhsLimitsUserDefinedField3;
            rhsLimitsUserDefinedField3 = that.getLimitsUserDefinedField3();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "limitsUserDefinedField3", lhsLimitsUserDefinedField3), LocatorUtils.property(thatLocator, "limitsUserDefinedField3", rhsLimitsUserDefinedField3), lhsLimitsUserDefinedField3, rhsLimitsUserDefinedField3)) {
                return false;
            }
        }
        {
            String lhsConcentrationNumericConditionUnitMeasureCode;
            lhsConcentrationNumericConditionUnitMeasureCode = this.getConcentrationNumericConditionUnitMeasureCode();
            String rhsConcentrationNumericConditionUnitMeasureCode;
            rhsConcentrationNumericConditionUnitMeasureCode = that.getConcentrationNumericConditionUnitMeasureCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "concentrationNumericConditionUnitMeasureCode", lhsConcentrationNumericConditionUnitMeasureCode), LocatorUtils.property(thatLocator, "concentrationNumericConditionUnitMeasureCode", rhsConcentrationNumericConditionUnitMeasureCode), lhsConcentrationNumericConditionUnitMeasureCode, rhsConcentrationNumericConditionUnitMeasureCode)) {
                return false;
            }
        }
        {
            String lhsQuantityNumericConditionUnitMeasureCode;
            lhsQuantityNumericConditionUnitMeasureCode = this.getQuantityNumericConditionUnitMeasureCode();
            String rhsQuantityNumericConditionUnitMeasureCode;
            rhsQuantityNumericConditionUnitMeasureCode = that.getQuantityNumericConditionUnitMeasureCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "quantityNumericConditionUnitMeasureCode", lhsQuantityNumericConditionUnitMeasureCode), LocatorUtils.property(thatLocator, "quantityNumericConditionUnitMeasureCode", rhsQuantityNumericConditionUnitMeasureCode), lhsQuantityNumericConditionUnitMeasureCode, rhsQuantityNumericConditionUnitMeasureCode)) {
                return false;
            }
        }
        {
            List<NumericCondition> lhsNumericCondition;
            lhsNumericCondition = (this.isSetNumericCondition()?this.getNumericCondition():null);
            List<NumericCondition> rhsNumericCondition;
            rhsNumericCondition = (that.isSetNumericCondition()?that.getNumericCondition():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "numericCondition", lhsNumericCondition), LocatorUtils.property(thatLocator, "numericCondition", rhsNumericCondition), lhsNumericCondition, rhsNumericCondition)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            Date theLimitStartDate;
            theLimitStartDate = this.getLimitStartDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "limitStartDate", theLimitStartDate), currentHashCode, theLimitStartDate);
        }
        {
            Date theLimitEndDate;
            theLimitEndDate = this.getLimitEndDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "limitEndDate", theLimitEndDate), currentHashCode, theLimitEndDate);
        }
        {
            String theLimitTypeCode;
            theLimitTypeCode = this.getLimitTypeCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "limitTypeCode", theLimitTypeCode), currentHashCode, theLimitTypeCode);
        }
        {
            List<MonthTextType> theMonthLimitApplies;
            theMonthLimitApplies = (this.isSetMonthLimitApplies()?this.getMonthLimitApplies():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "monthLimitApplies", theMonthLimitApplies), currentHashCode, theMonthLimitApplies);
        }
        {
            String theSampleTypeText;
            theSampleTypeText = this.getSampleTypeText();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "sampleTypeText", theSampleTypeText), currentHashCode, theSampleTypeText);
        }
        {
            String theFrequencyOfAnalysisCode;
            theFrequencyOfAnalysisCode = this.getFrequencyOfAnalysisCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "frequencyOfAnalysisCode", theFrequencyOfAnalysisCode), currentHashCode, theFrequencyOfAnalysisCode);
        }
        {
            YesNoIndicatorTypeBase theEligibleForBurdenReduction;
            theEligibleForBurdenReduction = this.getEligibleForBurdenReduction();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "eligibleForBurdenReduction", theEligibleForBurdenReduction), currentHashCode, theEligibleForBurdenReduction);
        }
        {
            String theLimitStayTypeCode;
            theLimitStayTypeCode = this.getLimitStayTypeCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "limitStayTypeCode", theLimitStayTypeCode), currentHashCode, theLimitStayTypeCode);
        }
        {
            Date theStayStartDate;
            theStayStartDate = this.getStayStartDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "stayStartDate", theStayStartDate), currentHashCode, theStayStartDate);
        }
        {
            Date theStayEndDate;
            theStayEndDate = this.getStayEndDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "stayEndDate", theStayEndDate), currentHashCode, theStayEndDate);
        }
        {
            String theStayReasonText;
            theStayReasonText = this.getStayReasonText();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "stayReasonText", theStayReasonText), currentHashCode, theStayReasonText);
        }
        {
            String theCalculateViolationsIndicator;
            theCalculateViolationsIndicator = this.getCalculateViolationsIndicator();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "calculateViolationsIndicator", theCalculateViolationsIndicator), currentHashCode, theCalculateViolationsIndicator);
        }
        {
            String theEnforcementActionIdentifier;
            theEnforcementActionIdentifier = this.getEnforcementActionIdentifier();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "enforcementActionIdentifier", theEnforcementActionIdentifier), currentHashCode, theEnforcementActionIdentifier);
        }
        {
            Integer theFinalOrderIdentifier;
            theFinalOrderIdentifier = this.getFinalOrderIdentifier();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "finalOrderIdentifier", theFinalOrderIdentifier), currentHashCode, theFinalOrderIdentifier);
        }
        {
            String theBasisOfLimit;
            theBasisOfLimit = this.getBasisOfLimit();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "basisOfLimit", theBasisOfLimit), currentHashCode, theBasisOfLimit);
        }
        {
            String theLimitModificationTypeCode;
            theLimitModificationTypeCode = this.getLimitModificationTypeCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "limitModificationTypeCode", theLimitModificationTypeCode), currentHashCode, theLimitModificationTypeCode);
        }
        {
            Date theLimitModificationEffectiveDate;
            theLimitModificationEffectiveDate = this.getLimitModificationEffectiveDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "limitModificationEffectiveDate", theLimitModificationEffectiveDate), currentHashCode, theLimitModificationEffectiveDate);
        }
        {
            String theLimitModificationTypeStayReasonText;
            theLimitModificationTypeStayReasonText = this.getLimitModificationTypeStayReasonText();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "limitModificationTypeStayReasonText", theLimitModificationTypeStayReasonText), currentHashCode, theLimitModificationTypeStayReasonText);
        }
        {
            String theLimitsUserDefinedField1;
            theLimitsUserDefinedField1 = this.getLimitsUserDefinedField1();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "limitsUserDefinedField1", theLimitsUserDefinedField1), currentHashCode, theLimitsUserDefinedField1);
        }
        {
            String theLimitsUserDefinedField2;
            theLimitsUserDefinedField2 = this.getLimitsUserDefinedField2();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "limitsUserDefinedField2", theLimitsUserDefinedField2), currentHashCode, theLimitsUserDefinedField2);
        }
        {
            String theLimitsUserDefinedField3;
            theLimitsUserDefinedField3 = this.getLimitsUserDefinedField3();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "limitsUserDefinedField3", theLimitsUserDefinedField3), currentHashCode, theLimitsUserDefinedField3);
        }
        {
            String theConcentrationNumericConditionUnitMeasureCode;
            theConcentrationNumericConditionUnitMeasureCode = this.getConcentrationNumericConditionUnitMeasureCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "concentrationNumericConditionUnitMeasureCode", theConcentrationNumericConditionUnitMeasureCode), currentHashCode, theConcentrationNumericConditionUnitMeasureCode);
        }
        {
            String theQuantityNumericConditionUnitMeasureCode;
            theQuantityNumericConditionUnitMeasureCode = this.getQuantityNumericConditionUnitMeasureCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "quantityNumericConditionUnitMeasureCode", theQuantityNumericConditionUnitMeasureCode), currentHashCode, theQuantityNumericConditionUnitMeasureCode);
        }
        {
            List<NumericCondition> theNumericCondition;
            theNumericCondition = (this.isSetNumericCondition()?this.getNumericCondition():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "numericCondition", theNumericCondition), currentHashCode, theNumericCondition);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
