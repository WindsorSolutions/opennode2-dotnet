//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.12.07 at 11:39:25 AM EST 
//


package com.windsor.node.plugin.icisnpdes.generated;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.CollectionTable;
import javax.persistence.Column;
import javax.persistence.ElementCollection;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlTransient;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import com.windsor.node.plugin.common.xml.bind.annotation.adapters.DateNoTimeZoneAdapter;
import com.windsor.node.plugin.common.xml.bind.annotation.adapters.IntegerAdapter;
import com.windsor.node.plugin.icisnpdes.domain.AbstractHasComplianceMonitoring;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for CAFOInspection complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="CAFOInspection">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;group ref="{http://www.exchangenetwork.net/schema/icis/5}CAFOInspectionClassificationGroup" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}DischargesDuringYearProductionAreaIndicator" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}AnimalType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;group ref="{http://www.exchangenetwork.net/schema/icis/5}ConfinementContainmentGroup" minOccurs="0"/>
 *         &lt;group ref="{http://www.exchangenetwork.net/schema/icis/5}DrainageApplicationGroup" minOccurs="0"/>
 *         &lt;group ref="{http://www.exchangenetwork.net/schema/icis/5}AnimalNMPLitterGroup" minOccurs="0"/>
 *         &lt;group ref="{http://www.exchangenetwork.net/schema/icis/5}NMPDetailsGroup" minOccurs="0"/>
 *         &lt;group ref="{http://www.exchangenetwork.net/schema/icis/5}EMSGroup" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}LandApplicationBMP" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;group ref="{http://www.exchangenetwork.net/schema/icis/5}CapacityGroup" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}CAFOInspectionViolationTypeCode" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "CAFOInspection", propOrder = {
    "cafoClassificationCode",
    "isAnimalFacilityTypeCAFOIndicator",
    "cafoDesignationDate",
    "cafoDesignationReasonText",
    "dischargesDuringYearProductionAreaIndicator",
    "animalType",
    "manureLitterProcessedWastewaterStorage",
    "containment",
    "numberAcresContributingDrainage",
    "applicationMeasureAvailableLandNumber",
    "solidManureLitterGeneratedAmount",
    "liquidManureWastewaterGeneratedAmount",
    "solidManureLitterTransferAmount",
    "liquidManureWastewaterTransferAmount",
    "nmpDevelopedCertifiedPlannerApprovedIndicator",
    "nmpDevelopedDate",
    "nmpLastUpdatedDate",
    "environmentalManagementSystemIndicator",
    "emsDevelopedDate",
    "emsLastUpdatedDate",
    "landApplicationBMP",
    "livestockMaximumCapacityNumber",
    "livestockCapacityDeterminationBasedUponNumber",
    "authorizedLivestockCapacityNumber",
    "cafoInspectionViolationTypeCode"
})
@Entity(name = "CAFOInspection")
@Table(name = "ICS_CAFO_INSP")
@Inheritance(strategy = InheritanceType.JOINED)
public class CAFOInspection
    extends AbstractHasComplianceMonitoring
    implements Serializable, Equals, HashCode
{

    private final static long serialVersionUID = 1L;
    @XmlElement(name = "CAFOClassificationCode")
    protected String cafoClassificationCode;
    @XmlElement(name = "IsAnimalFacilityTypeCAFOIndicator")
    protected String isAnimalFacilityTypeCAFOIndicator;
    @XmlElement(name = "CAFODesignationDate", type = String.class)
    @XmlJavaTypeAdapter(DateNoTimeZoneAdapter.class)
    protected Date cafoDesignationDate;
    @XmlElement(name = "CAFODesignationReasonText")
    protected String cafoDesignationReasonText;
    @XmlElement(name = "DischargesDuringYearProductionAreaIndicator")
    protected String dischargesDuringYearProductionAreaIndicator;
    @XmlElement(name = "AnimalType")
    protected List<AnimalType> animalType;
    @XmlElement(name = "ManureLitterProcessedWastewaterStorage")
    protected List<ManureLitterProcessedWastewaterStorage> manureLitterProcessedWastewaterStorage;
    @XmlElement(name = "Containment")
    protected List<Containment> containment;
    @XmlElement(name = "NumberAcresContributingDrainage", type = String.class)
    @XmlJavaTypeAdapter(IntegerAdapter.class)
    protected Integer numberAcresContributingDrainage;
    @XmlElement(name = "ApplicationMeasureAvailableLandNumber", type = String.class)
    @XmlJavaTypeAdapter(IntegerAdapter.class)
    protected Integer applicationMeasureAvailableLandNumber;
    @XmlElement(name = "SolidManureLitterGeneratedAmount", type = String.class)
    @XmlJavaTypeAdapter(IntegerAdapter.class)
    protected Integer solidManureLitterGeneratedAmount;
    @XmlElement(name = "LiquidManureWastewaterGeneratedAmount", type = String.class)
    @XmlJavaTypeAdapter(IntegerAdapter.class)
    protected Integer liquidManureWastewaterGeneratedAmount;
    @XmlElement(name = "SolidManureLitterTransferAmount", type = String.class)
    @XmlJavaTypeAdapter(IntegerAdapter.class)
    protected Integer solidManureLitterTransferAmount;
    @XmlElement(name = "LiquidManureWastewaterTransferAmount", type = String.class)
    @XmlJavaTypeAdapter(IntegerAdapter.class)
    protected Integer liquidManureWastewaterTransferAmount;
    @XmlElement(name = "NMPDevelopedCertifiedPlannerApprovedIndicator")
    protected String nmpDevelopedCertifiedPlannerApprovedIndicator;
    @XmlElement(name = "NMPDevelopedDate", type = String.class)
    @XmlJavaTypeAdapter(DateNoTimeZoneAdapter.class)
    protected Date nmpDevelopedDate;
    @XmlElement(name = "NMPLastUpdatedDate", type = String.class)
    @XmlJavaTypeAdapter(DateNoTimeZoneAdapter.class)
    protected Date nmpLastUpdatedDate;
    @XmlElement(name = "EnvironmentalManagementSystemIndicator")
    protected String environmentalManagementSystemIndicator;
    @XmlElement(name = "EMSDevelopedDate", type = String.class)
    @XmlJavaTypeAdapter(DateNoTimeZoneAdapter.class)
    protected Date emsDevelopedDate;
    @XmlElement(name = "EMSLastUpdatedDate", type = String.class)
    @XmlJavaTypeAdapter(DateNoTimeZoneAdapter.class)
    protected Date emsLastUpdatedDate;
    @XmlElement(name = "LandApplicationBMP")
    protected List<LandApplicationBMP> landApplicationBMP;
    @XmlElement(name = "LivestockMaximumCapacityNumber", type = String.class)
    @XmlJavaTypeAdapter(IntegerAdapter.class)
    protected Integer livestockMaximumCapacityNumber;
    @XmlElement(name = "LivestockCapacityDeterminationBasedUponNumber", type = String.class)
    @XmlJavaTypeAdapter(IntegerAdapter.class)
    protected Integer livestockCapacityDeterminationBasedUponNumber;
    @XmlElement(name = "AuthorizedLivestockCapacityNumber", type = String.class)
    @XmlJavaTypeAdapter(IntegerAdapter.class)
    protected Integer authorizedLivestockCapacityNumber;
    @XmlElement(name = "CAFOInspectionViolationTypeCode")
    protected List<String> cafoInspectionViolationTypeCode;
    @XmlTransient
    protected String dbid;

    /**
     * Gets the value of the cafoClassificationCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "CAFO_CLASS_CODE", length = 3)
    public String getCAFOClassificationCode() {
        return cafoClassificationCode;
    }

    /**
     * Sets the value of the cafoClassificationCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCAFOClassificationCode(String value) {
        this.cafoClassificationCode = value;
    }

    @Transient
    public boolean isSetCAFOClassificationCode() {
        return (this.cafoClassificationCode!= null);
    }

    /**
     * Gets the value of the isAnimalFacilityTypeCAFOIndicator property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "IS_ANML_FAC_TYPE_CAFO_IND", columnDefinition = "char(1)", length = 1)
    public String getIsAnimalFacilityTypeCAFOIndicator() {
        return isAnimalFacilityTypeCAFOIndicator;
    }

    /**
     * Sets the value of the isAnimalFacilityTypeCAFOIndicator property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setIsAnimalFacilityTypeCAFOIndicator(String value) {
        this.isAnimalFacilityTypeCAFOIndicator = value;
    }

    @Transient
    public boolean isSetIsAnimalFacilityTypeCAFOIndicator() {
        return (this.isAnimalFacilityTypeCAFOIndicator!= null);
    }

    /**
     * Gets the value of the cafoDesignationDate property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "CAFO_DESGN_DATE")
    @Temporal(TemporalType.TIMESTAMP)
    public Date getCAFODesignationDate() {
        return cafoDesignationDate;
    }

    /**
     * Sets the value of the cafoDesignationDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCAFODesignationDate(Date value) {
        this.cafoDesignationDate = value;
    }

    @Transient
    public boolean isSetCAFODesignationDate() {
        return (this.cafoDesignationDate!= null);
    }

    /**
     * Gets the value of the cafoDesignationReasonText property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "CAFO_DESGN_REASON_TXT", length = 500)
    public String getCAFODesignationReasonText() {
        return cafoDesignationReasonText;
    }

    /**
     * Sets the value of the cafoDesignationReasonText property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCAFODesignationReasonText(String value) {
        this.cafoDesignationReasonText = value;
    }

    @Transient
    public boolean isSetCAFODesignationReasonText() {
        return (this.cafoDesignationReasonText!= null);
    }

    /**
     * Gets the value of the dischargesDuringYearProductionAreaIndicator property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "DSCH_DRNG_YEAR_PROD_AREA_IND", length = 3)
    public String getDischargesDuringYearProductionAreaIndicator() {
        return dischargesDuringYearProductionAreaIndicator;
    }

    /**
     * Sets the value of the dischargesDuringYearProductionAreaIndicator property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDischargesDuringYearProductionAreaIndicator(String value) {
        this.dischargesDuringYearProductionAreaIndicator = value;
    }

    @Transient
    public boolean isSetDischargesDuringYearProductionAreaIndicator() {
        return (this.dischargesDuringYearProductionAreaIndicator!= null);
    }

    /**
     * Gets the value of the animalType property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the animalType property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAnimalType().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link AnimalType }
     * 
     * 
     */
    @OneToMany(targetEntity = AnimalType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "ICS_CAFO_INSP_ID")
    public List<AnimalType> getAnimalType() {
        if (animalType == null) {
            animalType = new ArrayList<AnimalType>();
        }
        return this.animalType;
    }

    /**
     * 
     * 
     */
    public void setAnimalType(List<AnimalType> animalType) {
        this.animalType = animalType;
    }

    @Transient
    public boolean isSetAnimalType() {
        return ((this.animalType!= null)&&(!this.animalType.isEmpty()));
    }

    public void unsetAnimalType() {
        this.animalType = null;
    }

    /**
     * Gets the value of the manureLitterProcessedWastewaterStorage property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the manureLitterProcessedWastewaterStorage property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getManureLitterProcessedWastewaterStorage().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ManureLitterProcessedWastewaterStorage }
     * 
     * 
     */
    @OneToMany(targetEntity = ManureLitterProcessedWastewaterStorage.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "ICS_CAFO_INSP_ID")
    public List<ManureLitterProcessedWastewaterStorage> getManureLitterProcessedWastewaterStorage() {
        if (manureLitterProcessedWastewaterStorage == null) {
            manureLitterProcessedWastewaterStorage = new ArrayList<ManureLitterProcessedWastewaterStorage>();
        }
        return this.manureLitterProcessedWastewaterStorage;
    }

    /**
     * 
     * 
     */
    public void setManureLitterProcessedWastewaterStorage(List<ManureLitterProcessedWastewaterStorage> manureLitterProcessedWastewaterStorage) {
        this.manureLitterProcessedWastewaterStorage = manureLitterProcessedWastewaterStorage;
    }

    @Transient
    public boolean isSetManureLitterProcessedWastewaterStorage() {
        return ((this.manureLitterProcessedWastewaterStorage!= null)&&(!this.manureLitterProcessedWastewaterStorage.isEmpty()));
    }

    public void unsetManureLitterProcessedWastewaterStorage() {
        this.manureLitterProcessedWastewaterStorage = null;
    }

    /**
     * Gets the value of the containment property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the containment property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getContainment().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Containment }
     * 
     * 
     */
    @OneToMany(targetEntity = Containment.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "ICS_CAFO_INSP_ID")
    public List<Containment> getContainment() {
        if (containment == null) {
            containment = new ArrayList<Containment>();
        }
        return this.containment;
    }

    /**
     * 
     * 
     */
    public void setContainment(List<Containment> containment) {
        this.containment = containment;
    }

    @Transient
    public boolean isSetContainment() {
        return ((this.containment!= null)&&(!this.containment.isEmpty()));
    }

    public void unsetContainment() {
        this.containment = null;
    }

    /**
     * Gets the value of the numberAcresContributingDrainage property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "NUM_ACRES_CONTRB_DRAIN", scale = 0)
    public Integer getNumberAcresContributingDrainage() {
        return numberAcresContributingDrainage;
    }

    /**
     * Sets the value of the numberAcresContributingDrainage property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setNumberAcresContributingDrainage(Integer value) {
        this.numberAcresContributingDrainage = value;
    }

    @Transient
    public boolean isSetNumberAcresContributingDrainage() {
        return (this.numberAcresContributingDrainage!= null);
    }

    /**
     * Gets the value of the applicationMeasureAvailableLandNumber property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "APPL_MEAS_AVAIL_LAND_NUM", scale = 0)
    public Integer getApplicationMeasureAvailableLandNumber() {
        return applicationMeasureAvailableLandNumber;
    }

    /**
     * Sets the value of the applicationMeasureAvailableLandNumber property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setApplicationMeasureAvailableLandNumber(Integer value) {
        this.applicationMeasureAvailableLandNumber = value;
    }

    @Transient
    public boolean isSetApplicationMeasureAvailableLandNumber() {
        return (this.applicationMeasureAvailableLandNumber!= null);
    }

    /**
     * Gets the value of the solidManureLitterGeneratedAmount property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "SOLID_MNUR_LTTR_GNRTD_AMT", scale = 0)
    public Integer getSolidManureLitterGeneratedAmount() {
        return solidManureLitterGeneratedAmount;
    }

    /**
     * Sets the value of the solidManureLitterGeneratedAmount property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSolidManureLitterGeneratedAmount(Integer value) {
        this.solidManureLitterGeneratedAmount = value;
    }

    @Transient
    public boolean isSetSolidManureLitterGeneratedAmount() {
        return (this.solidManureLitterGeneratedAmount!= null);
    }

    /**
     * Gets the value of the liquidManureWastewaterGeneratedAmount property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "LIQUID_MNUR_WW_GNRTD_AMT", scale = 0)
    public Integer getLiquidManureWastewaterGeneratedAmount() {
        return liquidManureWastewaterGeneratedAmount;
    }

    /**
     * Sets the value of the liquidManureWastewaterGeneratedAmount property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLiquidManureWastewaterGeneratedAmount(Integer value) {
        this.liquidManureWastewaterGeneratedAmount = value;
    }

    @Transient
    public boolean isSetLiquidManureWastewaterGeneratedAmount() {
        return (this.liquidManureWastewaterGeneratedAmount!= null);
    }

    /**
     * Gets the value of the solidManureLitterTransferAmount property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "SOLID_MNUR_LTTR_TRANS_AMT", scale = 0)
    public Integer getSolidManureLitterTransferAmount() {
        return solidManureLitterTransferAmount;
    }

    /**
     * Sets the value of the solidManureLitterTransferAmount property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSolidManureLitterTransferAmount(Integer value) {
        this.solidManureLitterTransferAmount = value;
    }

    @Transient
    public boolean isSetSolidManureLitterTransferAmount() {
        return (this.solidManureLitterTransferAmount!= null);
    }

    /**
     * Gets the value of the liquidManureWastewaterTransferAmount property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "LIQUID_MNUR_WW_TRANS_AMT", scale = 0)
    public Integer getLiquidManureWastewaterTransferAmount() {
        return liquidManureWastewaterTransferAmount;
    }

    /**
     * Sets the value of the liquidManureWastewaterTransferAmount property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLiquidManureWastewaterTransferAmount(Integer value) {
        this.liquidManureWastewaterTransferAmount = value;
    }

    @Transient
    public boolean isSetLiquidManureWastewaterTransferAmount() {
        return (this.liquidManureWastewaterTransferAmount!= null);
    }

    /**
     * Gets the value of the nmpDevelopedCertifiedPlannerApprovedIndicator property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "NMP_DVLPD_CERT_PLNR_APRVD_IND", columnDefinition = "char(1)", length = 1)
    public String getNMPDevelopedCertifiedPlannerApprovedIndicator() {
        return nmpDevelopedCertifiedPlannerApprovedIndicator;
    }

    /**
     * Sets the value of the nmpDevelopedCertifiedPlannerApprovedIndicator property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setNMPDevelopedCertifiedPlannerApprovedIndicator(String value) {
        this.nmpDevelopedCertifiedPlannerApprovedIndicator = value;
    }

    @Transient
    public boolean isSetNMPDevelopedCertifiedPlannerApprovedIndicator() {
        return (this.nmpDevelopedCertifiedPlannerApprovedIndicator!= null);
    }

    /**
     * Gets the value of the nmpDevelopedDate property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "NMP_DVLPD_DATE")
    @Temporal(TemporalType.TIMESTAMP)
    public Date getNMPDevelopedDate() {
        return nmpDevelopedDate;
    }

    /**
     * Sets the value of the nmpDevelopedDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setNMPDevelopedDate(Date value) {
        this.nmpDevelopedDate = value;
    }

    @Transient
    public boolean isSetNMPDevelopedDate() {
        return (this.nmpDevelopedDate!= null);
    }

    /**
     * Gets the value of the nmpLastUpdatedDate property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "NMP_LAST_UPDATED_DATE")
    @Temporal(TemporalType.TIMESTAMP)
    public Date getNMPLastUpdatedDate() {
        return nmpLastUpdatedDate;
    }

    /**
     * Sets the value of the nmpLastUpdatedDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setNMPLastUpdatedDate(Date value) {
        this.nmpLastUpdatedDate = value;
    }

    @Transient
    public boolean isSetNMPLastUpdatedDate() {
        return (this.nmpLastUpdatedDate!= null);
    }

    /**
     * Gets the value of the environmentalManagementSystemIndicator property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "ENVR_MGMT_SYSTM_IND", columnDefinition = "char(1)", length = 1)
    public String getEnvironmentalManagementSystemIndicator() {
        return environmentalManagementSystemIndicator;
    }

    /**
     * Sets the value of the environmentalManagementSystemIndicator property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEnvironmentalManagementSystemIndicator(String value) {
        this.environmentalManagementSystemIndicator = value;
    }

    @Transient
    public boolean isSetEnvironmentalManagementSystemIndicator() {
        return (this.environmentalManagementSystemIndicator!= null);
    }

    /**
     * Gets the value of the emsDevelopedDate property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "EMS_DVLPD_DATE")
    @Temporal(TemporalType.TIMESTAMP)
    public Date getEMSDevelopedDate() {
        return emsDevelopedDate;
    }

    /**
     * Sets the value of the emsDevelopedDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEMSDevelopedDate(Date value) {
        this.emsDevelopedDate = value;
    }

    @Transient
    public boolean isSetEMSDevelopedDate() {
        return (this.emsDevelopedDate!= null);
    }

    /**
     * Gets the value of the emsLastUpdatedDate property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "EMS_LAST_UPDATED_DATE")
    @Temporal(TemporalType.TIMESTAMP)
    public Date getEMSLastUpdatedDate() {
        return emsLastUpdatedDate;
    }

    /**
     * Sets the value of the emsLastUpdatedDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEMSLastUpdatedDate(Date value) {
        this.emsLastUpdatedDate = value;
    }

    @Transient
    public boolean isSetEMSLastUpdatedDate() {
        return (this.emsLastUpdatedDate!= null);
    }

    /**
     * Gets the value of the landApplicationBMP property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the landApplicationBMP property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getLandApplicationBMP().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link LandApplicationBMP }
     * 
     * 
     */
    @OneToMany(targetEntity = LandApplicationBMP.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "ICS_CAFO_INSP_ID")
    public List<LandApplicationBMP> getLandApplicationBMP() {
        if (landApplicationBMP == null) {
            landApplicationBMP = new ArrayList<LandApplicationBMP>();
        }
        return this.landApplicationBMP;
    }

    /**
     * 
     * 
     */
    public void setLandApplicationBMP(List<LandApplicationBMP> landApplicationBMP) {
        this.landApplicationBMP = landApplicationBMP;
    }

    @Transient
    public boolean isSetLandApplicationBMP() {
        return ((this.landApplicationBMP!= null)&&(!this.landApplicationBMP.isEmpty()));
    }

    public void unsetLandApplicationBMP() {
        this.landApplicationBMP = null;
    }

    /**
     * Gets the value of the livestockMaximumCapacityNumber property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "LVSTCK_MAX_CPCTY_NUM", scale = 0)
    public Integer getLivestockMaximumCapacityNumber() {
        return livestockMaximumCapacityNumber;
    }

    /**
     * Sets the value of the livestockMaximumCapacityNumber property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLivestockMaximumCapacityNumber(Integer value) {
        this.livestockMaximumCapacityNumber = value;
    }

    @Transient
    public boolean isSetLivestockMaximumCapacityNumber() {
        return (this.livestockMaximumCapacityNumber!= null);
    }

    /**
     * Gets the value of the livestockCapacityDeterminationBasedUponNumber property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "LVSTCK_CPCTY_DTRMN_BS_UPON_NUM", scale = 0)
    public Integer getLivestockCapacityDeterminationBasedUponNumber() {
        return livestockCapacityDeterminationBasedUponNumber;
    }

    /**
     * Sets the value of the livestockCapacityDeterminationBasedUponNumber property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLivestockCapacityDeterminationBasedUponNumber(Integer value) {
        this.livestockCapacityDeterminationBasedUponNumber = value;
    }

    @Transient
    public boolean isSetLivestockCapacityDeterminationBasedUponNumber() {
        return (this.livestockCapacityDeterminationBasedUponNumber!= null);
    }

    /**
     * Gets the value of the authorizedLivestockCapacityNumber property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "AUTH_LVSTCK_CPCTY_NUM", scale = 0)
    public Integer getAuthorizedLivestockCapacityNumber() {
        return authorizedLivestockCapacityNumber;
    }

    /**
     * Sets the value of the authorizedLivestockCapacityNumber property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAuthorizedLivestockCapacityNumber(Integer value) {
        this.authorizedLivestockCapacityNumber = value;
    }

    @Transient
    public boolean isSetAuthorizedLivestockCapacityNumber() {
        return (this.authorizedLivestockCapacityNumber!= null);
    }

    /**
     * Gets the value of the cafoInspectionViolationTypeCode property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the cafoInspectionViolationTypeCode property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getCAFOInspectionViolationTypeCode().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * 
     * 
     */
    @ElementCollection
    @Column(name = "CAFO_INSP_VIOL_TYPE_CODE", length = 3)
    @CollectionTable(name = "ICS_CAFO_INSP_VIOL_TYPE", joinColumns = {
        @JoinColumn(name = "ICS_CAFO_INSP_ID")
    })
    public List<String> getCAFOInspectionViolationTypeCode() {
        if (cafoInspectionViolationTypeCode == null) {
            cafoInspectionViolationTypeCode = new ArrayList<String>();
        }
        return this.cafoInspectionViolationTypeCode;
    }

    /**
     * 
     * 
     */
    public void setCAFOInspectionViolationTypeCode(List<String> cafoInspectionViolationTypeCode) {
        this.cafoInspectionViolationTypeCode = cafoInspectionViolationTypeCode;
    }

    @Transient
    public boolean isSetCAFOInspectionViolationTypeCode() {
        return ((this.cafoInspectionViolationTypeCode!= null)&&(!this.cafoInspectionViolationTypeCode.isEmpty()));
    }

    public void unsetCAFOInspectionViolationTypeCode() {
        this.cafoInspectionViolationTypeCode = null;
    }

    /**
     * 
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Id
    @Column(name = "ICS_CAFO_INSP_ID")
    @GeneratedValue(strategy = GenerationType.AUTO)
    public String getDbid() {
        return dbid;
    }

    /**
     * 
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDbid(String value) {
        this.dbid = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof CAFOInspection)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final CAFOInspection that = ((CAFOInspection) object);
        {
            String lhsCAFOClassificationCode;
            lhsCAFOClassificationCode = this.getCAFOClassificationCode();
            String rhsCAFOClassificationCode;
            rhsCAFOClassificationCode = that.getCAFOClassificationCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "cafoClassificationCode", lhsCAFOClassificationCode), LocatorUtils.property(thatLocator, "cafoClassificationCode", rhsCAFOClassificationCode), lhsCAFOClassificationCode, rhsCAFOClassificationCode)) {
                return false;
            }
        }
        {
            String lhsIsAnimalFacilityTypeCAFOIndicator;
            lhsIsAnimalFacilityTypeCAFOIndicator = this.getIsAnimalFacilityTypeCAFOIndicator();
            String rhsIsAnimalFacilityTypeCAFOIndicator;
            rhsIsAnimalFacilityTypeCAFOIndicator = that.getIsAnimalFacilityTypeCAFOIndicator();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "isAnimalFacilityTypeCAFOIndicator", lhsIsAnimalFacilityTypeCAFOIndicator), LocatorUtils.property(thatLocator, "isAnimalFacilityTypeCAFOIndicator", rhsIsAnimalFacilityTypeCAFOIndicator), lhsIsAnimalFacilityTypeCAFOIndicator, rhsIsAnimalFacilityTypeCAFOIndicator)) {
                return false;
            }
        }
        {
            Date lhsCAFODesignationDate;
            lhsCAFODesignationDate = this.getCAFODesignationDate();
            Date rhsCAFODesignationDate;
            rhsCAFODesignationDate = that.getCAFODesignationDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "cafoDesignationDate", lhsCAFODesignationDate), LocatorUtils.property(thatLocator, "cafoDesignationDate", rhsCAFODesignationDate), lhsCAFODesignationDate, rhsCAFODesignationDate)) {
                return false;
            }
        }
        {
            String lhsCAFODesignationReasonText;
            lhsCAFODesignationReasonText = this.getCAFODesignationReasonText();
            String rhsCAFODesignationReasonText;
            rhsCAFODesignationReasonText = that.getCAFODesignationReasonText();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "cafoDesignationReasonText", lhsCAFODesignationReasonText), LocatorUtils.property(thatLocator, "cafoDesignationReasonText", rhsCAFODesignationReasonText), lhsCAFODesignationReasonText, rhsCAFODesignationReasonText)) {
                return false;
            }
        }
        {
            String lhsDischargesDuringYearProductionAreaIndicator;
            lhsDischargesDuringYearProductionAreaIndicator = this.getDischargesDuringYearProductionAreaIndicator();
            String rhsDischargesDuringYearProductionAreaIndicator;
            rhsDischargesDuringYearProductionAreaIndicator = that.getDischargesDuringYearProductionAreaIndicator();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dischargesDuringYearProductionAreaIndicator", lhsDischargesDuringYearProductionAreaIndicator), LocatorUtils.property(thatLocator, "dischargesDuringYearProductionAreaIndicator", rhsDischargesDuringYearProductionAreaIndicator), lhsDischargesDuringYearProductionAreaIndicator, rhsDischargesDuringYearProductionAreaIndicator)) {
                return false;
            }
        }
        {
            List<AnimalType> lhsAnimalType;
            lhsAnimalType = (this.isSetAnimalType()?this.getAnimalType():null);
            List<AnimalType> rhsAnimalType;
            rhsAnimalType = (that.isSetAnimalType()?that.getAnimalType():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "animalType", lhsAnimalType), LocatorUtils.property(thatLocator, "animalType", rhsAnimalType), lhsAnimalType, rhsAnimalType)) {
                return false;
            }
        }
        {
            List<ManureLitterProcessedWastewaterStorage> lhsManureLitterProcessedWastewaterStorage;
            lhsManureLitterProcessedWastewaterStorage = (this.isSetManureLitterProcessedWastewaterStorage()?this.getManureLitterProcessedWastewaterStorage():null);
            List<ManureLitterProcessedWastewaterStorage> rhsManureLitterProcessedWastewaterStorage;
            rhsManureLitterProcessedWastewaterStorage = (that.isSetManureLitterProcessedWastewaterStorage()?that.getManureLitterProcessedWastewaterStorage():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "manureLitterProcessedWastewaterStorage", lhsManureLitterProcessedWastewaterStorage), LocatorUtils.property(thatLocator, "manureLitterProcessedWastewaterStorage", rhsManureLitterProcessedWastewaterStorage), lhsManureLitterProcessedWastewaterStorage, rhsManureLitterProcessedWastewaterStorage)) {
                return false;
            }
        }
        {
            List<Containment> lhsContainment;
            lhsContainment = (this.isSetContainment()?this.getContainment():null);
            List<Containment> rhsContainment;
            rhsContainment = (that.isSetContainment()?that.getContainment():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "containment", lhsContainment), LocatorUtils.property(thatLocator, "containment", rhsContainment), lhsContainment, rhsContainment)) {
                return false;
            }
        }
        {
            Integer lhsNumberAcresContributingDrainage;
            lhsNumberAcresContributingDrainage = this.getNumberAcresContributingDrainage();
            Integer rhsNumberAcresContributingDrainage;
            rhsNumberAcresContributingDrainage = that.getNumberAcresContributingDrainage();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "numberAcresContributingDrainage", lhsNumberAcresContributingDrainage), LocatorUtils.property(thatLocator, "numberAcresContributingDrainage", rhsNumberAcresContributingDrainage), lhsNumberAcresContributingDrainage, rhsNumberAcresContributingDrainage)) {
                return false;
            }
        }
        {
            Integer lhsApplicationMeasureAvailableLandNumber;
            lhsApplicationMeasureAvailableLandNumber = this.getApplicationMeasureAvailableLandNumber();
            Integer rhsApplicationMeasureAvailableLandNumber;
            rhsApplicationMeasureAvailableLandNumber = that.getApplicationMeasureAvailableLandNumber();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "applicationMeasureAvailableLandNumber", lhsApplicationMeasureAvailableLandNumber), LocatorUtils.property(thatLocator, "applicationMeasureAvailableLandNumber", rhsApplicationMeasureAvailableLandNumber), lhsApplicationMeasureAvailableLandNumber, rhsApplicationMeasureAvailableLandNumber)) {
                return false;
            }
        }
        {
            Integer lhsSolidManureLitterGeneratedAmount;
            lhsSolidManureLitterGeneratedAmount = this.getSolidManureLitterGeneratedAmount();
            Integer rhsSolidManureLitterGeneratedAmount;
            rhsSolidManureLitterGeneratedAmount = that.getSolidManureLitterGeneratedAmount();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "solidManureLitterGeneratedAmount", lhsSolidManureLitterGeneratedAmount), LocatorUtils.property(thatLocator, "solidManureLitterGeneratedAmount", rhsSolidManureLitterGeneratedAmount), lhsSolidManureLitterGeneratedAmount, rhsSolidManureLitterGeneratedAmount)) {
                return false;
            }
        }
        {
            Integer lhsLiquidManureWastewaterGeneratedAmount;
            lhsLiquidManureWastewaterGeneratedAmount = this.getLiquidManureWastewaterGeneratedAmount();
            Integer rhsLiquidManureWastewaterGeneratedAmount;
            rhsLiquidManureWastewaterGeneratedAmount = that.getLiquidManureWastewaterGeneratedAmount();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "liquidManureWastewaterGeneratedAmount", lhsLiquidManureWastewaterGeneratedAmount), LocatorUtils.property(thatLocator, "liquidManureWastewaterGeneratedAmount", rhsLiquidManureWastewaterGeneratedAmount), lhsLiquidManureWastewaterGeneratedAmount, rhsLiquidManureWastewaterGeneratedAmount)) {
                return false;
            }
        }
        {
            Integer lhsSolidManureLitterTransferAmount;
            lhsSolidManureLitterTransferAmount = this.getSolidManureLitterTransferAmount();
            Integer rhsSolidManureLitterTransferAmount;
            rhsSolidManureLitterTransferAmount = that.getSolidManureLitterTransferAmount();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "solidManureLitterTransferAmount", lhsSolidManureLitterTransferAmount), LocatorUtils.property(thatLocator, "solidManureLitterTransferAmount", rhsSolidManureLitterTransferAmount), lhsSolidManureLitterTransferAmount, rhsSolidManureLitterTransferAmount)) {
                return false;
            }
        }
        {
            Integer lhsLiquidManureWastewaterTransferAmount;
            lhsLiquidManureWastewaterTransferAmount = this.getLiquidManureWastewaterTransferAmount();
            Integer rhsLiquidManureWastewaterTransferAmount;
            rhsLiquidManureWastewaterTransferAmount = that.getLiquidManureWastewaterTransferAmount();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "liquidManureWastewaterTransferAmount", lhsLiquidManureWastewaterTransferAmount), LocatorUtils.property(thatLocator, "liquidManureWastewaterTransferAmount", rhsLiquidManureWastewaterTransferAmount), lhsLiquidManureWastewaterTransferAmount, rhsLiquidManureWastewaterTransferAmount)) {
                return false;
            }
        }
        {
            String lhsNMPDevelopedCertifiedPlannerApprovedIndicator;
            lhsNMPDevelopedCertifiedPlannerApprovedIndicator = this.getNMPDevelopedCertifiedPlannerApprovedIndicator();
            String rhsNMPDevelopedCertifiedPlannerApprovedIndicator;
            rhsNMPDevelopedCertifiedPlannerApprovedIndicator = that.getNMPDevelopedCertifiedPlannerApprovedIndicator();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "nmpDevelopedCertifiedPlannerApprovedIndicator", lhsNMPDevelopedCertifiedPlannerApprovedIndicator), LocatorUtils.property(thatLocator, "nmpDevelopedCertifiedPlannerApprovedIndicator", rhsNMPDevelopedCertifiedPlannerApprovedIndicator), lhsNMPDevelopedCertifiedPlannerApprovedIndicator, rhsNMPDevelopedCertifiedPlannerApprovedIndicator)) {
                return false;
            }
        }
        {
            Date lhsNMPDevelopedDate;
            lhsNMPDevelopedDate = this.getNMPDevelopedDate();
            Date rhsNMPDevelopedDate;
            rhsNMPDevelopedDate = that.getNMPDevelopedDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "nmpDevelopedDate", lhsNMPDevelopedDate), LocatorUtils.property(thatLocator, "nmpDevelopedDate", rhsNMPDevelopedDate), lhsNMPDevelopedDate, rhsNMPDevelopedDate)) {
                return false;
            }
        }
        {
            Date lhsNMPLastUpdatedDate;
            lhsNMPLastUpdatedDate = this.getNMPLastUpdatedDate();
            Date rhsNMPLastUpdatedDate;
            rhsNMPLastUpdatedDate = that.getNMPLastUpdatedDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "nmpLastUpdatedDate", lhsNMPLastUpdatedDate), LocatorUtils.property(thatLocator, "nmpLastUpdatedDate", rhsNMPLastUpdatedDate), lhsNMPLastUpdatedDate, rhsNMPLastUpdatedDate)) {
                return false;
            }
        }
        {
            String lhsEnvironmentalManagementSystemIndicator;
            lhsEnvironmentalManagementSystemIndicator = this.getEnvironmentalManagementSystemIndicator();
            String rhsEnvironmentalManagementSystemIndicator;
            rhsEnvironmentalManagementSystemIndicator = that.getEnvironmentalManagementSystemIndicator();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "environmentalManagementSystemIndicator", lhsEnvironmentalManagementSystemIndicator), LocatorUtils.property(thatLocator, "environmentalManagementSystemIndicator", rhsEnvironmentalManagementSystemIndicator), lhsEnvironmentalManagementSystemIndicator, rhsEnvironmentalManagementSystemIndicator)) {
                return false;
            }
        }
        {
            Date lhsEMSDevelopedDate;
            lhsEMSDevelopedDate = this.getEMSDevelopedDate();
            Date rhsEMSDevelopedDate;
            rhsEMSDevelopedDate = that.getEMSDevelopedDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "emsDevelopedDate", lhsEMSDevelopedDate), LocatorUtils.property(thatLocator, "emsDevelopedDate", rhsEMSDevelopedDate), lhsEMSDevelopedDate, rhsEMSDevelopedDate)) {
                return false;
            }
        }
        {
            Date lhsEMSLastUpdatedDate;
            lhsEMSLastUpdatedDate = this.getEMSLastUpdatedDate();
            Date rhsEMSLastUpdatedDate;
            rhsEMSLastUpdatedDate = that.getEMSLastUpdatedDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "emsLastUpdatedDate", lhsEMSLastUpdatedDate), LocatorUtils.property(thatLocator, "emsLastUpdatedDate", rhsEMSLastUpdatedDate), lhsEMSLastUpdatedDate, rhsEMSLastUpdatedDate)) {
                return false;
            }
        }
        {
            List<LandApplicationBMP> lhsLandApplicationBMP;
            lhsLandApplicationBMP = (this.isSetLandApplicationBMP()?this.getLandApplicationBMP():null);
            List<LandApplicationBMP> rhsLandApplicationBMP;
            rhsLandApplicationBMP = (that.isSetLandApplicationBMP()?that.getLandApplicationBMP():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "landApplicationBMP", lhsLandApplicationBMP), LocatorUtils.property(thatLocator, "landApplicationBMP", rhsLandApplicationBMP), lhsLandApplicationBMP, rhsLandApplicationBMP)) {
                return false;
            }
        }
        {
            Integer lhsLivestockMaximumCapacityNumber;
            lhsLivestockMaximumCapacityNumber = this.getLivestockMaximumCapacityNumber();
            Integer rhsLivestockMaximumCapacityNumber;
            rhsLivestockMaximumCapacityNumber = that.getLivestockMaximumCapacityNumber();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "livestockMaximumCapacityNumber", lhsLivestockMaximumCapacityNumber), LocatorUtils.property(thatLocator, "livestockMaximumCapacityNumber", rhsLivestockMaximumCapacityNumber), lhsLivestockMaximumCapacityNumber, rhsLivestockMaximumCapacityNumber)) {
                return false;
            }
        }
        {
            Integer lhsLivestockCapacityDeterminationBasedUponNumber;
            lhsLivestockCapacityDeterminationBasedUponNumber = this.getLivestockCapacityDeterminationBasedUponNumber();
            Integer rhsLivestockCapacityDeterminationBasedUponNumber;
            rhsLivestockCapacityDeterminationBasedUponNumber = that.getLivestockCapacityDeterminationBasedUponNumber();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "livestockCapacityDeterminationBasedUponNumber", lhsLivestockCapacityDeterminationBasedUponNumber), LocatorUtils.property(thatLocator, "livestockCapacityDeterminationBasedUponNumber", rhsLivestockCapacityDeterminationBasedUponNumber), lhsLivestockCapacityDeterminationBasedUponNumber, rhsLivestockCapacityDeterminationBasedUponNumber)) {
                return false;
            }
        }
        {
            Integer lhsAuthorizedLivestockCapacityNumber;
            lhsAuthorizedLivestockCapacityNumber = this.getAuthorizedLivestockCapacityNumber();
            Integer rhsAuthorizedLivestockCapacityNumber;
            rhsAuthorizedLivestockCapacityNumber = that.getAuthorizedLivestockCapacityNumber();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "authorizedLivestockCapacityNumber", lhsAuthorizedLivestockCapacityNumber), LocatorUtils.property(thatLocator, "authorizedLivestockCapacityNumber", rhsAuthorizedLivestockCapacityNumber), lhsAuthorizedLivestockCapacityNumber, rhsAuthorizedLivestockCapacityNumber)) {
                return false;
            }
        }
        {
            List<String> lhsCAFOInspectionViolationTypeCode;
            lhsCAFOInspectionViolationTypeCode = (this.isSetCAFOInspectionViolationTypeCode()?this.getCAFOInspectionViolationTypeCode():null);
            List<String> rhsCAFOInspectionViolationTypeCode;
            rhsCAFOInspectionViolationTypeCode = (that.isSetCAFOInspectionViolationTypeCode()?that.getCAFOInspectionViolationTypeCode():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "cafoInspectionViolationTypeCode", lhsCAFOInspectionViolationTypeCode), LocatorUtils.property(thatLocator, "cafoInspectionViolationTypeCode", rhsCAFOInspectionViolationTypeCode), lhsCAFOInspectionViolationTypeCode, rhsCAFOInspectionViolationTypeCode)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            String theCAFOClassificationCode;
            theCAFOClassificationCode = this.getCAFOClassificationCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "cafoClassificationCode", theCAFOClassificationCode), currentHashCode, theCAFOClassificationCode);
        }
        {
            String theIsAnimalFacilityTypeCAFOIndicator;
            theIsAnimalFacilityTypeCAFOIndicator = this.getIsAnimalFacilityTypeCAFOIndicator();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "isAnimalFacilityTypeCAFOIndicator", theIsAnimalFacilityTypeCAFOIndicator), currentHashCode, theIsAnimalFacilityTypeCAFOIndicator);
        }
        {
            Date theCAFODesignationDate;
            theCAFODesignationDate = this.getCAFODesignationDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "cafoDesignationDate", theCAFODesignationDate), currentHashCode, theCAFODesignationDate);
        }
        {
            String theCAFODesignationReasonText;
            theCAFODesignationReasonText = this.getCAFODesignationReasonText();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "cafoDesignationReasonText", theCAFODesignationReasonText), currentHashCode, theCAFODesignationReasonText);
        }
        {
            String theDischargesDuringYearProductionAreaIndicator;
            theDischargesDuringYearProductionAreaIndicator = this.getDischargesDuringYearProductionAreaIndicator();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dischargesDuringYearProductionAreaIndicator", theDischargesDuringYearProductionAreaIndicator), currentHashCode, theDischargesDuringYearProductionAreaIndicator);
        }
        {
            List<AnimalType> theAnimalType;
            theAnimalType = (this.isSetAnimalType()?this.getAnimalType():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "animalType", theAnimalType), currentHashCode, theAnimalType);
        }
        {
            List<ManureLitterProcessedWastewaterStorage> theManureLitterProcessedWastewaterStorage;
            theManureLitterProcessedWastewaterStorage = (this.isSetManureLitterProcessedWastewaterStorage()?this.getManureLitterProcessedWastewaterStorage():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "manureLitterProcessedWastewaterStorage", theManureLitterProcessedWastewaterStorage), currentHashCode, theManureLitterProcessedWastewaterStorage);
        }
        {
            List<Containment> theContainment;
            theContainment = (this.isSetContainment()?this.getContainment():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "containment", theContainment), currentHashCode, theContainment);
        }
        {
            Integer theNumberAcresContributingDrainage;
            theNumberAcresContributingDrainage = this.getNumberAcresContributingDrainage();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "numberAcresContributingDrainage", theNumberAcresContributingDrainage), currentHashCode, theNumberAcresContributingDrainage);
        }
        {
            Integer theApplicationMeasureAvailableLandNumber;
            theApplicationMeasureAvailableLandNumber = this.getApplicationMeasureAvailableLandNumber();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "applicationMeasureAvailableLandNumber", theApplicationMeasureAvailableLandNumber), currentHashCode, theApplicationMeasureAvailableLandNumber);
        }
        {
            Integer theSolidManureLitterGeneratedAmount;
            theSolidManureLitterGeneratedAmount = this.getSolidManureLitterGeneratedAmount();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "solidManureLitterGeneratedAmount", theSolidManureLitterGeneratedAmount), currentHashCode, theSolidManureLitterGeneratedAmount);
        }
        {
            Integer theLiquidManureWastewaterGeneratedAmount;
            theLiquidManureWastewaterGeneratedAmount = this.getLiquidManureWastewaterGeneratedAmount();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "liquidManureWastewaterGeneratedAmount", theLiquidManureWastewaterGeneratedAmount), currentHashCode, theLiquidManureWastewaterGeneratedAmount);
        }
        {
            Integer theSolidManureLitterTransferAmount;
            theSolidManureLitterTransferAmount = this.getSolidManureLitterTransferAmount();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "solidManureLitterTransferAmount", theSolidManureLitterTransferAmount), currentHashCode, theSolidManureLitterTransferAmount);
        }
        {
            Integer theLiquidManureWastewaterTransferAmount;
            theLiquidManureWastewaterTransferAmount = this.getLiquidManureWastewaterTransferAmount();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "liquidManureWastewaterTransferAmount", theLiquidManureWastewaterTransferAmount), currentHashCode, theLiquidManureWastewaterTransferAmount);
        }
        {
            String theNMPDevelopedCertifiedPlannerApprovedIndicator;
            theNMPDevelopedCertifiedPlannerApprovedIndicator = this.getNMPDevelopedCertifiedPlannerApprovedIndicator();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "nmpDevelopedCertifiedPlannerApprovedIndicator", theNMPDevelopedCertifiedPlannerApprovedIndicator), currentHashCode, theNMPDevelopedCertifiedPlannerApprovedIndicator);
        }
        {
            Date theNMPDevelopedDate;
            theNMPDevelopedDate = this.getNMPDevelopedDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "nmpDevelopedDate", theNMPDevelopedDate), currentHashCode, theNMPDevelopedDate);
        }
        {
            Date theNMPLastUpdatedDate;
            theNMPLastUpdatedDate = this.getNMPLastUpdatedDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "nmpLastUpdatedDate", theNMPLastUpdatedDate), currentHashCode, theNMPLastUpdatedDate);
        }
        {
            String theEnvironmentalManagementSystemIndicator;
            theEnvironmentalManagementSystemIndicator = this.getEnvironmentalManagementSystemIndicator();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "environmentalManagementSystemIndicator", theEnvironmentalManagementSystemIndicator), currentHashCode, theEnvironmentalManagementSystemIndicator);
        }
        {
            Date theEMSDevelopedDate;
            theEMSDevelopedDate = this.getEMSDevelopedDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "emsDevelopedDate", theEMSDevelopedDate), currentHashCode, theEMSDevelopedDate);
        }
        {
            Date theEMSLastUpdatedDate;
            theEMSLastUpdatedDate = this.getEMSLastUpdatedDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "emsLastUpdatedDate", theEMSLastUpdatedDate), currentHashCode, theEMSLastUpdatedDate);
        }
        {
            List<LandApplicationBMP> theLandApplicationBMP;
            theLandApplicationBMP = (this.isSetLandApplicationBMP()?this.getLandApplicationBMP():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "landApplicationBMP", theLandApplicationBMP), currentHashCode, theLandApplicationBMP);
        }
        {
            Integer theLivestockMaximumCapacityNumber;
            theLivestockMaximumCapacityNumber = this.getLivestockMaximumCapacityNumber();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "livestockMaximumCapacityNumber", theLivestockMaximumCapacityNumber), currentHashCode, theLivestockMaximumCapacityNumber);
        }
        {
            Integer theLivestockCapacityDeterminationBasedUponNumber;
            theLivestockCapacityDeterminationBasedUponNumber = this.getLivestockCapacityDeterminationBasedUponNumber();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "livestockCapacityDeterminationBasedUponNumber", theLivestockCapacityDeterminationBasedUponNumber), currentHashCode, theLivestockCapacityDeterminationBasedUponNumber);
        }
        {
            Integer theAuthorizedLivestockCapacityNumber;
            theAuthorizedLivestockCapacityNumber = this.getAuthorizedLivestockCapacityNumber();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "authorizedLivestockCapacityNumber", theAuthorizedLivestockCapacityNumber), currentHashCode, theAuthorizedLivestockCapacityNumber);
        }
        {
            List<String> theCAFOInspectionViolationTypeCode;
            theCAFOInspectionViolationTypeCode = (this.isSetCAFOInspectionViolationTypeCode()?this.getCAFOInspectionViolationTypeCode():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "cafoInspectionViolationTypeCode", theCAFOInspectionViolationTypeCode), currentHashCode, theCAFOInspectionViolationTypeCode);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
