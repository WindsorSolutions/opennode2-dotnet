//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.12.07 at 11:39:25 AM EST 
//


package com.windsor.node.plugin.icisnpdes.generated;

import java.io.Serializable;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for TargetPermittedFeatureGroup complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="TargetPermittedFeatureGroup">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}PermittedFeatureTypeCode" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}PermittedFeatureDescription" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}PermittedFeatureStateWaterBodyName" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}ImpairedWaterIndicator" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}TMDLCompletedIndicator" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}PermittedFeatureUserDefinedDataElement1" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}PermittedFeatureUserDefinedDataElement2" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}GeographicCoordinates" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "TargetPermittedFeatureGroup", propOrder = {
    "permittedFeatureTypeCode",
    "permittedFeatureDescription",
    "permittedFeatureStateWaterBodyName",
    "impairedWaterIndicator",
    "tmdlCompletedIndicator",
    "permittedFeatureUserDefinedDataElement1",
    "permittedFeatureUserDefinedDataElement2",
    "geographicCoordinates"
})
public class TargetPermittedFeatureGroup
    implements Serializable, Equals, HashCode
{

    private final static long serialVersionUID = 1L;
    @XmlElement(name = "PermittedFeatureTypeCode")
    protected String permittedFeatureTypeCode;
    @XmlElement(name = "PermittedFeatureDescription")
    protected String permittedFeatureDescription;
    @XmlElement(name = "PermittedFeatureStateWaterBodyName")
    protected String permittedFeatureStateWaterBodyName;
    @XmlElement(name = "ImpairedWaterIndicator")
    protected String impairedWaterIndicator;
    @XmlElement(name = "TMDLCompletedIndicator")
    protected String tmdlCompletedIndicator;
    @XmlElement(name = "PermittedFeatureUserDefinedDataElement1")
    protected String permittedFeatureUserDefinedDataElement1;
    @XmlElement(name = "PermittedFeatureUserDefinedDataElement2")
    protected String permittedFeatureUserDefinedDataElement2;
    @XmlElement(name = "GeographicCoordinates")
    protected GeographicCoordinates geographicCoordinates;

    /**
     * Gets the value of the permittedFeatureTypeCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPermittedFeatureTypeCode() {
        return permittedFeatureTypeCode;
    }

    /**
     * Sets the value of the permittedFeatureTypeCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPermittedFeatureTypeCode(String value) {
        this.permittedFeatureTypeCode = value;
    }

    public boolean isSetPermittedFeatureTypeCode() {
        return (this.permittedFeatureTypeCode!= null);
    }

    /**
     * Gets the value of the permittedFeatureDescription property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPermittedFeatureDescription() {
        return permittedFeatureDescription;
    }

    /**
     * Sets the value of the permittedFeatureDescription property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPermittedFeatureDescription(String value) {
        this.permittedFeatureDescription = value;
    }

    public boolean isSetPermittedFeatureDescription() {
        return (this.permittedFeatureDescription!= null);
    }

    /**
     * Gets the value of the permittedFeatureStateWaterBodyName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPermittedFeatureStateWaterBodyName() {
        return permittedFeatureStateWaterBodyName;
    }

    /**
     * Sets the value of the permittedFeatureStateWaterBodyName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPermittedFeatureStateWaterBodyName(String value) {
        this.permittedFeatureStateWaterBodyName = value;
    }

    public boolean isSetPermittedFeatureStateWaterBodyName() {
        return (this.permittedFeatureStateWaterBodyName!= null);
    }

    /**
     * Gets the value of the impairedWaterIndicator property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getImpairedWaterIndicator() {
        return impairedWaterIndicator;
    }

    /**
     * Sets the value of the impairedWaterIndicator property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setImpairedWaterIndicator(String value) {
        this.impairedWaterIndicator = value;
    }

    public boolean isSetImpairedWaterIndicator() {
        return (this.impairedWaterIndicator!= null);
    }

    /**
     * Gets the value of the tmdlCompletedIndicator property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getTMDLCompletedIndicator() {
        return tmdlCompletedIndicator;
    }

    /**
     * Sets the value of the tmdlCompletedIndicator property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTMDLCompletedIndicator(String value) {
        this.tmdlCompletedIndicator = value;
    }

    public boolean isSetTMDLCompletedIndicator() {
        return (this.tmdlCompletedIndicator!= null);
    }

    /**
     * Gets the value of the permittedFeatureUserDefinedDataElement1 property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPermittedFeatureUserDefinedDataElement1() {
        return permittedFeatureUserDefinedDataElement1;
    }

    /**
     * Sets the value of the permittedFeatureUserDefinedDataElement1 property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPermittedFeatureUserDefinedDataElement1(String value) {
        this.permittedFeatureUserDefinedDataElement1 = value;
    }

    public boolean isSetPermittedFeatureUserDefinedDataElement1() {
        return (this.permittedFeatureUserDefinedDataElement1 != null);
    }

    /**
     * Gets the value of the permittedFeatureUserDefinedDataElement2 property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPermittedFeatureUserDefinedDataElement2() {
        return permittedFeatureUserDefinedDataElement2;
    }

    /**
     * Sets the value of the permittedFeatureUserDefinedDataElement2 property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPermittedFeatureUserDefinedDataElement2(String value) {
        this.permittedFeatureUserDefinedDataElement2 = value;
    }

    public boolean isSetPermittedFeatureUserDefinedDataElement2() {
        return (this.permittedFeatureUserDefinedDataElement2 != null);
    }

    /**
     * Gets the value of the geographicCoordinates property.
     * 
     * @return
     *     possible object is
     *     {@link GeographicCoordinates }
     *     
     */
    public GeographicCoordinates getGeographicCoordinates() {
        return geographicCoordinates;
    }

    /**
     * Sets the value of the geographicCoordinates property.
     * 
     * @param value
     *     allowed object is
     *     {@link GeographicCoordinates }
     *     
     */
    public void setGeographicCoordinates(GeographicCoordinates value) {
        this.geographicCoordinates = value;
    }

    public boolean isSetGeographicCoordinates() {
        return (this.geographicCoordinates!= null);
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof TargetPermittedFeatureGroup)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final TargetPermittedFeatureGroup that = ((TargetPermittedFeatureGroup) object);
        {
            String lhsPermittedFeatureTypeCode;
            lhsPermittedFeatureTypeCode = this.getPermittedFeatureTypeCode();
            String rhsPermittedFeatureTypeCode;
            rhsPermittedFeatureTypeCode = that.getPermittedFeatureTypeCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "permittedFeatureTypeCode", lhsPermittedFeatureTypeCode), LocatorUtils.property(thatLocator, "permittedFeatureTypeCode", rhsPermittedFeatureTypeCode), lhsPermittedFeatureTypeCode, rhsPermittedFeatureTypeCode)) {
                return false;
            }
        }
        {
            String lhsPermittedFeatureDescription;
            lhsPermittedFeatureDescription = this.getPermittedFeatureDescription();
            String rhsPermittedFeatureDescription;
            rhsPermittedFeatureDescription = that.getPermittedFeatureDescription();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "permittedFeatureDescription", lhsPermittedFeatureDescription), LocatorUtils.property(thatLocator, "permittedFeatureDescription", rhsPermittedFeatureDescription), lhsPermittedFeatureDescription, rhsPermittedFeatureDescription)) {
                return false;
            }
        }
        {
            String lhsPermittedFeatureStateWaterBodyName;
            lhsPermittedFeatureStateWaterBodyName = this.getPermittedFeatureStateWaterBodyName();
            String rhsPermittedFeatureStateWaterBodyName;
            rhsPermittedFeatureStateWaterBodyName = that.getPermittedFeatureStateWaterBodyName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "permittedFeatureStateWaterBodyName", lhsPermittedFeatureStateWaterBodyName), LocatorUtils.property(thatLocator, "permittedFeatureStateWaterBodyName", rhsPermittedFeatureStateWaterBodyName), lhsPermittedFeatureStateWaterBodyName, rhsPermittedFeatureStateWaterBodyName)) {
                return false;
            }
        }
        {
            String lhsImpairedWaterIndicator;
            lhsImpairedWaterIndicator = this.getImpairedWaterIndicator();
            String rhsImpairedWaterIndicator;
            rhsImpairedWaterIndicator = that.getImpairedWaterIndicator();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "impairedWaterIndicator", lhsImpairedWaterIndicator), LocatorUtils.property(thatLocator, "impairedWaterIndicator", rhsImpairedWaterIndicator), lhsImpairedWaterIndicator, rhsImpairedWaterIndicator)) {
                return false;
            }
        }
        {
            String lhsTMDLCompletedIndicator;
            lhsTMDLCompletedIndicator = this.getTMDLCompletedIndicator();
            String rhsTMDLCompletedIndicator;
            rhsTMDLCompletedIndicator = that.getTMDLCompletedIndicator();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "tmdlCompletedIndicator", lhsTMDLCompletedIndicator), LocatorUtils.property(thatLocator, "tmdlCompletedIndicator", rhsTMDLCompletedIndicator), lhsTMDLCompletedIndicator, rhsTMDLCompletedIndicator)) {
                return false;
            }
        }
        {
            String lhsPermittedFeatureUserDefinedDataElement1;
            lhsPermittedFeatureUserDefinedDataElement1 = this.getPermittedFeatureUserDefinedDataElement1();
            String rhsPermittedFeatureUserDefinedDataElement1;
            rhsPermittedFeatureUserDefinedDataElement1 = that.getPermittedFeatureUserDefinedDataElement1();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "permittedFeatureUserDefinedDataElement1", lhsPermittedFeatureUserDefinedDataElement1), LocatorUtils.property(thatLocator, "permittedFeatureUserDefinedDataElement1", rhsPermittedFeatureUserDefinedDataElement1), lhsPermittedFeatureUserDefinedDataElement1, rhsPermittedFeatureUserDefinedDataElement1)) {
                return false;
            }
        }
        {
            String lhsPermittedFeatureUserDefinedDataElement2;
            lhsPermittedFeatureUserDefinedDataElement2 = this.getPermittedFeatureUserDefinedDataElement2();
            String rhsPermittedFeatureUserDefinedDataElement2;
            rhsPermittedFeatureUserDefinedDataElement2 = that.getPermittedFeatureUserDefinedDataElement2();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "permittedFeatureUserDefinedDataElement2", lhsPermittedFeatureUserDefinedDataElement2), LocatorUtils.property(thatLocator, "permittedFeatureUserDefinedDataElement2", rhsPermittedFeatureUserDefinedDataElement2), lhsPermittedFeatureUserDefinedDataElement2, rhsPermittedFeatureUserDefinedDataElement2)) {
                return false;
            }
        }
        {
            GeographicCoordinates lhsGeographicCoordinates;
            lhsGeographicCoordinates = this.getGeographicCoordinates();
            GeographicCoordinates rhsGeographicCoordinates;
            rhsGeographicCoordinates = that.getGeographicCoordinates();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "geographicCoordinates", lhsGeographicCoordinates), LocatorUtils.property(thatLocator, "geographicCoordinates", rhsGeographicCoordinates), lhsGeographicCoordinates, rhsGeographicCoordinates)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            String thePermittedFeatureTypeCode;
            thePermittedFeatureTypeCode = this.getPermittedFeatureTypeCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "permittedFeatureTypeCode", thePermittedFeatureTypeCode), currentHashCode, thePermittedFeatureTypeCode);
        }
        {
            String thePermittedFeatureDescription;
            thePermittedFeatureDescription = this.getPermittedFeatureDescription();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "permittedFeatureDescription", thePermittedFeatureDescription), currentHashCode, thePermittedFeatureDescription);
        }
        {
            String thePermittedFeatureStateWaterBodyName;
            thePermittedFeatureStateWaterBodyName = this.getPermittedFeatureStateWaterBodyName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "permittedFeatureStateWaterBodyName", thePermittedFeatureStateWaterBodyName), currentHashCode, thePermittedFeatureStateWaterBodyName);
        }
        {
            String theImpairedWaterIndicator;
            theImpairedWaterIndicator = this.getImpairedWaterIndicator();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "impairedWaterIndicator", theImpairedWaterIndicator), currentHashCode, theImpairedWaterIndicator);
        }
        {
            String theTMDLCompletedIndicator;
            theTMDLCompletedIndicator = this.getTMDLCompletedIndicator();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "tmdlCompletedIndicator", theTMDLCompletedIndicator), currentHashCode, theTMDLCompletedIndicator);
        }
        {
            String thePermittedFeatureUserDefinedDataElement1;
            thePermittedFeatureUserDefinedDataElement1 = this.getPermittedFeatureUserDefinedDataElement1();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "permittedFeatureUserDefinedDataElement1", thePermittedFeatureUserDefinedDataElement1), currentHashCode, thePermittedFeatureUserDefinedDataElement1);
        }
        {
            String thePermittedFeatureUserDefinedDataElement2;
            thePermittedFeatureUserDefinedDataElement2 = this.getPermittedFeatureUserDefinedDataElement2();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "permittedFeatureUserDefinedDataElement2", thePermittedFeatureUserDefinedDataElement2), currentHashCode, thePermittedFeatureUserDefinedDataElement2);
        }
        {
            GeographicCoordinates theGeographicCoordinates;
            theGeographicCoordinates = this.getGeographicCoordinates();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "geographicCoordinates", theGeographicCoordinates), currentHashCode, theGeographicCoordinates);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
