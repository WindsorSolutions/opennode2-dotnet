//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.12.07 at 11:39:25 AM EST 
//


package com.windsor.node.plugin.icisnpdes.generated;

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.Date;
import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlTransient;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import com.windsor.node.plugin.common.xml.bind.annotation.adapters.DateNoTimeZoneAdapter;
import com.windsor.node.plugin.common.xml.bind.annotation.adapters.Decimal4FloatingTypeAdapter;
import com.windsor.node.plugin.common.xml.bind.annotation.adapters.IntegerAdapter;
import com.windsor.node.plugin.icisnpdes.domain.AbstractHasComplianceMonitoring;
import org.hibernate.annotations.NotFound;
import org.hibernate.annotations.NotFoundAction;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for PretreatmentInspection complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="PretreatmentInspection">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;group ref="{http://www.exchangenetwork.net/schema/icis/5}PretreatmentDataGroup" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}LocalLimits" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}RemovalCredits" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "PretreatmentInspection", propOrder = {
    "suoReference",
    "suoDate",
    "acceptanceHazardousWaste",
    "acceptanceNonHazardousIndustrialWaste",
    "acceptanceHauledDomesticWastes",
    "annualPretreatmentBudget",
    "inadequacySamplingInspectionIndicator",
    "adequacyPretreatmentResources",
    "deficienciesIdentifiedDuringIUFileReview",
    "controlMechanismDeficiencies",
    "legalAuthorityDeficiencies",
    "deficienciesInterpretationApplicationPretreatmentStandards",
    "deficienciesDataManagementPublicParticipation",
    "violationIUScheduleRemedialMeasures",
    "formalResponseViolationIUScheduleRemedialMeasures",
    "annualFrequencyInfluentToxicantSampling",
    "annualFrequencyEffluentToxicantSampling",
    "annualFrequencySludgeToxicantSampling",
    "numberSIUs",
    "siUsWithoutControlMechanism",
    "siUsNotInspected",
    "siUsNotSampled",
    "siUsOnSchedule",
    "siUsSNCWithPretreatmentStandards",
    "siUsSNCWithReportingRequirements",
    "siUsSNCWithPretreatmentSchedule",
    "siUsSNCPublishedNewspaper",
    "violationNoticesIssuedSIUs",
    "administrativeOrdersIssuedSIUs",
    "civilSuitsFiledAgainstSIUs",
    "criminalSuitsFiledAgainstSIUs",
    "dollarAmountPenaltiesCollected",
    "iUsWhichPenaltiesHaveBeenCollected",
    "numberCIUs",
    "ciUsInSNC",
    "passThroughInterferenceIndicator",
    "localLimits",
    "removalCredits"
})
@Entity(name = "PretreatmentInspection")
@Table(name = "ICS_PRETR_INSP")
@Inheritance(strategy = InheritanceType.JOINED)
public class PretreatmentInspection
    extends AbstractHasComplianceMonitoring
    implements Serializable, Equals, HashCode
{

    private final static long serialVersionUID = 1L;
    @XmlElement(name = "SUOReference")
    protected String suoReference;
    @XmlElement(name = "SUODate", type = String.class)
    @XmlJavaTypeAdapter(DateNoTimeZoneAdapter.class)
    protected Date suoDate;
    @XmlElement(name = "AcceptanceHazardousWaste")
    protected YesNoIndicatorTypeBase acceptanceHazardousWaste;
    @XmlElement(name = "AcceptanceNonHazardousIndustrialWaste")
    protected YesNoIndicatorTypeBase acceptanceNonHazardousIndustrialWaste;
    @XmlElement(name = "AcceptanceHauledDomesticWastes")
    protected YesNoIndicatorTypeBase acceptanceHauledDomesticWastes;
    @XmlElement(name = "AnnualPretreatmentBudget")
    protected String annualPretreatmentBudget;
    @XmlElement(name = "InadequacySamplingInspectionIndicator")
    protected YesNoIndicatorTypeBase inadequacySamplingInspectionIndicator;
    @XmlElement(name = "AdequacyPretreatmentResources")
    protected YesNoIndicatorTypeBase adequacyPretreatmentResources;
    @XmlElement(name = "DeficienciesIdentifiedDuringIUFileReview")
    protected YesNoIndicatorTypeBase deficienciesIdentifiedDuringIUFileReview;
    @XmlElement(name = "ControlMechanismDeficiencies")
    protected YesNoIndicatorTypeBase controlMechanismDeficiencies;
    @XmlElement(name = "LegalAuthorityDeficiencies")
    protected YesNoIndicatorTypeBase legalAuthorityDeficiencies;
    @XmlElement(name = "DeficienciesInterpretationApplicationPretreatmentStandards")
    protected YesNoIndicatorTypeBase deficienciesInterpretationApplicationPretreatmentStandards;
    @XmlElement(name = "DeficienciesDataManagementPublicParticipation")
    protected YesNoIndicatorTypeBase deficienciesDataManagementPublicParticipation;
    @XmlElement(name = "ViolationIUScheduleRemedialMeasures")
    protected YesNoIndicatorTypeBase violationIUScheduleRemedialMeasures;
    @XmlElement(name = "FormalResponseViolationIUScheduleRemedialMeasures")
    protected String formalResponseViolationIUScheduleRemedialMeasures;
    @XmlElement(name = "AnnualFrequencyInfluentToxicantSampling", type = String.class)
    @XmlJavaTypeAdapter(IntegerAdapter.class)
    protected Integer annualFrequencyInfluentToxicantSampling;
    @XmlElement(name = "AnnualFrequencyEffluentToxicantSampling", type = String.class)
    @XmlJavaTypeAdapter(IntegerAdapter.class)
    protected Integer annualFrequencyEffluentToxicantSampling;
    @XmlElement(name = "AnnualFrequencySludgeToxicantSampling", type = String.class)
    @XmlJavaTypeAdapter(IntegerAdapter.class)
    protected Integer annualFrequencySludgeToxicantSampling;
    @XmlElement(name = "NumberSIUs", type = String.class)
    @XmlJavaTypeAdapter(IntegerAdapter.class)
    protected Integer numberSIUs;
    @XmlElement(name = "SIUsWithoutControlMechanism", type = String.class)
    @XmlJavaTypeAdapter(IntegerAdapter.class)
    protected Integer siUsWithoutControlMechanism;
    @XmlElement(name = "SIUsNotInspected", type = String.class)
    @XmlJavaTypeAdapter(IntegerAdapter.class)
    protected Integer siUsNotInspected;
    @XmlElement(name = "SIUsNotSampled", type = String.class)
    @XmlJavaTypeAdapter(IntegerAdapter.class)
    protected Integer siUsNotSampled;
    @XmlElement(name = "SIUsOnSchedule", type = String.class)
    @XmlJavaTypeAdapter(IntegerAdapter.class)
    protected Integer siUsOnSchedule;
    @XmlElement(name = "SIUsSNCWithPretreatmentStandards", type = String.class)
    @XmlJavaTypeAdapter(IntegerAdapter.class)
    protected Integer siUsSNCWithPretreatmentStandards;
    @XmlElement(name = "SIUsSNCWithReportingRequirements", type = String.class)
    @XmlJavaTypeAdapter(IntegerAdapter.class)
    protected Integer siUsSNCWithReportingRequirements;
    @XmlElement(name = "SIUsSNCWithPretreatmentSchedule", type = String.class)
    @XmlJavaTypeAdapter(IntegerAdapter.class)
    protected Integer siUsSNCWithPretreatmentSchedule;
    @XmlElement(name = "SIUsSNCPublishedNewspaper", type = String.class)
    @XmlJavaTypeAdapter(IntegerAdapter.class)
    protected Integer siUsSNCPublishedNewspaper;
    @XmlElement(name = "ViolationNoticesIssuedSIUs", type = String.class)
    @XmlJavaTypeAdapter(IntegerAdapter.class)
    protected Integer violationNoticesIssuedSIUs;
    @XmlElement(name = "AdministrativeOrdersIssuedSIUs", type = String.class)
    @XmlJavaTypeAdapter(IntegerAdapter.class)
    protected Integer administrativeOrdersIssuedSIUs;
    @XmlElement(name = "CivilSuitsFiledAgainstSIUs", type = String.class)
    @XmlJavaTypeAdapter(IntegerAdapter.class)
    protected Integer civilSuitsFiledAgainstSIUs;
    @XmlElement(name = "CriminalSuitsFiledAgainstSIUs", type = String.class)
    @XmlJavaTypeAdapter(IntegerAdapter.class)
    protected Integer criminalSuitsFiledAgainstSIUs;
    @XmlElement(name = "DollarAmountPenaltiesCollected", type = String.class)
    @XmlJavaTypeAdapter(Decimal4FloatingTypeAdapter.class)
    protected BigDecimal dollarAmountPenaltiesCollected;
    @XmlElement(name = "IUsWhichPenaltiesHaveBeenCollected")
    protected String iUsWhichPenaltiesHaveBeenCollected;
    @XmlElement(name = "NumberCIUs", type = String.class)
    @XmlJavaTypeAdapter(IntegerAdapter.class)
    protected Integer numberCIUs;
    @XmlElement(name = "CIUsInSNC", type = String.class)
    @XmlJavaTypeAdapter(IntegerAdapter.class)
    protected Integer ciUsInSNC;
    @XmlElement(name = "PassThroughInterferenceIndicator")
    protected String passThroughInterferenceIndicator;
    @XmlElement(name = "LocalLimits")
    protected LocalLimits localLimits;
    @XmlElement(name = "RemovalCredits")
    protected RemovalCredits removalCredits;
    @XmlTransient
    protected String dbid;

    /**
     * Gets the value of the suoReference property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "SUO_REF", length = 15)
    public String getSUOReference() {
        return suoReference;
    }

    /**
     * Sets the value of the suoReference property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSUOReference(String value) {
        this.suoReference = value;
    }

    @Transient
    public boolean isSetSUOReference() {
        return (this.suoReference!= null);
    }

    /**
     * Gets the value of the suoDate property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "SUO_DATE")
    @Temporal(TemporalType.TIMESTAMP)
    public Date getSUODate() {
        return suoDate;
    }

    /**
     * Sets the value of the suoDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSUODate(Date value) {
        this.suoDate = value;
    }

    @Transient
    public boolean isSetSUODate() {
        return (this.suoDate!= null);
    }

    /**
     * Gets the value of the acceptanceHazardousWaste property.
     * 
     * @return
     *     possible object is
     *     {@link YesNoIndicatorTypeBase }
     *     
     */
    @Basic
    @Column(name = "ACCEPTANCE_HAZ_WASTE", columnDefinition = "char(1)", length = 1)
    @Enumerated(EnumType.STRING)
    public YesNoIndicatorTypeBase getAcceptanceHazardousWaste() {
        return acceptanceHazardousWaste;
    }

    /**
     * Sets the value of the acceptanceHazardousWaste property.
     * 
     * @param value
     *     allowed object is
     *     {@link YesNoIndicatorTypeBase }
     *     
     */
    public void setAcceptanceHazardousWaste(YesNoIndicatorTypeBase value) {
        this.acceptanceHazardousWaste = value;
    }

    @Transient
    public boolean isSetAcceptanceHazardousWaste() {
        return (this.acceptanceHazardousWaste!= null);
    }

    /**
     * Gets the value of the acceptanceNonHazardousIndustrialWaste property.
     * 
     * @return
     *     possible object is
     *     {@link YesNoIndicatorTypeBase }
     *     
     */
    @Basic
    @Column(name = "ACCEPTANCE_NON_HAZ_INDST_WASTE", columnDefinition = "char(1)", length = 1)
    @Enumerated(EnumType.STRING)
    public YesNoIndicatorTypeBase getAcceptanceNonHazardousIndustrialWaste() {
        return acceptanceNonHazardousIndustrialWaste;
    }

    /**
     * Sets the value of the acceptanceNonHazardousIndustrialWaste property.
     * 
     * @param value
     *     allowed object is
     *     {@link YesNoIndicatorTypeBase }
     *     
     */
    public void setAcceptanceNonHazardousIndustrialWaste(YesNoIndicatorTypeBase value) {
        this.acceptanceNonHazardousIndustrialWaste = value;
    }

    @Transient
    public boolean isSetAcceptanceNonHazardousIndustrialWaste() {
        return (this.acceptanceNonHazardousIndustrialWaste!= null);
    }

    /**
     * Gets the value of the acceptanceHauledDomesticWastes property.
     * 
     * @return
     *     possible object is
     *     {@link YesNoIndicatorTypeBase }
     *     
     */
    @Basic
    @Column(name = "ACCEPTANCE_HULED_DOMSTIC_WSTES", columnDefinition = "char(1)", length = 1)
    @Enumerated(EnumType.STRING)
    public YesNoIndicatorTypeBase getAcceptanceHauledDomesticWastes() {
        return acceptanceHauledDomesticWastes;
    }

    /**
     * Sets the value of the acceptanceHauledDomesticWastes property.
     * 
     * @param value
     *     allowed object is
     *     {@link YesNoIndicatorTypeBase }
     *     
     */
    public void setAcceptanceHauledDomesticWastes(YesNoIndicatorTypeBase value) {
        this.acceptanceHauledDomesticWastes = value;
    }

    @Transient
    public boolean isSetAcceptanceHauledDomesticWastes() {
        return (this.acceptanceHauledDomesticWastes!= null);
    }

    /**
     * Gets the value of the annualPretreatmentBudget property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "ANNUL_PRETR_BUDGET", length = 7)
    public String getAnnualPretreatmentBudget() {
        return annualPretreatmentBudget;
    }

    /**
     * Sets the value of the annualPretreatmentBudget property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAnnualPretreatmentBudget(String value) {
        this.annualPretreatmentBudget = value;
    }

    @Transient
    public boolean isSetAnnualPretreatmentBudget() {
        return (this.annualPretreatmentBudget!= null);
    }

    /**
     * Gets the value of the inadequacySamplingInspectionIndicator property.
     * 
     * @return
     *     possible object is
     *     {@link YesNoIndicatorTypeBase }
     *     
     */
    @Basic
    @Column(name = "INADEQUACY_SMPL_INSP_IND", columnDefinition = "char(1)", length = 1)
    @Enumerated(EnumType.STRING)
    public YesNoIndicatorTypeBase getInadequacySamplingInspectionIndicator() {
        return inadequacySamplingInspectionIndicator;
    }

    /**
     * Sets the value of the inadequacySamplingInspectionIndicator property.
     * 
     * @param value
     *     allowed object is
     *     {@link YesNoIndicatorTypeBase }
     *     
     */
    public void setInadequacySamplingInspectionIndicator(YesNoIndicatorTypeBase value) {
        this.inadequacySamplingInspectionIndicator = value;
    }

    @Transient
    public boolean isSetInadequacySamplingInspectionIndicator() {
        return (this.inadequacySamplingInspectionIndicator!= null);
    }

    /**
     * Gets the value of the adequacyPretreatmentResources property.
     * 
     * @return
     *     possible object is
     *     {@link YesNoIndicatorTypeBase }
     *     
     */
    @Basic
    @Column(name = "ADEQUACY_PRETR_RESOURCES", columnDefinition = "char(1)", length = 1)
    @Enumerated(EnumType.STRING)
    public YesNoIndicatorTypeBase getAdequacyPretreatmentResources() {
        return adequacyPretreatmentResources;
    }

    /**
     * Sets the value of the adequacyPretreatmentResources property.
     * 
     * @param value
     *     allowed object is
     *     {@link YesNoIndicatorTypeBase }
     *     
     */
    public void setAdequacyPretreatmentResources(YesNoIndicatorTypeBase value) {
        this.adequacyPretreatmentResources = value;
    }

    @Transient
    public boolean isSetAdequacyPretreatmentResources() {
        return (this.adequacyPretreatmentResources!= null);
    }

    /**
     * Gets the value of the deficienciesIdentifiedDuringIUFileReview property.
     * 
     * @return
     *     possible object is
     *     {@link YesNoIndicatorTypeBase }
     *     
     */
    @Basic
    @Column(name = "DFCNC_IDNTFD_DRNG_IU_FILE_RVIW", columnDefinition = "char(1)", length = 1)
    @Enumerated(EnumType.STRING)
    public YesNoIndicatorTypeBase getDeficienciesIdentifiedDuringIUFileReview() {
        return deficienciesIdentifiedDuringIUFileReview;
    }

    /**
     * Sets the value of the deficienciesIdentifiedDuringIUFileReview property.
     * 
     * @param value
     *     allowed object is
     *     {@link YesNoIndicatorTypeBase }
     *     
     */
    public void setDeficienciesIdentifiedDuringIUFileReview(YesNoIndicatorTypeBase value) {
        this.deficienciesIdentifiedDuringIUFileReview = value;
    }

    @Transient
    public boolean isSetDeficienciesIdentifiedDuringIUFileReview() {
        return (this.deficienciesIdentifiedDuringIUFileReview!= null);
    }

    /**
     * Gets the value of the controlMechanismDeficiencies property.
     * 
     * @return
     *     possible object is
     *     {@link YesNoIndicatorTypeBase }
     *     
     */
    @Basic
    @Column(name = "CONTROL_MECH_DFCNC", columnDefinition = "char(1)", length = 1)
    @Enumerated(EnumType.STRING)
    public YesNoIndicatorTypeBase getControlMechanismDeficiencies() {
        return controlMechanismDeficiencies;
    }

    /**
     * Sets the value of the controlMechanismDeficiencies property.
     * 
     * @param value
     *     allowed object is
     *     {@link YesNoIndicatorTypeBase }
     *     
     */
    public void setControlMechanismDeficiencies(YesNoIndicatorTypeBase value) {
        this.controlMechanismDeficiencies = value;
    }

    @Transient
    public boolean isSetControlMechanismDeficiencies() {
        return (this.controlMechanismDeficiencies!= null);
    }

    /**
     * Gets the value of the legalAuthorityDeficiencies property.
     * 
     * @return
     *     possible object is
     *     {@link YesNoIndicatorTypeBase }
     *     
     */
    @Basic
    @Column(name = "LEGAL_AUTH_DFCNC", columnDefinition = "char(1)", length = 1)
    @Enumerated(EnumType.STRING)
    public YesNoIndicatorTypeBase getLegalAuthorityDeficiencies() {
        return legalAuthorityDeficiencies;
    }

    /**
     * Sets the value of the legalAuthorityDeficiencies property.
     * 
     * @param value
     *     allowed object is
     *     {@link YesNoIndicatorTypeBase }
     *     
     */
    public void setLegalAuthorityDeficiencies(YesNoIndicatorTypeBase value) {
        this.legalAuthorityDeficiencies = value;
    }

    @Transient
    public boolean isSetLegalAuthorityDeficiencies() {
        return (this.legalAuthorityDeficiencies!= null);
    }

    /**
     * Gets the value of the deficienciesInterpretationApplicationPretreatmentStandards property.
     * 
     * @return
     *     possible object is
     *     {@link YesNoIndicatorTypeBase }
     *     
     */
    @Basic
    @Column(name = "DFCNC_INTRPRT_APPL_PRETR_STNDR", columnDefinition = "char(1)", length = 1)
    @Enumerated(EnumType.STRING)
    public YesNoIndicatorTypeBase getDeficienciesInterpretationApplicationPretreatmentStandards() {
        return deficienciesInterpretationApplicationPretreatmentStandards;
    }

    /**
     * Sets the value of the deficienciesInterpretationApplicationPretreatmentStandards property.
     * 
     * @param value
     *     allowed object is
     *     {@link YesNoIndicatorTypeBase }
     *     
     */
    public void setDeficienciesInterpretationApplicationPretreatmentStandards(YesNoIndicatorTypeBase value) {
        this.deficienciesInterpretationApplicationPretreatmentStandards = value;
    }

    @Transient
    public boolean isSetDeficienciesInterpretationApplicationPretreatmentStandards() {
        return (this.deficienciesInterpretationApplicationPretreatmentStandards!= null);
    }

    /**
     * Gets the value of the deficienciesDataManagementPublicParticipation property.
     * 
     * @return
     *     possible object is
     *     {@link YesNoIndicatorTypeBase }
     *     
     */
    @Basic
    @Column(name = "DFCNC_DAT_MGMT_PBLC_PRTICIPTON", columnDefinition = "char(1)", length = 1)
    @Enumerated(EnumType.STRING)
    public YesNoIndicatorTypeBase getDeficienciesDataManagementPublicParticipation() {
        return deficienciesDataManagementPublicParticipation;
    }

    /**
     * Sets the value of the deficienciesDataManagementPublicParticipation property.
     * 
     * @param value
     *     allowed object is
     *     {@link YesNoIndicatorTypeBase }
     *     
     */
    public void setDeficienciesDataManagementPublicParticipation(YesNoIndicatorTypeBase value) {
        this.deficienciesDataManagementPublicParticipation = value;
    }

    @Transient
    public boolean isSetDeficienciesDataManagementPublicParticipation() {
        return (this.deficienciesDataManagementPublicParticipation!= null);
    }

    /**
     * Gets the value of the violationIUScheduleRemedialMeasures property.
     * 
     * @return
     *     possible object is
     *     {@link YesNoIndicatorTypeBase }
     *     
     */
    @Basic
    @Column(name = "VIOL_IU_SCHD_RMD_MSR", columnDefinition = "char(1)", length = 1)
    @Enumerated(EnumType.STRING)
    public YesNoIndicatorTypeBase getViolationIUScheduleRemedialMeasures() {
        return violationIUScheduleRemedialMeasures;
    }

    /**
     * Sets the value of the violationIUScheduleRemedialMeasures property.
     * 
     * @param value
     *     allowed object is
     *     {@link YesNoIndicatorTypeBase }
     *     
     */
    public void setViolationIUScheduleRemedialMeasures(YesNoIndicatorTypeBase value) {
        this.violationIUScheduleRemedialMeasures = value;
    }

    @Transient
    public boolean isSetViolationIUScheduleRemedialMeasures() {
        return (this.violationIUScheduleRemedialMeasures!= null);
    }

    /**
     * Gets the value of the formalResponseViolationIUScheduleRemedialMeasures property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "FRML_RSPN_VIOL_IU_SCHD_RMD_MSR", columnDefinition = "char(1)", length = 1)
    public String getFormalResponseViolationIUScheduleRemedialMeasures() {
        return formalResponseViolationIUScheduleRemedialMeasures;
    }

    /**
     * Sets the value of the formalResponseViolationIUScheduleRemedialMeasures property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setFormalResponseViolationIUScheduleRemedialMeasures(String value) {
        this.formalResponseViolationIUScheduleRemedialMeasures = value;
    }

    @Transient
    public boolean isSetFormalResponseViolationIUScheduleRemedialMeasures() {
        return (this.formalResponseViolationIUScheduleRemedialMeasures!= null);
    }

    /**
     * Gets the value of the annualFrequencyInfluentToxicantSampling property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "ANNUL_FREQ_INFLUNT_TOXCNT_SMPL", scale = 0)
    public Integer getAnnualFrequencyInfluentToxicantSampling() {
        return annualFrequencyInfluentToxicantSampling;
    }

    /**
     * Sets the value of the annualFrequencyInfluentToxicantSampling property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAnnualFrequencyInfluentToxicantSampling(Integer value) {
        this.annualFrequencyInfluentToxicantSampling = value;
    }

    @Transient
    public boolean isSetAnnualFrequencyInfluentToxicantSampling() {
        return (this.annualFrequencyInfluentToxicantSampling!= null);
    }

    /**
     * Gets the value of the annualFrequencyEffluentToxicantSampling property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "ANNUL_FREQ_EFFLU_TOXCNT_SMPL", scale = 0)
    public Integer getAnnualFrequencyEffluentToxicantSampling() {
        return annualFrequencyEffluentToxicantSampling;
    }

    /**
     * Sets the value of the annualFrequencyEffluentToxicantSampling property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAnnualFrequencyEffluentToxicantSampling(Integer value) {
        this.annualFrequencyEffluentToxicantSampling = value;
    }

    @Transient
    public boolean isSetAnnualFrequencyEffluentToxicantSampling() {
        return (this.annualFrequencyEffluentToxicantSampling!= null);
    }

    /**
     * Gets the value of the annualFrequencySludgeToxicantSampling property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "ANNUL_FREQ_SLDG_TOXCNT_SMPL", scale = 0)
    public Integer getAnnualFrequencySludgeToxicantSampling() {
        return annualFrequencySludgeToxicantSampling;
    }

    /**
     * Sets the value of the annualFrequencySludgeToxicantSampling property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAnnualFrequencySludgeToxicantSampling(Integer value) {
        this.annualFrequencySludgeToxicantSampling = value;
    }

    @Transient
    public boolean isSetAnnualFrequencySludgeToxicantSampling() {
        return (this.annualFrequencySludgeToxicantSampling!= null);
    }

    /**
     * Gets the value of the numberSIUs property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "NUM_SI_US", scale = 0)
    public Integer getNumberSIUs() {
        return numberSIUs;
    }

    /**
     * Sets the value of the numberSIUs property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setNumberSIUs(Integer value) {
        this.numberSIUs = value;
    }

    @Transient
    public boolean isSetNumberSIUs() {
        return (this.numberSIUs!= null);
    }

    /**
     * Gets the value of the siUsWithoutControlMechanism property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "SI_US_WITHOUT_CONTROL_MECH", scale = 0)
    public Integer getSIUsWithoutControlMechanism() {
        return siUsWithoutControlMechanism;
    }

    /**
     * Sets the value of the siUsWithoutControlMechanism property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSIUsWithoutControlMechanism(Integer value) {
        this.siUsWithoutControlMechanism = value;
    }

    @Transient
    public boolean isSetSIUsWithoutControlMechanism() {
        return (this.siUsWithoutControlMechanism!= null);
    }

    /**
     * Gets the value of the siUsNotInspected property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "SI_US_NOT_INSPECTED", scale = 0)
    public Integer getSIUsNotInspected() {
        return siUsNotInspected;
    }

    /**
     * Sets the value of the siUsNotInspected property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSIUsNotInspected(Integer value) {
        this.siUsNotInspected = value;
    }

    @Transient
    public boolean isSetSIUsNotInspected() {
        return (this.siUsNotInspected!= null);
    }

    /**
     * Gets the value of the siUsNotSampled property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "SI_US_NOT_SMPL", scale = 0)
    public Integer getSIUsNotSampled() {
        return siUsNotSampled;
    }

    /**
     * Sets the value of the siUsNotSampled property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSIUsNotSampled(Integer value) {
        this.siUsNotSampled = value;
    }

    @Transient
    public boolean isSetSIUsNotSampled() {
        return (this.siUsNotSampled!= null);
    }

    /**
     * Gets the value of the siUsOnSchedule property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "SI_US_ON_SCHD", scale = 0)
    public Integer getSIUsOnSchedule() {
        return siUsOnSchedule;
    }

    /**
     * Sets the value of the siUsOnSchedule property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSIUsOnSchedule(Integer value) {
        this.siUsOnSchedule = value;
    }

    @Transient
    public boolean isSetSIUsOnSchedule() {
        return (this.siUsOnSchedule!= null);
    }

    /**
     * Gets the value of the siUsSNCWithPretreatmentStandards property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "SI_US_SNC_WITH_PRETR_STNDR", scale = 0)
    public Integer getSIUsSNCWithPretreatmentStandards() {
        return siUsSNCWithPretreatmentStandards;
    }

    /**
     * Sets the value of the siUsSNCWithPretreatmentStandards property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSIUsSNCWithPretreatmentStandards(Integer value) {
        this.siUsSNCWithPretreatmentStandards = value;
    }

    @Transient
    public boolean isSetSIUsSNCWithPretreatmentStandards() {
        return (this.siUsSNCWithPretreatmentStandards!= null);
    }

    /**
     * Gets the value of the siUsSNCWithReportingRequirements property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "SI_US_SNC_WITH_REP_REQS", scale = 0)
    public Integer getSIUsSNCWithReportingRequirements() {
        return siUsSNCWithReportingRequirements;
    }

    /**
     * Sets the value of the siUsSNCWithReportingRequirements property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSIUsSNCWithReportingRequirements(Integer value) {
        this.siUsSNCWithReportingRequirements = value;
    }

    @Transient
    public boolean isSetSIUsSNCWithReportingRequirements() {
        return (this.siUsSNCWithReportingRequirements!= null);
    }

    /**
     * Gets the value of the siUsSNCWithPretreatmentSchedule property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "SI_US_SNC_WITH_PRETR_SCHD", scale = 0)
    public Integer getSIUsSNCWithPretreatmentSchedule() {
        return siUsSNCWithPretreatmentSchedule;
    }

    /**
     * Sets the value of the siUsSNCWithPretreatmentSchedule property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSIUsSNCWithPretreatmentSchedule(Integer value) {
        this.siUsSNCWithPretreatmentSchedule = value;
    }

    @Transient
    public boolean isSetSIUsSNCWithPretreatmentSchedule() {
        return (this.siUsSNCWithPretreatmentSchedule!= null);
    }

    /**
     * Gets the value of the siUsSNCPublishedNewspaper property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "SI_US_SNC_PUBL_NEWSPAPER", scale = 0)
    public Integer getSIUsSNCPublishedNewspaper() {
        return siUsSNCPublishedNewspaper;
    }

    /**
     * Sets the value of the siUsSNCPublishedNewspaper property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSIUsSNCPublishedNewspaper(Integer value) {
        this.siUsSNCPublishedNewspaper = value;
    }

    @Transient
    public boolean isSetSIUsSNCPublishedNewspaper() {
        return (this.siUsSNCPublishedNewspaper!= null);
    }

    /**
     * Gets the value of the violationNoticesIssuedSIUs property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "VIOL_NOTICES_ISSUED_SI_US", scale = 0)
    public Integer getViolationNoticesIssuedSIUs() {
        return violationNoticesIssuedSIUs;
    }

    /**
     * Sets the value of the violationNoticesIssuedSIUs property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setViolationNoticesIssuedSIUs(Integer value) {
        this.violationNoticesIssuedSIUs = value;
    }

    @Transient
    public boolean isSetViolationNoticesIssuedSIUs() {
        return (this.violationNoticesIssuedSIUs!= null);
    }

    /**
     * Gets the value of the administrativeOrdersIssuedSIUs property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "ADMIN_ORDERS_ISSUED_SI_US", scale = 0)
    public Integer getAdministrativeOrdersIssuedSIUs() {
        return administrativeOrdersIssuedSIUs;
    }

    /**
     * Sets the value of the administrativeOrdersIssuedSIUs property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAdministrativeOrdersIssuedSIUs(Integer value) {
        this.administrativeOrdersIssuedSIUs = value;
    }

    @Transient
    public boolean isSetAdministrativeOrdersIssuedSIUs() {
        return (this.administrativeOrdersIssuedSIUs!= null);
    }

    /**
     * Gets the value of the civilSuitsFiledAgainstSIUs property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "CIVIL_SUTS_FILD_AGINST_SI_US", scale = 0)
    public Integer getCivilSuitsFiledAgainstSIUs() {
        return civilSuitsFiledAgainstSIUs;
    }

    /**
     * Sets the value of the civilSuitsFiledAgainstSIUs property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCivilSuitsFiledAgainstSIUs(Integer value) {
        this.civilSuitsFiledAgainstSIUs = value;
    }

    @Transient
    public boolean isSetCivilSuitsFiledAgainstSIUs() {
        return (this.civilSuitsFiledAgainstSIUs!= null);
    }

    /**
     * Gets the value of the criminalSuitsFiledAgainstSIUs property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "CRIMINL_SUTS_FILD_AGINST_SI_US", scale = 0)
    public Integer getCriminalSuitsFiledAgainstSIUs() {
        return criminalSuitsFiledAgainstSIUs;
    }

    /**
     * Sets the value of the criminalSuitsFiledAgainstSIUs property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCriminalSuitsFiledAgainstSIUs(Integer value) {
        this.criminalSuitsFiledAgainstSIUs = value;
    }

    @Transient
    public boolean isSetCriminalSuitsFiledAgainstSIUs() {
        return (this.criminalSuitsFiledAgainstSIUs!= null);
    }

    /**
     * Gets the value of the dollarAmountPenaltiesCollected property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "DOLLAR_AMT_PNLTY_COLL", scale = 2)
    public BigDecimal getDollarAmountPenaltiesCollected() {
        return dollarAmountPenaltiesCollected;
    }

    /**
     * Sets the value of the dollarAmountPenaltiesCollected property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDollarAmountPenaltiesCollected(BigDecimal value) {
        this.dollarAmountPenaltiesCollected = value;
    }

    @Transient
    public boolean isSetDollarAmountPenaltiesCollected() {
        return (this.dollarAmountPenaltiesCollected!= null);
    }

    /**
     * Gets the value of the iUsWhichPenaltiesHaveBeenCollected property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "I_US_WHC_PNLTY_HAV_BEE_COLL", length = 4)
    public String getIUsWhichPenaltiesHaveBeenCollected() {
        return iUsWhichPenaltiesHaveBeenCollected;
    }

    /**
     * Sets the value of the iUsWhichPenaltiesHaveBeenCollected property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setIUsWhichPenaltiesHaveBeenCollected(String value) {
        this.iUsWhichPenaltiesHaveBeenCollected = value;
    }

    @Transient
    public boolean isSetIUsWhichPenaltiesHaveBeenCollected() {
        return (this.iUsWhichPenaltiesHaveBeenCollected!= null);
    }

    /**
     * Gets the value of the numberCIUs property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "NUM_CI_US", scale = 0)
    public Integer getNumberCIUs() {
        return numberCIUs;
    }

    /**
     * Sets the value of the numberCIUs property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setNumberCIUs(Integer value) {
        this.numberCIUs = value;
    }

    @Transient
    public boolean isSetNumberCIUs() {
        return (this.numberCIUs!= null);
    }

    /**
     * Gets the value of the ciUsInSNC property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "CI_US_IN_SNC", scale = 0)
    public Integer getCIUsInSNC() {
        return ciUsInSNC;
    }

    /**
     * Sets the value of the ciUsInSNC property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCIUsInSNC(Integer value) {
        this.ciUsInSNC = value;
    }

    @Transient
    public boolean isSetCIUsInSNC() {
        return (this.ciUsInSNC!= null);
    }

    /**
     * Gets the value of the passThroughInterferenceIndicator property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "PASS_THROUGH_INTERFERENCE_IND", columnDefinition = "char(1)", length = 1)
    public String getPassThroughInterferenceIndicator() {
        return passThroughInterferenceIndicator;
    }

    /**
     * Sets the value of the passThroughInterferenceIndicator property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPassThroughInterferenceIndicator(String value) {
        this.passThroughInterferenceIndicator = value;
    }

    @Transient
    public boolean isSetPassThroughInterferenceIndicator() {
        return (this.passThroughInterferenceIndicator!= null);
    }

    /**
     * Gets the value of the localLimits property.
     * 
     * @return
     *     possible object is
     *     {@link LocalLimits }
     *     
     */
    @NotFound(action = NotFoundAction.IGNORE)
    @ManyToOne(targetEntity = LocalLimits.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "ICS_PRETR_INSP_ID", referencedColumnName = "ICS_PRETR_INSP_ID", insertable = false, updatable = false)
    public LocalLimits getLocalLimits() {
        return localLimits;
    }

    /**
     * Sets the value of the localLimits property.
     * 
     * @param value
     *     allowed object is
     *     {@link LocalLimits }
     *     
     */
    public void setLocalLimits(LocalLimits value) {
        this.localLimits = value;
    }

    @Transient
    public boolean isSetLocalLimits() {
        return (this.localLimits!= null);
    }

    /**
     * Gets the value of the removalCredits property.
     * 
     * @return
     *     possible object is
     *     {@link RemovalCredits }
     *     
     */
    @NotFound(action = NotFoundAction.IGNORE)
    @ManyToOne(targetEntity = RemovalCredits.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "ICS_PRETR_INSP_ID", referencedColumnName = "ICS_PRETR_INSP_ID", insertable = false, updatable = false)
    public RemovalCredits getRemovalCredits() {
        return removalCredits;
    }

    /**
     * Sets the value of the removalCredits property.
     * 
     * @param value
     *     allowed object is
     *     {@link RemovalCredits }
     *     
     */
    public void setRemovalCredits(RemovalCredits value) {
        this.removalCredits = value;
    }

    @Transient
    public boolean isSetRemovalCredits() {
        return (this.removalCredits!= null);
    }

    /**
     * 
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Id
    @Column(name = "ICS_PRETR_INSP_ID")
    @GeneratedValue(strategy = GenerationType.AUTO)
    public String getDbid() {
        return dbid;
    }

    /**
     * 
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDbid(String value) {
        this.dbid = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof PretreatmentInspection)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final PretreatmentInspection that = ((PretreatmentInspection) object);
        {
            String lhsSUOReference;
            lhsSUOReference = this.getSUOReference();
            String rhsSUOReference;
            rhsSUOReference = that.getSUOReference();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "suoReference", lhsSUOReference), LocatorUtils.property(thatLocator, "suoReference", rhsSUOReference), lhsSUOReference, rhsSUOReference)) {
                return false;
            }
        }
        {
            Date lhsSUODate;
            lhsSUODate = this.getSUODate();
            Date rhsSUODate;
            rhsSUODate = that.getSUODate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "suoDate", lhsSUODate), LocatorUtils.property(thatLocator, "suoDate", rhsSUODate), lhsSUODate, rhsSUODate)) {
                return false;
            }
        }
        {
            YesNoIndicatorTypeBase lhsAcceptanceHazardousWaste;
            lhsAcceptanceHazardousWaste = this.getAcceptanceHazardousWaste();
            YesNoIndicatorTypeBase rhsAcceptanceHazardousWaste;
            rhsAcceptanceHazardousWaste = that.getAcceptanceHazardousWaste();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "acceptanceHazardousWaste", lhsAcceptanceHazardousWaste), LocatorUtils.property(thatLocator, "acceptanceHazardousWaste", rhsAcceptanceHazardousWaste), lhsAcceptanceHazardousWaste, rhsAcceptanceHazardousWaste)) {
                return false;
            }
        }
        {
            YesNoIndicatorTypeBase lhsAcceptanceNonHazardousIndustrialWaste;
            lhsAcceptanceNonHazardousIndustrialWaste = this.getAcceptanceNonHazardousIndustrialWaste();
            YesNoIndicatorTypeBase rhsAcceptanceNonHazardousIndustrialWaste;
            rhsAcceptanceNonHazardousIndustrialWaste = that.getAcceptanceNonHazardousIndustrialWaste();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "acceptanceNonHazardousIndustrialWaste", lhsAcceptanceNonHazardousIndustrialWaste), LocatorUtils.property(thatLocator, "acceptanceNonHazardousIndustrialWaste", rhsAcceptanceNonHazardousIndustrialWaste), lhsAcceptanceNonHazardousIndustrialWaste, rhsAcceptanceNonHazardousIndustrialWaste)) {
                return false;
            }
        }
        {
            YesNoIndicatorTypeBase lhsAcceptanceHauledDomesticWastes;
            lhsAcceptanceHauledDomesticWastes = this.getAcceptanceHauledDomesticWastes();
            YesNoIndicatorTypeBase rhsAcceptanceHauledDomesticWastes;
            rhsAcceptanceHauledDomesticWastes = that.getAcceptanceHauledDomesticWastes();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "acceptanceHauledDomesticWastes", lhsAcceptanceHauledDomesticWastes), LocatorUtils.property(thatLocator, "acceptanceHauledDomesticWastes", rhsAcceptanceHauledDomesticWastes), lhsAcceptanceHauledDomesticWastes, rhsAcceptanceHauledDomesticWastes)) {
                return false;
            }
        }
        {
            String lhsAnnualPretreatmentBudget;
            lhsAnnualPretreatmentBudget = this.getAnnualPretreatmentBudget();
            String rhsAnnualPretreatmentBudget;
            rhsAnnualPretreatmentBudget = that.getAnnualPretreatmentBudget();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "annualPretreatmentBudget", lhsAnnualPretreatmentBudget), LocatorUtils.property(thatLocator, "annualPretreatmentBudget", rhsAnnualPretreatmentBudget), lhsAnnualPretreatmentBudget, rhsAnnualPretreatmentBudget)) {
                return false;
            }
        }
        {
            YesNoIndicatorTypeBase lhsInadequacySamplingInspectionIndicator;
            lhsInadequacySamplingInspectionIndicator = this.getInadequacySamplingInspectionIndicator();
            YesNoIndicatorTypeBase rhsInadequacySamplingInspectionIndicator;
            rhsInadequacySamplingInspectionIndicator = that.getInadequacySamplingInspectionIndicator();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "inadequacySamplingInspectionIndicator", lhsInadequacySamplingInspectionIndicator), LocatorUtils.property(thatLocator, "inadequacySamplingInspectionIndicator", rhsInadequacySamplingInspectionIndicator), lhsInadequacySamplingInspectionIndicator, rhsInadequacySamplingInspectionIndicator)) {
                return false;
            }
        }
        {
            YesNoIndicatorTypeBase lhsAdequacyPretreatmentResources;
            lhsAdequacyPretreatmentResources = this.getAdequacyPretreatmentResources();
            YesNoIndicatorTypeBase rhsAdequacyPretreatmentResources;
            rhsAdequacyPretreatmentResources = that.getAdequacyPretreatmentResources();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "adequacyPretreatmentResources", lhsAdequacyPretreatmentResources), LocatorUtils.property(thatLocator, "adequacyPretreatmentResources", rhsAdequacyPretreatmentResources), lhsAdequacyPretreatmentResources, rhsAdequacyPretreatmentResources)) {
                return false;
            }
        }
        {
            YesNoIndicatorTypeBase lhsDeficienciesIdentifiedDuringIUFileReview;
            lhsDeficienciesIdentifiedDuringIUFileReview = this.getDeficienciesIdentifiedDuringIUFileReview();
            YesNoIndicatorTypeBase rhsDeficienciesIdentifiedDuringIUFileReview;
            rhsDeficienciesIdentifiedDuringIUFileReview = that.getDeficienciesIdentifiedDuringIUFileReview();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "deficienciesIdentifiedDuringIUFileReview", lhsDeficienciesIdentifiedDuringIUFileReview), LocatorUtils.property(thatLocator, "deficienciesIdentifiedDuringIUFileReview", rhsDeficienciesIdentifiedDuringIUFileReview), lhsDeficienciesIdentifiedDuringIUFileReview, rhsDeficienciesIdentifiedDuringIUFileReview)) {
                return false;
            }
        }
        {
            YesNoIndicatorTypeBase lhsControlMechanismDeficiencies;
            lhsControlMechanismDeficiencies = this.getControlMechanismDeficiencies();
            YesNoIndicatorTypeBase rhsControlMechanismDeficiencies;
            rhsControlMechanismDeficiencies = that.getControlMechanismDeficiencies();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "controlMechanismDeficiencies", lhsControlMechanismDeficiencies), LocatorUtils.property(thatLocator, "controlMechanismDeficiencies", rhsControlMechanismDeficiencies), lhsControlMechanismDeficiencies, rhsControlMechanismDeficiencies)) {
                return false;
            }
        }
        {
            YesNoIndicatorTypeBase lhsLegalAuthorityDeficiencies;
            lhsLegalAuthorityDeficiencies = this.getLegalAuthorityDeficiencies();
            YesNoIndicatorTypeBase rhsLegalAuthorityDeficiencies;
            rhsLegalAuthorityDeficiencies = that.getLegalAuthorityDeficiencies();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "legalAuthorityDeficiencies", lhsLegalAuthorityDeficiencies), LocatorUtils.property(thatLocator, "legalAuthorityDeficiencies", rhsLegalAuthorityDeficiencies), lhsLegalAuthorityDeficiencies, rhsLegalAuthorityDeficiencies)) {
                return false;
            }
        }
        {
            YesNoIndicatorTypeBase lhsDeficienciesInterpretationApplicationPretreatmentStandards;
            lhsDeficienciesInterpretationApplicationPretreatmentStandards = this.getDeficienciesInterpretationApplicationPretreatmentStandards();
            YesNoIndicatorTypeBase rhsDeficienciesInterpretationApplicationPretreatmentStandards;
            rhsDeficienciesInterpretationApplicationPretreatmentStandards = that.getDeficienciesInterpretationApplicationPretreatmentStandards();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "deficienciesInterpretationApplicationPretreatmentStandards", lhsDeficienciesInterpretationApplicationPretreatmentStandards), LocatorUtils.property(thatLocator, "deficienciesInterpretationApplicationPretreatmentStandards", rhsDeficienciesInterpretationApplicationPretreatmentStandards), lhsDeficienciesInterpretationApplicationPretreatmentStandards, rhsDeficienciesInterpretationApplicationPretreatmentStandards)) {
                return false;
            }
        }
        {
            YesNoIndicatorTypeBase lhsDeficienciesDataManagementPublicParticipation;
            lhsDeficienciesDataManagementPublicParticipation = this.getDeficienciesDataManagementPublicParticipation();
            YesNoIndicatorTypeBase rhsDeficienciesDataManagementPublicParticipation;
            rhsDeficienciesDataManagementPublicParticipation = that.getDeficienciesDataManagementPublicParticipation();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "deficienciesDataManagementPublicParticipation", lhsDeficienciesDataManagementPublicParticipation), LocatorUtils.property(thatLocator, "deficienciesDataManagementPublicParticipation", rhsDeficienciesDataManagementPublicParticipation), lhsDeficienciesDataManagementPublicParticipation, rhsDeficienciesDataManagementPublicParticipation)) {
                return false;
            }
        }
        {
            YesNoIndicatorTypeBase lhsViolationIUScheduleRemedialMeasures;
            lhsViolationIUScheduleRemedialMeasures = this.getViolationIUScheduleRemedialMeasures();
            YesNoIndicatorTypeBase rhsViolationIUScheduleRemedialMeasures;
            rhsViolationIUScheduleRemedialMeasures = that.getViolationIUScheduleRemedialMeasures();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "violationIUScheduleRemedialMeasures", lhsViolationIUScheduleRemedialMeasures), LocatorUtils.property(thatLocator, "violationIUScheduleRemedialMeasures", rhsViolationIUScheduleRemedialMeasures), lhsViolationIUScheduleRemedialMeasures, rhsViolationIUScheduleRemedialMeasures)) {
                return false;
            }
        }
        {
            String lhsFormalResponseViolationIUScheduleRemedialMeasures;
            lhsFormalResponseViolationIUScheduleRemedialMeasures = this.getFormalResponseViolationIUScheduleRemedialMeasures();
            String rhsFormalResponseViolationIUScheduleRemedialMeasures;
            rhsFormalResponseViolationIUScheduleRemedialMeasures = that.getFormalResponseViolationIUScheduleRemedialMeasures();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "formalResponseViolationIUScheduleRemedialMeasures", lhsFormalResponseViolationIUScheduleRemedialMeasures), LocatorUtils.property(thatLocator, "formalResponseViolationIUScheduleRemedialMeasures", rhsFormalResponseViolationIUScheduleRemedialMeasures), lhsFormalResponseViolationIUScheduleRemedialMeasures, rhsFormalResponseViolationIUScheduleRemedialMeasures)) {
                return false;
            }
        }
        {
            Integer lhsAnnualFrequencyInfluentToxicantSampling;
            lhsAnnualFrequencyInfluentToxicantSampling = this.getAnnualFrequencyInfluentToxicantSampling();
            Integer rhsAnnualFrequencyInfluentToxicantSampling;
            rhsAnnualFrequencyInfluentToxicantSampling = that.getAnnualFrequencyInfluentToxicantSampling();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "annualFrequencyInfluentToxicantSampling", lhsAnnualFrequencyInfluentToxicantSampling), LocatorUtils.property(thatLocator, "annualFrequencyInfluentToxicantSampling", rhsAnnualFrequencyInfluentToxicantSampling), lhsAnnualFrequencyInfluentToxicantSampling, rhsAnnualFrequencyInfluentToxicantSampling)) {
                return false;
            }
        }
        {
            Integer lhsAnnualFrequencyEffluentToxicantSampling;
            lhsAnnualFrequencyEffluentToxicantSampling = this.getAnnualFrequencyEffluentToxicantSampling();
            Integer rhsAnnualFrequencyEffluentToxicantSampling;
            rhsAnnualFrequencyEffluentToxicantSampling = that.getAnnualFrequencyEffluentToxicantSampling();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "annualFrequencyEffluentToxicantSampling", lhsAnnualFrequencyEffluentToxicantSampling), LocatorUtils.property(thatLocator, "annualFrequencyEffluentToxicantSampling", rhsAnnualFrequencyEffluentToxicantSampling), lhsAnnualFrequencyEffluentToxicantSampling, rhsAnnualFrequencyEffluentToxicantSampling)) {
                return false;
            }
        }
        {
            Integer lhsAnnualFrequencySludgeToxicantSampling;
            lhsAnnualFrequencySludgeToxicantSampling = this.getAnnualFrequencySludgeToxicantSampling();
            Integer rhsAnnualFrequencySludgeToxicantSampling;
            rhsAnnualFrequencySludgeToxicantSampling = that.getAnnualFrequencySludgeToxicantSampling();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "annualFrequencySludgeToxicantSampling", lhsAnnualFrequencySludgeToxicantSampling), LocatorUtils.property(thatLocator, "annualFrequencySludgeToxicantSampling", rhsAnnualFrequencySludgeToxicantSampling), lhsAnnualFrequencySludgeToxicantSampling, rhsAnnualFrequencySludgeToxicantSampling)) {
                return false;
            }
        }
        {
            Integer lhsNumberSIUs;
            lhsNumberSIUs = this.getNumberSIUs();
            Integer rhsNumberSIUs;
            rhsNumberSIUs = that.getNumberSIUs();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "numberSIUs", lhsNumberSIUs), LocatorUtils.property(thatLocator, "numberSIUs", rhsNumberSIUs), lhsNumberSIUs, rhsNumberSIUs)) {
                return false;
            }
        }
        {
            Integer lhsSIUsWithoutControlMechanism;
            lhsSIUsWithoutControlMechanism = this.getSIUsWithoutControlMechanism();
            Integer rhsSIUsWithoutControlMechanism;
            rhsSIUsWithoutControlMechanism = that.getSIUsWithoutControlMechanism();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "siUsWithoutControlMechanism", lhsSIUsWithoutControlMechanism), LocatorUtils.property(thatLocator, "siUsWithoutControlMechanism", rhsSIUsWithoutControlMechanism), lhsSIUsWithoutControlMechanism, rhsSIUsWithoutControlMechanism)) {
                return false;
            }
        }
        {
            Integer lhsSIUsNotInspected;
            lhsSIUsNotInspected = this.getSIUsNotInspected();
            Integer rhsSIUsNotInspected;
            rhsSIUsNotInspected = that.getSIUsNotInspected();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "siUsNotInspected", lhsSIUsNotInspected), LocatorUtils.property(thatLocator, "siUsNotInspected", rhsSIUsNotInspected), lhsSIUsNotInspected, rhsSIUsNotInspected)) {
                return false;
            }
        }
        {
            Integer lhsSIUsNotSampled;
            lhsSIUsNotSampled = this.getSIUsNotSampled();
            Integer rhsSIUsNotSampled;
            rhsSIUsNotSampled = that.getSIUsNotSampled();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "siUsNotSampled", lhsSIUsNotSampled), LocatorUtils.property(thatLocator, "siUsNotSampled", rhsSIUsNotSampled), lhsSIUsNotSampled, rhsSIUsNotSampled)) {
                return false;
            }
        }
        {
            Integer lhsSIUsOnSchedule;
            lhsSIUsOnSchedule = this.getSIUsOnSchedule();
            Integer rhsSIUsOnSchedule;
            rhsSIUsOnSchedule = that.getSIUsOnSchedule();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "siUsOnSchedule", lhsSIUsOnSchedule), LocatorUtils.property(thatLocator, "siUsOnSchedule", rhsSIUsOnSchedule), lhsSIUsOnSchedule, rhsSIUsOnSchedule)) {
                return false;
            }
        }
        {
            Integer lhsSIUsSNCWithPretreatmentStandards;
            lhsSIUsSNCWithPretreatmentStandards = this.getSIUsSNCWithPretreatmentStandards();
            Integer rhsSIUsSNCWithPretreatmentStandards;
            rhsSIUsSNCWithPretreatmentStandards = that.getSIUsSNCWithPretreatmentStandards();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "siUsSNCWithPretreatmentStandards", lhsSIUsSNCWithPretreatmentStandards), LocatorUtils.property(thatLocator, "siUsSNCWithPretreatmentStandards", rhsSIUsSNCWithPretreatmentStandards), lhsSIUsSNCWithPretreatmentStandards, rhsSIUsSNCWithPretreatmentStandards)) {
                return false;
            }
        }
        {
            Integer lhsSIUsSNCWithReportingRequirements;
            lhsSIUsSNCWithReportingRequirements = this.getSIUsSNCWithReportingRequirements();
            Integer rhsSIUsSNCWithReportingRequirements;
            rhsSIUsSNCWithReportingRequirements = that.getSIUsSNCWithReportingRequirements();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "siUsSNCWithReportingRequirements", lhsSIUsSNCWithReportingRequirements), LocatorUtils.property(thatLocator, "siUsSNCWithReportingRequirements", rhsSIUsSNCWithReportingRequirements), lhsSIUsSNCWithReportingRequirements, rhsSIUsSNCWithReportingRequirements)) {
                return false;
            }
        }
        {
            Integer lhsSIUsSNCWithPretreatmentSchedule;
            lhsSIUsSNCWithPretreatmentSchedule = this.getSIUsSNCWithPretreatmentSchedule();
            Integer rhsSIUsSNCWithPretreatmentSchedule;
            rhsSIUsSNCWithPretreatmentSchedule = that.getSIUsSNCWithPretreatmentSchedule();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "siUsSNCWithPretreatmentSchedule", lhsSIUsSNCWithPretreatmentSchedule), LocatorUtils.property(thatLocator, "siUsSNCWithPretreatmentSchedule", rhsSIUsSNCWithPretreatmentSchedule), lhsSIUsSNCWithPretreatmentSchedule, rhsSIUsSNCWithPretreatmentSchedule)) {
                return false;
            }
        }
        {
            Integer lhsSIUsSNCPublishedNewspaper;
            lhsSIUsSNCPublishedNewspaper = this.getSIUsSNCPublishedNewspaper();
            Integer rhsSIUsSNCPublishedNewspaper;
            rhsSIUsSNCPublishedNewspaper = that.getSIUsSNCPublishedNewspaper();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "siUsSNCPublishedNewspaper", lhsSIUsSNCPublishedNewspaper), LocatorUtils.property(thatLocator, "siUsSNCPublishedNewspaper", rhsSIUsSNCPublishedNewspaper), lhsSIUsSNCPublishedNewspaper, rhsSIUsSNCPublishedNewspaper)) {
                return false;
            }
        }
        {
            Integer lhsViolationNoticesIssuedSIUs;
            lhsViolationNoticesIssuedSIUs = this.getViolationNoticesIssuedSIUs();
            Integer rhsViolationNoticesIssuedSIUs;
            rhsViolationNoticesIssuedSIUs = that.getViolationNoticesIssuedSIUs();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "violationNoticesIssuedSIUs", lhsViolationNoticesIssuedSIUs), LocatorUtils.property(thatLocator, "violationNoticesIssuedSIUs", rhsViolationNoticesIssuedSIUs), lhsViolationNoticesIssuedSIUs, rhsViolationNoticesIssuedSIUs)) {
                return false;
            }
        }
        {
            Integer lhsAdministrativeOrdersIssuedSIUs;
            lhsAdministrativeOrdersIssuedSIUs = this.getAdministrativeOrdersIssuedSIUs();
            Integer rhsAdministrativeOrdersIssuedSIUs;
            rhsAdministrativeOrdersIssuedSIUs = that.getAdministrativeOrdersIssuedSIUs();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "administrativeOrdersIssuedSIUs", lhsAdministrativeOrdersIssuedSIUs), LocatorUtils.property(thatLocator, "administrativeOrdersIssuedSIUs", rhsAdministrativeOrdersIssuedSIUs), lhsAdministrativeOrdersIssuedSIUs, rhsAdministrativeOrdersIssuedSIUs)) {
                return false;
            }
        }
        {
            Integer lhsCivilSuitsFiledAgainstSIUs;
            lhsCivilSuitsFiledAgainstSIUs = this.getCivilSuitsFiledAgainstSIUs();
            Integer rhsCivilSuitsFiledAgainstSIUs;
            rhsCivilSuitsFiledAgainstSIUs = that.getCivilSuitsFiledAgainstSIUs();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "civilSuitsFiledAgainstSIUs", lhsCivilSuitsFiledAgainstSIUs), LocatorUtils.property(thatLocator, "civilSuitsFiledAgainstSIUs", rhsCivilSuitsFiledAgainstSIUs), lhsCivilSuitsFiledAgainstSIUs, rhsCivilSuitsFiledAgainstSIUs)) {
                return false;
            }
        }
        {
            Integer lhsCriminalSuitsFiledAgainstSIUs;
            lhsCriminalSuitsFiledAgainstSIUs = this.getCriminalSuitsFiledAgainstSIUs();
            Integer rhsCriminalSuitsFiledAgainstSIUs;
            rhsCriminalSuitsFiledAgainstSIUs = that.getCriminalSuitsFiledAgainstSIUs();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "criminalSuitsFiledAgainstSIUs", lhsCriminalSuitsFiledAgainstSIUs), LocatorUtils.property(thatLocator, "criminalSuitsFiledAgainstSIUs", rhsCriminalSuitsFiledAgainstSIUs), lhsCriminalSuitsFiledAgainstSIUs, rhsCriminalSuitsFiledAgainstSIUs)) {
                return false;
            }
        }
        {
            BigDecimal lhsDollarAmountPenaltiesCollected;
            lhsDollarAmountPenaltiesCollected = this.getDollarAmountPenaltiesCollected();
            BigDecimal rhsDollarAmountPenaltiesCollected;
            rhsDollarAmountPenaltiesCollected = that.getDollarAmountPenaltiesCollected();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dollarAmountPenaltiesCollected", lhsDollarAmountPenaltiesCollected), LocatorUtils.property(thatLocator, "dollarAmountPenaltiesCollected", rhsDollarAmountPenaltiesCollected), lhsDollarAmountPenaltiesCollected, rhsDollarAmountPenaltiesCollected)) {
                return false;
            }
        }
        {
            String lhsIUsWhichPenaltiesHaveBeenCollected;
            lhsIUsWhichPenaltiesHaveBeenCollected = this.getIUsWhichPenaltiesHaveBeenCollected();
            String rhsIUsWhichPenaltiesHaveBeenCollected;
            rhsIUsWhichPenaltiesHaveBeenCollected = that.getIUsWhichPenaltiesHaveBeenCollected();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "iUsWhichPenaltiesHaveBeenCollected", lhsIUsWhichPenaltiesHaveBeenCollected), LocatorUtils.property(thatLocator, "iUsWhichPenaltiesHaveBeenCollected", rhsIUsWhichPenaltiesHaveBeenCollected), lhsIUsWhichPenaltiesHaveBeenCollected, rhsIUsWhichPenaltiesHaveBeenCollected)) {
                return false;
            }
        }
        {
            Integer lhsNumberCIUs;
            lhsNumberCIUs = this.getNumberCIUs();
            Integer rhsNumberCIUs;
            rhsNumberCIUs = that.getNumberCIUs();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "numberCIUs", lhsNumberCIUs), LocatorUtils.property(thatLocator, "numberCIUs", rhsNumberCIUs), lhsNumberCIUs, rhsNumberCIUs)) {
                return false;
            }
        }
        {
            Integer lhsCIUsInSNC;
            lhsCIUsInSNC = this.getCIUsInSNC();
            Integer rhsCIUsInSNC;
            rhsCIUsInSNC = that.getCIUsInSNC();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "ciUsInSNC", lhsCIUsInSNC), LocatorUtils.property(thatLocator, "ciUsInSNC", rhsCIUsInSNC), lhsCIUsInSNC, rhsCIUsInSNC)) {
                return false;
            }
        }
        {
            String lhsPassThroughInterferenceIndicator;
            lhsPassThroughInterferenceIndicator = this.getPassThroughInterferenceIndicator();
            String rhsPassThroughInterferenceIndicator;
            rhsPassThroughInterferenceIndicator = that.getPassThroughInterferenceIndicator();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "passThroughInterferenceIndicator", lhsPassThroughInterferenceIndicator), LocatorUtils.property(thatLocator, "passThroughInterferenceIndicator", rhsPassThroughInterferenceIndicator), lhsPassThroughInterferenceIndicator, rhsPassThroughInterferenceIndicator)) {
                return false;
            }
        }
        {
            LocalLimits lhsLocalLimits;
            lhsLocalLimits = this.getLocalLimits();
            LocalLimits rhsLocalLimits;
            rhsLocalLimits = that.getLocalLimits();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "localLimits", lhsLocalLimits), LocatorUtils.property(thatLocator, "localLimits", rhsLocalLimits), lhsLocalLimits, rhsLocalLimits)) {
                return false;
            }
        }
        {
            RemovalCredits lhsRemovalCredits;
            lhsRemovalCredits = this.getRemovalCredits();
            RemovalCredits rhsRemovalCredits;
            rhsRemovalCredits = that.getRemovalCredits();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "removalCredits", lhsRemovalCredits), LocatorUtils.property(thatLocator, "removalCredits", rhsRemovalCredits), lhsRemovalCredits, rhsRemovalCredits)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            String theSUOReference;
            theSUOReference = this.getSUOReference();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "suoReference", theSUOReference), currentHashCode, theSUOReference);
        }
        {
            Date theSUODate;
            theSUODate = this.getSUODate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "suoDate", theSUODate), currentHashCode, theSUODate);
        }
        {
            YesNoIndicatorTypeBase theAcceptanceHazardousWaste;
            theAcceptanceHazardousWaste = this.getAcceptanceHazardousWaste();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "acceptanceHazardousWaste", theAcceptanceHazardousWaste), currentHashCode, theAcceptanceHazardousWaste);
        }
        {
            YesNoIndicatorTypeBase theAcceptanceNonHazardousIndustrialWaste;
            theAcceptanceNonHazardousIndustrialWaste = this.getAcceptanceNonHazardousIndustrialWaste();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "acceptanceNonHazardousIndustrialWaste", theAcceptanceNonHazardousIndustrialWaste), currentHashCode, theAcceptanceNonHazardousIndustrialWaste);
        }
        {
            YesNoIndicatorTypeBase theAcceptanceHauledDomesticWastes;
            theAcceptanceHauledDomesticWastes = this.getAcceptanceHauledDomesticWastes();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "acceptanceHauledDomesticWastes", theAcceptanceHauledDomesticWastes), currentHashCode, theAcceptanceHauledDomesticWastes);
        }
        {
            String theAnnualPretreatmentBudget;
            theAnnualPretreatmentBudget = this.getAnnualPretreatmentBudget();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "annualPretreatmentBudget", theAnnualPretreatmentBudget), currentHashCode, theAnnualPretreatmentBudget);
        }
        {
            YesNoIndicatorTypeBase theInadequacySamplingInspectionIndicator;
            theInadequacySamplingInspectionIndicator = this.getInadequacySamplingInspectionIndicator();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "inadequacySamplingInspectionIndicator", theInadequacySamplingInspectionIndicator), currentHashCode, theInadequacySamplingInspectionIndicator);
        }
        {
            YesNoIndicatorTypeBase theAdequacyPretreatmentResources;
            theAdequacyPretreatmentResources = this.getAdequacyPretreatmentResources();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "adequacyPretreatmentResources", theAdequacyPretreatmentResources), currentHashCode, theAdequacyPretreatmentResources);
        }
        {
            YesNoIndicatorTypeBase theDeficienciesIdentifiedDuringIUFileReview;
            theDeficienciesIdentifiedDuringIUFileReview = this.getDeficienciesIdentifiedDuringIUFileReview();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "deficienciesIdentifiedDuringIUFileReview", theDeficienciesIdentifiedDuringIUFileReview), currentHashCode, theDeficienciesIdentifiedDuringIUFileReview);
        }
        {
            YesNoIndicatorTypeBase theControlMechanismDeficiencies;
            theControlMechanismDeficiencies = this.getControlMechanismDeficiencies();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "controlMechanismDeficiencies", theControlMechanismDeficiencies), currentHashCode, theControlMechanismDeficiencies);
        }
        {
            YesNoIndicatorTypeBase theLegalAuthorityDeficiencies;
            theLegalAuthorityDeficiencies = this.getLegalAuthorityDeficiencies();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "legalAuthorityDeficiencies", theLegalAuthorityDeficiencies), currentHashCode, theLegalAuthorityDeficiencies);
        }
        {
            YesNoIndicatorTypeBase theDeficienciesInterpretationApplicationPretreatmentStandards;
            theDeficienciesInterpretationApplicationPretreatmentStandards = this.getDeficienciesInterpretationApplicationPretreatmentStandards();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "deficienciesInterpretationApplicationPretreatmentStandards", theDeficienciesInterpretationApplicationPretreatmentStandards), currentHashCode, theDeficienciesInterpretationApplicationPretreatmentStandards);
        }
        {
            YesNoIndicatorTypeBase theDeficienciesDataManagementPublicParticipation;
            theDeficienciesDataManagementPublicParticipation = this.getDeficienciesDataManagementPublicParticipation();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "deficienciesDataManagementPublicParticipation", theDeficienciesDataManagementPublicParticipation), currentHashCode, theDeficienciesDataManagementPublicParticipation);
        }
        {
            YesNoIndicatorTypeBase theViolationIUScheduleRemedialMeasures;
            theViolationIUScheduleRemedialMeasures = this.getViolationIUScheduleRemedialMeasures();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "violationIUScheduleRemedialMeasures", theViolationIUScheduleRemedialMeasures), currentHashCode, theViolationIUScheduleRemedialMeasures);
        }
        {
            String theFormalResponseViolationIUScheduleRemedialMeasures;
            theFormalResponseViolationIUScheduleRemedialMeasures = this.getFormalResponseViolationIUScheduleRemedialMeasures();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "formalResponseViolationIUScheduleRemedialMeasures", theFormalResponseViolationIUScheduleRemedialMeasures), currentHashCode, theFormalResponseViolationIUScheduleRemedialMeasures);
        }
        {
            Integer theAnnualFrequencyInfluentToxicantSampling;
            theAnnualFrequencyInfluentToxicantSampling = this.getAnnualFrequencyInfluentToxicantSampling();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "annualFrequencyInfluentToxicantSampling", theAnnualFrequencyInfluentToxicantSampling), currentHashCode, theAnnualFrequencyInfluentToxicantSampling);
        }
        {
            Integer theAnnualFrequencyEffluentToxicantSampling;
            theAnnualFrequencyEffluentToxicantSampling = this.getAnnualFrequencyEffluentToxicantSampling();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "annualFrequencyEffluentToxicantSampling", theAnnualFrequencyEffluentToxicantSampling), currentHashCode, theAnnualFrequencyEffluentToxicantSampling);
        }
        {
            Integer theAnnualFrequencySludgeToxicantSampling;
            theAnnualFrequencySludgeToxicantSampling = this.getAnnualFrequencySludgeToxicantSampling();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "annualFrequencySludgeToxicantSampling", theAnnualFrequencySludgeToxicantSampling), currentHashCode, theAnnualFrequencySludgeToxicantSampling);
        }
        {
            Integer theNumberSIUs;
            theNumberSIUs = this.getNumberSIUs();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "numberSIUs", theNumberSIUs), currentHashCode, theNumberSIUs);
        }
        {
            Integer theSIUsWithoutControlMechanism;
            theSIUsWithoutControlMechanism = this.getSIUsWithoutControlMechanism();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "siUsWithoutControlMechanism", theSIUsWithoutControlMechanism), currentHashCode, theSIUsWithoutControlMechanism);
        }
        {
            Integer theSIUsNotInspected;
            theSIUsNotInspected = this.getSIUsNotInspected();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "siUsNotInspected", theSIUsNotInspected), currentHashCode, theSIUsNotInspected);
        }
        {
            Integer theSIUsNotSampled;
            theSIUsNotSampled = this.getSIUsNotSampled();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "siUsNotSampled", theSIUsNotSampled), currentHashCode, theSIUsNotSampled);
        }
        {
            Integer theSIUsOnSchedule;
            theSIUsOnSchedule = this.getSIUsOnSchedule();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "siUsOnSchedule", theSIUsOnSchedule), currentHashCode, theSIUsOnSchedule);
        }
        {
            Integer theSIUsSNCWithPretreatmentStandards;
            theSIUsSNCWithPretreatmentStandards = this.getSIUsSNCWithPretreatmentStandards();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "siUsSNCWithPretreatmentStandards", theSIUsSNCWithPretreatmentStandards), currentHashCode, theSIUsSNCWithPretreatmentStandards);
        }
        {
            Integer theSIUsSNCWithReportingRequirements;
            theSIUsSNCWithReportingRequirements = this.getSIUsSNCWithReportingRequirements();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "siUsSNCWithReportingRequirements", theSIUsSNCWithReportingRequirements), currentHashCode, theSIUsSNCWithReportingRequirements);
        }
        {
            Integer theSIUsSNCWithPretreatmentSchedule;
            theSIUsSNCWithPretreatmentSchedule = this.getSIUsSNCWithPretreatmentSchedule();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "siUsSNCWithPretreatmentSchedule", theSIUsSNCWithPretreatmentSchedule), currentHashCode, theSIUsSNCWithPretreatmentSchedule);
        }
        {
            Integer theSIUsSNCPublishedNewspaper;
            theSIUsSNCPublishedNewspaper = this.getSIUsSNCPublishedNewspaper();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "siUsSNCPublishedNewspaper", theSIUsSNCPublishedNewspaper), currentHashCode, theSIUsSNCPublishedNewspaper);
        }
        {
            Integer theViolationNoticesIssuedSIUs;
            theViolationNoticesIssuedSIUs = this.getViolationNoticesIssuedSIUs();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "violationNoticesIssuedSIUs", theViolationNoticesIssuedSIUs), currentHashCode, theViolationNoticesIssuedSIUs);
        }
        {
            Integer theAdministrativeOrdersIssuedSIUs;
            theAdministrativeOrdersIssuedSIUs = this.getAdministrativeOrdersIssuedSIUs();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "administrativeOrdersIssuedSIUs", theAdministrativeOrdersIssuedSIUs), currentHashCode, theAdministrativeOrdersIssuedSIUs);
        }
        {
            Integer theCivilSuitsFiledAgainstSIUs;
            theCivilSuitsFiledAgainstSIUs = this.getCivilSuitsFiledAgainstSIUs();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "civilSuitsFiledAgainstSIUs", theCivilSuitsFiledAgainstSIUs), currentHashCode, theCivilSuitsFiledAgainstSIUs);
        }
        {
            Integer theCriminalSuitsFiledAgainstSIUs;
            theCriminalSuitsFiledAgainstSIUs = this.getCriminalSuitsFiledAgainstSIUs();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "criminalSuitsFiledAgainstSIUs", theCriminalSuitsFiledAgainstSIUs), currentHashCode, theCriminalSuitsFiledAgainstSIUs);
        }
        {
            BigDecimal theDollarAmountPenaltiesCollected;
            theDollarAmountPenaltiesCollected = this.getDollarAmountPenaltiesCollected();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dollarAmountPenaltiesCollected", theDollarAmountPenaltiesCollected), currentHashCode, theDollarAmountPenaltiesCollected);
        }
        {
            String theIUsWhichPenaltiesHaveBeenCollected;
            theIUsWhichPenaltiesHaveBeenCollected = this.getIUsWhichPenaltiesHaveBeenCollected();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "iUsWhichPenaltiesHaveBeenCollected", theIUsWhichPenaltiesHaveBeenCollected), currentHashCode, theIUsWhichPenaltiesHaveBeenCollected);
        }
        {
            Integer theNumberCIUs;
            theNumberCIUs = this.getNumberCIUs();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "numberCIUs", theNumberCIUs), currentHashCode, theNumberCIUs);
        }
        {
            Integer theCIUsInSNC;
            theCIUsInSNC = this.getCIUsInSNC();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "ciUsInSNC", theCIUsInSNC), currentHashCode, theCIUsInSNC);
        }
        {
            String thePassThroughInterferenceIndicator;
            thePassThroughInterferenceIndicator = this.getPassThroughInterferenceIndicator();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "passThroughInterferenceIndicator", thePassThroughInterferenceIndicator), currentHashCode, thePassThroughInterferenceIndicator);
        }
        {
            LocalLimits theLocalLimits;
            theLocalLimits = this.getLocalLimits();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "localLimits", theLocalLimits), currentHashCode, theLocalLimits);
        }
        {
            RemovalCredits theRemovalCredits;
            theRemovalCredits = this.getRemovalCredits();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "removalCredits", theRemovalCredits), currentHashCode, theRemovalCredits);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
