//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.12.07 at 11:39:25 AM EST 
//


package com.windsor.node.plugin.icisnpdes.generated;

import java.io.Serializable;
import java.math.BigDecimal;
import javax.persistence.AssociationOverride;
import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Embeddable;
import javax.persistence.Embedded;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Transient;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import com.windsor.node.plugin.common.xml.bind.annotation.adapters.IntegerAdapter;
import com.windsor.node.plugin.common.xml.bind.annotation.adapters.TwoDigitPrecisionAdapter;
import org.hibernate.annotations.NotFound;
import org.hibernate.annotations.NotFoundAction;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for SWMS4SmallPermit complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="SWMS4SmallPermit">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.exchangenetwork.net/schema/icis/5}BasicPermitKeyElements">
 *       &lt;sequence>
 *         &lt;group ref="{http://www.exchangenetwork.net/schema/icis/5}StormWaterBodyGroup" minOccurs="0"/>
 *         &lt;group ref="{http://www.exchangenetwork.net/schema/icis/5}StormWaterMS4Group" minOccurs="0"/>
 *         &lt;group ref="{http://www.exchangenetwork.net/schema/icis/5}StormWaterFundingGroup" minOccurs="0"/>
 *         &lt;group ref="{http://www.exchangenetwork.net/schema/icis/5}StormWaterProjectFundingSourceGroup" minOccurs="0"/>
 *         &lt;group ref="{http://www.exchangenetwork.net/schema/icis/5}StormWaterMS4OutfallEstimateGroup" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}QualifyingLocalProgramIndicator" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}QualifyingLocalProgramDescriptionText" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}SharedResponsibilitiesIndicator" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}SharedResponsibilitiesDescriptionText" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}GPCFConstructionWaiver" minOccurs="0"/>
 *         &lt;group ref="{http://www.exchangenetwork.net/schema/icis/5}StormWaterContactGroup" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "SWMS4SmallPermit", propOrder = {
    "stateWaterBodyName",
    "receivingMS4Name",
    "impairedWaterIndicator",
    "historicPropertyIndicator",
    "historicPropertyCriterionMetCode",
    "speciesCriticalHabitatIndicator",
    "speciesCriterionMetCode",
    "industrialActivitySize",
    "legalEntityTypeCode",
    "ms4PermitClassCode",
    "ms4TypeCode",
    "ms4AcreageCoveredNumber",
    "ms4PopulationServedNumber",
    "urbanizedAreaIncorporatedPlaceName",
    "ms4AnnualExpenditureDollars",
    "ms4AnnualExpenditureYear",
    "ms4BudgetDollars",
    "ms4BudgetYear",
    "projectSourcesOfFundingCode",
    "majorOutfallEstimatedMeasureIndicator",
    "majorOutfallNumber",
    "minorOutfallEstimatedMeasureIndicator",
    "minorOutfallNumber",
    "qualifyingLocalProgramIndicator",
    "qualifyingLocalProgramDescriptionText",
    "sharedResponsibilitiesIndicator",
    "sharedResponsibilitiesDescriptionText",
    "gpcfConstructionWaiver",
    "stormWaterContact",
    "stormWaterAddress"
})
@Embeddable
public class SWMS4SmallPermit
    extends BasicPermitKeyElements
    implements Serializable, Equals, HashCode
{

    private final static long serialVersionUID = 1L;
    @XmlElement(name = "StateWaterBodyName")
    protected String stateWaterBodyName;
    @XmlElement(name = "ReceivingMS4Name")
    protected String receivingMS4Name;
    @XmlElement(name = "ImpairedWaterIndicator")
    protected String impairedWaterIndicator;
    @XmlElement(name = "HistoricPropertyIndicator")
    protected String historicPropertyIndicator;
    @XmlElement(name = "HistoricPropertyCriterionMetCode")
    protected String historicPropertyCriterionMetCode;
    @XmlElement(name = "SpeciesCriticalHabitatIndicator")
    protected String speciesCriticalHabitatIndicator;
    @XmlElement(name = "SpeciesCriterionMetCode")
    protected String speciesCriterionMetCode;
    @XmlElement(name = "IndustrialActivitySize", type = String.class)
    @XmlJavaTypeAdapter(TwoDigitPrecisionAdapter.class)
    protected BigDecimal industrialActivitySize;
    @XmlElement(name = "LegalEntityTypeCode")
    protected String legalEntityTypeCode;
    @XmlElement(name = "MS4PermitClassCode")
    protected String ms4PermitClassCode;
    @XmlElement(name = "MS4TypeCode")
    protected String ms4TypeCode;
    @XmlElement(name = "MS4AcreageCoveredNumber", type = String.class)
    @XmlJavaTypeAdapter(IntegerAdapter.class)
    protected Integer ms4AcreageCoveredNumber;
    @XmlElement(name = "MS4PopulationServedNumber", type = String.class)
    @XmlJavaTypeAdapter(IntegerAdapter.class)
    protected Integer ms4PopulationServedNumber;
    @XmlElement(name = "UrbanizedAreaIncorporatedPlaceName")
    protected String urbanizedAreaIncorporatedPlaceName;
    @XmlElement(name = "MS4AnnualExpenditureDollars", type = String.class)
    @XmlJavaTypeAdapter(IntegerAdapter.class)
    protected Integer ms4AnnualExpenditureDollars;
    @XmlElement(name = "MS4AnnualExpenditureYear", type = String.class)
    @XmlJavaTypeAdapter(IntegerAdapter.class)
    protected Integer ms4AnnualExpenditureYear;
    @XmlElement(name = "MS4BudgetDollars", type = String.class)
    @XmlJavaTypeAdapter(IntegerAdapter.class)
    protected Integer ms4BudgetDollars;
    @XmlElement(name = "MS4BudgetYear", type = String.class)
    @XmlJavaTypeAdapter(IntegerAdapter.class)
    protected Integer ms4BudgetYear;
    @XmlElement(name = "ProjectSourcesOfFundingCode")
    protected String projectSourcesOfFundingCode;
    @XmlElement(name = "MajorOutfallEstimatedMeasureIndicator")
    protected String majorOutfallEstimatedMeasureIndicator;
    @XmlElement(name = "MajorOutfallNumber", type = String.class)
    @XmlJavaTypeAdapter(IntegerAdapter.class)
    protected Integer majorOutfallNumber;
    @XmlElement(name = "MinorOutfallEstimatedMeasureIndicator")
    protected String minorOutfallEstimatedMeasureIndicator;
    @XmlElement(name = "MinorOutfallNumber", type = String.class)
    @XmlJavaTypeAdapter(IntegerAdapter.class)
    protected Integer minorOutfallNumber;
    @XmlElement(name = "QualifyingLocalProgramIndicator")
    protected String qualifyingLocalProgramIndicator;
    @XmlElement(name = "QualifyingLocalProgramDescriptionText")
    protected String qualifyingLocalProgramDescriptionText;
    @XmlElement(name = "SharedResponsibilitiesIndicator")
    protected String sharedResponsibilitiesIndicator;
    @XmlElement(name = "SharedResponsibilitiesDescriptionText")
    protected String sharedResponsibilitiesDescriptionText;
    @XmlElement(name = "GPCFConstructionWaiver")
    protected GPCFConstructionWaiver gpcfConstructionWaiver;
    @XmlElement(name = "StormWaterContact")
    protected StormWaterContact stormWaterContact;
    @XmlElement(name = "StormWaterAddress")
    protected StormWaterAddress stormWaterAddress;

    /**
     * Gets the value of the stateWaterBodyName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "ST_WTR_BODY_NAME", length = 50)
    public String getStateWaterBodyName() {
        return stateWaterBodyName;
    }

    /**
     * Sets the value of the stateWaterBodyName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setStateWaterBodyName(String value) {
        this.stateWaterBodyName = value;
    }

    @Transient
    public boolean isSetStateWaterBodyName() {
        return (this.stateWaterBodyName!= null);
    }

    /**
     * Gets the value of the receivingMS4Name property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "RCVG_MS_4_NAME", length = 50)
    public String getReceivingMS4Name() {
        return receivingMS4Name;
    }

    /**
     * Sets the value of the receivingMS4Name property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setReceivingMS4Name(String value) {
        this.receivingMS4Name = value;
    }

    @Transient
    public boolean isSetReceivingMS4Name() {
        return (this.receivingMS4Name!= null);
    }

    /**
     * Gets the value of the impairedWaterIndicator property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "IMPAIRED_WTR_IND", columnDefinition = "char(1)", length = 1)
    public String getImpairedWaterIndicator() {
        return impairedWaterIndicator;
    }

    /**
     * Sets the value of the impairedWaterIndicator property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setImpairedWaterIndicator(String value) {
        this.impairedWaterIndicator = value;
    }

    @Transient
    public boolean isSetImpairedWaterIndicator() {
        return (this.impairedWaterIndicator!= null);
    }

    /**
     * Gets the value of the historicPropertyIndicator property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "HIST_PROP_IND", columnDefinition = "char(1)", length = 1)
    public String getHistoricPropertyIndicator() {
        return historicPropertyIndicator;
    }

    /**
     * Sets the value of the historicPropertyIndicator property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setHistoricPropertyIndicator(String value) {
        this.historicPropertyIndicator = value;
    }

    @Transient
    public boolean isSetHistoricPropertyIndicator() {
        return (this.historicPropertyIndicator!= null);
    }

    /**
     * Gets the value of the historicPropertyCriterionMetCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "HIST_PROP_CRIT_MET_CODE", length = 3)
    public String getHistoricPropertyCriterionMetCode() {
        return historicPropertyCriterionMetCode;
    }

    /**
     * Sets the value of the historicPropertyCriterionMetCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setHistoricPropertyCriterionMetCode(String value) {
        this.historicPropertyCriterionMetCode = value;
    }

    @Transient
    public boolean isSetHistoricPropertyCriterionMetCode() {
        return (this.historicPropertyCriterionMetCode!= null);
    }

    /**
     * Gets the value of the speciesCriticalHabitatIndicator property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "SPECIES_CRIT_HABITAT_IND", columnDefinition = "char(1)", length = 1)
    public String getSpeciesCriticalHabitatIndicator() {
        return speciesCriticalHabitatIndicator;
    }

    /**
     * Sets the value of the speciesCriticalHabitatIndicator property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSpeciesCriticalHabitatIndicator(String value) {
        this.speciesCriticalHabitatIndicator = value;
    }

    @Transient
    public boolean isSetSpeciesCriticalHabitatIndicator() {
        return (this.speciesCriticalHabitatIndicator!= null);
    }

    /**
     * Gets the value of the speciesCriterionMetCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "SPECIES_CRIT_MET_CODE", length = 3)
    public String getSpeciesCriterionMetCode() {
        return speciesCriterionMetCode;
    }

    /**
     * Sets the value of the speciesCriterionMetCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSpeciesCriterionMetCode(String value) {
        this.speciesCriterionMetCode = value;
    }

    @Transient
    public boolean isSetSpeciesCriterionMetCode() {
        return (this.speciesCriterionMetCode!= null);
    }

    /**
     * Gets the value of the industrialActivitySize property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "INDST_ACTY_SIZE", scale = 2)
    public BigDecimal getIndustrialActivitySize() {
        return industrialActivitySize;
    }

    /**
     * Sets the value of the industrialActivitySize property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setIndustrialActivitySize(BigDecimal value) {
        this.industrialActivitySize = value;
    }

    @Transient
    public boolean isSetIndustrialActivitySize() {
        return (this.industrialActivitySize!= null);
    }

    /**
     * Gets the value of the legalEntityTypeCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "LEGAL_ENTITY_TYPE_CODE", length = 3)
    public String getLegalEntityTypeCode() {
        return legalEntityTypeCode;
    }

    /**
     * Sets the value of the legalEntityTypeCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLegalEntityTypeCode(String value) {
        this.legalEntityTypeCode = value;
    }

    @Transient
    public boolean isSetLegalEntityTypeCode() {
        return (this.legalEntityTypeCode!= null);
    }

    /**
     * Gets the value of the ms4PermitClassCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "MS_4_PRMT_CLASS_CODE", length = 3)
    public String getMS4PermitClassCode() {
        return ms4PermitClassCode;
    }

    /**
     * Sets the value of the ms4PermitClassCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setMS4PermitClassCode(String value) {
        this.ms4PermitClassCode = value;
    }

    @Transient
    public boolean isSetMS4PermitClassCode() {
        return (this.ms4PermitClassCode!= null);
    }

    /**
     * Gets the value of the ms4TypeCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "MS_4_TYPE_CODE", length = 3)
    public String getMS4TypeCode() {
        return ms4TypeCode;
    }

    /**
     * Sets the value of the ms4TypeCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setMS4TypeCode(String value) {
        this.ms4TypeCode = value;
    }

    @Transient
    public boolean isSetMS4TypeCode() {
        return (this.ms4TypeCode!= null);
    }

    /**
     * Gets the value of the ms4AcreageCoveredNumber property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "MS_4_ACREAGE_COVERED_NUM", scale = 0)
    public Integer getMS4AcreageCoveredNumber() {
        return ms4AcreageCoveredNumber;
    }

    /**
     * Sets the value of the ms4AcreageCoveredNumber property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setMS4AcreageCoveredNumber(Integer value) {
        this.ms4AcreageCoveredNumber = value;
    }

    @Transient
    public boolean isSetMS4AcreageCoveredNumber() {
        return (this.ms4AcreageCoveredNumber!= null);
    }

    /**
     * Gets the value of the ms4PopulationServedNumber property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "MS_4_POPL_SERVED_NUM", scale = 0)
    public Integer getMS4PopulationServedNumber() {
        return ms4PopulationServedNumber;
    }

    /**
     * Sets the value of the ms4PopulationServedNumber property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setMS4PopulationServedNumber(Integer value) {
        this.ms4PopulationServedNumber = value;
    }

    @Transient
    public boolean isSetMS4PopulationServedNumber() {
        return (this.ms4PopulationServedNumber!= null);
    }

    /**
     * Gets the value of the urbanizedAreaIncorporatedPlaceName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "URBANIZED_AREA_INCRP_PLCE_NAME", length = 50)
    public String getUrbanizedAreaIncorporatedPlaceName() {
        return urbanizedAreaIncorporatedPlaceName;
    }

    /**
     * Sets the value of the urbanizedAreaIncorporatedPlaceName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setUrbanizedAreaIncorporatedPlaceName(String value) {
        this.urbanizedAreaIncorporatedPlaceName = value;
    }

    @Transient
    public boolean isSetUrbanizedAreaIncorporatedPlaceName() {
        return (this.urbanizedAreaIncorporatedPlaceName!= null);
    }

    /**
     * Gets the value of the ms4AnnualExpenditureDollars property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "MS_4_ANNUL_EXPEN_DOLLARS", scale = 0)
    public Integer getMS4AnnualExpenditureDollars() {
        return ms4AnnualExpenditureDollars;
    }

    /**
     * Sets the value of the ms4AnnualExpenditureDollars property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setMS4AnnualExpenditureDollars(Integer value) {
        this.ms4AnnualExpenditureDollars = value;
    }

    @Transient
    public boolean isSetMS4AnnualExpenditureDollars() {
        return (this.ms4AnnualExpenditureDollars!= null);
    }

    /**
     * Gets the value of the ms4AnnualExpenditureYear property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "MS_4_ANNUL_EXPEN_YEAR", scale = 0)
    public Integer getMS4AnnualExpenditureYear() {
        return ms4AnnualExpenditureYear;
    }

    /**
     * Sets the value of the ms4AnnualExpenditureYear property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setMS4AnnualExpenditureYear(Integer value) {
        this.ms4AnnualExpenditureYear = value;
    }

    @Transient
    public boolean isSetMS4AnnualExpenditureYear() {
        return (this.ms4AnnualExpenditureYear!= null);
    }

    /**
     * Gets the value of the ms4BudgetDollars property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "MS_4_BUDGET_DOLLARS", scale = 0)
    public Integer getMS4BudgetDollars() {
        return ms4BudgetDollars;
    }

    /**
     * Sets the value of the ms4BudgetDollars property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setMS4BudgetDollars(Integer value) {
        this.ms4BudgetDollars = value;
    }

    @Transient
    public boolean isSetMS4BudgetDollars() {
        return (this.ms4BudgetDollars!= null);
    }

    /**
     * Gets the value of the ms4BudgetYear property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "MS_4_BUDGET_YEAR", scale = 0)
    public Integer getMS4BudgetYear() {
        return ms4BudgetYear;
    }

    /**
     * Sets the value of the ms4BudgetYear property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setMS4BudgetYear(Integer value) {
        this.ms4BudgetYear = value;
    }

    @Transient
    public boolean isSetMS4BudgetYear() {
        return (this.ms4BudgetYear!= null);
    }

    /**
     * Gets the value of the projectSourcesOfFundingCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "PROJ_SRCS_OF_FUND_CODE", length = 3)
    public String getProjectSourcesOfFundingCode() {
        return projectSourcesOfFundingCode;
    }

    /**
     * Sets the value of the projectSourcesOfFundingCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setProjectSourcesOfFundingCode(String value) {
        this.projectSourcesOfFundingCode = value;
    }

    @Transient
    public boolean isSetProjectSourcesOfFundingCode() {
        return (this.projectSourcesOfFundingCode!= null);
    }

    /**
     * Gets the value of the majorOutfallEstimatedMeasureIndicator property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "MAJOR_OUTFALL_EST_MEAS_IND", columnDefinition = "char(1)", length = 1)
    public String getMajorOutfallEstimatedMeasureIndicator() {
        return majorOutfallEstimatedMeasureIndicator;
    }

    /**
     * Sets the value of the majorOutfallEstimatedMeasureIndicator property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setMajorOutfallEstimatedMeasureIndicator(String value) {
        this.majorOutfallEstimatedMeasureIndicator = value;
    }

    @Transient
    public boolean isSetMajorOutfallEstimatedMeasureIndicator() {
        return (this.majorOutfallEstimatedMeasureIndicator!= null);
    }

    /**
     * Gets the value of the majorOutfallNumber property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "MAJOR_OUTFALL_NUM", scale = 0)
    public Integer getMajorOutfallNumber() {
        return majorOutfallNumber;
    }

    /**
     * Sets the value of the majorOutfallNumber property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setMajorOutfallNumber(Integer value) {
        this.majorOutfallNumber = value;
    }

    @Transient
    public boolean isSetMajorOutfallNumber() {
        return (this.majorOutfallNumber!= null);
    }

    /**
     * Gets the value of the minorOutfallEstimatedMeasureIndicator property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "MINOR_OUTFALL_EST_MEAS_IND", columnDefinition = "char(1)", length = 1)
    public String getMinorOutfallEstimatedMeasureIndicator() {
        return minorOutfallEstimatedMeasureIndicator;
    }

    /**
     * Sets the value of the minorOutfallEstimatedMeasureIndicator property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setMinorOutfallEstimatedMeasureIndicator(String value) {
        this.minorOutfallEstimatedMeasureIndicator = value;
    }

    @Transient
    public boolean isSetMinorOutfallEstimatedMeasureIndicator() {
        return (this.minorOutfallEstimatedMeasureIndicator!= null);
    }

    /**
     * Gets the value of the minorOutfallNumber property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "MINOR_OUTFALL_NUM", scale = 0)
    public Integer getMinorOutfallNumber() {
        return minorOutfallNumber;
    }

    /**
     * Sets the value of the minorOutfallNumber property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setMinorOutfallNumber(Integer value) {
        this.minorOutfallNumber = value;
    }

    @Transient
    public boolean isSetMinorOutfallNumber() {
        return (this.minorOutfallNumber!= null);
    }

    /**
     * Gets the value of the qualifyingLocalProgramIndicator property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "QUAL_LOC_PROG_IND", columnDefinition = "char(1)", length = 1)
    public String getQualifyingLocalProgramIndicator() {
        return qualifyingLocalProgramIndicator;
    }

    /**
     * Sets the value of the qualifyingLocalProgramIndicator property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setQualifyingLocalProgramIndicator(String value) {
        this.qualifyingLocalProgramIndicator = value;
    }

    @Transient
    public boolean isSetQualifyingLocalProgramIndicator() {
        return (this.qualifyingLocalProgramIndicator!= null);
    }

    /**
     * Gets the value of the qualifyingLocalProgramDescriptionText property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "QUAL_LOC_PROG_DESC_TXT", length = 1000)
    public String getQualifyingLocalProgramDescriptionText() {
        return qualifyingLocalProgramDescriptionText;
    }

    /**
     * Sets the value of the qualifyingLocalProgramDescriptionText property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setQualifyingLocalProgramDescriptionText(String value) {
        this.qualifyingLocalProgramDescriptionText = value;
    }

    @Transient
    public boolean isSetQualifyingLocalProgramDescriptionText() {
        return (this.qualifyingLocalProgramDescriptionText!= null);
    }

    /**
     * Gets the value of the sharedResponsibilitiesIndicator property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "SHARED_RESP_IND", columnDefinition = "char(1)", length = 1)
    public String getSharedResponsibilitiesIndicator() {
        return sharedResponsibilitiesIndicator;
    }

    /**
     * Sets the value of the sharedResponsibilitiesIndicator property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSharedResponsibilitiesIndicator(String value) {
        this.sharedResponsibilitiesIndicator = value;
    }

    @Transient
    public boolean isSetSharedResponsibilitiesIndicator() {
        return (this.sharedResponsibilitiesIndicator!= null);
    }

    /**
     * Gets the value of the sharedResponsibilitiesDescriptionText property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "SHARED_RESP_DESC_TXT", length = 1000)
    public String getSharedResponsibilitiesDescriptionText() {
        return sharedResponsibilitiesDescriptionText;
    }

    /**
     * Sets the value of the sharedResponsibilitiesDescriptionText property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSharedResponsibilitiesDescriptionText(String value) {
        this.sharedResponsibilitiesDescriptionText = value;
    }

    @Transient
    public boolean isSetSharedResponsibilitiesDescriptionText() {
        return (this.sharedResponsibilitiesDescriptionText!= null);
    }

    /**
     * Gets the value of the gpcfConstructionWaiver property.
     * 
     * @return
     *     possible object is
     *     {@link GPCFConstructionWaiver }
     *     
     */
    @NotFound(action = NotFoundAction.IGNORE)
    @ManyToOne(targetEntity = GPCFConstructionWaiver.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "ICS_SWMS_4_SMALL_PRMT_ID", referencedColumnName = "ICS_SWMS_4_SMALL_PRMT_ID", insertable = false, updatable = false)
    public GPCFConstructionWaiver getGPCFConstructionWaiver() {
        return gpcfConstructionWaiver;
    }

    /**
     * Sets the value of the gpcfConstructionWaiver property.
     * 
     * @param value
     *     allowed object is
     *     {@link GPCFConstructionWaiver }
     *     
     */
    public void setGPCFConstructionWaiver(GPCFConstructionWaiver value) {
        this.gpcfConstructionWaiver = value;
    }

    @Transient
    public boolean isSetGPCFConstructionWaiver() {
        return (this.gpcfConstructionWaiver!= null);
    }

    /**
     * Gets the value of the stormWaterContact property.
     * 
     * @return
     *     possible object is
     *     {@link StormWaterContact }
     *     
     */
    @Embedded
    @AssociationOverride(name = "contact", joinColumns = {
        @JoinColumn(name = "ICS_SWMS_4_SMALL_PRMT_ID")
    })
    public StormWaterContact getStormWaterContact() {
        return stormWaterContact;
    }

    /**
     * Sets the value of the stormWaterContact property.
     * 
     * @param value
     *     allowed object is
     *     {@link StormWaterContact }
     *     
     */
    public void setStormWaterContact(StormWaterContact value) {
        this.stormWaterContact = value;
    }

    @Transient
    public boolean isSetStormWaterContact() {
        return (this.stormWaterContact!= null);
    }

    /**
     * Gets the value of the stormWaterAddress property.
     * 
     * @return
     *     possible object is
     *     {@link StormWaterAddress }
     *     
     */
    @Embedded
    @AssociationOverride(name = "address", joinColumns = {
        @JoinColumn(name = "ICS_SWMS_4_SMALL_PRMT_ID")
    })
    public StormWaterAddress getStormWaterAddress() {
        return stormWaterAddress;
    }

    /**
     * Sets the value of the stormWaterAddress property.
     * 
     * @param value
     *     allowed object is
     *     {@link StormWaterAddress }
     *     
     */
    public void setStormWaterAddress(StormWaterAddress value) {
        this.stormWaterAddress = value;
    }

    @Transient
    public boolean isSetStormWaterAddress() {
        return (this.stormWaterAddress!= null);
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof SWMS4SmallPermit)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final SWMS4SmallPermit that = ((SWMS4SmallPermit) object);
        {
            String lhsStateWaterBodyName;
            lhsStateWaterBodyName = this.getStateWaterBodyName();
            String rhsStateWaterBodyName;
            rhsStateWaterBodyName = that.getStateWaterBodyName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "stateWaterBodyName", lhsStateWaterBodyName), LocatorUtils.property(thatLocator, "stateWaterBodyName", rhsStateWaterBodyName), lhsStateWaterBodyName, rhsStateWaterBodyName)) {
                return false;
            }
        }
        {
            String lhsReceivingMS4Name;
            lhsReceivingMS4Name = this.getReceivingMS4Name();
            String rhsReceivingMS4Name;
            rhsReceivingMS4Name = that.getReceivingMS4Name();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "receivingMS4Name", lhsReceivingMS4Name), LocatorUtils.property(thatLocator, "receivingMS4Name", rhsReceivingMS4Name), lhsReceivingMS4Name, rhsReceivingMS4Name)) {
                return false;
            }
        }
        {
            String lhsImpairedWaterIndicator;
            lhsImpairedWaterIndicator = this.getImpairedWaterIndicator();
            String rhsImpairedWaterIndicator;
            rhsImpairedWaterIndicator = that.getImpairedWaterIndicator();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "impairedWaterIndicator", lhsImpairedWaterIndicator), LocatorUtils.property(thatLocator, "impairedWaterIndicator", rhsImpairedWaterIndicator), lhsImpairedWaterIndicator, rhsImpairedWaterIndicator)) {
                return false;
            }
        }
        {
            String lhsHistoricPropertyIndicator;
            lhsHistoricPropertyIndicator = this.getHistoricPropertyIndicator();
            String rhsHistoricPropertyIndicator;
            rhsHistoricPropertyIndicator = that.getHistoricPropertyIndicator();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "historicPropertyIndicator", lhsHistoricPropertyIndicator), LocatorUtils.property(thatLocator, "historicPropertyIndicator", rhsHistoricPropertyIndicator), lhsHistoricPropertyIndicator, rhsHistoricPropertyIndicator)) {
                return false;
            }
        }
        {
            String lhsHistoricPropertyCriterionMetCode;
            lhsHistoricPropertyCriterionMetCode = this.getHistoricPropertyCriterionMetCode();
            String rhsHistoricPropertyCriterionMetCode;
            rhsHistoricPropertyCriterionMetCode = that.getHistoricPropertyCriterionMetCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "historicPropertyCriterionMetCode", lhsHistoricPropertyCriterionMetCode), LocatorUtils.property(thatLocator, "historicPropertyCriterionMetCode", rhsHistoricPropertyCriterionMetCode), lhsHistoricPropertyCriterionMetCode, rhsHistoricPropertyCriterionMetCode)) {
                return false;
            }
        }
        {
            String lhsSpeciesCriticalHabitatIndicator;
            lhsSpeciesCriticalHabitatIndicator = this.getSpeciesCriticalHabitatIndicator();
            String rhsSpeciesCriticalHabitatIndicator;
            rhsSpeciesCriticalHabitatIndicator = that.getSpeciesCriticalHabitatIndicator();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "speciesCriticalHabitatIndicator", lhsSpeciesCriticalHabitatIndicator), LocatorUtils.property(thatLocator, "speciesCriticalHabitatIndicator", rhsSpeciesCriticalHabitatIndicator), lhsSpeciesCriticalHabitatIndicator, rhsSpeciesCriticalHabitatIndicator)) {
                return false;
            }
        }
        {
            String lhsSpeciesCriterionMetCode;
            lhsSpeciesCriterionMetCode = this.getSpeciesCriterionMetCode();
            String rhsSpeciesCriterionMetCode;
            rhsSpeciesCriterionMetCode = that.getSpeciesCriterionMetCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "speciesCriterionMetCode", lhsSpeciesCriterionMetCode), LocatorUtils.property(thatLocator, "speciesCriterionMetCode", rhsSpeciesCriterionMetCode), lhsSpeciesCriterionMetCode, rhsSpeciesCriterionMetCode)) {
                return false;
            }
        }
        {
            BigDecimal lhsIndustrialActivitySize;
            lhsIndustrialActivitySize = this.getIndustrialActivitySize();
            BigDecimal rhsIndustrialActivitySize;
            rhsIndustrialActivitySize = that.getIndustrialActivitySize();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "industrialActivitySize", lhsIndustrialActivitySize), LocatorUtils.property(thatLocator, "industrialActivitySize", rhsIndustrialActivitySize), lhsIndustrialActivitySize, rhsIndustrialActivitySize)) {
                return false;
            }
        }
        {
            String lhsLegalEntityTypeCode;
            lhsLegalEntityTypeCode = this.getLegalEntityTypeCode();
            String rhsLegalEntityTypeCode;
            rhsLegalEntityTypeCode = that.getLegalEntityTypeCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "legalEntityTypeCode", lhsLegalEntityTypeCode), LocatorUtils.property(thatLocator, "legalEntityTypeCode", rhsLegalEntityTypeCode), lhsLegalEntityTypeCode, rhsLegalEntityTypeCode)) {
                return false;
            }
        }
        {
            String lhsMS4PermitClassCode;
            lhsMS4PermitClassCode = this.getMS4PermitClassCode();
            String rhsMS4PermitClassCode;
            rhsMS4PermitClassCode = that.getMS4PermitClassCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "ms4PermitClassCode", lhsMS4PermitClassCode), LocatorUtils.property(thatLocator, "ms4PermitClassCode", rhsMS4PermitClassCode), lhsMS4PermitClassCode, rhsMS4PermitClassCode)) {
                return false;
            }
        }
        {
            String lhsMS4TypeCode;
            lhsMS4TypeCode = this.getMS4TypeCode();
            String rhsMS4TypeCode;
            rhsMS4TypeCode = that.getMS4TypeCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "ms4TypeCode", lhsMS4TypeCode), LocatorUtils.property(thatLocator, "ms4TypeCode", rhsMS4TypeCode), lhsMS4TypeCode, rhsMS4TypeCode)) {
                return false;
            }
        }
        {
            Integer lhsMS4AcreageCoveredNumber;
            lhsMS4AcreageCoveredNumber = this.getMS4AcreageCoveredNumber();
            Integer rhsMS4AcreageCoveredNumber;
            rhsMS4AcreageCoveredNumber = that.getMS4AcreageCoveredNumber();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "ms4AcreageCoveredNumber", lhsMS4AcreageCoveredNumber), LocatorUtils.property(thatLocator, "ms4AcreageCoveredNumber", rhsMS4AcreageCoveredNumber), lhsMS4AcreageCoveredNumber, rhsMS4AcreageCoveredNumber)) {
                return false;
            }
        }
        {
            Integer lhsMS4PopulationServedNumber;
            lhsMS4PopulationServedNumber = this.getMS4PopulationServedNumber();
            Integer rhsMS4PopulationServedNumber;
            rhsMS4PopulationServedNumber = that.getMS4PopulationServedNumber();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "ms4PopulationServedNumber", lhsMS4PopulationServedNumber), LocatorUtils.property(thatLocator, "ms4PopulationServedNumber", rhsMS4PopulationServedNumber), lhsMS4PopulationServedNumber, rhsMS4PopulationServedNumber)) {
                return false;
            }
        }
        {
            String lhsUrbanizedAreaIncorporatedPlaceName;
            lhsUrbanizedAreaIncorporatedPlaceName = this.getUrbanizedAreaIncorporatedPlaceName();
            String rhsUrbanizedAreaIncorporatedPlaceName;
            rhsUrbanizedAreaIncorporatedPlaceName = that.getUrbanizedAreaIncorporatedPlaceName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "urbanizedAreaIncorporatedPlaceName", lhsUrbanizedAreaIncorporatedPlaceName), LocatorUtils.property(thatLocator, "urbanizedAreaIncorporatedPlaceName", rhsUrbanizedAreaIncorporatedPlaceName), lhsUrbanizedAreaIncorporatedPlaceName, rhsUrbanizedAreaIncorporatedPlaceName)) {
                return false;
            }
        }
        {
            Integer lhsMS4AnnualExpenditureDollars;
            lhsMS4AnnualExpenditureDollars = this.getMS4AnnualExpenditureDollars();
            Integer rhsMS4AnnualExpenditureDollars;
            rhsMS4AnnualExpenditureDollars = that.getMS4AnnualExpenditureDollars();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "ms4AnnualExpenditureDollars", lhsMS4AnnualExpenditureDollars), LocatorUtils.property(thatLocator, "ms4AnnualExpenditureDollars", rhsMS4AnnualExpenditureDollars), lhsMS4AnnualExpenditureDollars, rhsMS4AnnualExpenditureDollars)) {
                return false;
            }
        }
        {
            Integer lhsMS4AnnualExpenditureYear;
            lhsMS4AnnualExpenditureYear = this.getMS4AnnualExpenditureYear();
            Integer rhsMS4AnnualExpenditureYear;
            rhsMS4AnnualExpenditureYear = that.getMS4AnnualExpenditureYear();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "ms4AnnualExpenditureYear", lhsMS4AnnualExpenditureYear), LocatorUtils.property(thatLocator, "ms4AnnualExpenditureYear", rhsMS4AnnualExpenditureYear), lhsMS4AnnualExpenditureYear, rhsMS4AnnualExpenditureYear)) {
                return false;
            }
        }
        {
            Integer lhsMS4BudgetDollars;
            lhsMS4BudgetDollars = this.getMS4BudgetDollars();
            Integer rhsMS4BudgetDollars;
            rhsMS4BudgetDollars = that.getMS4BudgetDollars();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "ms4BudgetDollars", lhsMS4BudgetDollars), LocatorUtils.property(thatLocator, "ms4BudgetDollars", rhsMS4BudgetDollars), lhsMS4BudgetDollars, rhsMS4BudgetDollars)) {
                return false;
            }
        }
        {
            Integer lhsMS4BudgetYear;
            lhsMS4BudgetYear = this.getMS4BudgetYear();
            Integer rhsMS4BudgetYear;
            rhsMS4BudgetYear = that.getMS4BudgetYear();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "ms4BudgetYear", lhsMS4BudgetYear), LocatorUtils.property(thatLocator, "ms4BudgetYear", rhsMS4BudgetYear), lhsMS4BudgetYear, rhsMS4BudgetYear)) {
                return false;
            }
        }
        {
            String lhsProjectSourcesOfFundingCode;
            lhsProjectSourcesOfFundingCode = this.getProjectSourcesOfFundingCode();
            String rhsProjectSourcesOfFundingCode;
            rhsProjectSourcesOfFundingCode = that.getProjectSourcesOfFundingCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "projectSourcesOfFundingCode", lhsProjectSourcesOfFundingCode), LocatorUtils.property(thatLocator, "projectSourcesOfFundingCode", rhsProjectSourcesOfFundingCode), lhsProjectSourcesOfFundingCode, rhsProjectSourcesOfFundingCode)) {
                return false;
            }
        }
        {
            String lhsMajorOutfallEstimatedMeasureIndicator;
            lhsMajorOutfallEstimatedMeasureIndicator = this.getMajorOutfallEstimatedMeasureIndicator();
            String rhsMajorOutfallEstimatedMeasureIndicator;
            rhsMajorOutfallEstimatedMeasureIndicator = that.getMajorOutfallEstimatedMeasureIndicator();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "majorOutfallEstimatedMeasureIndicator", lhsMajorOutfallEstimatedMeasureIndicator), LocatorUtils.property(thatLocator, "majorOutfallEstimatedMeasureIndicator", rhsMajorOutfallEstimatedMeasureIndicator), lhsMajorOutfallEstimatedMeasureIndicator, rhsMajorOutfallEstimatedMeasureIndicator)) {
                return false;
            }
        }
        {
            Integer lhsMajorOutfallNumber;
            lhsMajorOutfallNumber = this.getMajorOutfallNumber();
            Integer rhsMajorOutfallNumber;
            rhsMajorOutfallNumber = that.getMajorOutfallNumber();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "majorOutfallNumber", lhsMajorOutfallNumber), LocatorUtils.property(thatLocator, "majorOutfallNumber", rhsMajorOutfallNumber), lhsMajorOutfallNumber, rhsMajorOutfallNumber)) {
                return false;
            }
        }
        {
            String lhsMinorOutfallEstimatedMeasureIndicator;
            lhsMinorOutfallEstimatedMeasureIndicator = this.getMinorOutfallEstimatedMeasureIndicator();
            String rhsMinorOutfallEstimatedMeasureIndicator;
            rhsMinorOutfallEstimatedMeasureIndicator = that.getMinorOutfallEstimatedMeasureIndicator();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "minorOutfallEstimatedMeasureIndicator", lhsMinorOutfallEstimatedMeasureIndicator), LocatorUtils.property(thatLocator, "minorOutfallEstimatedMeasureIndicator", rhsMinorOutfallEstimatedMeasureIndicator), lhsMinorOutfallEstimatedMeasureIndicator, rhsMinorOutfallEstimatedMeasureIndicator)) {
                return false;
            }
        }
        {
            Integer lhsMinorOutfallNumber;
            lhsMinorOutfallNumber = this.getMinorOutfallNumber();
            Integer rhsMinorOutfallNumber;
            rhsMinorOutfallNumber = that.getMinorOutfallNumber();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "minorOutfallNumber", lhsMinorOutfallNumber), LocatorUtils.property(thatLocator, "minorOutfallNumber", rhsMinorOutfallNumber), lhsMinorOutfallNumber, rhsMinorOutfallNumber)) {
                return false;
            }
        }
        {
            String lhsQualifyingLocalProgramIndicator;
            lhsQualifyingLocalProgramIndicator = this.getQualifyingLocalProgramIndicator();
            String rhsQualifyingLocalProgramIndicator;
            rhsQualifyingLocalProgramIndicator = that.getQualifyingLocalProgramIndicator();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "qualifyingLocalProgramIndicator", lhsQualifyingLocalProgramIndicator), LocatorUtils.property(thatLocator, "qualifyingLocalProgramIndicator", rhsQualifyingLocalProgramIndicator), lhsQualifyingLocalProgramIndicator, rhsQualifyingLocalProgramIndicator)) {
                return false;
            }
        }
        {
            String lhsQualifyingLocalProgramDescriptionText;
            lhsQualifyingLocalProgramDescriptionText = this.getQualifyingLocalProgramDescriptionText();
            String rhsQualifyingLocalProgramDescriptionText;
            rhsQualifyingLocalProgramDescriptionText = that.getQualifyingLocalProgramDescriptionText();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "qualifyingLocalProgramDescriptionText", lhsQualifyingLocalProgramDescriptionText), LocatorUtils.property(thatLocator, "qualifyingLocalProgramDescriptionText", rhsQualifyingLocalProgramDescriptionText), lhsQualifyingLocalProgramDescriptionText, rhsQualifyingLocalProgramDescriptionText)) {
                return false;
            }
        }
        {
            String lhsSharedResponsibilitiesIndicator;
            lhsSharedResponsibilitiesIndicator = this.getSharedResponsibilitiesIndicator();
            String rhsSharedResponsibilitiesIndicator;
            rhsSharedResponsibilitiesIndicator = that.getSharedResponsibilitiesIndicator();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "sharedResponsibilitiesIndicator", lhsSharedResponsibilitiesIndicator), LocatorUtils.property(thatLocator, "sharedResponsibilitiesIndicator", rhsSharedResponsibilitiesIndicator), lhsSharedResponsibilitiesIndicator, rhsSharedResponsibilitiesIndicator)) {
                return false;
            }
        }
        {
            String lhsSharedResponsibilitiesDescriptionText;
            lhsSharedResponsibilitiesDescriptionText = this.getSharedResponsibilitiesDescriptionText();
            String rhsSharedResponsibilitiesDescriptionText;
            rhsSharedResponsibilitiesDescriptionText = that.getSharedResponsibilitiesDescriptionText();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "sharedResponsibilitiesDescriptionText", lhsSharedResponsibilitiesDescriptionText), LocatorUtils.property(thatLocator, "sharedResponsibilitiesDescriptionText", rhsSharedResponsibilitiesDescriptionText), lhsSharedResponsibilitiesDescriptionText, rhsSharedResponsibilitiesDescriptionText)) {
                return false;
            }
        }
        {
            GPCFConstructionWaiver lhsGPCFConstructionWaiver;
            lhsGPCFConstructionWaiver = this.getGPCFConstructionWaiver();
            GPCFConstructionWaiver rhsGPCFConstructionWaiver;
            rhsGPCFConstructionWaiver = that.getGPCFConstructionWaiver();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "gpcfConstructionWaiver", lhsGPCFConstructionWaiver), LocatorUtils.property(thatLocator, "gpcfConstructionWaiver", rhsGPCFConstructionWaiver), lhsGPCFConstructionWaiver, rhsGPCFConstructionWaiver)) {
                return false;
            }
        }
        {
            StormWaterContact lhsStormWaterContact;
            lhsStormWaterContact = this.getStormWaterContact();
            StormWaterContact rhsStormWaterContact;
            rhsStormWaterContact = that.getStormWaterContact();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "stormWaterContact", lhsStormWaterContact), LocatorUtils.property(thatLocator, "stormWaterContact", rhsStormWaterContact), lhsStormWaterContact, rhsStormWaterContact)) {
                return false;
            }
        }
        {
            StormWaterAddress lhsStormWaterAddress;
            lhsStormWaterAddress = this.getStormWaterAddress();
            StormWaterAddress rhsStormWaterAddress;
            rhsStormWaterAddress = that.getStormWaterAddress();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "stormWaterAddress", lhsStormWaterAddress), LocatorUtils.property(thatLocator, "stormWaterAddress", rhsStormWaterAddress), lhsStormWaterAddress, rhsStormWaterAddress)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            String theStateWaterBodyName;
            theStateWaterBodyName = this.getStateWaterBodyName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "stateWaterBodyName", theStateWaterBodyName), currentHashCode, theStateWaterBodyName);
        }
        {
            String theReceivingMS4Name;
            theReceivingMS4Name = this.getReceivingMS4Name();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "receivingMS4Name", theReceivingMS4Name), currentHashCode, theReceivingMS4Name);
        }
        {
            String theImpairedWaterIndicator;
            theImpairedWaterIndicator = this.getImpairedWaterIndicator();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "impairedWaterIndicator", theImpairedWaterIndicator), currentHashCode, theImpairedWaterIndicator);
        }
        {
            String theHistoricPropertyIndicator;
            theHistoricPropertyIndicator = this.getHistoricPropertyIndicator();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "historicPropertyIndicator", theHistoricPropertyIndicator), currentHashCode, theHistoricPropertyIndicator);
        }
        {
            String theHistoricPropertyCriterionMetCode;
            theHistoricPropertyCriterionMetCode = this.getHistoricPropertyCriterionMetCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "historicPropertyCriterionMetCode", theHistoricPropertyCriterionMetCode), currentHashCode, theHistoricPropertyCriterionMetCode);
        }
        {
            String theSpeciesCriticalHabitatIndicator;
            theSpeciesCriticalHabitatIndicator = this.getSpeciesCriticalHabitatIndicator();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "speciesCriticalHabitatIndicator", theSpeciesCriticalHabitatIndicator), currentHashCode, theSpeciesCriticalHabitatIndicator);
        }
        {
            String theSpeciesCriterionMetCode;
            theSpeciesCriterionMetCode = this.getSpeciesCriterionMetCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "speciesCriterionMetCode", theSpeciesCriterionMetCode), currentHashCode, theSpeciesCriterionMetCode);
        }
        {
            BigDecimal theIndustrialActivitySize;
            theIndustrialActivitySize = this.getIndustrialActivitySize();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "industrialActivitySize", theIndustrialActivitySize), currentHashCode, theIndustrialActivitySize);
        }
        {
            String theLegalEntityTypeCode;
            theLegalEntityTypeCode = this.getLegalEntityTypeCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "legalEntityTypeCode", theLegalEntityTypeCode), currentHashCode, theLegalEntityTypeCode);
        }
        {
            String theMS4PermitClassCode;
            theMS4PermitClassCode = this.getMS4PermitClassCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "ms4PermitClassCode", theMS4PermitClassCode), currentHashCode, theMS4PermitClassCode);
        }
        {
            String theMS4TypeCode;
            theMS4TypeCode = this.getMS4TypeCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "ms4TypeCode", theMS4TypeCode), currentHashCode, theMS4TypeCode);
        }
        {
            Integer theMS4AcreageCoveredNumber;
            theMS4AcreageCoveredNumber = this.getMS4AcreageCoveredNumber();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "ms4AcreageCoveredNumber", theMS4AcreageCoveredNumber), currentHashCode, theMS4AcreageCoveredNumber);
        }
        {
            Integer theMS4PopulationServedNumber;
            theMS4PopulationServedNumber = this.getMS4PopulationServedNumber();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "ms4PopulationServedNumber", theMS4PopulationServedNumber), currentHashCode, theMS4PopulationServedNumber);
        }
        {
            String theUrbanizedAreaIncorporatedPlaceName;
            theUrbanizedAreaIncorporatedPlaceName = this.getUrbanizedAreaIncorporatedPlaceName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "urbanizedAreaIncorporatedPlaceName", theUrbanizedAreaIncorporatedPlaceName), currentHashCode, theUrbanizedAreaIncorporatedPlaceName);
        }
        {
            Integer theMS4AnnualExpenditureDollars;
            theMS4AnnualExpenditureDollars = this.getMS4AnnualExpenditureDollars();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "ms4AnnualExpenditureDollars", theMS4AnnualExpenditureDollars), currentHashCode, theMS4AnnualExpenditureDollars);
        }
        {
            Integer theMS4AnnualExpenditureYear;
            theMS4AnnualExpenditureYear = this.getMS4AnnualExpenditureYear();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "ms4AnnualExpenditureYear", theMS4AnnualExpenditureYear), currentHashCode, theMS4AnnualExpenditureYear);
        }
        {
            Integer theMS4BudgetDollars;
            theMS4BudgetDollars = this.getMS4BudgetDollars();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "ms4BudgetDollars", theMS4BudgetDollars), currentHashCode, theMS4BudgetDollars);
        }
        {
            Integer theMS4BudgetYear;
            theMS4BudgetYear = this.getMS4BudgetYear();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "ms4BudgetYear", theMS4BudgetYear), currentHashCode, theMS4BudgetYear);
        }
        {
            String theProjectSourcesOfFundingCode;
            theProjectSourcesOfFundingCode = this.getProjectSourcesOfFundingCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "projectSourcesOfFundingCode", theProjectSourcesOfFundingCode), currentHashCode, theProjectSourcesOfFundingCode);
        }
        {
            String theMajorOutfallEstimatedMeasureIndicator;
            theMajorOutfallEstimatedMeasureIndicator = this.getMajorOutfallEstimatedMeasureIndicator();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "majorOutfallEstimatedMeasureIndicator", theMajorOutfallEstimatedMeasureIndicator), currentHashCode, theMajorOutfallEstimatedMeasureIndicator);
        }
        {
            Integer theMajorOutfallNumber;
            theMajorOutfallNumber = this.getMajorOutfallNumber();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "majorOutfallNumber", theMajorOutfallNumber), currentHashCode, theMajorOutfallNumber);
        }
        {
            String theMinorOutfallEstimatedMeasureIndicator;
            theMinorOutfallEstimatedMeasureIndicator = this.getMinorOutfallEstimatedMeasureIndicator();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "minorOutfallEstimatedMeasureIndicator", theMinorOutfallEstimatedMeasureIndicator), currentHashCode, theMinorOutfallEstimatedMeasureIndicator);
        }
        {
            Integer theMinorOutfallNumber;
            theMinorOutfallNumber = this.getMinorOutfallNumber();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "minorOutfallNumber", theMinorOutfallNumber), currentHashCode, theMinorOutfallNumber);
        }
        {
            String theQualifyingLocalProgramIndicator;
            theQualifyingLocalProgramIndicator = this.getQualifyingLocalProgramIndicator();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "qualifyingLocalProgramIndicator", theQualifyingLocalProgramIndicator), currentHashCode, theQualifyingLocalProgramIndicator);
        }
        {
            String theQualifyingLocalProgramDescriptionText;
            theQualifyingLocalProgramDescriptionText = this.getQualifyingLocalProgramDescriptionText();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "qualifyingLocalProgramDescriptionText", theQualifyingLocalProgramDescriptionText), currentHashCode, theQualifyingLocalProgramDescriptionText);
        }
        {
            String theSharedResponsibilitiesIndicator;
            theSharedResponsibilitiesIndicator = this.getSharedResponsibilitiesIndicator();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "sharedResponsibilitiesIndicator", theSharedResponsibilitiesIndicator), currentHashCode, theSharedResponsibilitiesIndicator);
        }
        {
            String theSharedResponsibilitiesDescriptionText;
            theSharedResponsibilitiesDescriptionText = this.getSharedResponsibilitiesDescriptionText();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "sharedResponsibilitiesDescriptionText", theSharedResponsibilitiesDescriptionText), currentHashCode, theSharedResponsibilitiesDescriptionText);
        }
        {
            GPCFConstructionWaiver theGPCFConstructionWaiver;
            theGPCFConstructionWaiver = this.getGPCFConstructionWaiver();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "gpcfConstructionWaiver", theGPCFConstructionWaiver), currentHashCode, theGPCFConstructionWaiver);
        }
        {
            StormWaterContact theStormWaterContact;
            theStormWaterContact = this.getStormWaterContact();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "stormWaterContact", theStormWaterContact), currentHashCode, theStormWaterContact);
        }
        {
            StormWaterAddress theStormWaterAddress;
            theStormWaterAddress = this.getStormWaterAddress();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "stormWaterAddress", theStormWaterAddress), currentHashCode, theStormWaterAddress);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
