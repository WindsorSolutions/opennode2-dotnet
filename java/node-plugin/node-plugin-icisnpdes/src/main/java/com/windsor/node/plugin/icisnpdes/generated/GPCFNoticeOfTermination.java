//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.12.07 at 11:39:25 AM EST 
//


package com.windsor.node.plugin.icisnpdes.generated;

import java.io.Serializable;
import java.util.Date;
import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlTransient;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import com.windsor.node.plugin.common.xml.bind.annotation.adapters.DateNoTimeZoneAdapter;
import com.windsor.node.plugin.icisnpdes.domain.AbstractGPCFNotice;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for GPCFNoticeOfTermination complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="GPCFNoticeOfTermination">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}NOTTerminationDate" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}NOTSignatureDate" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}NOTPostmarkDate" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}NOTReceivedDate" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "GPCFNoticeOfTermination", propOrder = {
    "notTerminationDate",
    "notSignatureDate",
    "notPostmarkDate",
    "notReceivedDate"
})
@Entity(name = "GPCFNoticeOfTermination")
@Table(name = "ICS_GPCF_NOTICE_OF_TERM")
@Inheritance(strategy = InheritanceType.JOINED)
public class GPCFNoticeOfTermination
    extends AbstractGPCFNotice
    implements Serializable, Equals, HashCode
{

    private final static long serialVersionUID = 1L;
    @XmlElement(name = "NOTTerminationDate", type = String.class)
    @XmlJavaTypeAdapter(DateNoTimeZoneAdapter.class)
    protected Date notTerminationDate;
    @XmlElement(name = "NOTSignatureDate", type = String.class)
    @XmlJavaTypeAdapter(DateNoTimeZoneAdapter.class)
    protected Date notSignatureDate;
    @XmlElement(name = "NOTPostmarkDate", type = String.class)
    @XmlJavaTypeAdapter(DateNoTimeZoneAdapter.class)
    protected Date notPostmarkDate;
    @XmlElement(name = "NOTReceivedDate", type = String.class)
    @XmlJavaTypeAdapter(DateNoTimeZoneAdapter.class)
    protected Date notReceivedDate;
    @XmlTransient
    protected String dbid;

    /**
     * Gets the value of the notTerminationDate property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "NOT_TERM_DATE")
    @Temporal(TemporalType.TIMESTAMP)
    public Date getNOTTerminationDate() {
        return notTerminationDate;
    }

    /**
     * Sets the value of the notTerminationDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setNOTTerminationDate(Date value) {
        this.notTerminationDate = value;
    }

    @Transient
    public boolean isSetNOTTerminationDate() {
        return (this.notTerminationDate!= null);
    }

    /**
     * Gets the value of the notSignatureDate property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "NOT_SIGN_DATE")
    @Temporal(TemporalType.TIMESTAMP)
    public Date getNOTSignatureDate() {
        return notSignatureDate;
    }

    /**
     * Sets the value of the notSignatureDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setNOTSignatureDate(Date value) {
        this.notSignatureDate = value;
    }

    @Transient
    public boolean isSetNOTSignatureDate() {
        return (this.notSignatureDate!= null);
    }

    /**
     * Gets the value of the notPostmarkDate property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "NOT_POSTMARK_DATE")
    @Temporal(TemporalType.TIMESTAMP)
    public Date getNOTPostmarkDate() {
        return notPostmarkDate;
    }

    /**
     * Sets the value of the notPostmarkDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setNOTPostmarkDate(Date value) {
        this.notPostmarkDate = value;
    }

    @Transient
    public boolean isSetNOTPostmarkDate() {
        return (this.notPostmarkDate!= null);
    }

    /**
     * Gets the value of the notReceivedDate property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "NOT_RCVD_DATE")
    @Temporal(TemporalType.TIMESTAMP)
    public Date getNOTReceivedDate() {
        return notReceivedDate;
    }

    /**
     * Sets the value of the notReceivedDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setNOTReceivedDate(Date value) {
        this.notReceivedDate = value;
    }

    @Transient
    public boolean isSetNOTReceivedDate() {
        return (this.notReceivedDate!= null);
    }

    /**
     * 
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Id
    @Column(name = "ICS_GPCF_NOTICE_OF_TERM_ID")
    @GeneratedValue(strategy = GenerationType.AUTO)
    public String getDbid() {
        return dbid;
    }

    /**
     * 
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDbid(String value) {
        this.dbid = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof GPCFNoticeOfTermination)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final GPCFNoticeOfTermination that = ((GPCFNoticeOfTermination) object);
        {
            Date lhsNOTTerminationDate;
            lhsNOTTerminationDate = this.getNOTTerminationDate();
            Date rhsNOTTerminationDate;
            rhsNOTTerminationDate = that.getNOTTerminationDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "notTerminationDate", lhsNOTTerminationDate), LocatorUtils.property(thatLocator, "notTerminationDate", rhsNOTTerminationDate), lhsNOTTerminationDate, rhsNOTTerminationDate)) {
                return false;
            }
        }
        {
            Date lhsNOTSignatureDate;
            lhsNOTSignatureDate = this.getNOTSignatureDate();
            Date rhsNOTSignatureDate;
            rhsNOTSignatureDate = that.getNOTSignatureDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "notSignatureDate", lhsNOTSignatureDate), LocatorUtils.property(thatLocator, "notSignatureDate", rhsNOTSignatureDate), lhsNOTSignatureDate, rhsNOTSignatureDate)) {
                return false;
            }
        }
        {
            Date lhsNOTPostmarkDate;
            lhsNOTPostmarkDate = this.getNOTPostmarkDate();
            Date rhsNOTPostmarkDate;
            rhsNOTPostmarkDate = that.getNOTPostmarkDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "notPostmarkDate", lhsNOTPostmarkDate), LocatorUtils.property(thatLocator, "notPostmarkDate", rhsNOTPostmarkDate), lhsNOTPostmarkDate, rhsNOTPostmarkDate)) {
                return false;
            }
        }
        {
            Date lhsNOTReceivedDate;
            lhsNOTReceivedDate = this.getNOTReceivedDate();
            Date rhsNOTReceivedDate;
            rhsNOTReceivedDate = that.getNOTReceivedDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "notReceivedDate", lhsNOTReceivedDate), LocatorUtils.property(thatLocator, "notReceivedDate", rhsNOTReceivedDate), lhsNOTReceivedDate, rhsNOTReceivedDate)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            Date theNOTTerminationDate;
            theNOTTerminationDate = this.getNOTTerminationDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "notTerminationDate", theNOTTerminationDate), currentHashCode, theNOTTerminationDate);
        }
        {
            Date theNOTSignatureDate;
            theNOTSignatureDate = this.getNOTSignatureDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "notSignatureDate", theNOTSignatureDate), currentHashCode, theNOTSignatureDate);
        }
        {
            Date theNOTPostmarkDate;
            theNOTPostmarkDate = this.getNOTPostmarkDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "notPostmarkDate", theNOTPostmarkDate), currentHashCode, theNOTPostmarkDate);
        }
        {
            Date theNOTReceivedDate;
            theNOTReceivedDate = this.getNOTReceivedDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "notReceivedDate", theNOTReceivedDate), currentHashCode, theNOTReceivedDate);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
