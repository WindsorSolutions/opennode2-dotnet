//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.12.07 at 11:39:25 AM EST 
//


package com.windsor.node.plugin.icisnpdes.generated;

import java.io.Serializable;
import javax.persistence.AssociationOverride;
import javax.persistence.AssociationOverrides;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.Embedded;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlTransient;
import javax.xml.bind.annotation.XmlType;
import com.windsor.node.plugin.icisnpdes.domain.AbstractUnpermittedFacilityData;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for UnpermittedFacilityData complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="UnpermittedFacilityData">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}TransactionHeader"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}UnpermittedFacility"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "UnpermittedFacilityData", propOrder = {
    "transactionHeader",
    "unpermittedFacility"
})
@Entity(name = "UnpermittedFacilityData")
@Table(name = "ICS_UNPRMT_FAC")
@Inheritance(strategy = InheritanceType.JOINED)
@AssociationOverride(name = "unpermittedFacility.geographicCoordinates", joinColumns = {
    @JoinColumn(name = "ICS_UNPRMT_FAC_ID", referencedColumnName = "ICS_UNPRMT_FAC_ID", insertable = false, updatable = false)
})
public class UnpermittedFacilityData
    extends AbstractUnpermittedFacilityData
    implements Serializable, Equals, HashCode
{

    private final static long serialVersionUID = 1L;
    @XmlElement(name = "TransactionHeader", required = true)
    protected TransactionHeader transactionHeader;
    @XmlElement(name = "UnpermittedFacility", required = true)
    protected UnpermittedFacility unpermittedFacility;
    @XmlTransient
    protected String dbid;

    /**
     * Gets the value of the transactionHeader property.
     * 
     * @return
     *     possible object is
     *     {@link TransactionHeader }
     *     
     */
    @Embedded
    @AttributeOverrides({
        @AttributeOverride(name = "transactionType", column = @Column(name = "TRANSACTION_TYPE", columnDefinition = "char(1)", length = 1)),
        @AttributeOverride(name = "transactionTimestamp", column = @Column(name = "TRANSACTION_TIMESTAMP"))
    })
    public TransactionHeader getTransactionHeader() {
        return transactionHeader;
    }

    /**
     * Sets the value of the transactionHeader property.
     * 
     * @param value
     *     allowed object is
     *     {@link TransactionHeader }
     *     
     */
    public void setTransactionHeader(TransactionHeader value) {
        this.transactionHeader = value;
    }

    @Transient
    public boolean isSetTransactionHeader() {
        return (this.transactionHeader!= null);
    }

    /**
     * Gets the value of the unpermittedFacility property.
     * 
     * @return
     *     possible object is
     *     {@link UnpermittedFacility }
     *     
     */
    @Embedded
    @AttributeOverrides({
        @AttributeOverride(name = "facilitySiteName", column = @Column(name = "FAC_SITE_NAME", length = 80)),
        @AttributeOverride(name = "locationAddressText", column = @Column(name = "LOC_ADDR_TXT", length = 50)),
        @AttributeOverride(name = "supplementalLocationText", column = @Column(name = "SUPPL_LOC_TXT", length = 50)),
        @AttributeOverride(name = "localityName", column = @Column(name = "LOCALITY_NAME", length = 60)),
        @AttributeOverride(name = "locationAddressCountyCode", column = @Column(name = "LOC_ADDR_COUNTY_CODE", length = 5)),
        @AttributeOverride(name = "locationAddressCityCode", column = @Column(name = "LOC_ADDR_CITY_CODE", length = 12)),
        @AttributeOverride(name = "locationStateCode", column = @Column(name = "LOC_ST_CODE", columnDefinition = "char(2)", length = 2)),
        @AttributeOverride(name = "locationZipCode", column = @Column(name = "LOC_ZIP_CODE", length = 14)),
        @AttributeOverride(name = "locationCountryCode", column = @Column(name = "LOC_COUNTRY_CODE", length = 3)),
        @AttributeOverride(name = "organizationDUNSNumber", column = @Column(name = "ORG_DUNS_NUM", columnDefinition = "char(9)", length = 9)),
        @AttributeOverride(name = "stateFacilityIdentifier", column = @Column(name = "ST_FAC_IDENT", length = 12)),
        @AttributeOverride(name = "stateRegionCode", column = @Column(name = "ST_RGN_CODE", length = 5)),
        @AttributeOverride(name = "facilityCongressionalDistrictNumber", column = @Column(name = "FAC_CONGR_DISTRICT_NUM", scale = 0)),
        @AttributeOverride(name = "facilityTypeOfOwnershipCode", column = @Column(name = "FAC_TYPE_OF_OWNERSHIP_CODE", length = 3)),
        @AttributeOverride(name = "federalFacilityIdentificationNumber", column = @Column(name = "FEDR_FAC_IDENT_NUM", length = 12)),
        @AttributeOverride(name = "federalAgencyCode", column = @Column(name = "FEDR_AGNCY_CODE", length = 5)),
        @AttributeOverride(name = "tribalLandCode", column = @Column(name = "TRIBAL_LAND_CODE", length = 4)),
        @AttributeOverride(name = "constructionProjectName", column = @Column(name = "CNST_PROJ_NAME", length = 50)),
        @AttributeOverride(name = "constructionProjectLatitudeMeasure", column = @Column(name = "CNST_PROJ_LAT_MEAS", length = 10)),
        @AttributeOverride(name = "constructionProjectLongitudeMeasure", column = @Column(name = "CNST_PROJ_LONG_MEAS", length = 11)),
        @AttributeOverride(name = "sectionTownshipRange", column = @Column(name = "SECTION_TOWNSHIP_RNG", length = 50)),
        @AttributeOverride(name = "facilityComments", column = @Column(name = "FAC_CMNTS", columnDefinition = "varchar(4000)", length = 4000)),
        @AttributeOverride(name = "facilityUserDefinedField1", column = @Column(name = "FAC_USR_DFND_FLD_1", length = 30)),
        @AttributeOverride(name = "facilityUserDefinedField2", column = @Column(name = "FAC_USR_DFND_FLD_2", length = 30)),
        @AttributeOverride(name = "facilityUserDefinedField3", column = @Column(name = "FAC_USR_DFND_FLD_3", length = 30)),
        @AttributeOverride(name = "facilityUserDefinedField4", column = @Column(name = "FAC_USR_DFND_FLD_4", length = 30)),
        @AttributeOverride(name = "facilityUserDefinedField5", column = @Column(name = "FAC_USR_DFND_FLD_5", length = 30)),
        @AttributeOverride(name = "permitCommentsText", column = @Column(name = "PRMT_CMNTS_TXT", columnDefinition = "varchar(4000)", length = 4000))
    })
    @AssociationOverrides({
        @AssociationOverride(name = "geographicCoordinates", joinColumns = {
            @JoinColumn(name = "ICS_UNPRMT_FAC_ID")
        }),
        @AssociationOverride(name = "sicCodeDetails", joinColumns = {
            @JoinColumn(name = "ICS_UNPRMT_FAC_ID")
        }),
        @AssociationOverride(name = "naicsCodeDetails", joinColumns = {
            @JoinColumn(name = "ICS_UNPRMT_FAC_ID")
        }),
        @AssociationOverride(name = "facilityClassification", joinTable = @JoinTable(name = "ICS_FAC_CLASS", joinColumns = {
            @JoinColumn(name = "ICS_UNPRMT_FAC_ID")
        })),
        @AssociationOverride(name = "policyCode", joinTable = @JoinTable(name = "ICS_PLCY", joinColumns = {
            @JoinColumn(name = "ICS_UNPRMT_FAC_ID")
        })),
        @AssociationOverride(name = "originatingProgramsCode", joinTable = @JoinTable(name = "ICS_ORIG_PROGS", joinColumns = {
            @JoinColumn(name = "ICS_UNPRMT_FAC_ID")
        })),
        @AssociationOverride(name = "permitComponentTypeCode", joinTable = @JoinTable(name = "ICS_PRMT_COMP_TYPE", joinColumns = {
            @JoinColumn(name = "ICS_UNPRMT_FAC_ID")
        })),
        @AssociationOverride(name = "facilityContact.contact", joinColumns = {
            @JoinColumn(name = "ICS_UNPRMT_FAC_ID")
        }),
        @AssociationOverride(name = "facilityAddress.address", joinColumns = {
            @JoinColumn(name = "ICS_UNPRMT_FAC_ID")
        })
    })
    public UnpermittedFacility getUnpermittedFacility() {
        return unpermittedFacility;
    }

    /**
     * Sets the value of the unpermittedFacility property.
     * 
     * @param value
     *     allowed object is
     *     {@link UnpermittedFacility }
     *     
     */
    public void setUnpermittedFacility(UnpermittedFacility value) {
        this.unpermittedFacility = value;
    }

    @Transient
    public boolean isSetUnpermittedFacility() {
        return (this.unpermittedFacility!= null);
    }

    /**
     * 
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Id
    @Column(name = "ICS_UNPRMT_FAC_ID")
    @GeneratedValue(strategy = GenerationType.AUTO)
    public String getDbid() {
        return dbid;
    }

    /**
     * 
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDbid(String value) {
        this.dbid = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof UnpermittedFacilityData)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final UnpermittedFacilityData that = ((UnpermittedFacilityData) object);
        {
            TransactionHeader lhsTransactionHeader;
            lhsTransactionHeader = this.getTransactionHeader();
            TransactionHeader rhsTransactionHeader;
            rhsTransactionHeader = that.getTransactionHeader();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "transactionHeader", lhsTransactionHeader), LocatorUtils.property(thatLocator, "transactionHeader", rhsTransactionHeader), lhsTransactionHeader, rhsTransactionHeader)) {
                return false;
            }
        }
        {
            UnpermittedFacility lhsUnpermittedFacility;
            lhsUnpermittedFacility = this.getUnpermittedFacility();
            UnpermittedFacility rhsUnpermittedFacility;
            rhsUnpermittedFacility = that.getUnpermittedFacility();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "unpermittedFacility", lhsUnpermittedFacility), LocatorUtils.property(thatLocator, "unpermittedFacility", rhsUnpermittedFacility), lhsUnpermittedFacility, rhsUnpermittedFacility)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            TransactionHeader theTransactionHeader;
            theTransactionHeader = this.getTransactionHeader();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "transactionHeader", theTransactionHeader), currentHashCode, theTransactionHeader);
        }
        {
            UnpermittedFacility theUnpermittedFacility;
            theUnpermittedFacility = this.getUnpermittedFacility();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "unpermittedFacility", theUnpermittedFacility), currentHashCode, theUnpermittedFacility);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
