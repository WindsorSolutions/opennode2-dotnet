//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.12.07 at 11:39:25 AM EST 
//


package com.windsor.node.plugin.icisnpdes.generated;

import java.io.Serializable;
import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlTransient;
import javax.xml.bind.annotation.XmlType;
import com.windsor.node.plugin.icisnpdes.domain.AbstractHasDischargeMonitoringReport;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for SurfaceDisposalSite complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="SurfaceDisposalSite">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}PathogenReductionIndicator" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}VectorReductionIndicator" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}ManagementPracticesIndicator" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}CertificationStatementIndicator" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}CertifierFirstName" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}CertifierLastName" minOccurs="0"/>
 *         &lt;group ref="{http://www.exchangenetwork.net/schema/icis/5}ClassAAlternativesUsedGroup" minOccurs="0"/>
 *         &lt;group ref="{http://www.exchangenetwork.net/schema/icis/5}ClassBAlternativesUsedGroup" minOccurs="0"/>
 *         &lt;group ref="{http://www.exchangenetwork.net/schema/icis/5}VARAlternativesUsedGroup" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "SurfaceDisposalSite", propOrder = {
    "pathogenReductionIndicator",
    "vectorReductionIndicator",
    "managementPracticesIndicator",
    "certificationStatementIndicator",
    "certifierFirstName",
    "certifierLastName",
    "classAAlternativeUsed",
    "classAAlternativesText",
    "classBAlternativeUsed",
    "classBAlternativesText",
    "varAlternativeUsed",
    "varAlternativesText"
})
@Entity(name = "SurfaceDisposalSite")
@Table(name = "ICS_SURF_DSPL_SITE")
@Inheritance(strategy = InheritanceType.JOINED)
public class SurfaceDisposalSite
    extends AbstractHasDischargeMonitoringReport
    implements Serializable, Equals, HashCode
{

    private final static long serialVersionUID = 1L;
    @XmlElement(name = "PathogenReductionIndicator")
    protected String pathogenReductionIndicator;
    @XmlElement(name = "VectorReductionIndicator")
    protected String vectorReductionIndicator;
    @XmlElement(name = "ManagementPracticesIndicator")
    protected String managementPracticesIndicator;
    @XmlElement(name = "CertificationStatementIndicator")
    protected String certificationStatementIndicator;
    @XmlElement(name = "CertifierFirstName")
    protected String certifierFirstName;
    @XmlElement(name = "CertifierLastName")
    protected String certifierLastName;
    @XmlElement(name = "ClassAAlternativeUsed")
    protected String classAAlternativeUsed;
    @XmlElement(name = "ClassAAlternativesText")
    protected String classAAlternativesText;
    @XmlElement(name = "ClassBAlternativeUsed")
    protected String classBAlternativeUsed;
    @XmlElement(name = "ClassBAlternativesText")
    protected String classBAlternativesText;
    @XmlElement(name = "VARAlternativeUsed")
    protected String varAlternativeUsed;
    @XmlElement(name = "VARAlternativesText")
    protected String varAlternativesText;
    @XmlTransient
    protected String dbid;

    /**
     * Gets the value of the pathogenReductionIndicator property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "PATHOGEN_REDUCTION_IND", columnDefinition = "char(1)", length = 1)
    public String getPathogenReductionIndicator() {
        return pathogenReductionIndicator;
    }

    /**
     * Sets the value of the pathogenReductionIndicator property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPathogenReductionIndicator(String value) {
        this.pathogenReductionIndicator = value;
    }

    @Transient
    public boolean isSetPathogenReductionIndicator() {
        return (this.pathogenReductionIndicator!= null);
    }

    /**
     * Gets the value of the vectorReductionIndicator property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "VECTOR_REDUCTION_IND", columnDefinition = "char(1)", length = 1)
    public String getVectorReductionIndicator() {
        return vectorReductionIndicator;
    }

    /**
     * Sets the value of the vectorReductionIndicator property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setVectorReductionIndicator(String value) {
        this.vectorReductionIndicator = value;
    }

    @Transient
    public boolean isSetVectorReductionIndicator() {
        return (this.vectorReductionIndicator!= null);
    }

    /**
     * Gets the value of the managementPracticesIndicator property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "MGMT_PRACTICES_IND", columnDefinition = "char(1)", length = 1)
    public String getManagementPracticesIndicator() {
        return managementPracticesIndicator;
    }

    /**
     * Sets the value of the managementPracticesIndicator property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setManagementPracticesIndicator(String value) {
        this.managementPracticesIndicator = value;
    }

    @Transient
    public boolean isSetManagementPracticesIndicator() {
        return (this.managementPracticesIndicator!= null);
    }

    /**
     * Gets the value of the certificationStatementIndicator property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "CERT_STATEMENT_IND", columnDefinition = "char(1)", length = 1)
    public String getCertificationStatementIndicator() {
        return certificationStatementIndicator;
    }

    /**
     * Sets the value of the certificationStatementIndicator property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCertificationStatementIndicator(String value) {
        this.certificationStatementIndicator = value;
    }

    @Transient
    public boolean isSetCertificationStatementIndicator() {
        return (this.certificationStatementIndicator!= null);
    }

    /**
     * Gets the value of the certifierFirstName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "CERT_FIRST_NAME", length = 30)
    public String getCertifierFirstName() {
        return certifierFirstName;
    }

    /**
     * Sets the value of the certifierFirstName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCertifierFirstName(String value) {
        this.certifierFirstName = value;
    }

    @Transient
    public boolean isSetCertifierFirstName() {
        return (this.certifierFirstName!= null);
    }

    /**
     * Gets the value of the certifierLastName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "CERT_LAST_NAME", length = 30)
    public String getCertifierLastName() {
        return certifierLastName;
    }

    /**
     * Sets the value of the certifierLastName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCertifierLastName(String value) {
        this.certifierLastName = value;
    }

    @Transient
    public boolean isSetCertifierLastName() {
        return (this.certifierLastName!= null);
    }

    /**
     * Gets the value of the classAAlternativeUsed property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "CLASS_A_ALT_USED", length = 3)
    public String getClassAAlternativeUsed() {
        return classAAlternativeUsed;
    }

    /**
     * Sets the value of the classAAlternativeUsed property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setClassAAlternativeUsed(String value) {
        this.classAAlternativeUsed = value;
    }

    @Transient
    public boolean isSetClassAAlternativeUsed() {
        return (this.classAAlternativeUsed!= null);
    }

    /**
     * Gets the value of the classAAlternativesText property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "CLASS_A_ALTS_TXT", columnDefinition = "varchar(4000)", length = 4000)
    public String getClassAAlternativesText() {
        return classAAlternativesText;
    }

    /**
     * Sets the value of the classAAlternativesText property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setClassAAlternativesText(String value) {
        this.classAAlternativesText = value;
    }

    @Transient
    public boolean isSetClassAAlternativesText() {
        return (this.classAAlternativesText!= null);
    }

    /**
     * Gets the value of the classBAlternativeUsed property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "CLASS_B_ALT_USED", length = 3)
    public String getClassBAlternativeUsed() {
        return classBAlternativeUsed;
    }

    /**
     * Sets the value of the classBAlternativeUsed property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setClassBAlternativeUsed(String value) {
        this.classBAlternativeUsed = value;
    }

    @Transient
    public boolean isSetClassBAlternativeUsed() {
        return (this.classBAlternativeUsed!= null);
    }

    /**
     * Gets the value of the classBAlternativesText property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "CLASS_B_ALTS_TXT", columnDefinition = "varchar(4000)", length = 4000)
    public String getClassBAlternativesText() {
        return classBAlternativesText;
    }

    /**
     * Sets the value of the classBAlternativesText property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setClassBAlternativesText(String value) {
        this.classBAlternativesText = value;
    }

    @Transient
    public boolean isSetClassBAlternativesText() {
        return (this.classBAlternativesText!= null);
    }

    /**
     * Gets the value of the varAlternativeUsed property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "VAR_ALT_USED", length = 3)
    public String getVARAlternativeUsed() {
        return varAlternativeUsed;
    }

    /**
     * Sets the value of the varAlternativeUsed property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setVARAlternativeUsed(String value) {
        this.varAlternativeUsed = value;
    }

    @Transient
    public boolean isSetVARAlternativeUsed() {
        return (this.varAlternativeUsed!= null);
    }

    /**
     * Gets the value of the varAlternativesText property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "VAR_ALTS_TXT", columnDefinition = "varchar(4000)", length = 4000)
    public String getVARAlternativesText() {
        return varAlternativesText;
    }

    /**
     * Sets the value of the varAlternativesText property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setVARAlternativesText(String value) {
        this.varAlternativesText = value;
    }

    @Transient
    public boolean isSetVARAlternativesText() {
        return (this.varAlternativesText!= null);
    }

    /**
     * 
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Id
    @Column(name = "ICS_SURF_DSPL_SITE_ID")
    @GeneratedValue(strategy = GenerationType.AUTO)
    public String getDbid() {
        return dbid;
    }

    /**
     * 
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDbid(String value) {
        this.dbid = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof SurfaceDisposalSite)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final SurfaceDisposalSite that = ((SurfaceDisposalSite) object);
        {
            String lhsPathogenReductionIndicator;
            lhsPathogenReductionIndicator = this.getPathogenReductionIndicator();
            String rhsPathogenReductionIndicator;
            rhsPathogenReductionIndicator = that.getPathogenReductionIndicator();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "pathogenReductionIndicator", lhsPathogenReductionIndicator), LocatorUtils.property(thatLocator, "pathogenReductionIndicator", rhsPathogenReductionIndicator), lhsPathogenReductionIndicator, rhsPathogenReductionIndicator)) {
                return false;
            }
        }
        {
            String lhsVectorReductionIndicator;
            lhsVectorReductionIndicator = this.getVectorReductionIndicator();
            String rhsVectorReductionIndicator;
            rhsVectorReductionIndicator = that.getVectorReductionIndicator();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "vectorReductionIndicator", lhsVectorReductionIndicator), LocatorUtils.property(thatLocator, "vectorReductionIndicator", rhsVectorReductionIndicator), lhsVectorReductionIndicator, rhsVectorReductionIndicator)) {
                return false;
            }
        }
        {
            String lhsManagementPracticesIndicator;
            lhsManagementPracticesIndicator = this.getManagementPracticesIndicator();
            String rhsManagementPracticesIndicator;
            rhsManagementPracticesIndicator = that.getManagementPracticesIndicator();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "managementPracticesIndicator", lhsManagementPracticesIndicator), LocatorUtils.property(thatLocator, "managementPracticesIndicator", rhsManagementPracticesIndicator), lhsManagementPracticesIndicator, rhsManagementPracticesIndicator)) {
                return false;
            }
        }
        {
            String lhsCertificationStatementIndicator;
            lhsCertificationStatementIndicator = this.getCertificationStatementIndicator();
            String rhsCertificationStatementIndicator;
            rhsCertificationStatementIndicator = that.getCertificationStatementIndicator();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "certificationStatementIndicator", lhsCertificationStatementIndicator), LocatorUtils.property(thatLocator, "certificationStatementIndicator", rhsCertificationStatementIndicator), lhsCertificationStatementIndicator, rhsCertificationStatementIndicator)) {
                return false;
            }
        }
        {
            String lhsCertifierFirstName;
            lhsCertifierFirstName = this.getCertifierFirstName();
            String rhsCertifierFirstName;
            rhsCertifierFirstName = that.getCertifierFirstName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "certifierFirstName", lhsCertifierFirstName), LocatorUtils.property(thatLocator, "certifierFirstName", rhsCertifierFirstName), lhsCertifierFirstName, rhsCertifierFirstName)) {
                return false;
            }
        }
        {
            String lhsCertifierLastName;
            lhsCertifierLastName = this.getCertifierLastName();
            String rhsCertifierLastName;
            rhsCertifierLastName = that.getCertifierLastName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "certifierLastName", lhsCertifierLastName), LocatorUtils.property(thatLocator, "certifierLastName", rhsCertifierLastName), lhsCertifierLastName, rhsCertifierLastName)) {
                return false;
            }
        }
        {
            String lhsClassAAlternativeUsed;
            lhsClassAAlternativeUsed = this.getClassAAlternativeUsed();
            String rhsClassAAlternativeUsed;
            rhsClassAAlternativeUsed = that.getClassAAlternativeUsed();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "classAAlternativeUsed", lhsClassAAlternativeUsed), LocatorUtils.property(thatLocator, "classAAlternativeUsed", rhsClassAAlternativeUsed), lhsClassAAlternativeUsed, rhsClassAAlternativeUsed)) {
                return false;
            }
        }
        {
            String lhsClassAAlternativesText;
            lhsClassAAlternativesText = this.getClassAAlternativesText();
            String rhsClassAAlternativesText;
            rhsClassAAlternativesText = that.getClassAAlternativesText();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "classAAlternativesText", lhsClassAAlternativesText), LocatorUtils.property(thatLocator, "classAAlternativesText", rhsClassAAlternativesText), lhsClassAAlternativesText, rhsClassAAlternativesText)) {
                return false;
            }
        }
        {
            String lhsClassBAlternativeUsed;
            lhsClassBAlternativeUsed = this.getClassBAlternativeUsed();
            String rhsClassBAlternativeUsed;
            rhsClassBAlternativeUsed = that.getClassBAlternativeUsed();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "classBAlternativeUsed", lhsClassBAlternativeUsed), LocatorUtils.property(thatLocator, "classBAlternativeUsed", rhsClassBAlternativeUsed), lhsClassBAlternativeUsed, rhsClassBAlternativeUsed)) {
                return false;
            }
        }
        {
            String lhsClassBAlternativesText;
            lhsClassBAlternativesText = this.getClassBAlternativesText();
            String rhsClassBAlternativesText;
            rhsClassBAlternativesText = that.getClassBAlternativesText();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "classBAlternativesText", lhsClassBAlternativesText), LocatorUtils.property(thatLocator, "classBAlternativesText", rhsClassBAlternativesText), lhsClassBAlternativesText, rhsClassBAlternativesText)) {
                return false;
            }
        }
        {
            String lhsVARAlternativeUsed;
            lhsVARAlternativeUsed = this.getVARAlternativeUsed();
            String rhsVARAlternativeUsed;
            rhsVARAlternativeUsed = that.getVARAlternativeUsed();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "varAlternativeUsed", lhsVARAlternativeUsed), LocatorUtils.property(thatLocator, "varAlternativeUsed", rhsVARAlternativeUsed), lhsVARAlternativeUsed, rhsVARAlternativeUsed)) {
                return false;
            }
        }
        {
            String lhsVARAlternativesText;
            lhsVARAlternativesText = this.getVARAlternativesText();
            String rhsVARAlternativesText;
            rhsVARAlternativesText = that.getVARAlternativesText();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "varAlternativesText", lhsVARAlternativesText), LocatorUtils.property(thatLocator, "varAlternativesText", rhsVARAlternativesText), lhsVARAlternativesText, rhsVARAlternativesText)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            String thePathogenReductionIndicator;
            thePathogenReductionIndicator = this.getPathogenReductionIndicator();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "pathogenReductionIndicator", thePathogenReductionIndicator), currentHashCode, thePathogenReductionIndicator);
        }
        {
            String theVectorReductionIndicator;
            theVectorReductionIndicator = this.getVectorReductionIndicator();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "vectorReductionIndicator", theVectorReductionIndicator), currentHashCode, theVectorReductionIndicator);
        }
        {
            String theManagementPracticesIndicator;
            theManagementPracticesIndicator = this.getManagementPracticesIndicator();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "managementPracticesIndicator", theManagementPracticesIndicator), currentHashCode, theManagementPracticesIndicator);
        }
        {
            String theCertificationStatementIndicator;
            theCertificationStatementIndicator = this.getCertificationStatementIndicator();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "certificationStatementIndicator", theCertificationStatementIndicator), currentHashCode, theCertificationStatementIndicator);
        }
        {
            String theCertifierFirstName;
            theCertifierFirstName = this.getCertifierFirstName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "certifierFirstName", theCertifierFirstName), currentHashCode, theCertifierFirstName);
        }
        {
            String theCertifierLastName;
            theCertifierLastName = this.getCertifierLastName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "certifierLastName", theCertifierLastName), currentHashCode, theCertifierLastName);
        }
        {
            String theClassAAlternativeUsed;
            theClassAAlternativeUsed = this.getClassAAlternativeUsed();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "classAAlternativeUsed", theClassAAlternativeUsed), currentHashCode, theClassAAlternativeUsed);
        }
        {
            String theClassAAlternativesText;
            theClassAAlternativesText = this.getClassAAlternativesText();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "classAAlternativesText", theClassAAlternativesText), currentHashCode, theClassAAlternativesText);
        }
        {
            String theClassBAlternativeUsed;
            theClassBAlternativeUsed = this.getClassBAlternativeUsed();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "classBAlternativeUsed", theClassBAlternativeUsed), currentHashCode, theClassBAlternativeUsed);
        }
        {
            String theClassBAlternativesText;
            theClassBAlternativesText = this.getClassBAlternativesText();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "classBAlternativesText", theClassBAlternativesText), currentHashCode, theClassBAlternativesText);
        }
        {
            String theVARAlternativeUsed;
            theVARAlternativeUsed = this.getVARAlternativeUsed();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "varAlternativeUsed", theVARAlternativeUsed), currentHashCode, theVARAlternativeUsed);
        }
        {
            String theVARAlternativesText;
            theVARAlternativesText = this.getVARAlternativesText();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "varAlternativesText", theVARAlternativesText), currentHashCode, theVARAlternativesText);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
