//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.12.07 at 11:39:25 AM EST 
//


package com.windsor.node.plugin.icisnpdes.generated;

import java.io.Serializable;
import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlTransient;
import javax.xml.bind.annotation.XmlType;
import com.windsor.node.plugin.icisnpdes.domain.AbstractHasDischargeMonitoringReport;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for CoDisposalSite complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="CoDisposalSite">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}Part258ComplianceIndicator" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}PaintFilterTestResult" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}TCLPTestResult" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "CoDisposalSite", propOrder = {
    "part258ComplianceIndicator",
    "paintFilterTestResult",
    "tclpTestResult"
})
@Entity(name = "CoDisposalSite")
@Table(name = "ICS_CO_DSPL_SITE")
@Inheritance(strategy = InheritanceType.JOINED)
public class CoDisposalSite
    extends AbstractHasDischargeMonitoringReport
    implements Serializable, Equals, HashCode
{

    private final static long serialVersionUID = 1L;
    @XmlElement(name = "Part258ComplianceIndicator")
    protected String part258ComplianceIndicator;
    @XmlElement(name = "PaintFilterTestResult")
    protected String paintFilterTestResult;
    @XmlElement(name = "TCLPTestResult")
    protected String tclpTestResult;
    @XmlTransient
    protected String dbid;

    /**
     * Gets the value of the part258ComplianceIndicator property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "PART_258_CMPL_IND", columnDefinition = "char(1)", length = 1)
    public String getPart258ComplianceIndicator() {
        return part258ComplianceIndicator;
    }

    /**
     * Sets the value of the part258ComplianceIndicator property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPart258ComplianceIndicator(String value) {
        this.part258ComplianceIndicator = value;
    }

    @Transient
    public boolean isSetPart258ComplianceIndicator() {
        return (this.part258ComplianceIndicator!= null);
    }

    /**
     * Gets the value of the paintFilterTestResult property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "PAINT_FILTER_TEST_RESULT", columnDefinition = "char(1)", length = 1)
    public String getPaintFilterTestResult() {
        return paintFilterTestResult;
    }

    /**
     * Sets the value of the paintFilterTestResult property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPaintFilterTestResult(String value) {
        this.paintFilterTestResult = value;
    }

    @Transient
    public boolean isSetPaintFilterTestResult() {
        return (this.paintFilterTestResult!= null);
    }

    /**
     * Gets the value of the tclpTestResult property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "TCLP_TEST_RESULT", columnDefinition = "char(1)", length = 1)
    public String getTCLPTestResult() {
        return tclpTestResult;
    }

    /**
     * Sets the value of the tclpTestResult property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTCLPTestResult(String value) {
        this.tclpTestResult = value;
    }

    @Transient
    public boolean isSetTCLPTestResult() {
        return (this.tclpTestResult!= null);
    }

    /**
     * 
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Id
    @Column(name = "ICS_CO_DSPL_SITE_ID")
    @GeneratedValue(strategy = GenerationType.AUTO)
    public String getDbid() {
        return dbid;
    }

    /**
     * 
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDbid(String value) {
        this.dbid = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof CoDisposalSite)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final CoDisposalSite that = ((CoDisposalSite) object);
        {
            String lhsPart258ComplianceIndicator;
            lhsPart258ComplianceIndicator = this.getPart258ComplianceIndicator();
            String rhsPart258ComplianceIndicator;
            rhsPart258ComplianceIndicator = that.getPart258ComplianceIndicator();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "part258ComplianceIndicator", lhsPart258ComplianceIndicator), LocatorUtils.property(thatLocator, "part258ComplianceIndicator", rhsPart258ComplianceIndicator), lhsPart258ComplianceIndicator, rhsPart258ComplianceIndicator)) {
                return false;
            }
        }
        {
            String lhsPaintFilterTestResult;
            lhsPaintFilterTestResult = this.getPaintFilterTestResult();
            String rhsPaintFilterTestResult;
            rhsPaintFilterTestResult = that.getPaintFilterTestResult();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "paintFilterTestResult", lhsPaintFilterTestResult), LocatorUtils.property(thatLocator, "paintFilterTestResult", rhsPaintFilterTestResult), lhsPaintFilterTestResult, rhsPaintFilterTestResult)) {
                return false;
            }
        }
        {
            String lhsTCLPTestResult;
            lhsTCLPTestResult = this.getTCLPTestResult();
            String rhsTCLPTestResult;
            rhsTCLPTestResult = that.getTCLPTestResult();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "tclpTestResult", lhsTCLPTestResult), LocatorUtils.property(thatLocator, "tclpTestResult", rhsTCLPTestResult), lhsTCLPTestResult, rhsTCLPTestResult)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            String thePart258ComplianceIndicator;
            thePart258ComplianceIndicator = this.getPart258ComplianceIndicator();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "part258ComplianceIndicator", thePart258ComplianceIndicator), currentHashCode, thePart258ComplianceIndicator);
        }
        {
            String thePaintFilterTestResult;
            thePaintFilterTestResult = this.getPaintFilterTestResult();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "paintFilterTestResult", thePaintFilterTestResult), currentHashCode, thePaintFilterTestResult);
        }
        {
            String theTCLPTestResult;
            theTCLPTestResult = this.getTCLPTestResult();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "tclpTestResult", theTCLPTestResult), currentHashCode, theTCLPTestResult);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
