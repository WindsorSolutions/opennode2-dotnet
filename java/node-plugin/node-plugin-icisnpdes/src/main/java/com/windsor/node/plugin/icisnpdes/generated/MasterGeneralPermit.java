//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.12.07 at 11:39:25 AM EST 
//


package com.windsor.node.plugin.icisnpdes.generated;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.persistence.AssociationOverride;
import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.CollectionTable;
import javax.persistence.Column;
import javax.persistence.ElementCollection;
import javax.persistence.Embeddable;
import javax.persistence.Embedded;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import com.windsor.node.plugin.common.xml.bind.annotation.adapters.DateNoTimeZoneAdapter;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for MasterGeneralPermit complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="MasterGeneralPermit">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.exchangenetwork.net/schema/icis/5}BasicPermitKeyElements">
 *       &lt;sequence>
 *         &lt;group ref="{http://www.exchangenetwork.net/schema/icis/5}PermitMGPDataGroup" minOccurs="0"/>
 *         &lt;group ref="{http://www.exchangenetwork.net/schema/icis/5}PermitDataGroup" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}PermitContact" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}GeneralPermitIndustrialCategory" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}PermitName" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}PermitComponentTypeCode" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "MasterGeneralPermit", propOrder = {
    "permitTypeCode",
    "agencyTypeCode",
    "permitIssueDate",
    "permitEffectiveDate",
    "permitExpirationDate",
    "reissuancePriorityPermitIndicator",
    "backlogReasonText",
    "permitIssuingOrganizationTypeName",
    "otherPermits",
    "associatedPermit",
    "permitAppealedIndicator",
    "sicCodeDetails",
    "naicsCodeDetails",
    "permitUserDefinedDataElement1Text",
    "permitUserDefinedDataElement2Text",
    "permitUserDefinedDataElement3Text",
    "permitUserDefinedDataElement4Text",
    "permitUserDefinedDataElement5Text",
    "permitCommentsText",
    "permitContact",
    "generalPermitIndustrialCategory",
    "permitName",
    "permitComponentTypeCode"
})
@Embeddable
public class MasterGeneralPermit
    extends BasicPermitKeyElements
    implements Serializable, Equals, HashCode
{

    private final static long serialVersionUID = 1L;
    @XmlElement(name = "PermitTypeCode")
    protected String permitTypeCode;
    @XmlElement(name = "AgencyTypeCode")
    protected String agencyTypeCode;
    @XmlElement(name = "PermitIssueDate", type = String.class)
    @XmlJavaTypeAdapter(DateNoTimeZoneAdapter.class)
    @XmlSchemaType(name = "date")
    protected Date permitIssueDate;
    @XmlElement(name = "PermitEffectiveDate", type = String.class)
    @XmlJavaTypeAdapter(DateNoTimeZoneAdapter.class)
    @XmlSchemaType(name = "date")
    protected Date permitEffectiveDate;
    @XmlElement(name = "PermitExpirationDate", type = String.class)
    @XmlJavaTypeAdapter(DateNoTimeZoneAdapter.class)
    @XmlSchemaType(name = "date")
    protected Date permitExpirationDate;
    @XmlElement(name = "ReissuancePriorityPermitIndicator")
    protected String reissuancePriorityPermitIndicator;
    @XmlElement(name = "BacklogReasonText")
    protected String backlogReasonText;
    @XmlElement(name = "PermitIssuingOrganizationTypeName")
    protected String permitIssuingOrganizationTypeName;
    @XmlElement(name = "OtherPermits")
    protected List<OtherPermits> otherPermits;
    @XmlElement(name = "AssociatedPermit")
    protected List<AssociatedPermit> associatedPermit;
    @XmlElement(name = "PermitAppealedIndicator")
    protected String permitAppealedIndicator;
    @XmlElement(name = "SICCodeDetails")
    protected List<SICCodeDetails> sicCodeDetails;
    @XmlElement(name = "NAICSCodeDetails")
    protected List<NAICSCodeDetails> naicsCodeDetails;
    @XmlElement(name = "PermitUserDefinedDataElement1Text")
    protected String permitUserDefinedDataElement1Text;
    @XmlElement(name = "PermitUserDefinedDataElement2Text")
    protected String permitUserDefinedDataElement2Text;
    @XmlElement(name = "PermitUserDefinedDataElement3Text")
    protected String permitUserDefinedDataElement3Text;
    @XmlElement(name = "PermitUserDefinedDataElement4Text")
    protected String permitUserDefinedDataElement4Text;
    @XmlElement(name = "PermitUserDefinedDataElement5Text")
    protected String permitUserDefinedDataElement5Text;
    @XmlElement(name = "PermitCommentsText")
    protected String permitCommentsText;
    @XmlElement(name = "PermitContact")
    protected PermitContact permitContact;
    @XmlElement(name = "GeneralPermitIndustrialCategory")
    protected String generalPermitIndustrialCategory;
    @XmlElement(name = "PermitName")
    protected String permitName;
    @XmlElement(name = "PermitComponentTypeCode")
    protected List<String> permitComponentTypeCode;

    /**
     * Gets the value of the permitTypeCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "PRMT_TYPE_CODE", length = 3)
    public String getPermitTypeCode() {
        return permitTypeCode;
    }

    /**
     * Sets the value of the permitTypeCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPermitTypeCode(String value) {
        this.permitTypeCode = value;
    }

    @Transient
    public boolean isSetPermitTypeCode() {
        return (this.permitTypeCode!= null);
    }

    /**
     * Gets the value of the agencyTypeCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "AGNCY_TYPE_CODE", length = 3)
    public String getAgencyTypeCode() {
        return agencyTypeCode;
    }

    /**
     * Sets the value of the agencyTypeCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAgencyTypeCode(String value) {
        this.agencyTypeCode = value;
    }

    @Transient
    public boolean isSetAgencyTypeCode() {
        return (this.agencyTypeCode!= null);
    }

    /**
     * Gets the value of the permitIssueDate property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "PRMT_ISSUE_DATE")
    @Temporal(TemporalType.DATE)
    public Date getPermitIssueDate() {
        return permitIssueDate;
    }

    /**
     * Sets the value of the permitIssueDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPermitIssueDate(Date value) {
        this.permitIssueDate = value;
    }

    @Transient
    public boolean isSetPermitIssueDate() {
        return (this.permitIssueDate!= null);
    }

    /**
     * Gets the value of the permitEffectiveDate property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "PRMT_EFFECTIVE_DATE")
    @Temporal(TemporalType.DATE)
    public Date getPermitEffectiveDate() {
        return permitEffectiveDate;
    }

    /**
     * Sets the value of the permitEffectiveDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPermitEffectiveDate(Date value) {
        this.permitEffectiveDate = value;
    }

    @Transient
    public boolean isSetPermitEffectiveDate() {
        return (this.permitEffectiveDate!= null);
    }

    /**
     * Gets the value of the permitExpirationDate property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "PRMT_EXPR_DATE")
    @Temporal(TemporalType.DATE)
    public Date getPermitExpirationDate() {
        return permitExpirationDate;
    }

    /**
     * Sets the value of the permitExpirationDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPermitExpirationDate(Date value) {
        this.permitExpirationDate = value;
    }

    @Transient
    public boolean isSetPermitExpirationDate() {
        return (this.permitExpirationDate!= null);
    }

    /**
     * Gets the value of the reissuancePriorityPermitIndicator property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "REISSU_PRIO_PRMT_IND", columnDefinition = "char(1)", length = 1)
    public String getReissuancePriorityPermitIndicator() {
        return reissuancePriorityPermitIndicator;
    }

    /**
     * Sets the value of the reissuancePriorityPermitIndicator property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setReissuancePriorityPermitIndicator(String value) {
        this.reissuancePriorityPermitIndicator = value;
    }

    @Transient
    public boolean isSetReissuancePriorityPermitIndicator() {
        return (this.reissuancePriorityPermitIndicator!= null);
    }

    /**
     * Gets the value of the backlogReasonText property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "BACKLOG_REASON_TXT", length = 2000)
    public String getBacklogReasonText() {
        return backlogReasonText;
    }

    /**
     * Sets the value of the backlogReasonText property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setBacklogReasonText(String value) {
        this.backlogReasonText = value;
    }

    @Transient
    public boolean isSetBacklogReasonText() {
        return (this.backlogReasonText!= null);
    }

    /**
     * Gets the value of the permitIssuingOrganizationTypeName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "PRMT_ISSUING_ORG_TYPE_NAME", length = 100)
    public String getPermitIssuingOrganizationTypeName() {
        return permitIssuingOrganizationTypeName;
    }

    /**
     * Sets the value of the permitIssuingOrganizationTypeName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPermitIssuingOrganizationTypeName(String value) {
        this.permitIssuingOrganizationTypeName = value;
    }

    @Transient
    public boolean isSetPermitIssuingOrganizationTypeName() {
        return (this.permitIssuingOrganizationTypeName!= null);
    }

    /**
     * Gets the value of the otherPermits property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the otherPermits property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getOtherPermits().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link OtherPermits }
     * 
     * 
     */
    @OneToMany(targetEntity = OtherPermits.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "ICS_MASTER_GNRL_PRMT_ID")
    public List<OtherPermits> getOtherPermits() {
        if (otherPermits == null) {
            otherPermits = new ArrayList<OtherPermits>();
        }
        return this.otherPermits;
    }

    /**
     * 
     * 
     */
    public void setOtherPermits(List<OtherPermits> otherPermits) {
        this.otherPermits = otherPermits;
    }

    @Transient
    public boolean isSetOtherPermits() {
        return ((this.otherPermits!= null)&&(!this.otherPermits.isEmpty()));
    }

    public void unsetOtherPermits() {
        this.otherPermits = null;
    }

    /**
     * Gets the value of the associatedPermit property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the associatedPermit property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAssociatedPermit().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link AssociatedPermit }
     * 
     * 
     */
    @OneToMany(targetEntity = AssociatedPermit.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "ICS_MASTER_GNRL_PRMT_ID")
    public List<AssociatedPermit> getAssociatedPermit() {
        if (associatedPermit == null) {
            associatedPermit = new ArrayList<AssociatedPermit>();
        }
        return this.associatedPermit;
    }

    /**
     * 
     * 
     */
    public void setAssociatedPermit(List<AssociatedPermit> associatedPermit) {
        this.associatedPermit = associatedPermit;
    }

    @Transient
    public boolean isSetAssociatedPermit() {
        return ((this.associatedPermit!= null)&&(!this.associatedPermit.isEmpty()));
    }

    public void unsetAssociatedPermit() {
        this.associatedPermit = null;
    }

    /**
     * Gets the value of the permitAppealedIndicator property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "PRMT_APPEALED_IND", columnDefinition = "char(1)", length = 1)
    public String getPermitAppealedIndicator() {
        return permitAppealedIndicator;
    }

    /**
     * Sets the value of the permitAppealedIndicator property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPermitAppealedIndicator(String value) {
        this.permitAppealedIndicator = value;
    }

    @Transient
    public boolean isSetPermitAppealedIndicator() {
        return (this.permitAppealedIndicator!= null);
    }

    /**
     * Gets the value of the sicCodeDetails property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the sicCodeDetails property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getSICCodeDetails().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link SICCodeDetails }
     * 
     * 
     */
    @OneToMany(targetEntity = SICCodeDetails.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "ICS_MASTER_GNRL_PRMT_ID")
    public List<SICCodeDetails> getSICCodeDetails() {
        if (sicCodeDetails == null) {
            sicCodeDetails = new ArrayList<SICCodeDetails>();
        }
        return this.sicCodeDetails;
    }

    /**
     * 
     * 
     */
    public void setSICCodeDetails(List<SICCodeDetails> sicCodeDetails) {
        this.sicCodeDetails = sicCodeDetails;
    }

    @Transient
    public boolean isSetSICCodeDetails() {
        return ((this.sicCodeDetails!= null)&&(!this.sicCodeDetails.isEmpty()));
    }

    public void unsetSICCodeDetails() {
        this.sicCodeDetails = null;
    }

    /**
     * Gets the value of the naicsCodeDetails property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the naicsCodeDetails property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getNAICSCodeDetails().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link NAICSCodeDetails }
     * 
     * 
     */
    @OneToMany(targetEntity = NAICSCodeDetails.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "ICS_MASTER_GNRL_PRMT_ID")
    public List<NAICSCodeDetails> getNAICSCodeDetails() {
        if (naicsCodeDetails == null) {
            naicsCodeDetails = new ArrayList<NAICSCodeDetails>();
        }
        return this.naicsCodeDetails;
    }

    /**
     * 
     * 
     */
    public void setNAICSCodeDetails(List<NAICSCodeDetails> naicsCodeDetails) {
        this.naicsCodeDetails = naicsCodeDetails;
    }

    @Transient
    public boolean isSetNAICSCodeDetails() {
        return ((this.naicsCodeDetails!= null)&&(!this.naicsCodeDetails.isEmpty()));
    }

    public void unsetNAICSCodeDetails() {
        this.naicsCodeDetails = null;
    }

    /**
     * Gets the value of the permitUserDefinedDataElement1Text property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "PRMT_USR_DFND_DAT_ELM_1_TXT", length = 30)
    public String getPermitUserDefinedDataElement1Text() {
        return permitUserDefinedDataElement1Text;
    }

    /**
     * Sets the value of the permitUserDefinedDataElement1Text property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPermitUserDefinedDataElement1Text(String value) {
        this.permitUserDefinedDataElement1Text = value;
    }

    @Transient
    public boolean isSetPermitUserDefinedDataElement1Text() {
        return (this.permitUserDefinedDataElement1Text!= null);
    }

    /**
     * Gets the value of the permitUserDefinedDataElement2Text property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "PRMT_USR_DFND_DAT_ELM_2_TXT", length = 30)
    public String getPermitUserDefinedDataElement2Text() {
        return permitUserDefinedDataElement2Text;
    }

    /**
     * Sets the value of the permitUserDefinedDataElement2Text property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPermitUserDefinedDataElement2Text(String value) {
        this.permitUserDefinedDataElement2Text = value;
    }

    @Transient
    public boolean isSetPermitUserDefinedDataElement2Text() {
        return (this.permitUserDefinedDataElement2Text!= null);
    }

    /**
     * Gets the value of the permitUserDefinedDataElement3Text property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "PRMT_USR_DFND_DAT_ELM_3_TXT", length = 30)
    public String getPermitUserDefinedDataElement3Text() {
        return permitUserDefinedDataElement3Text;
    }

    /**
     * Sets the value of the permitUserDefinedDataElement3Text property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPermitUserDefinedDataElement3Text(String value) {
        this.permitUserDefinedDataElement3Text = value;
    }

    @Transient
    public boolean isSetPermitUserDefinedDataElement3Text() {
        return (this.permitUserDefinedDataElement3Text!= null);
    }

    /**
     * Gets the value of the permitUserDefinedDataElement4Text property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "PRMT_USR_DFND_DAT_ELM_4_TXT", length = 30)
    public String getPermitUserDefinedDataElement4Text() {
        return permitUserDefinedDataElement4Text;
    }

    /**
     * Sets the value of the permitUserDefinedDataElement4Text property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPermitUserDefinedDataElement4Text(String value) {
        this.permitUserDefinedDataElement4Text = value;
    }

    @Transient
    public boolean isSetPermitUserDefinedDataElement4Text() {
        return (this.permitUserDefinedDataElement4Text!= null);
    }

    /**
     * Gets the value of the permitUserDefinedDataElement5Text property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "PRMT_USR_DFND_DAT_ELM_5_TXT", length = 30)
    public String getPermitUserDefinedDataElement5Text() {
        return permitUserDefinedDataElement5Text;
    }

    /**
     * Sets the value of the permitUserDefinedDataElement5Text property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPermitUserDefinedDataElement5Text(String value) {
        this.permitUserDefinedDataElement5Text = value;
    }

    @Transient
    public boolean isSetPermitUserDefinedDataElement5Text() {
        return (this.permitUserDefinedDataElement5Text!= null);
    }

    /**
     * Gets the value of the permitCommentsText property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "PRMT_CMNTS_TXT", columnDefinition = "varchar(4000)", length = 4000)
    public String getPermitCommentsText() {
        return permitCommentsText;
    }

    /**
     * Sets the value of the permitCommentsText property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPermitCommentsText(String value) {
        this.permitCommentsText = value;
    }

    @Transient
    public boolean isSetPermitCommentsText() {
        return (this.permitCommentsText!= null);
    }

    /**
     * Gets the value of the permitContact property.
     * 
     * @return
     *     possible object is
     *     {@link PermitContact }
     *     
     */
    @Embedded
    @AssociationOverride(name = "contact", joinColumns = {
        @JoinColumn(name = "ICS_MASTER_GNRL_PRMT_ID")
    })
    public PermitContact getPermitContact() {
        return permitContact;
    }

    /**
     * Sets the value of the permitContact property.
     * 
     * @param value
     *     allowed object is
     *     {@link PermitContact }
     *     
     */
    public void setPermitContact(PermitContact value) {
        this.permitContact = value;
    }

    @Transient
    public boolean isSetPermitContact() {
        return (this.permitContact!= null);
    }

    /**
     * Gets the value of the generalPermitIndustrialCategory property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "GNRL_PRMT_INDST_CATG", length = 3)
    public String getGeneralPermitIndustrialCategory() {
        return generalPermitIndustrialCategory;
    }

    /**
     * Sets the value of the generalPermitIndustrialCategory property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setGeneralPermitIndustrialCategory(String value) {
        this.generalPermitIndustrialCategory = value;
    }

    @Transient
    public boolean isSetGeneralPermitIndustrialCategory() {
        return (this.generalPermitIndustrialCategory!= null);
    }

    /**
     * Gets the value of the permitName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "PRMT_NAME", length = 120)
    public String getPermitName() {
        return permitName;
    }

    /**
     * Sets the value of the permitName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPermitName(String value) {
        this.permitName = value;
    }

    @Transient
    public boolean isSetPermitName() {
        return (this.permitName!= null);
    }

    /**
     * Gets the value of the permitComponentTypeCode property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the permitComponentTypeCode property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getPermitComponentTypeCode().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * 
     * 
     */
    @ElementCollection
    @Column(name = "PRMT_COMP_TYPE_CODE", length = 3)
    @CollectionTable(name = "ICS_PRMT_COMP_TYPE", joinColumns = {
        @JoinColumn(name = "ICS_MASTER_GNRL_PRMT_ID")
    })
    public List<String> getPermitComponentTypeCode() {
        if (permitComponentTypeCode == null) {
            permitComponentTypeCode = new ArrayList<String>();
        }
        return this.permitComponentTypeCode;
    }

    /**
     * 
     * 
     */
    public void setPermitComponentTypeCode(List<String> permitComponentTypeCode) {
        this.permitComponentTypeCode = permitComponentTypeCode;
    }

    @Transient
    public boolean isSetPermitComponentTypeCode() {
        return ((this.permitComponentTypeCode!= null)&&(!this.permitComponentTypeCode.isEmpty()));
    }

    public void unsetPermitComponentTypeCode() {
        this.permitComponentTypeCode = null;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof MasterGeneralPermit)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final MasterGeneralPermit that = ((MasterGeneralPermit) object);
        {
            String lhsPermitTypeCode;
            lhsPermitTypeCode = this.getPermitTypeCode();
            String rhsPermitTypeCode;
            rhsPermitTypeCode = that.getPermitTypeCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "permitTypeCode", lhsPermitTypeCode), LocatorUtils.property(thatLocator, "permitTypeCode", rhsPermitTypeCode), lhsPermitTypeCode, rhsPermitTypeCode)) {
                return false;
            }
        }
        {
            String lhsAgencyTypeCode;
            lhsAgencyTypeCode = this.getAgencyTypeCode();
            String rhsAgencyTypeCode;
            rhsAgencyTypeCode = that.getAgencyTypeCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "agencyTypeCode", lhsAgencyTypeCode), LocatorUtils.property(thatLocator, "agencyTypeCode", rhsAgencyTypeCode), lhsAgencyTypeCode, rhsAgencyTypeCode)) {
                return false;
            }
        }
        {
            Date lhsPermitIssueDate;
            lhsPermitIssueDate = this.getPermitIssueDate();
            Date rhsPermitIssueDate;
            rhsPermitIssueDate = that.getPermitIssueDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "permitIssueDate", lhsPermitIssueDate), LocatorUtils.property(thatLocator, "permitIssueDate", rhsPermitIssueDate), lhsPermitIssueDate, rhsPermitIssueDate)) {
                return false;
            }
        }
        {
            Date lhsPermitEffectiveDate;
            lhsPermitEffectiveDate = this.getPermitEffectiveDate();
            Date rhsPermitEffectiveDate;
            rhsPermitEffectiveDate = that.getPermitEffectiveDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "permitEffectiveDate", lhsPermitEffectiveDate), LocatorUtils.property(thatLocator, "permitEffectiveDate", rhsPermitEffectiveDate), lhsPermitEffectiveDate, rhsPermitEffectiveDate)) {
                return false;
            }
        }
        {
            Date lhsPermitExpirationDate;
            lhsPermitExpirationDate = this.getPermitExpirationDate();
            Date rhsPermitExpirationDate;
            rhsPermitExpirationDate = that.getPermitExpirationDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "permitExpirationDate", lhsPermitExpirationDate), LocatorUtils.property(thatLocator, "permitExpirationDate", rhsPermitExpirationDate), lhsPermitExpirationDate, rhsPermitExpirationDate)) {
                return false;
            }
        }
        {
            String lhsReissuancePriorityPermitIndicator;
            lhsReissuancePriorityPermitIndicator = this.getReissuancePriorityPermitIndicator();
            String rhsReissuancePriorityPermitIndicator;
            rhsReissuancePriorityPermitIndicator = that.getReissuancePriorityPermitIndicator();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "reissuancePriorityPermitIndicator", lhsReissuancePriorityPermitIndicator), LocatorUtils.property(thatLocator, "reissuancePriorityPermitIndicator", rhsReissuancePriorityPermitIndicator), lhsReissuancePriorityPermitIndicator, rhsReissuancePriorityPermitIndicator)) {
                return false;
            }
        }
        {
            String lhsBacklogReasonText;
            lhsBacklogReasonText = this.getBacklogReasonText();
            String rhsBacklogReasonText;
            rhsBacklogReasonText = that.getBacklogReasonText();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "backlogReasonText", lhsBacklogReasonText), LocatorUtils.property(thatLocator, "backlogReasonText", rhsBacklogReasonText), lhsBacklogReasonText, rhsBacklogReasonText)) {
                return false;
            }
        }
        {
            String lhsPermitIssuingOrganizationTypeName;
            lhsPermitIssuingOrganizationTypeName = this.getPermitIssuingOrganizationTypeName();
            String rhsPermitIssuingOrganizationTypeName;
            rhsPermitIssuingOrganizationTypeName = that.getPermitIssuingOrganizationTypeName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "permitIssuingOrganizationTypeName", lhsPermitIssuingOrganizationTypeName), LocatorUtils.property(thatLocator, "permitIssuingOrganizationTypeName", rhsPermitIssuingOrganizationTypeName), lhsPermitIssuingOrganizationTypeName, rhsPermitIssuingOrganizationTypeName)) {
                return false;
            }
        }
        {
            List<OtherPermits> lhsOtherPermits;
            lhsOtherPermits = (this.isSetOtherPermits()?this.getOtherPermits():null);
            List<OtherPermits> rhsOtherPermits;
            rhsOtherPermits = (that.isSetOtherPermits()?that.getOtherPermits():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "otherPermits", lhsOtherPermits), LocatorUtils.property(thatLocator, "otherPermits", rhsOtherPermits), lhsOtherPermits, rhsOtherPermits)) {
                return false;
            }
        }
        {
            List<AssociatedPermit> lhsAssociatedPermit;
            lhsAssociatedPermit = (this.isSetAssociatedPermit()?this.getAssociatedPermit():null);
            List<AssociatedPermit> rhsAssociatedPermit;
            rhsAssociatedPermit = (that.isSetAssociatedPermit()?that.getAssociatedPermit():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "associatedPermit", lhsAssociatedPermit), LocatorUtils.property(thatLocator, "associatedPermit", rhsAssociatedPermit), lhsAssociatedPermit, rhsAssociatedPermit)) {
                return false;
            }
        }
        {
            String lhsPermitAppealedIndicator;
            lhsPermitAppealedIndicator = this.getPermitAppealedIndicator();
            String rhsPermitAppealedIndicator;
            rhsPermitAppealedIndicator = that.getPermitAppealedIndicator();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "permitAppealedIndicator", lhsPermitAppealedIndicator), LocatorUtils.property(thatLocator, "permitAppealedIndicator", rhsPermitAppealedIndicator), lhsPermitAppealedIndicator, rhsPermitAppealedIndicator)) {
                return false;
            }
        }
        {
            List<SICCodeDetails> lhsSICCodeDetails;
            lhsSICCodeDetails = (this.isSetSICCodeDetails()?this.getSICCodeDetails():null);
            List<SICCodeDetails> rhsSICCodeDetails;
            rhsSICCodeDetails = (that.isSetSICCodeDetails()?that.getSICCodeDetails():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "sicCodeDetails", lhsSICCodeDetails), LocatorUtils.property(thatLocator, "sicCodeDetails", rhsSICCodeDetails), lhsSICCodeDetails, rhsSICCodeDetails)) {
                return false;
            }
        }
        {
            List<NAICSCodeDetails> lhsNAICSCodeDetails;
            lhsNAICSCodeDetails = (this.isSetNAICSCodeDetails()?this.getNAICSCodeDetails():null);
            List<NAICSCodeDetails> rhsNAICSCodeDetails;
            rhsNAICSCodeDetails = (that.isSetNAICSCodeDetails()?that.getNAICSCodeDetails():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "naicsCodeDetails", lhsNAICSCodeDetails), LocatorUtils.property(thatLocator, "naicsCodeDetails", rhsNAICSCodeDetails), lhsNAICSCodeDetails, rhsNAICSCodeDetails)) {
                return false;
            }
        }
        {
            String lhsPermitUserDefinedDataElement1Text;
            lhsPermitUserDefinedDataElement1Text = this.getPermitUserDefinedDataElement1Text();
            String rhsPermitUserDefinedDataElement1Text;
            rhsPermitUserDefinedDataElement1Text = that.getPermitUserDefinedDataElement1Text();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "permitUserDefinedDataElement1Text", lhsPermitUserDefinedDataElement1Text), LocatorUtils.property(thatLocator, "permitUserDefinedDataElement1Text", rhsPermitUserDefinedDataElement1Text), lhsPermitUserDefinedDataElement1Text, rhsPermitUserDefinedDataElement1Text)) {
                return false;
            }
        }
        {
            String lhsPermitUserDefinedDataElement2Text;
            lhsPermitUserDefinedDataElement2Text = this.getPermitUserDefinedDataElement2Text();
            String rhsPermitUserDefinedDataElement2Text;
            rhsPermitUserDefinedDataElement2Text = that.getPermitUserDefinedDataElement2Text();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "permitUserDefinedDataElement2Text", lhsPermitUserDefinedDataElement2Text), LocatorUtils.property(thatLocator, "permitUserDefinedDataElement2Text", rhsPermitUserDefinedDataElement2Text), lhsPermitUserDefinedDataElement2Text, rhsPermitUserDefinedDataElement2Text)) {
                return false;
            }
        }
        {
            String lhsPermitUserDefinedDataElement3Text;
            lhsPermitUserDefinedDataElement3Text = this.getPermitUserDefinedDataElement3Text();
            String rhsPermitUserDefinedDataElement3Text;
            rhsPermitUserDefinedDataElement3Text = that.getPermitUserDefinedDataElement3Text();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "permitUserDefinedDataElement3Text", lhsPermitUserDefinedDataElement3Text), LocatorUtils.property(thatLocator, "permitUserDefinedDataElement3Text", rhsPermitUserDefinedDataElement3Text), lhsPermitUserDefinedDataElement3Text, rhsPermitUserDefinedDataElement3Text)) {
                return false;
            }
        }
        {
            String lhsPermitUserDefinedDataElement4Text;
            lhsPermitUserDefinedDataElement4Text = this.getPermitUserDefinedDataElement4Text();
            String rhsPermitUserDefinedDataElement4Text;
            rhsPermitUserDefinedDataElement4Text = that.getPermitUserDefinedDataElement4Text();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "permitUserDefinedDataElement4Text", lhsPermitUserDefinedDataElement4Text), LocatorUtils.property(thatLocator, "permitUserDefinedDataElement4Text", rhsPermitUserDefinedDataElement4Text), lhsPermitUserDefinedDataElement4Text, rhsPermitUserDefinedDataElement4Text)) {
                return false;
            }
        }
        {
            String lhsPermitUserDefinedDataElement5Text;
            lhsPermitUserDefinedDataElement5Text = this.getPermitUserDefinedDataElement5Text();
            String rhsPermitUserDefinedDataElement5Text;
            rhsPermitUserDefinedDataElement5Text = that.getPermitUserDefinedDataElement5Text();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "permitUserDefinedDataElement5Text", lhsPermitUserDefinedDataElement5Text), LocatorUtils.property(thatLocator, "permitUserDefinedDataElement5Text", rhsPermitUserDefinedDataElement5Text), lhsPermitUserDefinedDataElement5Text, rhsPermitUserDefinedDataElement5Text)) {
                return false;
            }
        }
        {
            String lhsPermitCommentsText;
            lhsPermitCommentsText = this.getPermitCommentsText();
            String rhsPermitCommentsText;
            rhsPermitCommentsText = that.getPermitCommentsText();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "permitCommentsText", lhsPermitCommentsText), LocatorUtils.property(thatLocator, "permitCommentsText", rhsPermitCommentsText), lhsPermitCommentsText, rhsPermitCommentsText)) {
                return false;
            }
        }
        {
            PermitContact lhsPermitContact;
            lhsPermitContact = this.getPermitContact();
            PermitContact rhsPermitContact;
            rhsPermitContact = that.getPermitContact();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "permitContact", lhsPermitContact), LocatorUtils.property(thatLocator, "permitContact", rhsPermitContact), lhsPermitContact, rhsPermitContact)) {
                return false;
            }
        }
        {
            String lhsGeneralPermitIndustrialCategory;
            lhsGeneralPermitIndustrialCategory = this.getGeneralPermitIndustrialCategory();
            String rhsGeneralPermitIndustrialCategory;
            rhsGeneralPermitIndustrialCategory = that.getGeneralPermitIndustrialCategory();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "generalPermitIndustrialCategory", lhsGeneralPermitIndustrialCategory), LocatorUtils.property(thatLocator, "generalPermitIndustrialCategory", rhsGeneralPermitIndustrialCategory), lhsGeneralPermitIndustrialCategory, rhsGeneralPermitIndustrialCategory)) {
                return false;
            }
        }
        {
            String lhsPermitName;
            lhsPermitName = this.getPermitName();
            String rhsPermitName;
            rhsPermitName = that.getPermitName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "permitName", lhsPermitName), LocatorUtils.property(thatLocator, "permitName", rhsPermitName), lhsPermitName, rhsPermitName)) {
                return false;
            }
        }
        {
            List<String> lhsPermitComponentTypeCode;
            lhsPermitComponentTypeCode = (this.isSetPermitComponentTypeCode()?this.getPermitComponentTypeCode():null);
            List<String> rhsPermitComponentTypeCode;
            rhsPermitComponentTypeCode = (that.isSetPermitComponentTypeCode()?that.getPermitComponentTypeCode():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "permitComponentTypeCode", lhsPermitComponentTypeCode), LocatorUtils.property(thatLocator, "permitComponentTypeCode", rhsPermitComponentTypeCode), lhsPermitComponentTypeCode, rhsPermitComponentTypeCode)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            String thePermitTypeCode;
            thePermitTypeCode = this.getPermitTypeCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "permitTypeCode", thePermitTypeCode), currentHashCode, thePermitTypeCode);
        }
        {
            String theAgencyTypeCode;
            theAgencyTypeCode = this.getAgencyTypeCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "agencyTypeCode", theAgencyTypeCode), currentHashCode, theAgencyTypeCode);
        }
        {
            Date thePermitIssueDate;
            thePermitIssueDate = this.getPermitIssueDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "permitIssueDate", thePermitIssueDate), currentHashCode, thePermitIssueDate);
        }
        {
            Date thePermitEffectiveDate;
            thePermitEffectiveDate = this.getPermitEffectiveDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "permitEffectiveDate", thePermitEffectiveDate), currentHashCode, thePermitEffectiveDate);
        }
        {
            Date thePermitExpirationDate;
            thePermitExpirationDate = this.getPermitExpirationDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "permitExpirationDate", thePermitExpirationDate), currentHashCode, thePermitExpirationDate);
        }
        {
            String theReissuancePriorityPermitIndicator;
            theReissuancePriorityPermitIndicator = this.getReissuancePriorityPermitIndicator();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "reissuancePriorityPermitIndicator", theReissuancePriorityPermitIndicator), currentHashCode, theReissuancePriorityPermitIndicator);
        }
        {
            String theBacklogReasonText;
            theBacklogReasonText = this.getBacklogReasonText();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "backlogReasonText", theBacklogReasonText), currentHashCode, theBacklogReasonText);
        }
        {
            String thePermitIssuingOrganizationTypeName;
            thePermitIssuingOrganizationTypeName = this.getPermitIssuingOrganizationTypeName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "permitIssuingOrganizationTypeName", thePermitIssuingOrganizationTypeName), currentHashCode, thePermitIssuingOrganizationTypeName);
        }
        {
            List<OtherPermits> theOtherPermits;
            theOtherPermits = (this.isSetOtherPermits()?this.getOtherPermits():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "otherPermits", theOtherPermits), currentHashCode, theOtherPermits);
        }
        {
            List<AssociatedPermit> theAssociatedPermit;
            theAssociatedPermit = (this.isSetAssociatedPermit()?this.getAssociatedPermit():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "associatedPermit", theAssociatedPermit), currentHashCode, theAssociatedPermit);
        }
        {
            String thePermitAppealedIndicator;
            thePermitAppealedIndicator = this.getPermitAppealedIndicator();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "permitAppealedIndicator", thePermitAppealedIndicator), currentHashCode, thePermitAppealedIndicator);
        }
        {
            List<SICCodeDetails> theSICCodeDetails;
            theSICCodeDetails = (this.isSetSICCodeDetails()?this.getSICCodeDetails():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "sicCodeDetails", theSICCodeDetails), currentHashCode, theSICCodeDetails);
        }
        {
            List<NAICSCodeDetails> theNAICSCodeDetails;
            theNAICSCodeDetails = (this.isSetNAICSCodeDetails()?this.getNAICSCodeDetails():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "naicsCodeDetails", theNAICSCodeDetails), currentHashCode, theNAICSCodeDetails);
        }
        {
            String thePermitUserDefinedDataElement1Text;
            thePermitUserDefinedDataElement1Text = this.getPermitUserDefinedDataElement1Text();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "permitUserDefinedDataElement1Text", thePermitUserDefinedDataElement1Text), currentHashCode, thePermitUserDefinedDataElement1Text);
        }
        {
            String thePermitUserDefinedDataElement2Text;
            thePermitUserDefinedDataElement2Text = this.getPermitUserDefinedDataElement2Text();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "permitUserDefinedDataElement2Text", thePermitUserDefinedDataElement2Text), currentHashCode, thePermitUserDefinedDataElement2Text);
        }
        {
            String thePermitUserDefinedDataElement3Text;
            thePermitUserDefinedDataElement3Text = this.getPermitUserDefinedDataElement3Text();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "permitUserDefinedDataElement3Text", thePermitUserDefinedDataElement3Text), currentHashCode, thePermitUserDefinedDataElement3Text);
        }
        {
            String thePermitUserDefinedDataElement4Text;
            thePermitUserDefinedDataElement4Text = this.getPermitUserDefinedDataElement4Text();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "permitUserDefinedDataElement4Text", thePermitUserDefinedDataElement4Text), currentHashCode, thePermitUserDefinedDataElement4Text);
        }
        {
            String thePermitUserDefinedDataElement5Text;
            thePermitUserDefinedDataElement5Text = this.getPermitUserDefinedDataElement5Text();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "permitUserDefinedDataElement5Text", thePermitUserDefinedDataElement5Text), currentHashCode, thePermitUserDefinedDataElement5Text);
        }
        {
            String thePermitCommentsText;
            thePermitCommentsText = this.getPermitCommentsText();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "permitCommentsText", thePermitCommentsText), currentHashCode, thePermitCommentsText);
        }
        {
            PermitContact thePermitContact;
            thePermitContact = this.getPermitContact();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "permitContact", thePermitContact), currentHashCode, thePermitContact);
        }
        {
            String theGeneralPermitIndustrialCategory;
            theGeneralPermitIndustrialCategory = this.getGeneralPermitIndustrialCategory();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "generalPermitIndustrialCategory", theGeneralPermitIndustrialCategory), currentHashCode, theGeneralPermitIndustrialCategory);
        }
        {
            String thePermitName;
            thePermitName = this.getPermitName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "permitName", thePermitName), currentHashCode, thePermitName);
        }
        {
            List<String> thePermitComponentTypeCode;
            thePermitComponentTypeCode = (this.isSetPermitComponentTypeCode()?this.getPermitComponentTypeCode():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "permitComponentTypeCode", thePermitComponentTypeCode), currentHashCode, thePermitComponentTypeCode);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
