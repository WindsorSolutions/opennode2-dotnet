//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.12.07 at 11:39:25 AM EST 
//


package com.windsor.node.plugin.icisnpdes.generated;

import java.io.Serializable;
import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Embeddable;
import javax.persistence.Transient;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for SWIndustrialAnnualReport complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="SWIndustrialAnnualReport">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.exchangenetwork.net/schema/icis/5}SWIndustrialAnnualReportKeyElements">
 *       &lt;sequence>
 *         &lt;group ref="{http://www.exchangenetwork.net/schema/icis/5}StormWaterIndustrialAnnualReportGroup" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "SWIndustrialAnnualReport", propOrder = {
    "facilityInspectionSummaryText",
    "visualAssessmentSummaryText",
    "noFurtherReductionSummaryText",
    "correctiveActionSummaryText"
})
@Embeddable
public class SWIndustrialAnnualReport
    extends SWIndustrialAnnualReportKeyElements
    implements Serializable, Equals, HashCode
{

    private final static long serialVersionUID = 1L;
    @XmlElement(name = "FacilityInspectionSummaryText")
    protected String facilityInspectionSummaryText;
    @XmlElement(name = "VisualAssessmentSummaryText")
    protected String visualAssessmentSummaryText;
    @XmlElement(name = "NoFurtherReductionSummaryText")
    protected String noFurtherReductionSummaryText;
    @XmlElement(name = "CorrectiveActionSummaryText")
    protected String correctiveActionSummaryText;

    /**
     * Gets the value of the facilityInspectionSummaryText property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "FAC_INSP_SUMM_TXT", columnDefinition = "varchar(4000)", length = 4000)
    public String getFacilityInspectionSummaryText() {
        return facilityInspectionSummaryText;
    }

    /**
     * Sets the value of the facilityInspectionSummaryText property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setFacilityInspectionSummaryText(String value) {
        this.facilityInspectionSummaryText = value;
    }

    @Transient
    public boolean isSetFacilityInspectionSummaryText() {
        return (this.facilityInspectionSummaryText!= null);
    }

    /**
     * Gets the value of the visualAssessmentSummaryText property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "VISUAL_ASSESSMENT_SUMM_TXT", columnDefinition = "varchar(4000)", length = 4000)
    public String getVisualAssessmentSummaryText() {
        return visualAssessmentSummaryText;
    }

    /**
     * Sets the value of the visualAssessmentSummaryText property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setVisualAssessmentSummaryText(String value) {
        this.visualAssessmentSummaryText = value;
    }

    @Transient
    public boolean isSetVisualAssessmentSummaryText() {
        return (this.visualAssessmentSummaryText!= null);
    }

    /**
     * Gets the value of the noFurtherReductionSummaryText property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "NO_FURTHER_REDUCTION_SUMM_TXT", columnDefinition = "varchar(4000)", length = 4000)
    public String getNoFurtherReductionSummaryText() {
        return noFurtherReductionSummaryText;
    }

    /**
     * Sets the value of the noFurtherReductionSummaryText property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setNoFurtherReductionSummaryText(String value) {
        this.noFurtherReductionSummaryText = value;
    }

    @Transient
    public boolean isSetNoFurtherReductionSummaryText() {
        return (this.noFurtherReductionSummaryText!= null);
    }

    /**
     * Gets the value of the correctiveActionSummaryText property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "CORR_ACTN_SUMM_TXT", columnDefinition = "varchar(4000)", length = 4000)
    public String getCorrectiveActionSummaryText() {
        return correctiveActionSummaryText;
    }

    /**
     * Sets the value of the correctiveActionSummaryText property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCorrectiveActionSummaryText(String value) {
        this.correctiveActionSummaryText = value;
    }

    @Transient
    public boolean isSetCorrectiveActionSummaryText() {
        return (this.correctiveActionSummaryText!= null);
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof SWIndustrialAnnualReport)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final SWIndustrialAnnualReport that = ((SWIndustrialAnnualReport) object);
        {
            String lhsFacilityInspectionSummaryText;
            lhsFacilityInspectionSummaryText = this.getFacilityInspectionSummaryText();
            String rhsFacilityInspectionSummaryText;
            rhsFacilityInspectionSummaryText = that.getFacilityInspectionSummaryText();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "facilityInspectionSummaryText", lhsFacilityInspectionSummaryText), LocatorUtils.property(thatLocator, "facilityInspectionSummaryText", rhsFacilityInspectionSummaryText), lhsFacilityInspectionSummaryText, rhsFacilityInspectionSummaryText)) {
                return false;
            }
        }
        {
            String lhsVisualAssessmentSummaryText;
            lhsVisualAssessmentSummaryText = this.getVisualAssessmentSummaryText();
            String rhsVisualAssessmentSummaryText;
            rhsVisualAssessmentSummaryText = that.getVisualAssessmentSummaryText();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "visualAssessmentSummaryText", lhsVisualAssessmentSummaryText), LocatorUtils.property(thatLocator, "visualAssessmentSummaryText", rhsVisualAssessmentSummaryText), lhsVisualAssessmentSummaryText, rhsVisualAssessmentSummaryText)) {
                return false;
            }
        }
        {
            String lhsNoFurtherReductionSummaryText;
            lhsNoFurtherReductionSummaryText = this.getNoFurtherReductionSummaryText();
            String rhsNoFurtherReductionSummaryText;
            rhsNoFurtherReductionSummaryText = that.getNoFurtherReductionSummaryText();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "noFurtherReductionSummaryText", lhsNoFurtherReductionSummaryText), LocatorUtils.property(thatLocator, "noFurtherReductionSummaryText", rhsNoFurtherReductionSummaryText), lhsNoFurtherReductionSummaryText, rhsNoFurtherReductionSummaryText)) {
                return false;
            }
        }
        {
            String lhsCorrectiveActionSummaryText;
            lhsCorrectiveActionSummaryText = this.getCorrectiveActionSummaryText();
            String rhsCorrectiveActionSummaryText;
            rhsCorrectiveActionSummaryText = that.getCorrectiveActionSummaryText();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "correctiveActionSummaryText", lhsCorrectiveActionSummaryText), LocatorUtils.property(thatLocator, "correctiveActionSummaryText", rhsCorrectiveActionSummaryText), lhsCorrectiveActionSummaryText, rhsCorrectiveActionSummaryText)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            String theFacilityInspectionSummaryText;
            theFacilityInspectionSummaryText = this.getFacilityInspectionSummaryText();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "facilityInspectionSummaryText", theFacilityInspectionSummaryText), currentHashCode, theFacilityInspectionSummaryText);
        }
        {
            String theVisualAssessmentSummaryText;
            theVisualAssessmentSummaryText = this.getVisualAssessmentSummaryText();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "visualAssessmentSummaryText", theVisualAssessmentSummaryText), currentHashCode, theVisualAssessmentSummaryText);
        }
        {
            String theNoFurtherReductionSummaryText;
            theNoFurtherReductionSummaryText = this.getNoFurtherReductionSummaryText();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "noFurtherReductionSummaryText", theNoFurtherReductionSummaryText), currentHashCode, theNoFurtherReductionSummaryText);
        }
        {
            String theCorrectiveActionSummaryText;
            theCorrectiveActionSummaryText = this.getCorrectiveActionSummaryText();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "correctiveActionSummaryText", theCorrectiveActionSummaryText), currentHashCode, theCorrectiveActionSummaryText);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
