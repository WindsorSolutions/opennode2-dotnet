//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.12.07 at 11:39:25 AM EST 
//


package com.windsor.node.plugin.icisnpdes.generated;

import java.io.Serializable;
import java.util.Date;
import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Embeddable;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import com.windsor.node.plugin.common.xml.bind.annotation.adapters.DateNoTimeZoneAdapter;
import org.hibernate.annotations.NotFound;
import org.hibernate.annotations.NotFoundAction;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for EffluentTradePartner complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="EffluentTradePartner">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.exchangenetwork.net/schema/icis/5}EffluentTradePartnerKeyElements">
 *       &lt;sequence>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}TradePartnerNPDESID" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}TradePartnerOtherID" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}TradePartnerType" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}EffluentTradePartnerAddress" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}TradePartnerStartDate" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}TradePartnerEndDate" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "EffluentTradePartner", propOrder = {
    "tradePartnerNPDESID",
    "tradePartnerOtherID",
    "tradePartnerType",
    "effluentTradePartnerAddress",
    "tradePartnerStartDate",
    "tradePartnerEndDate"
})
@Embeddable
public class EffluentTradePartner
    extends EffluentTradePartnerKeyElements
    implements Serializable, Equals, HashCode
{

    private final static long serialVersionUID = 1L;
    @XmlElement(name = "TradePartnerNPDESID")
    protected String tradePartnerNPDESID;
    @XmlElement(name = "TradePartnerOtherID")
    protected String tradePartnerOtherID;
    @XmlElement(name = "TradePartnerType")
    protected String tradePartnerType;
    @XmlElement(name = "EffluentTradePartnerAddress")
    protected EffluentTradePartnerAddress effluentTradePartnerAddress;
    @XmlElement(name = "TradePartnerStartDate", type = String.class)
    @XmlJavaTypeAdapter(DateNoTimeZoneAdapter.class)
    @XmlSchemaType(name = "date")
    protected Date tradePartnerStartDate;
    @XmlElement(name = "TradePartnerEndDate", type = String.class)
    @XmlJavaTypeAdapter(DateNoTimeZoneAdapter.class)
    protected Date tradePartnerEndDate;

    /**
     * Gets the value of the tradePartnerNPDESID property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "TRADE_PRTNER_NPDESID", columnDefinition = "char(9)", length = 9)
    public String getTradePartnerNPDESID() {
        return tradePartnerNPDESID;
    }

    /**
     * Sets the value of the tradePartnerNPDESID property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTradePartnerNPDESID(String value) {
        this.tradePartnerNPDESID = value;
    }

    @Transient
    public boolean isSetTradePartnerNPDESID() {
        return (this.tradePartnerNPDESID!= null);
    }

    /**
     * Gets the value of the tradePartnerOtherID property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "TRADE_PRTNER_OTHR_ID", length = 30)
    public String getTradePartnerOtherID() {
        return tradePartnerOtherID;
    }

    /**
     * Sets the value of the tradePartnerOtherID property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTradePartnerOtherID(String value) {
        this.tradePartnerOtherID = value;
    }

    @Transient
    public boolean isSetTradePartnerOtherID() {
        return (this.tradePartnerOtherID!= null);
    }

    /**
     * Gets the value of the tradePartnerType property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "TRADE_PRTNER_TYPE", length = 3)
    public String getTradePartnerType() {
        return tradePartnerType;
    }

    /**
     * Sets the value of the tradePartnerType property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTradePartnerType(String value) {
        this.tradePartnerType = value;
    }

    @Transient
    public boolean isSetTradePartnerType() {
        return (this.tradePartnerType!= null);
    }

    /**
     * Gets the value of the effluentTradePartnerAddress property.
     * 
     * @return
     *     possible object is
     *     {@link EffluentTradePartnerAddress }
     *     
     */
    @NotFound(action = NotFoundAction.IGNORE)
    @ManyToOne(targetEntity = EffluentTradePartnerAddress.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "ICS_EFFLU_TRADE_PRTNER_ID", referencedColumnName = "ICS_EFFLU_TRADE_PRTNER_ID", insertable = false, updatable = false)
    public EffluentTradePartnerAddress getEffluentTradePartnerAddress() {
        return effluentTradePartnerAddress;
    }

    /**
     * Sets the value of the effluentTradePartnerAddress property.
     * 
     * @param value
     *     allowed object is
     *     {@link EffluentTradePartnerAddress }
     *     
     */
    public void setEffluentTradePartnerAddress(EffluentTradePartnerAddress value) {
        this.effluentTradePartnerAddress = value;
    }

    @Transient
    public boolean isSetEffluentTradePartnerAddress() {
        return (this.effluentTradePartnerAddress!= null);
    }

    /**
     * Gets the value of the tradePartnerStartDate property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "TRADE_PRTNER_START_DATE")
    @Temporal(TemporalType.DATE)
    public Date getTradePartnerStartDate() {
        return tradePartnerStartDate;
    }

    /**
     * Sets the value of the tradePartnerStartDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTradePartnerStartDate(Date value) {
        this.tradePartnerStartDate = value;
    }

    @Transient
    public boolean isSetTradePartnerStartDate() {
        return (this.tradePartnerStartDate!= null);
    }

    /**
     * Gets the value of the tradePartnerEndDate property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "TRADE_PRTNER_END_DATE")
    @Temporal(TemporalType.TIMESTAMP)
    public Date getTradePartnerEndDate() {
        return tradePartnerEndDate;
    }

    /**
     * Sets the value of the tradePartnerEndDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTradePartnerEndDate(Date value) {
        this.tradePartnerEndDate = value;
    }

    @Transient
    public boolean isSetTradePartnerEndDate() {
        return (this.tradePartnerEndDate!= null);
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof EffluentTradePartner)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final EffluentTradePartner that = ((EffluentTradePartner) object);
        {
            String lhsTradePartnerNPDESID;
            lhsTradePartnerNPDESID = this.getTradePartnerNPDESID();
            String rhsTradePartnerNPDESID;
            rhsTradePartnerNPDESID = that.getTradePartnerNPDESID();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "tradePartnerNPDESID", lhsTradePartnerNPDESID), LocatorUtils.property(thatLocator, "tradePartnerNPDESID", rhsTradePartnerNPDESID), lhsTradePartnerNPDESID, rhsTradePartnerNPDESID)) {
                return false;
            }
        }
        {
            String lhsTradePartnerOtherID;
            lhsTradePartnerOtherID = this.getTradePartnerOtherID();
            String rhsTradePartnerOtherID;
            rhsTradePartnerOtherID = that.getTradePartnerOtherID();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "tradePartnerOtherID", lhsTradePartnerOtherID), LocatorUtils.property(thatLocator, "tradePartnerOtherID", rhsTradePartnerOtherID), lhsTradePartnerOtherID, rhsTradePartnerOtherID)) {
                return false;
            }
        }
        {
            String lhsTradePartnerType;
            lhsTradePartnerType = this.getTradePartnerType();
            String rhsTradePartnerType;
            rhsTradePartnerType = that.getTradePartnerType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "tradePartnerType", lhsTradePartnerType), LocatorUtils.property(thatLocator, "tradePartnerType", rhsTradePartnerType), lhsTradePartnerType, rhsTradePartnerType)) {
                return false;
            }
        }
        {
            EffluentTradePartnerAddress lhsEffluentTradePartnerAddress;
            lhsEffluentTradePartnerAddress = this.getEffluentTradePartnerAddress();
            EffluentTradePartnerAddress rhsEffluentTradePartnerAddress;
            rhsEffluentTradePartnerAddress = that.getEffluentTradePartnerAddress();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "effluentTradePartnerAddress", lhsEffluentTradePartnerAddress), LocatorUtils.property(thatLocator, "effluentTradePartnerAddress", rhsEffluentTradePartnerAddress), lhsEffluentTradePartnerAddress, rhsEffluentTradePartnerAddress)) {
                return false;
            }
        }
        {
            Date lhsTradePartnerStartDate;
            lhsTradePartnerStartDate = this.getTradePartnerStartDate();
            Date rhsTradePartnerStartDate;
            rhsTradePartnerStartDate = that.getTradePartnerStartDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "tradePartnerStartDate", lhsTradePartnerStartDate), LocatorUtils.property(thatLocator, "tradePartnerStartDate", rhsTradePartnerStartDate), lhsTradePartnerStartDate, rhsTradePartnerStartDate)) {
                return false;
            }
        }
        {
            Date lhsTradePartnerEndDate;
            lhsTradePartnerEndDate = this.getTradePartnerEndDate();
            Date rhsTradePartnerEndDate;
            rhsTradePartnerEndDate = that.getTradePartnerEndDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "tradePartnerEndDate", lhsTradePartnerEndDate), LocatorUtils.property(thatLocator, "tradePartnerEndDate", rhsTradePartnerEndDate), lhsTradePartnerEndDate, rhsTradePartnerEndDate)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            String theTradePartnerNPDESID;
            theTradePartnerNPDESID = this.getTradePartnerNPDESID();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "tradePartnerNPDESID", theTradePartnerNPDESID), currentHashCode, theTradePartnerNPDESID);
        }
        {
            String theTradePartnerOtherID;
            theTradePartnerOtherID = this.getTradePartnerOtherID();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "tradePartnerOtherID", theTradePartnerOtherID), currentHashCode, theTradePartnerOtherID);
        }
        {
            String theTradePartnerType;
            theTradePartnerType = this.getTradePartnerType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "tradePartnerType", theTradePartnerType), currentHashCode, theTradePartnerType);
        }
        {
            EffluentTradePartnerAddress theEffluentTradePartnerAddress;
            theEffluentTradePartnerAddress = this.getEffluentTradePartnerAddress();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "effluentTradePartnerAddress", theEffluentTradePartnerAddress), currentHashCode, theEffluentTradePartnerAddress);
        }
        {
            Date theTradePartnerStartDate;
            theTradePartnerStartDate = this.getTradePartnerStartDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "tradePartnerStartDate", theTradePartnerStartDate), currentHashCode, theTradePartnerStartDate);
        }
        {
            Date theTradePartnerEndDate;
            theTradePartnerEndDate = this.getTradePartnerEndDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "tradePartnerEndDate", theTradePartnerEndDate), currentHashCode, theTradePartnerEndDate);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
