//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.12.07 at 11:39:25 AM EST 
//


package com.windsor.node.plugin.icisnpdes.generated;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Embeddable;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.persistence.Transient;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import com.windsor.node.plugin.common.xml.bind.annotation.adapters.IntegerAdapter;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for CAFOAnnualReport complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="CAFOAnnualReport">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.exchangenetwork.net/schema/icis/5}CAFOAnnualProgramReportKeyElements">
 *       &lt;sequence>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}DischargesDuringYearProductionAreaIndicator" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}ReportedAnimalType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;group ref="{http://www.exchangenetwork.net/schema/icis/5}AnimalNMPLitterGroup" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}TotalNumberAcresNMPIdentified" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}TotalNumberAcresUsedLandApplication" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "CAFOAnnualReport", propOrder = {
    "dischargesDuringYearProductionAreaIndicator",
    "reportedAnimalType",
    "solidManureLitterGeneratedAmount",
    "liquidManureWastewaterGeneratedAmount",
    "solidManureLitterTransferAmount",
    "liquidManureWastewaterTransferAmount",
    "nmpDevelopedCertifiedPlannerApprovedIndicator",
    "totalNumberAcresNMPIdentified",
    "totalNumberAcresUsedLandApplication"
})
@Embeddable
public class CAFOAnnualReport
    extends CAFOAnnualProgramReportKeyElements
    implements Serializable, Equals, HashCode
{

    private final static long serialVersionUID = 1L;
    @XmlElement(name = "DischargesDuringYearProductionAreaIndicator")
    protected String dischargesDuringYearProductionAreaIndicator;
    @XmlElement(name = "ReportedAnimalType")
    protected List<ReportedAnimalType> reportedAnimalType;
    @XmlElement(name = "SolidManureLitterGeneratedAmount", type = String.class)
    @XmlJavaTypeAdapter(IntegerAdapter.class)
    protected Integer solidManureLitterGeneratedAmount;
    @XmlElement(name = "LiquidManureWastewaterGeneratedAmount", type = String.class)
    @XmlJavaTypeAdapter(IntegerAdapter.class)
    protected Integer liquidManureWastewaterGeneratedAmount;
    @XmlElement(name = "SolidManureLitterTransferAmount", type = String.class)
    @XmlJavaTypeAdapter(IntegerAdapter.class)
    protected Integer solidManureLitterTransferAmount;
    @XmlElement(name = "LiquidManureWastewaterTransferAmount", type = String.class)
    @XmlJavaTypeAdapter(IntegerAdapter.class)
    protected Integer liquidManureWastewaterTransferAmount;
    @XmlElement(name = "NMPDevelopedCertifiedPlannerApprovedIndicator")
    protected String nmpDevelopedCertifiedPlannerApprovedIndicator;
    @XmlElement(name = "TotalNumberAcresNMPIdentified", type = String.class)
    @XmlJavaTypeAdapter(IntegerAdapter.class)
    protected Integer totalNumberAcresNMPIdentified;
    @XmlElement(name = "TotalNumberAcresUsedLandApplication", type = String.class)
    @XmlJavaTypeAdapter(IntegerAdapter.class)
    protected Integer totalNumberAcresUsedLandApplication;

    /**
     * Gets the value of the dischargesDuringYearProductionAreaIndicator property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "DSCH_DRNG_YEAR_PROD_AREA_IND", length = 3)
    public String getDischargesDuringYearProductionAreaIndicator() {
        return dischargesDuringYearProductionAreaIndicator;
    }

    /**
     * Sets the value of the dischargesDuringYearProductionAreaIndicator property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDischargesDuringYearProductionAreaIndicator(String value) {
        this.dischargesDuringYearProductionAreaIndicator = value;
    }

    @Transient
    public boolean isSetDischargesDuringYearProductionAreaIndicator() {
        return (this.dischargesDuringYearProductionAreaIndicator!= null);
    }

    /**
     * Gets the value of the reportedAnimalType property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the reportedAnimalType property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getReportedAnimalType().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ReportedAnimalType }
     * 
     * 
     */
    @OneToMany(targetEntity = ReportedAnimalType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "ICS_CAFO_ANNUL_REP_ID")
    public List<ReportedAnimalType> getReportedAnimalType() {
        if (reportedAnimalType == null) {
            reportedAnimalType = new ArrayList<ReportedAnimalType>();
        }
        return this.reportedAnimalType;
    }

    /**
     * 
     * 
     */
    public void setReportedAnimalType(List<ReportedAnimalType> reportedAnimalType) {
        this.reportedAnimalType = reportedAnimalType;
    }

    @Transient
    public boolean isSetReportedAnimalType() {
        return ((this.reportedAnimalType!= null)&&(!this.reportedAnimalType.isEmpty()));
    }

    public void unsetReportedAnimalType() {
        this.reportedAnimalType = null;
    }

    /**
     * Gets the value of the solidManureLitterGeneratedAmount property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "SOLID_MNUR_LTTR_GNRTD_AMT", scale = 0)
    public Integer getSolidManureLitterGeneratedAmount() {
        return solidManureLitterGeneratedAmount;
    }

    /**
     * Sets the value of the solidManureLitterGeneratedAmount property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSolidManureLitterGeneratedAmount(Integer value) {
        this.solidManureLitterGeneratedAmount = value;
    }

    @Transient
    public boolean isSetSolidManureLitterGeneratedAmount() {
        return (this.solidManureLitterGeneratedAmount!= null);
    }

    /**
     * Gets the value of the liquidManureWastewaterGeneratedAmount property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "LIQUID_MNUR_WW_GNRTD_AMT", scale = 0)
    public Integer getLiquidManureWastewaterGeneratedAmount() {
        return liquidManureWastewaterGeneratedAmount;
    }

    /**
     * Sets the value of the liquidManureWastewaterGeneratedAmount property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLiquidManureWastewaterGeneratedAmount(Integer value) {
        this.liquidManureWastewaterGeneratedAmount = value;
    }

    @Transient
    public boolean isSetLiquidManureWastewaterGeneratedAmount() {
        return (this.liquidManureWastewaterGeneratedAmount!= null);
    }

    /**
     * Gets the value of the solidManureLitterTransferAmount property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "SOLID_MNUR_LTTR_TRANS_AMT", scale = 0)
    public Integer getSolidManureLitterTransferAmount() {
        return solidManureLitterTransferAmount;
    }

    /**
     * Sets the value of the solidManureLitterTransferAmount property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSolidManureLitterTransferAmount(Integer value) {
        this.solidManureLitterTransferAmount = value;
    }

    @Transient
    public boolean isSetSolidManureLitterTransferAmount() {
        return (this.solidManureLitterTransferAmount!= null);
    }

    /**
     * Gets the value of the liquidManureWastewaterTransferAmount property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "LIQUID_MNUR_WW_TRANS_AMT", scale = 0)
    public Integer getLiquidManureWastewaterTransferAmount() {
        return liquidManureWastewaterTransferAmount;
    }

    /**
     * Sets the value of the liquidManureWastewaterTransferAmount property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLiquidManureWastewaterTransferAmount(Integer value) {
        this.liquidManureWastewaterTransferAmount = value;
    }

    @Transient
    public boolean isSetLiquidManureWastewaterTransferAmount() {
        return (this.liquidManureWastewaterTransferAmount!= null);
    }

    /**
     * Gets the value of the nmpDevelopedCertifiedPlannerApprovedIndicator property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "NMP_DVLPD_CERT_PLNR_APRVD_IND", columnDefinition = "char(1)", length = 1)
    public String getNMPDevelopedCertifiedPlannerApprovedIndicator() {
        return nmpDevelopedCertifiedPlannerApprovedIndicator;
    }

    /**
     * Sets the value of the nmpDevelopedCertifiedPlannerApprovedIndicator property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setNMPDevelopedCertifiedPlannerApprovedIndicator(String value) {
        this.nmpDevelopedCertifiedPlannerApprovedIndicator = value;
    }

    @Transient
    public boolean isSetNMPDevelopedCertifiedPlannerApprovedIndicator() {
        return (this.nmpDevelopedCertifiedPlannerApprovedIndicator!= null);
    }

    /**
     * Gets the value of the totalNumberAcresNMPIdentified property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "TTL_NUM_ACRES_NMP_IDNTFD", scale = 0)
    public Integer getTotalNumberAcresNMPIdentified() {
        return totalNumberAcresNMPIdentified;
    }

    /**
     * Sets the value of the totalNumberAcresNMPIdentified property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTotalNumberAcresNMPIdentified(Integer value) {
        this.totalNumberAcresNMPIdentified = value;
    }

    @Transient
    public boolean isSetTotalNumberAcresNMPIdentified() {
        return (this.totalNumberAcresNMPIdentified!= null);
    }

    /**
     * Gets the value of the totalNumberAcresUsedLandApplication property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "TTL_NUM_ACRES_USED_LAND_APPL", scale = 0)
    public Integer getTotalNumberAcresUsedLandApplication() {
        return totalNumberAcresUsedLandApplication;
    }

    /**
     * Sets the value of the totalNumberAcresUsedLandApplication property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTotalNumberAcresUsedLandApplication(Integer value) {
        this.totalNumberAcresUsedLandApplication = value;
    }

    @Transient
    public boolean isSetTotalNumberAcresUsedLandApplication() {
        return (this.totalNumberAcresUsedLandApplication!= null);
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof CAFOAnnualReport)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final CAFOAnnualReport that = ((CAFOAnnualReport) object);
        {
            String lhsDischargesDuringYearProductionAreaIndicator;
            lhsDischargesDuringYearProductionAreaIndicator = this.getDischargesDuringYearProductionAreaIndicator();
            String rhsDischargesDuringYearProductionAreaIndicator;
            rhsDischargesDuringYearProductionAreaIndicator = that.getDischargesDuringYearProductionAreaIndicator();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dischargesDuringYearProductionAreaIndicator", lhsDischargesDuringYearProductionAreaIndicator), LocatorUtils.property(thatLocator, "dischargesDuringYearProductionAreaIndicator", rhsDischargesDuringYearProductionAreaIndicator), lhsDischargesDuringYearProductionAreaIndicator, rhsDischargesDuringYearProductionAreaIndicator)) {
                return false;
            }
        }
        {
            List<ReportedAnimalType> lhsReportedAnimalType;
            lhsReportedAnimalType = (this.isSetReportedAnimalType()?this.getReportedAnimalType():null);
            List<ReportedAnimalType> rhsReportedAnimalType;
            rhsReportedAnimalType = (that.isSetReportedAnimalType()?that.getReportedAnimalType():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "reportedAnimalType", lhsReportedAnimalType), LocatorUtils.property(thatLocator, "reportedAnimalType", rhsReportedAnimalType), lhsReportedAnimalType, rhsReportedAnimalType)) {
                return false;
            }
        }
        {
            Integer lhsSolidManureLitterGeneratedAmount;
            lhsSolidManureLitterGeneratedAmount = this.getSolidManureLitterGeneratedAmount();
            Integer rhsSolidManureLitterGeneratedAmount;
            rhsSolidManureLitterGeneratedAmount = that.getSolidManureLitterGeneratedAmount();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "solidManureLitterGeneratedAmount", lhsSolidManureLitterGeneratedAmount), LocatorUtils.property(thatLocator, "solidManureLitterGeneratedAmount", rhsSolidManureLitterGeneratedAmount), lhsSolidManureLitterGeneratedAmount, rhsSolidManureLitterGeneratedAmount)) {
                return false;
            }
        }
        {
            Integer lhsLiquidManureWastewaterGeneratedAmount;
            lhsLiquidManureWastewaterGeneratedAmount = this.getLiquidManureWastewaterGeneratedAmount();
            Integer rhsLiquidManureWastewaterGeneratedAmount;
            rhsLiquidManureWastewaterGeneratedAmount = that.getLiquidManureWastewaterGeneratedAmount();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "liquidManureWastewaterGeneratedAmount", lhsLiquidManureWastewaterGeneratedAmount), LocatorUtils.property(thatLocator, "liquidManureWastewaterGeneratedAmount", rhsLiquidManureWastewaterGeneratedAmount), lhsLiquidManureWastewaterGeneratedAmount, rhsLiquidManureWastewaterGeneratedAmount)) {
                return false;
            }
        }
        {
            Integer lhsSolidManureLitterTransferAmount;
            lhsSolidManureLitterTransferAmount = this.getSolidManureLitterTransferAmount();
            Integer rhsSolidManureLitterTransferAmount;
            rhsSolidManureLitterTransferAmount = that.getSolidManureLitterTransferAmount();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "solidManureLitterTransferAmount", lhsSolidManureLitterTransferAmount), LocatorUtils.property(thatLocator, "solidManureLitterTransferAmount", rhsSolidManureLitterTransferAmount), lhsSolidManureLitterTransferAmount, rhsSolidManureLitterTransferAmount)) {
                return false;
            }
        }
        {
            Integer lhsLiquidManureWastewaterTransferAmount;
            lhsLiquidManureWastewaterTransferAmount = this.getLiquidManureWastewaterTransferAmount();
            Integer rhsLiquidManureWastewaterTransferAmount;
            rhsLiquidManureWastewaterTransferAmount = that.getLiquidManureWastewaterTransferAmount();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "liquidManureWastewaterTransferAmount", lhsLiquidManureWastewaterTransferAmount), LocatorUtils.property(thatLocator, "liquidManureWastewaterTransferAmount", rhsLiquidManureWastewaterTransferAmount), lhsLiquidManureWastewaterTransferAmount, rhsLiquidManureWastewaterTransferAmount)) {
                return false;
            }
        }
        {
            String lhsNMPDevelopedCertifiedPlannerApprovedIndicator;
            lhsNMPDevelopedCertifiedPlannerApprovedIndicator = this.getNMPDevelopedCertifiedPlannerApprovedIndicator();
            String rhsNMPDevelopedCertifiedPlannerApprovedIndicator;
            rhsNMPDevelopedCertifiedPlannerApprovedIndicator = that.getNMPDevelopedCertifiedPlannerApprovedIndicator();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "nmpDevelopedCertifiedPlannerApprovedIndicator", lhsNMPDevelopedCertifiedPlannerApprovedIndicator), LocatorUtils.property(thatLocator, "nmpDevelopedCertifiedPlannerApprovedIndicator", rhsNMPDevelopedCertifiedPlannerApprovedIndicator), lhsNMPDevelopedCertifiedPlannerApprovedIndicator, rhsNMPDevelopedCertifiedPlannerApprovedIndicator)) {
                return false;
            }
        }
        {
            Integer lhsTotalNumberAcresNMPIdentified;
            lhsTotalNumberAcresNMPIdentified = this.getTotalNumberAcresNMPIdentified();
            Integer rhsTotalNumberAcresNMPIdentified;
            rhsTotalNumberAcresNMPIdentified = that.getTotalNumberAcresNMPIdentified();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "totalNumberAcresNMPIdentified", lhsTotalNumberAcresNMPIdentified), LocatorUtils.property(thatLocator, "totalNumberAcresNMPIdentified", rhsTotalNumberAcresNMPIdentified), lhsTotalNumberAcresNMPIdentified, rhsTotalNumberAcresNMPIdentified)) {
                return false;
            }
        }
        {
            Integer lhsTotalNumberAcresUsedLandApplication;
            lhsTotalNumberAcresUsedLandApplication = this.getTotalNumberAcresUsedLandApplication();
            Integer rhsTotalNumberAcresUsedLandApplication;
            rhsTotalNumberAcresUsedLandApplication = that.getTotalNumberAcresUsedLandApplication();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "totalNumberAcresUsedLandApplication", lhsTotalNumberAcresUsedLandApplication), LocatorUtils.property(thatLocator, "totalNumberAcresUsedLandApplication", rhsTotalNumberAcresUsedLandApplication), lhsTotalNumberAcresUsedLandApplication, rhsTotalNumberAcresUsedLandApplication)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            String theDischargesDuringYearProductionAreaIndicator;
            theDischargesDuringYearProductionAreaIndicator = this.getDischargesDuringYearProductionAreaIndicator();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dischargesDuringYearProductionAreaIndicator", theDischargesDuringYearProductionAreaIndicator), currentHashCode, theDischargesDuringYearProductionAreaIndicator);
        }
        {
            List<ReportedAnimalType> theReportedAnimalType;
            theReportedAnimalType = (this.isSetReportedAnimalType()?this.getReportedAnimalType():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "reportedAnimalType", theReportedAnimalType), currentHashCode, theReportedAnimalType);
        }
        {
            Integer theSolidManureLitterGeneratedAmount;
            theSolidManureLitterGeneratedAmount = this.getSolidManureLitterGeneratedAmount();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "solidManureLitterGeneratedAmount", theSolidManureLitterGeneratedAmount), currentHashCode, theSolidManureLitterGeneratedAmount);
        }
        {
            Integer theLiquidManureWastewaterGeneratedAmount;
            theLiquidManureWastewaterGeneratedAmount = this.getLiquidManureWastewaterGeneratedAmount();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "liquidManureWastewaterGeneratedAmount", theLiquidManureWastewaterGeneratedAmount), currentHashCode, theLiquidManureWastewaterGeneratedAmount);
        }
        {
            Integer theSolidManureLitterTransferAmount;
            theSolidManureLitterTransferAmount = this.getSolidManureLitterTransferAmount();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "solidManureLitterTransferAmount", theSolidManureLitterTransferAmount), currentHashCode, theSolidManureLitterTransferAmount);
        }
        {
            Integer theLiquidManureWastewaterTransferAmount;
            theLiquidManureWastewaterTransferAmount = this.getLiquidManureWastewaterTransferAmount();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "liquidManureWastewaterTransferAmount", theLiquidManureWastewaterTransferAmount), currentHashCode, theLiquidManureWastewaterTransferAmount);
        }
        {
            String theNMPDevelopedCertifiedPlannerApprovedIndicator;
            theNMPDevelopedCertifiedPlannerApprovedIndicator = this.getNMPDevelopedCertifiedPlannerApprovedIndicator();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "nmpDevelopedCertifiedPlannerApprovedIndicator", theNMPDevelopedCertifiedPlannerApprovedIndicator), currentHashCode, theNMPDevelopedCertifiedPlannerApprovedIndicator);
        }
        {
            Integer theTotalNumberAcresNMPIdentified;
            theTotalNumberAcresNMPIdentified = this.getTotalNumberAcresNMPIdentified();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "totalNumberAcresNMPIdentified", theTotalNumberAcresNMPIdentified), currentHashCode, theTotalNumberAcresNMPIdentified);
        }
        {
            Integer theTotalNumberAcresUsedLandApplication;
            theTotalNumberAcresUsedLandApplication = this.getTotalNumberAcresUsedLandApplication();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "totalNumberAcresUsedLandApplication", theTotalNumberAcresUsedLandApplication), currentHashCode, theTotalNumberAcresUsedLandApplication);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
