//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.08.26 at 02:36:56 PM PDT 
//


package com.windsor.node.plugin.ic.fixeddomain;

import java.io.Serializable;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Embeddable;
import javax.persistence.Embedded;
import javax.persistence.Transient;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for CountryIdentityDataType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="CountryIdentityDataType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/IC/1}CountryCode" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/IC/1}CountryCodeListIdentifier" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/IC/1}CountryName" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "CountryIdentityDataType", propOrder = {
    "countryCode",
    "countryCodeListIdentifier",
    "countryName"
})
@Embeddable
public class CountryIdentityDataType
    implements Serializable, Equals, HashCode
{

    private final static long serialVersionUID = 1L;
    @XmlElement(name = "CountryCode")
    protected String countryCode;
    @XmlElement(name = "CountryCodeListIdentifier")
    protected CountryCodeListIdentifierDataType countryCodeListIdentifier;
    @XmlElement(name = "CountryName")
    protected String countryName;

    /**
     * Gets the value of the countryCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "CNTRY_CODE", length = 255)
    public String getCountryCode() {
        return countryCode;
    }

    /**
     * Sets the value of the countryCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCountryCode(String value) {
        this.countryCode = value;
    }

    @Transient
    public boolean isSetCountryCode() {
        return (this.countryCode!= null);
    }

    /**
     * Gets the value of the countryCodeListIdentifier property.
     * 
     * @return
     *     possible object is
     *     {@link CountryCodeListIdentifierDataType }
     *     
     */
    @Embedded
    @AttributeOverrides({
        @AttributeOverride(name = "value", column = @Column(name = "VALUE", length = 255)),
        @AttributeOverride(name = "codeListVersionIdentifier", column = @Column(name = "CODE_LST_IDEN", length = 255)),
        @AttributeOverride(name = "codeListVersionAgencyIdentifier", column = @Column(name = "CODE_LST_AGENCY_IDEN", length = 255))
    })
    public CountryCodeListIdentifierDataType getCountryCodeListIdentifier() {
        return countryCodeListIdentifier;
    }

    /**
     * Sets the value of the countryCodeListIdentifier property.
     * 
     * @param value
     *     allowed object is
     *     {@link CountryCodeListIdentifierDataType }
     *     
     */
    public void setCountryCodeListIdentifier(CountryCodeListIdentifierDataType value) {
        this.countryCodeListIdentifier = value;
    }

    @Transient
    public boolean isSetCountryCodeListIdentifier() {
        return (this.countryCodeListIdentifier!= null);
    }

    /**
     * Gets the value of the countryName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "CNTRY_NAME", length = 255)
    public String getCountryName() {
        return countryName;
    }

    /**
     * Sets the value of the countryName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCountryName(String value) {
        this.countryName = value;
    }

    @Transient
    public boolean isSetCountryName() {
        return (this.countryName!= null);
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof CountryIdentityDataType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final CountryIdentityDataType that = ((CountryIdentityDataType) object);
        {
            String lhsCountryCode;
            lhsCountryCode = this.getCountryCode();
            String rhsCountryCode;
            rhsCountryCode = that.getCountryCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "countryCode", lhsCountryCode), LocatorUtils.property(thatLocator, "countryCode", rhsCountryCode), lhsCountryCode, rhsCountryCode)) {
                return false;
            }
        }
        {
            CountryCodeListIdentifierDataType lhsCountryCodeListIdentifier;
            lhsCountryCodeListIdentifier = this.getCountryCodeListIdentifier();
            CountryCodeListIdentifierDataType rhsCountryCodeListIdentifier;
            rhsCountryCodeListIdentifier = that.getCountryCodeListIdentifier();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "countryCodeListIdentifier", lhsCountryCodeListIdentifier), LocatorUtils.property(thatLocator, "countryCodeListIdentifier", rhsCountryCodeListIdentifier), lhsCountryCodeListIdentifier, rhsCountryCodeListIdentifier)) {
                return false;
            }
        }
        {
            String lhsCountryName;
            lhsCountryName = this.getCountryName();
            String rhsCountryName;
            rhsCountryName = that.getCountryName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "countryName", lhsCountryName), LocatorUtils.property(thatLocator, "countryName", rhsCountryName), lhsCountryName, rhsCountryName)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            String theCountryCode;
            theCountryCode = this.getCountryCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "countryCode", theCountryCode), currentHashCode, theCountryCode);
        }
        {
            CountryCodeListIdentifierDataType theCountryCodeListIdentifier;
            theCountryCodeListIdentifier = this.getCountryCodeListIdentifier();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "countryCodeListIdentifier", theCountryCodeListIdentifier), currentHashCode, theCountryCodeListIdentifier);
        }
        {
            String theCountryName;
            theCountryName = this.getCountryName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "countryName", theCountryName), currentHashCode, theCountryName);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
