//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.08.26 at 02:36:56 PM PDT 
//


package com.windsor.node.plugin.ic.fixeddomain;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for InstrumentTypeCodeDataType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="InstrumentTypeCodeDataType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="Restrictive Covenant"/>
 *     &lt;enumeration value="Deed Restriction of Unspecified Type"/>
 *     &lt;enumeration value="Local Ordinance"/>
 *     &lt;enumeration value="Subdivision Regulation"/>
 *     &lt;enumeration value="Advisory - Agricultural"/>
 *     &lt;enumeration value="Advisory - Drinking Water"/>
 *     &lt;enumeration value="Advisory - Fishing"/>
 *     &lt;enumeration value="Advisory - Food"/>
 *     &lt;enumeration value="Advisory - Health"/>
 *     &lt;enumeration value="Advisory - Swimming"/>
 *     &lt;enumeration value="Advisory - Unspecified Type"/>
 *     &lt;enumeration value="Other"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "InstrumentTypeCodeDataType")
@XmlEnum
public enum InstrumentTypeCodeDataType {

    @XmlEnumValue("Restrictive Covenant")
    RESTRICTIVE_COVENANT("Restrictive Covenant"),
    @XmlEnumValue("Deed Restriction of Unspecified Type")
    DEED_RESTRICTION_OF_UNSPECIFIED_TYPE("Deed Restriction of Unspecified Type"),
    @XmlEnumValue("Local Ordinance")
    LOCAL_ORDINANCE("Local Ordinance"),
    @XmlEnumValue("Subdivision Regulation")
    SUBDIVISION_REGULATION("Subdivision Regulation"),
    @XmlEnumValue("Advisory - Agricultural")
    ADVISORY_AGRICULTURAL("Advisory - Agricultural"),
    @XmlEnumValue("Advisory - Drinking Water")
    ADVISORY_DRINKING_WATER("Advisory - Drinking Water"),
    @XmlEnumValue("Advisory - Fishing")
    ADVISORY_FISHING("Advisory - Fishing"),
    @XmlEnumValue("Advisory - Food")
    ADVISORY_FOOD("Advisory - Food"),
    @XmlEnumValue("Advisory - Health")
    ADVISORY_HEALTH("Advisory - Health"),
    @XmlEnumValue("Advisory - Swimming")
    ADVISORY_SWIMMING("Advisory - Swimming"),
    @XmlEnumValue("Advisory - Unspecified Type")
    ADVISORY_UNSPECIFIED_TYPE("Advisory - Unspecified Type"),
    @XmlEnumValue("Other")
    OTHER("Other");
    private final String value;

    InstrumentTypeCodeDataType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static InstrumentTypeCodeDataType fromValue(String v) {
        for (InstrumentTypeCodeDataType c: InstrumentTypeCodeDataType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
