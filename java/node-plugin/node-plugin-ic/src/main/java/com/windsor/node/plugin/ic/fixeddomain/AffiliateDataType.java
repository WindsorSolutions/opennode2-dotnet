//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.08.26 at 02:36:56 PM PDT 
//


package com.windsor.node.plugin.ic.fixeddomain;

import java.io.Serializable;
import java.util.List;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Embedded;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlTransient;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for AffiliateDataType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="AffiliateDataType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/IC/1}AffiliateIdentifier"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/IC/1}TelephonicList" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/IC/1}ElectronicAddressList" minOccurs="0"/>
 *         &lt;choice>
 *           &lt;element ref="{http://www.exchangenetwork.net/schema/IC/1}IndividualIdentity" minOccurs="0"/>
 *           &lt;element ref="{http://www.exchangenetwork.net/schema/IC/1}OrganizationIdentity" minOccurs="0"/>
 *         &lt;/choice>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/IC/1}MailingAddress" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "AffiliateDataType", propOrder = {
    "affiliateIdentifier",
    "telephonicList",
    "electronicAddressList",
    "individualIdentity",
    "organizationIdentity",
    "mailingAddress"
})
@Entity(name = "AffiliateDataType")
@Table(name = "IC_AFFIL")
@Inheritance(strategy = InheritanceType.JOINED)
public class AffiliateDataType
    implements Serializable, Equals, HashCode
{

    private final static long serialVersionUID = 1L;
    @XmlElement(name = "AffiliateIdentifier", required = true)
    protected String affiliateIdentifier;
    @XmlElement(name = "TelephonicList")
    protected TelephonicListDataType telephonicList;
    @XmlElement(name = "ElectronicAddressList")
    protected ElectronicAddressListDataType electronicAddressList;
    @XmlElement(name = "IndividualIdentity")
    protected IndividualIdentityDataType individualIdentity;
    @XmlElement(name = "OrganizationIdentity")
    protected OrganizationIdentityDataType organizationIdentity;
    @XmlElement(name = "MailingAddress")
    protected MailingAddressDataType mailingAddress;
    @XmlTransient
    protected String dbid;

    /**
     * Gets the value of the affiliateIdentifier property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "AFFIL_IDEN", length = 255)
    public String getAffiliateIdentifier() {
        return affiliateIdentifier;
    }

    /**
     * Sets the value of the affiliateIdentifier property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAffiliateIdentifier(String value) {
        this.affiliateIdentifier = value;
    }

    @Transient
    public boolean isSetAffiliateIdentifier() {
        return (this.affiliateIdentifier!= null);
    }

    /**
     * Gets the value of the telephonicList property.
     * 
     * @return
     *     possible object is
     *     {@link TelephonicListDataType }
     *     
     */
    @Embedded
    /*@AssociationOverride(name = "telephonic", joinTable = @JoinTable(name = "IC_TELE", joinColumns = {
        @JoinColumn(name = "IC_AFFIL_ID", referencedColumnName = "IC_AFFIL_ID")
    }, inverseJoinColumns = {
        @JoinColumn(name = "IC_AFFIL_ID")
    }))
    public TelephonicListDataType getTelephonicList() {
        return telephonicList;
    }*/
    public TelephonicListDataType getTelephonicList() {
        return telephonicList;
    }

    @OneToMany(targetEntity = TelephonicDataType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "IC_AFFIL_ID", insertable = false, updatable = false)
    public List<TelephonicDataType> getTelephonicDataTypes() {
        return (telephonicList != null ? telephonicList.getTelephonic() : null);
    }

    public void setTelephonicDataTypes(List<TelephonicDataType> list)
    {
        if(telephonicList == null)
        {
            ObjectFactory fact = new ObjectFactory();
            setTelephonicList(fact.createTelephonicListDataType());
        }
        getTelephonicList().setTelephonic(list);
    }

    /**
     * Sets the value of the telephonicList property.
     * 
     * @param value
     *     allowed object is
     *     {@link TelephonicListDataType }
     *     
     */
    public void setTelephonicList(TelephonicListDataType value) {
        this.telephonicList = value;
    }

    @Transient
    public boolean isSetTelephonicList() {
        return (this.telephonicList!= null);
    }

    /**
     * Gets the value of the electronicAddressList property.
     * 
     * @return
     *     possible object is
     *     {@link ElectronicAddressListDataType }
     *     
     */
    /*@Embedded
    @AssociationOverride(name = "electronicAddress", joinTable = @JoinTable(name = "IC_ELEC_ADDR", joinColumns = {
        @JoinColumn(name = "IC_AFFIL_ID", referencedColumnName = "IC_AFFIL_ID")
    }, inverseJoinColumns = {
        @JoinColumn(name = "IC_AFFIL_ID")
    }))*/
    public ElectronicAddressListDataType getElectronicAddressList() {
        return electronicAddressList;
    }

    @OneToMany(targetEntity = ElectronicAddressDataType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "IC_AFFIL_ID", insertable = false, updatable = false)
    public List<ElectronicAddressDataType> getElectronicAddressDataTypes() {
        return (electronicAddressList != null ? electronicAddressList.getElectronicAddress() : null);
    }

    public void setElectronicAddressDataTypes(List<ElectronicAddressDataType> list)
    {
        if(electronicAddressList == null)
        {
            ObjectFactory fact = new ObjectFactory();
            setElectronicAddressList(fact.createElectronicAddressListDataType());
        }
        getElectronicAddressList().setElectronicAddress(list);
    }

    /**
     * Sets the value of the electronicAddressList property.
     * 
     * @param value
     *     allowed object is
     *     {@link ElectronicAddressListDataType }
     *     
     */
    public void setElectronicAddressList(ElectronicAddressListDataType value) {
        this.electronicAddressList = value;
    }

    @Transient
    public boolean isSetElectronicAddressList() {
        return (this.electronicAddressList!= null);
    }

    /**
     * Gets the value of the individualIdentity property.
     * 
     * @return
     *     possible object is
     *     {@link IndividualIdentityDataType }
     *     
     */
    @Embedded
    @AttributeOverrides({
        @AttributeOverride(name = "individualTitleText", column = @Column(name = "INDVL_TITLE_TXT", length = 255)),
        @AttributeOverride(name = "namePrefixText", column = @Column(name = "NAME_PREFIX_TXT", length = 255)),
        @AttributeOverride(name = "individualFullName", column = @Column(name = "INDVL_FULL_NAME", length = 255)),
        @AttributeOverride(name = "firstName", column = @Column(name = "FIRST_NAME", length = 255)),
        @AttributeOverride(name = "middleName", column = @Column(name = "MIDDLE_NAME", length = 255)),
        @AttributeOverride(name = "lastName", column = @Column(name = "LAST_NAME", length = 255)),
        @AttributeOverride(name = "nameSuffixText", column = @Column(name = "NAME_SUFFIX_TXT", length = 255)),
        @AttributeOverride(name = "individualIdentifier.value", column = @Column(name = "INDVL_IDEN_VALUE", length = 255)),
        @AttributeOverride(name = "individualIdentifier.individualIdentifierContext", column = @Column(name = "INDVL_IDEN_CNTXT", length = 255))
    })
    public IndividualIdentityDataType getIndividualIdentity() {
        return individualIdentity;
    }

    /**
     * Sets the value of the individualIdentity property.
     * 
     * @param value
     *     allowed object is
     *     {@link IndividualIdentityDataType }
     *     
     */
    public void setIndividualIdentity(IndividualIdentityDataType value) {
        this.individualIdentity = value;
    }

    @Transient
    public boolean isSetIndividualIdentity() {
        return (this.individualIdentity!= null);
    }

    /**
     * Gets the value of the organizationIdentity property.
     * 
     * @return
     *     possible object is
     *     {@link OrganizationIdentityDataType }
     *     
     */
    @Embedded
    @AttributeOverrides({
        @AttributeOverride(name = "organizationFormalName", column = @Column(name = "ORG_FRML_NAME", length = 255)),
        @AttributeOverride(name = "organizationIdentifier.value", column = @Column(name = "ORG_IDEN_VALUE", length = 255)),
        @AttributeOverride(name = "organizationIdentifier.organizationIdentifierContext", column = @Column(name = "ORG_IDEN_CNTXT", length = 255))
    })
    public OrganizationIdentityDataType getOrganizationIdentity() {
        return organizationIdentity;
    }

    /**
     * Sets the value of the organizationIdentity property.
     * 
     * @param value
     *     allowed object is
     *     {@link OrganizationIdentityDataType }
     *     
     */
    public void setOrganizationIdentity(OrganizationIdentityDataType value) {
        this.organizationIdentity = value;
    }

    @Transient
    public boolean isSetOrganizationIdentity() {
        return (this.organizationIdentity!= null);
    }

    /**
     * Gets the value of the mailingAddress property.
     * 
     * @return
     *     possible object is
     *     {@link MailingAddressDataType }
     *     
     */
    @Embedded
    @AttributeOverrides({
        @AttributeOverride(name = "mailingAddressText", column = @Column(name = "MAILING_ADDR_TXT", length = 255)),
        @AttributeOverride(name = "supplementalAddressText", column = @Column(name = "SUPPL_ADDR_TXT", length = 255)),
        @AttributeOverride(name = "mailingAddressCityName", column = @Column(name = "MAILING_ADDR_CITY_NAME", length = 255)),
        @AttributeOverride(name = "stateIdentity.stateCode", column = @Column(name = "ST_CODE", length = 255)),
        @AttributeOverride(name = "stateIdentity.stateName", column = @Column(name = "ST_NAME", length = 255)),
        @AttributeOverride(name = "stateIdentity.stateCodeListIdentifier.value", column = @Column(name = "ST_LST_IDEN_VALUE", length = 255)),
        @AttributeOverride(name = "stateIdentity.stateCodeListIdentifier.codeListVersionIdentifier", column = @Column(name = "ST_LST_IDEN", length = 255)),
        @AttributeOverride(name = "stateIdentity.stateCodeListIdentifier.codeListVersionAgencyIdentifier", column = @Column(name = "ST_LST_AGCY_IDEN", length = 255)),
        @AttributeOverride(name = "addressPostalCode.value", column = @Column(name = "ADDR_POSTAL_CODE_VALUE", length = 255)),
        @AttributeOverride(name = "addressPostalCode.addressPostalCodeContext", column = @Column(name = "ADDR_POSTAL_CODE_CNTXT", length = 255)),
        @AttributeOverride(name = "countryIdentity.countryCode", column = @Column(name = "CNTRY_CODE", length = 255)),
        @AttributeOverride(name = "countryIdentity.countryName", column = @Column(name = "CNTRY_NAME", length = 255)),
        @AttributeOverride(name = "countryIdentity.countryCodeListIdentifier.value", column = @Column(name = "CNTRY_LST_IDEN_VALUE", length = 255)),
        @AttributeOverride(name = "countryIdentity.countryCodeListIdentifier.codeListVersionIdentifier", column = @Column(name = "CNTRY_LST_IDEN", length = 255)),
        @AttributeOverride(name = "countryIdentity.countryCodeListIdentifier.codeListVersionAgencyIdentifier", column = @Column(name = "CNTRY_LST_AGCY_IDEN", length = 255))
    })
    public MailingAddressDataType getMailingAddress() {
        return mailingAddress;
    }

    /**
     * Sets the value of the mailingAddress property.
     * 
     * @param value
     *     allowed object is
     *     {@link MailingAddressDataType }
     *     
     */
    public void setMailingAddress(MailingAddressDataType value) {
        this.mailingAddress = value;
    }

    @Transient
    public boolean isSetMailingAddress() {
        return (this.mailingAddress!= null);
    }

    /**
     * 
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Id
    @Column(name = "IC_AFFIL_ID")
    public String getDbid() {
        return dbid;
    }

    /**
     * 
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDbid(String value) {
        this.dbid = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof AffiliateDataType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final AffiliateDataType that = ((AffiliateDataType) object);
        {
            String lhsAffiliateIdentifier;
            lhsAffiliateIdentifier = this.getAffiliateIdentifier();
            String rhsAffiliateIdentifier;
            rhsAffiliateIdentifier = that.getAffiliateIdentifier();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "affiliateIdentifier", lhsAffiliateIdentifier), LocatorUtils.property(thatLocator, "affiliateIdentifier", rhsAffiliateIdentifier), lhsAffiliateIdentifier, rhsAffiliateIdentifier)) {
                return false;
            }
        }
        {
            TelephonicListDataType lhsTelephonicList;
            lhsTelephonicList = this.getTelephonicList();
            TelephonicListDataType rhsTelephonicList;
            rhsTelephonicList = that.getTelephonicList();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "telephonicList", lhsTelephonicList), LocatorUtils.property(thatLocator, "telephonicList", rhsTelephonicList), lhsTelephonicList, rhsTelephonicList)) {
                return false;
            }
        }
        {
            ElectronicAddressListDataType lhsElectronicAddressList;
            lhsElectronicAddressList = this.getElectronicAddressList();
            ElectronicAddressListDataType rhsElectronicAddressList;
            rhsElectronicAddressList = that.getElectronicAddressList();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "electronicAddressList", lhsElectronicAddressList), LocatorUtils.property(thatLocator, "electronicAddressList", rhsElectronicAddressList), lhsElectronicAddressList, rhsElectronicAddressList)) {
                return false;
            }
        }
        {
            IndividualIdentityDataType lhsIndividualIdentity;
            lhsIndividualIdentity = this.getIndividualIdentity();
            IndividualIdentityDataType rhsIndividualIdentity;
            rhsIndividualIdentity = that.getIndividualIdentity();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "individualIdentity", lhsIndividualIdentity), LocatorUtils.property(thatLocator, "individualIdentity", rhsIndividualIdentity), lhsIndividualIdentity, rhsIndividualIdentity)) {
                return false;
            }
        }
        {
            OrganizationIdentityDataType lhsOrganizationIdentity;
            lhsOrganizationIdentity = this.getOrganizationIdentity();
            OrganizationIdentityDataType rhsOrganizationIdentity;
            rhsOrganizationIdentity = that.getOrganizationIdentity();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "organizationIdentity", lhsOrganizationIdentity), LocatorUtils.property(thatLocator, "organizationIdentity", rhsOrganizationIdentity), lhsOrganizationIdentity, rhsOrganizationIdentity)) {
                return false;
            }
        }
        {
            MailingAddressDataType lhsMailingAddress;
            lhsMailingAddress = this.getMailingAddress();
            MailingAddressDataType rhsMailingAddress;
            rhsMailingAddress = that.getMailingAddress();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "mailingAddress", lhsMailingAddress), LocatorUtils.property(thatLocator, "mailingAddress", rhsMailingAddress), lhsMailingAddress, rhsMailingAddress)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            String theAffiliateIdentifier;
            theAffiliateIdentifier = this.getAffiliateIdentifier();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "affiliateIdentifier", theAffiliateIdentifier), currentHashCode, theAffiliateIdentifier);
        }
        {
            TelephonicListDataType theTelephonicList;
            theTelephonicList = this.getTelephonicList();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "telephonicList", theTelephonicList), currentHashCode, theTelephonicList);
        }
        {
            ElectronicAddressListDataType theElectronicAddressList;
            theElectronicAddressList = this.getElectronicAddressList();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "electronicAddressList", theElectronicAddressList), currentHashCode, theElectronicAddressList);
        }
        {
            IndividualIdentityDataType theIndividualIdentity;
            theIndividualIdentity = this.getIndividualIdentity();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "individualIdentity", theIndividualIdentity), currentHashCode, theIndividualIdentity);
        }
        {
            OrganizationIdentityDataType theOrganizationIdentity;
            theOrganizationIdentity = this.getOrganizationIdentity();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "organizationIdentity", theOrganizationIdentity), currentHashCode, theOrganizationIdentity);
        }
        {
            MailingAddressDataType theMailingAddress;
            theMailingAddress = this.getMailingAddress();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "mailingAddress", theMailingAddress), currentHashCode, theMailingAddress);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
