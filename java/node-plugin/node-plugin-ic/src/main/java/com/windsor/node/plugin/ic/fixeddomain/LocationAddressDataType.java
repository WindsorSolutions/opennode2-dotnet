//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.08.26 at 02:36:56 PM PDT 
//


package com.windsor.node.plugin.ic.fixeddomain;

import java.io.Serializable;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Embeddable;
import javax.persistence.Embedded;
import javax.persistence.Transient;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for LocationAddressDataType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="LocationAddressDataType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/IC/1}LocationAddressText" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/IC/1}SupplementalLocationText" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/IC/1}LocalityName" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/IC/1}StateIdentity" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/IC/1}AddressPostalCode" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/IC/1}CountryIdentity" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/IC/1}CountyIdentity" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/IC/1}TribalLandName" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/IC/1}TribalLandIndicator" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/IC/1}LocationDescriptionText" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "LocationAddressDataType", propOrder = {
    "locationAddressText",
    "supplementalLocationText",
    "localityName",
    "stateIdentity",
    "addressPostalCode",
    "countryIdentity",
    "countyIdentity",
    "tribalLandName",
    "tribalLandIndicator",
    "locationDescriptionText"
})
@Embeddable
public class LocationAddressDataType
    implements Serializable, Equals, HashCode
{

    private final static long serialVersionUID = 1L;
    @XmlElement(name = "LocationAddressText")
    protected String locationAddressText;
    @XmlElement(name = "SupplementalLocationText")
    protected String supplementalLocationText;
    @XmlElement(name = "LocalityName")
    protected String localityName;
    @XmlElement(name = "StateIdentity")
    protected StateIdentityDataType stateIdentity;
    @XmlElement(name = "AddressPostalCode")
    protected AddressPostalCodeDataType addressPostalCode;
    @XmlElement(name = "CountryIdentity")
    protected CountryIdentityDataType countryIdentity;
    @XmlElement(name = "CountyIdentity")
    protected CountyIdentityDataType countyIdentity;
    @XmlElement(name = "TribalLandName")
    protected String tribalLandName;
    @XmlElement(name = "TribalLandIndicator")
    protected String tribalLandIndicator;
    @XmlElement(name = "LocationDescriptionText")
    protected String locationDescriptionText;

    /**
     * Gets the value of the locationAddressText property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "LOC_ADDR_TXT", length = 255)
    public String getLocationAddressText() {
        return locationAddressText;
    }

    /**
     * Sets the value of the locationAddressText property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLocationAddressText(String value) {
        this.locationAddressText = value;
    }

    @Transient
    public boolean isSetLocationAddressText() {
        return (this.locationAddressText!= null);
    }

    /**
     * Gets the value of the supplementalLocationText property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "SUPPL_LOC_TXT", length = 255)
    public String getSupplementalLocationText() {
        return supplementalLocationText;
    }

    /**
     * Sets the value of the supplementalLocationText property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSupplementalLocationText(String value) {
        this.supplementalLocationText = value;
    }

    @Transient
    public boolean isSetSupplementalLocationText() {
        return (this.supplementalLocationText!= null);
    }

    /**
     * Gets the value of the localityName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "LOCALITY_NAME", length = 255)
    public String getLocalityName() {
        return localityName;
    }

    /**
     * Sets the value of the localityName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLocalityName(String value) {
        this.localityName = value;
    }

    @Transient
    public boolean isSetLocalityName() {
        return (this.localityName!= null);
    }

    /**
     * Gets the value of the stateIdentity property.
     * 
     * @return
     *     possible object is
     *     {@link StateIdentityDataType }
     *     
     */
    @Embedded
    @AttributeOverrides({
        @AttributeOverride(name = "stateCode", column = @Column(name = "ST_CODE", length = 255)),
        @AttributeOverride(name = "stateName", column = @Column(name = "ST_NAME", length = 255)),
        @AttributeOverride(name = "stateCodeListIdentifier.value", column = @Column(name = "VALUE", length = 255)),
        @AttributeOverride(name = "stateCodeListIdentifier.codeListVersionIdentifier", column = @Column(name = "CODE_LST_IDEN", length = 255)),
        @AttributeOverride(name = "stateCodeListIdentifier.codeListVersionAgencyIdentifier", column = @Column(name = "CODE_LST_AGENCY_IDEN", length = 255))
    })
    public StateIdentityDataType getStateIdentity() {
        return stateIdentity;
    }

    /**
     * Sets the value of the stateIdentity property.
     * 
     * @param value
     *     allowed object is
     *     {@link StateIdentityDataType }
     *     
     */
    public void setStateIdentity(StateIdentityDataType value) {
        this.stateIdentity = value;
    }

    @Transient
    public boolean isSetStateIdentity() {
        return (this.stateIdentity!= null);
    }

    /**
     * Gets the value of the addressPostalCode property.
     * 
     * @return
     *     possible object is
     *     {@link AddressPostalCodeDataType }
     *     
     */
    @Embedded
    @AttributeOverrides({
        @AttributeOverride(name = "value", column = @Column(name = "VALUE", length = 255)),
        @AttributeOverride(name = "addressPostalCodeContext", column = @Column(name = "ADDR_POSTAL_CODE_CNTXT", length = 255))
    })
    public AddressPostalCodeDataType getAddressPostalCode() {
        return addressPostalCode;
    }

    /**
     * Sets the value of the addressPostalCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link AddressPostalCodeDataType }
     *     
     */
    public void setAddressPostalCode(AddressPostalCodeDataType value) {
        this.addressPostalCode = value;
    }

    @Transient
    public boolean isSetAddressPostalCode() {
        return (this.addressPostalCode!= null);
    }

    /**
     * Gets the value of the countryIdentity property.
     * 
     * @return
     *     possible object is
     *     {@link CountryIdentityDataType }
     *     
     */
    @Embedded
    @AttributeOverrides({
        @AttributeOverride(name = "countryCode", column = @Column(name = "CNTRY_CODE", length = 255)),
        @AttributeOverride(name = "countryName", column = @Column(name = "CNTRY_NAME", length = 255)),
        @AttributeOverride(name = "countryCodeListIdentifier.value", column = @Column(name = "VALUE", length = 255)),
        @AttributeOverride(name = "countryCodeListIdentifier.codeListVersionIdentifier", column = @Column(name = "CODE_LST_IDEN", length = 255)),
        @AttributeOverride(name = "countryCodeListIdentifier.codeListVersionAgencyIdentifier", column = @Column(name = "CODE_LST_AGENCY_IDEN", length = 255))
    })
    public CountryIdentityDataType getCountryIdentity() {
        return countryIdentity;
    }

    /**
     * Sets the value of the countryIdentity property.
     * 
     * @param value
     *     allowed object is
     *     {@link CountryIdentityDataType }
     *     
     */
    public void setCountryIdentity(CountryIdentityDataType value) {
        this.countryIdentity = value;
    }

    @Transient
    public boolean isSetCountryIdentity() {
        return (this.countryIdentity!= null);
    }

    /**
     * Gets the value of the countyIdentity property.
     * 
     * @return
     *     possible object is
     *     {@link CountyIdentityDataType }
     *     
     */
    @Embedded
    @AttributeOverrides({
        @AttributeOverride(name = "countyCode", column = @Column(name = "COUNTY_CODE", length = 255)),
        @AttributeOverride(name = "countyName", column = @Column(name = "COUNTY_NAME", length = 255)),
        @AttributeOverride(name = "countyCodeListIdentifier.value", column = @Column(name = "VALUE", length = 255)),
        @AttributeOverride(name = "countyCodeListIdentifier.codeListVersionIdentifier", column = @Column(name = "CODE_LST_IDEN", length = 255)),
        @AttributeOverride(name = "countyCodeListIdentifier.codeListVersionAgencyIdentifier", column = @Column(name = "CODE_LST_AGENCY_IDEN", length = 255))
    })
    public CountyIdentityDataType getCountyIdentity() {
        return countyIdentity;
    }

    /**
     * Sets the value of the countyIdentity property.
     * 
     * @param value
     *     allowed object is
     *     {@link CountyIdentityDataType }
     *     
     */
    public void setCountyIdentity(CountyIdentityDataType value) {
        this.countyIdentity = value;
    }

    @Transient
    public boolean isSetCountyIdentity() {
        return (this.countyIdentity!= null);
    }

    /**
     * Gets the value of the tribalLandName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "TRIBAL_LAND_NAME", length = 255)
    public String getTribalLandName() {
        return tribalLandName;
    }

    /**
     * Sets the value of the tribalLandName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTribalLandName(String value) {
        this.tribalLandName = value;
    }

    @Transient
    public boolean isSetTribalLandName() {
        return (this.tribalLandName!= null);
    }

    /**
     * Gets the value of the tribalLandIndicator property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "TRIBAL_LAND_IND", length = 255)
    public String getTribalLandIndicator() {
        return tribalLandIndicator;
    }

    /**
     * Sets the value of the tribalLandIndicator property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTribalLandIndicator(String value) {
        this.tribalLandIndicator = value;
    }

    @Transient
    public boolean isSetTribalLandIndicator() {
        return (this.tribalLandIndicator!= null);
    }

    /**
     * Gets the value of the locationDescriptionText property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "LOC_DESC_TXT", length = 255)
    public String getLocationDescriptionText() {
        return locationDescriptionText;
    }

    /**
     * Sets the value of the locationDescriptionText property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLocationDescriptionText(String value) {
        this.locationDescriptionText = value;
    }

    @Transient
    public boolean isSetLocationDescriptionText() {
        return (this.locationDescriptionText!= null);
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof LocationAddressDataType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final LocationAddressDataType that = ((LocationAddressDataType) object);
        {
            String lhsLocationAddressText;
            lhsLocationAddressText = this.getLocationAddressText();
            String rhsLocationAddressText;
            rhsLocationAddressText = that.getLocationAddressText();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "locationAddressText", lhsLocationAddressText), LocatorUtils.property(thatLocator, "locationAddressText", rhsLocationAddressText), lhsLocationAddressText, rhsLocationAddressText)) {
                return false;
            }
        }
        {
            String lhsSupplementalLocationText;
            lhsSupplementalLocationText = this.getSupplementalLocationText();
            String rhsSupplementalLocationText;
            rhsSupplementalLocationText = that.getSupplementalLocationText();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "supplementalLocationText", lhsSupplementalLocationText), LocatorUtils.property(thatLocator, "supplementalLocationText", rhsSupplementalLocationText), lhsSupplementalLocationText, rhsSupplementalLocationText)) {
                return false;
            }
        }
        {
            String lhsLocalityName;
            lhsLocalityName = this.getLocalityName();
            String rhsLocalityName;
            rhsLocalityName = that.getLocalityName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "localityName", lhsLocalityName), LocatorUtils.property(thatLocator, "localityName", rhsLocalityName), lhsLocalityName, rhsLocalityName)) {
                return false;
            }
        }
        {
            StateIdentityDataType lhsStateIdentity;
            lhsStateIdentity = this.getStateIdentity();
            StateIdentityDataType rhsStateIdentity;
            rhsStateIdentity = that.getStateIdentity();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "stateIdentity", lhsStateIdentity), LocatorUtils.property(thatLocator, "stateIdentity", rhsStateIdentity), lhsStateIdentity, rhsStateIdentity)) {
                return false;
            }
        }
        {
            AddressPostalCodeDataType lhsAddressPostalCode;
            lhsAddressPostalCode = this.getAddressPostalCode();
            AddressPostalCodeDataType rhsAddressPostalCode;
            rhsAddressPostalCode = that.getAddressPostalCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "addressPostalCode", lhsAddressPostalCode), LocatorUtils.property(thatLocator, "addressPostalCode", rhsAddressPostalCode), lhsAddressPostalCode, rhsAddressPostalCode)) {
                return false;
            }
        }
        {
            CountryIdentityDataType lhsCountryIdentity;
            lhsCountryIdentity = this.getCountryIdentity();
            CountryIdentityDataType rhsCountryIdentity;
            rhsCountryIdentity = that.getCountryIdentity();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "countryIdentity", lhsCountryIdentity), LocatorUtils.property(thatLocator, "countryIdentity", rhsCountryIdentity), lhsCountryIdentity, rhsCountryIdentity)) {
                return false;
            }
        }
        {
            CountyIdentityDataType lhsCountyIdentity;
            lhsCountyIdentity = this.getCountyIdentity();
            CountyIdentityDataType rhsCountyIdentity;
            rhsCountyIdentity = that.getCountyIdentity();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "countyIdentity", lhsCountyIdentity), LocatorUtils.property(thatLocator, "countyIdentity", rhsCountyIdentity), lhsCountyIdentity, rhsCountyIdentity)) {
                return false;
            }
        }
        {
            String lhsTribalLandName;
            lhsTribalLandName = this.getTribalLandName();
            String rhsTribalLandName;
            rhsTribalLandName = that.getTribalLandName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "tribalLandName", lhsTribalLandName), LocatorUtils.property(thatLocator, "tribalLandName", rhsTribalLandName), lhsTribalLandName, rhsTribalLandName)) {
                return false;
            }
        }
        {
            String lhsTribalLandIndicator;
            lhsTribalLandIndicator = this.getTribalLandIndicator();
            String rhsTribalLandIndicator;
            rhsTribalLandIndicator = that.getTribalLandIndicator();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "tribalLandIndicator", lhsTribalLandIndicator), LocatorUtils.property(thatLocator, "tribalLandIndicator", rhsTribalLandIndicator), lhsTribalLandIndicator, rhsTribalLandIndicator)) {
                return false;
            }
        }
        {
            String lhsLocationDescriptionText;
            lhsLocationDescriptionText = this.getLocationDescriptionText();
            String rhsLocationDescriptionText;
            rhsLocationDescriptionText = that.getLocationDescriptionText();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "locationDescriptionText", lhsLocationDescriptionText), LocatorUtils.property(thatLocator, "locationDescriptionText", rhsLocationDescriptionText), lhsLocationDescriptionText, rhsLocationDescriptionText)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            String theLocationAddressText;
            theLocationAddressText = this.getLocationAddressText();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "locationAddressText", theLocationAddressText), currentHashCode, theLocationAddressText);
        }
        {
            String theSupplementalLocationText;
            theSupplementalLocationText = this.getSupplementalLocationText();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "supplementalLocationText", theSupplementalLocationText), currentHashCode, theSupplementalLocationText);
        }
        {
            String theLocalityName;
            theLocalityName = this.getLocalityName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "localityName", theLocalityName), currentHashCode, theLocalityName);
        }
        {
            StateIdentityDataType theStateIdentity;
            theStateIdentity = this.getStateIdentity();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "stateIdentity", theStateIdentity), currentHashCode, theStateIdentity);
        }
        {
            AddressPostalCodeDataType theAddressPostalCode;
            theAddressPostalCode = this.getAddressPostalCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "addressPostalCode", theAddressPostalCode), currentHashCode, theAddressPostalCode);
        }
        {
            CountryIdentityDataType theCountryIdentity;
            theCountryIdentity = this.getCountryIdentity();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "countryIdentity", theCountryIdentity), currentHashCode, theCountryIdentity);
        }
        {
            CountyIdentityDataType theCountyIdentity;
            theCountyIdentity = this.getCountyIdentity();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "countyIdentity", theCountyIdentity), currentHashCode, theCountyIdentity);
        }
        {
            String theTribalLandName;
            theTribalLandName = this.getTribalLandName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "tribalLandName", theTribalLandName), currentHashCode, theTribalLandName);
        }
        {
            String theTribalLandIndicator;
            theTribalLandIndicator = this.getTribalLandIndicator();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "tribalLandIndicator", theTribalLandIndicator), currentHashCode, theTribalLandIndicator);
        }
        {
            String theLocationDescriptionText;
            theLocationDescriptionText = this.getLocationDescriptionText();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "locationDescriptionText", theLocationDescriptionText), currentHashCode, theLocationDescriptionText);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
