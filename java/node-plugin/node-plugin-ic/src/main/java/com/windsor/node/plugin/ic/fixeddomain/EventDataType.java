//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.08.26 at 02:36:56 PM PDT 
//


package com.windsor.node.plugin.ic.fixeddomain;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlTransient;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import javax.xml.datatype.XMLGregorianCalendar;
import org.jvnet.hyperjaxb3.xml.bind.annotation.adapters.XMLGregorianCalendarAsDate;
import org.jvnet.hyperjaxb3.xml.bind.annotation.adapters.XMLGregorianCalendarAsTime;
import org.jvnet.hyperjaxb3.xml.bind.annotation.adapters.XmlAdapterUtils;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;
import com.windsor.node.plugin.common.xml.bind.annotation.adapters.StringAdapter;


/**
 * <p>Java class for EventDataType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="EventDataType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/IC/1}EventName"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/IC/1}EventTypeCode" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/IC/1}OtherEventTypeText" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/IC/1}EventDescriptionText" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/IC/1}EventStartDate"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/IC/1}EventStartTime" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/IC/1}EventEndDate" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/IC/1}EventEndTime" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/IC/1}EventDateQualifierCode" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/IC/1}EventStatusText" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/IC/1}RecurringEventIdentifier" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/IC/1}Resource" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/IC/1}EventLocation" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/IC/1}EventAffiliate" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "EventDataType", propOrder = {
    "eventName",
    "eventTypeCode",
    "otherEventTypeText",
    "eventDescriptionText",
    "eventStartDate",
    "eventStartTime",
    "eventEndDate",
    "eventEndTime",
    "eventDateQualifierCode",
    "eventStatusText",
    "recurringEventIdentifier",
    "resource",
    "eventLocation",
    "eventAffiliate"
})
@Entity(name = "EventDataType")
@Table(name = "IC_EVT")
@Inheritance(strategy = InheritanceType.JOINED)
public class EventDataType
    implements Serializable, Equals, HashCode
{

    private final static long serialVersionUID = 1L;
    @XmlElement(name = "EventName", required = true)
    protected String eventName;
    @XmlElement(name = "EventTypeCode")
    @XmlJavaTypeAdapter(StringAdapter.class)
    protected String eventTypeCode;
    @XmlElement(name = "OtherEventTypeText")
    protected String otherEventTypeText;
    @XmlElement(name = "EventDescriptionText")
    protected String eventDescriptionText;
    @XmlElement(name = "EventStartDate", required = true)
    protected XMLGregorianCalendar eventStartDate;
    @XmlElement(name = "EventStartTime")
    protected XMLGregorianCalendar eventStartTime;
    @XmlElement(name = "EventEndDate")
    protected XMLGregorianCalendar eventEndDate;
    @XmlElement(name = "EventEndTime")
    protected XMLGregorianCalendar eventEndTime;
    @XmlElement(name = "EventDateQualifierCode")
    @XmlJavaTypeAdapter(StringAdapter.class)
    protected String eventDateQualifierCode;
    @XmlElement(name = "EventStatusText")
    protected String eventStatusText;
    @XmlElement(name = "RecurringEventIdentifier")
    protected String recurringEventIdentifier;
    @XmlElement(name = "Resource")
    protected List<ResourceDataType> resource;
    @XmlElement(name = "EventLocation")
    protected List<EventLocationDataType> eventLocation;
    @XmlElement(name = "EventAffiliate")
    protected List<EventAffiliateDataType> eventAffiliate;
    @XmlTransient
    protected String dbid;

    /**
     * Gets the value of the eventName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "EVT_NAME", length = 255)
    public String getEventName() {
        return eventName;
    }

    /**
     * Sets the value of the eventName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEventName(String value) {
        this.eventName = value;
    }

    @Transient
    public boolean isSetEventName() {
        return (this.eventName!= null);
    }

    /**
     * Gets the value of the eventTypeCode property.
     * 
     * @return
     *     possible object is
     *     {@link EventTypeCodeDataType }
     *     
     */
    @Basic
    @Column(name = "EVT_CODE", columnDefinition = "31", length = 31)
    public String getEventTypeCode() {
        return eventTypeCode;
    }

    /**
     * Sets the value of the eventTypeCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link EventTypeCodeDataType }
     *     
     */
    public void setEventTypeCode(String value) {
        this.eventTypeCode = value;
    }

    @Transient
    public boolean isSetEventTypeCode() {
        return (this.eventTypeCode!= null);
    }

    /**
     * Gets the value of the otherEventTypeText property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "OTHR_EVT_TYPE_TXT", length = 255)
    public String getOtherEventTypeText() {
        return otherEventTypeText;
    }

    /**
     * Sets the value of the otherEventTypeText property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setOtherEventTypeText(String value) {
        this.otherEventTypeText = value;
    }

    @Transient
    public boolean isSetOtherEventTypeText() {
        return (this.otherEventTypeText!= null);
    }

    /**
     * Gets the value of the eventDescriptionText property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "EVT_DESC_TXT", length = 255)
    public String getEventDescriptionText() {
        return eventDescriptionText;
    }

    /**
     * Sets the value of the eventDescriptionText property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEventDescriptionText(String value) {
        this.eventDescriptionText = value;
    }

    @Transient
    public boolean isSetEventDescriptionText() {
        return (this.eventDescriptionText!= null);
    }

    /**
     * Gets the value of the eventStartDate property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    @Transient
    public XMLGregorianCalendar getEventStartDate() {
        return eventStartDate;
    }

    /**
     * Sets the value of the eventStartDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setEventStartDate(XMLGregorianCalendar value) {
        this.eventStartDate = value;
    }

    @Transient
    public boolean isSetEventStartDate() {
        return (this.eventStartDate!= null);
    }

    /**
     * Gets the value of the eventStartTime property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    @Transient
    public XMLGregorianCalendar getEventStartTime() {
        return eventStartTime;
    }

    /**
     * Sets the value of the eventStartTime property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setEventStartTime(XMLGregorianCalendar value) {
        this.eventStartTime = value;
    }

    @Transient
    public boolean isSetEventStartTime() {
        return (this.eventStartTime!= null);
    }

    /**
     * Gets the value of the eventEndDate property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    @Transient
    public XMLGregorianCalendar getEventEndDate() {
        return eventEndDate;
    }

    /**
     * Sets the value of the eventEndDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setEventEndDate(XMLGregorianCalendar value) {
        this.eventEndDate = value;
    }

    @Transient
    public boolean isSetEventEndDate() {
        return (this.eventEndDate!= null);
    }

    /**
     * Gets the value of the eventEndTime property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    @Transient
    public XMLGregorianCalendar getEventEndTime() {
        return eventEndTime;
    }

    /**
     * Sets the value of the eventEndTime property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setEventEndTime(XMLGregorianCalendar value) {
        this.eventEndTime = value;
    }

    @Transient
    public boolean isSetEventEndTime() {
        return (this.eventEndTime!= null);
    }

    /**
     * Gets the value of the eventDateQualifierCode property.
     * 
     * @return
     *     possible object is
     *     {@link EventDateQualifierCodeDataType }
     *     
     */
    @Basic
    @Column(name = "EVT_DATE_QUAL_CODE", columnDefinition = "7", length = 7)
    public String getEventDateQualifierCode() {
        return eventDateQualifierCode;
    }

    /**
     * Sets the value of the eventDateQualifierCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link EventDateQualifierCodeDataType }
     *     
     */
    public void setEventDateQualifierCode(String value) {
        this.eventDateQualifierCode = value;
    }

    @Transient
    public boolean isSetEventDateQualifierCode() {
        return (this.eventDateQualifierCode!= null);
    }

    /**
     * Gets the value of the eventStatusText property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "EVT_STAT_TXT", length = 255)
    public String getEventStatusText() {
        return eventStatusText;
    }

    /**
     * Sets the value of the eventStatusText property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEventStatusText(String value) {
        this.eventStatusText = value;
    }

    @Transient
    public boolean isSetEventStatusText() {
        return (this.eventStatusText!= null);
    }

    /**
     * Gets the value of the recurringEventIdentifier property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "RECR_EVT_IDEN", length = 255)
    public String getRecurringEventIdentifier() {
        return recurringEventIdentifier;
    }

    /**
     * Sets the value of the recurringEventIdentifier property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setRecurringEventIdentifier(String value) {
        this.recurringEventIdentifier = value;
    }

    @Transient
    public boolean isSetRecurringEventIdentifier() {
        return (this.recurringEventIdentifier!= null);
    }

    /**
     * Gets the value of the resource property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the resource property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getResource().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ResourceDataType }
     * 
     * 
     */
    /*@OneToMany(targetEntity = ResourceDataType.class, cascade = {
        CascadeType.ALL
    })
    @JoinTable(name = "IC_RSRC", joinColumns = {
        @JoinColumn(name = "IC_EVT_ID", referencedColumnName = "IC_EVT_ID")
    }, inverseJoinColumns = {
        @JoinColumn(name = "IC_EVT_ID")
    })*/
    @OneToMany(targetEntity = ResourceDataType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "IC_EVT_ID")
    public List<ResourceDataType> getResource() {
        if (resource == null) {
            resource = new ArrayList<ResourceDataType>();
        }
        return this.resource;
    }

    /**
     * 
     * 
     */
    public void setResource(List<ResourceDataType> resource) {
        this.resource = resource;
    }

    @Transient
    public boolean isSetResource() {
        return ((this.resource!= null)&&(!this.resource.isEmpty()));
    }

    public void unsetResource() {
        this.resource = null;
    }

    /**
     * Gets the value of the eventLocation property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the eventLocation property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getEventLocation().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link EventLocationDataType }
     * 
     * 
     */
    /*@OneToMany(targetEntity = EventLocationDataType.class, cascade = {
        CascadeType.ALL
    })
    @JoinTable(name = "IC_EVT_LOC", joinColumns = {
        @JoinColumn(name = "IC_EVT_ID", referencedColumnName = "IC_EVT_ID")
    }, inverseJoinColumns = {
        @JoinColumn(name = "IC_EVT_ID")
    })*/
    @OneToMany(targetEntity = EventLocationDataType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "IC_EVT_ID")
    public List<EventLocationDataType> getEventLocation() {
        if (eventLocation == null) {
            eventLocation = new ArrayList<EventLocationDataType>();
        }
        return this.eventLocation;
    }

    /**
     * 
     * 
     */
    public void setEventLocation(List<EventLocationDataType> eventLocation) {
        this.eventLocation = eventLocation;
    }

    @Transient
    public boolean isSetEventLocation() {
        return ((this.eventLocation!= null)&&(!this.eventLocation.isEmpty()));
    }

    public void unsetEventLocation() {
        this.eventLocation = null;
    }

    /**
     * Gets the value of the eventAffiliate property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the eventAffiliate property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getEventAffiliate().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link EventAffiliateDataType }
     * 
     * 
     */
    /*@OneToMany(targetEntity = EventAffiliateDataType.class, cascade = {
        CascadeType.ALL
    })
    @JoinTable(name = "IC_EVT_AFFIL", joinColumns = {
        @JoinColumn(name = "IC_EVT_ID", referencedColumnName = "IC_EVT_ID")
    }, inverseJoinColumns = {
        @JoinColumn(name = "IC_EVT_ID")
    })*/
    @OneToMany(targetEntity = EventAffiliateDataType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "IC_EVT_ID")
    public List<EventAffiliateDataType> getEventAffiliate() {
        if (eventAffiliate == null) {
            eventAffiliate = new ArrayList<EventAffiliateDataType>();
        }
        return this.eventAffiliate;
    }

    /**
     * 
     * 
     */
    public void setEventAffiliate(List<EventAffiliateDataType> eventAffiliate) {
        this.eventAffiliate = eventAffiliate;
    }

    @Transient
    public boolean isSetEventAffiliate() {
        return ((this.eventAffiliate!= null)&&(!this.eventAffiliate.isEmpty()));
    }

    public void unsetEventAffiliate() {
        this.eventAffiliate = null;
    }

    /**
     * 
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Id
    @Column(name = "IC_EVT_ID")
    public String getDbid() {
        return dbid;
    }

    /**
     * 
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDbid(String value) {
        this.dbid = value;
    }

    @Basic
    @Column(name = "EVT_START_DATE")
    @Temporal(TemporalType.DATE)
    public Date getEventStartDateItem() {
        return XmlAdapterUtils.unmarshall(XMLGregorianCalendarAsDate.class, this.getEventStartDate());
    }

    public void setEventStartDateItem(Date target) {
        setEventStartDate(XmlAdapterUtils.marshall(XMLGregorianCalendarAsDate.class, target));
    }

    @Basic
    @Column(name = "EVT_START_TIME")
    @Temporal(TemporalType.TIME)
    public Date getEventStartTimeItem() {
        return XmlAdapterUtils.unmarshall(XMLGregorianCalendarAsTime.class, this.getEventStartTime());
    }

    public void setEventStartTimeItem(Date target) {
        setEventStartTime(XmlAdapterUtils.marshall(XMLGregorianCalendarAsTime.class, target));
    }

    @Basic
    @Column(name = "EVT_END_DATE")
    @Temporal(TemporalType.DATE)
    public Date getEventEndDateItem() {
        return XmlAdapterUtils.unmarshall(XMLGregorianCalendarAsDate.class, this.getEventEndDate());
    }

    public void setEventEndDateItem(Date target) {
        setEventEndDate(XmlAdapterUtils.marshall(XMLGregorianCalendarAsDate.class, target));
    }

    @Basic
    @Column(name = "EVT_END_TIME")
    @Temporal(TemporalType.TIME)
    public Date getEventEndTimeItem() {
        return XmlAdapterUtils.unmarshall(XMLGregorianCalendarAsTime.class, this.getEventEndTime());
    }

    public void setEventEndTimeItem(Date target) {
        setEventEndTime(XmlAdapterUtils.marshall(XMLGregorianCalendarAsTime.class, target));
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof EventDataType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final EventDataType that = ((EventDataType) object);
        {
            String lhsEventName;
            lhsEventName = this.getEventName();
            String rhsEventName;
            rhsEventName = that.getEventName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "eventName", lhsEventName), LocatorUtils.property(thatLocator, "eventName", rhsEventName), lhsEventName, rhsEventName)) {
                return false;
            }
        }
        {
            String lhsEventTypeCode;
            lhsEventTypeCode = this.getEventTypeCode();
            String rhsEventTypeCode;
            rhsEventTypeCode = that.getEventTypeCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "eventTypeCode", lhsEventTypeCode), LocatorUtils.property(thatLocator, "eventTypeCode", rhsEventTypeCode), lhsEventTypeCode, rhsEventTypeCode)) {
                return false;
            }
        }
        {
            String lhsOtherEventTypeText;
            lhsOtherEventTypeText = this.getOtherEventTypeText();
            String rhsOtherEventTypeText;
            rhsOtherEventTypeText = that.getOtherEventTypeText();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "otherEventTypeText", lhsOtherEventTypeText), LocatorUtils.property(thatLocator, "otherEventTypeText", rhsOtherEventTypeText), lhsOtherEventTypeText, rhsOtherEventTypeText)) {
                return false;
            }
        }
        {
            String lhsEventDescriptionText;
            lhsEventDescriptionText = this.getEventDescriptionText();
            String rhsEventDescriptionText;
            rhsEventDescriptionText = that.getEventDescriptionText();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "eventDescriptionText", lhsEventDescriptionText), LocatorUtils.property(thatLocator, "eventDescriptionText", rhsEventDescriptionText), lhsEventDescriptionText, rhsEventDescriptionText)) {
                return false;
            }
        }
        {
            XMLGregorianCalendar lhsEventStartDate;
            lhsEventStartDate = this.getEventStartDate();
            XMLGregorianCalendar rhsEventStartDate;
            rhsEventStartDate = that.getEventStartDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "eventStartDate", lhsEventStartDate), LocatorUtils.property(thatLocator, "eventStartDate", rhsEventStartDate), lhsEventStartDate, rhsEventStartDate)) {
                return false;
            }
        }
        {
            XMLGregorianCalendar lhsEventStartTime;
            lhsEventStartTime = this.getEventStartTime();
            XMLGregorianCalendar rhsEventStartTime;
            rhsEventStartTime = that.getEventStartTime();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "eventStartTime", lhsEventStartTime), LocatorUtils.property(thatLocator, "eventStartTime", rhsEventStartTime), lhsEventStartTime, rhsEventStartTime)) {
                return false;
            }
        }
        {
            XMLGregorianCalendar lhsEventEndDate;
            lhsEventEndDate = this.getEventEndDate();
            XMLGregorianCalendar rhsEventEndDate;
            rhsEventEndDate = that.getEventEndDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "eventEndDate", lhsEventEndDate), LocatorUtils.property(thatLocator, "eventEndDate", rhsEventEndDate), lhsEventEndDate, rhsEventEndDate)) {
                return false;
            }
        }
        {
            XMLGregorianCalendar lhsEventEndTime;
            lhsEventEndTime = this.getEventEndTime();
            XMLGregorianCalendar rhsEventEndTime;
            rhsEventEndTime = that.getEventEndTime();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "eventEndTime", lhsEventEndTime), LocatorUtils.property(thatLocator, "eventEndTime", rhsEventEndTime), lhsEventEndTime, rhsEventEndTime)) {
                return false;
            }
        }
        {
            String lhsEventDateQualifierCode;
            lhsEventDateQualifierCode = this.getEventDateQualifierCode();
            String rhsEventDateQualifierCode;
            rhsEventDateQualifierCode = that.getEventDateQualifierCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "eventDateQualifierCode", lhsEventDateQualifierCode), LocatorUtils.property(thatLocator, "eventDateQualifierCode", rhsEventDateQualifierCode), lhsEventDateQualifierCode, rhsEventDateQualifierCode)) {
                return false;
            }
        }
        {
            String lhsEventStatusText;
            lhsEventStatusText = this.getEventStatusText();
            String rhsEventStatusText;
            rhsEventStatusText = that.getEventStatusText();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "eventStatusText", lhsEventStatusText), LocatorUtils.property(thatLocator, "eventStatusText", rhsEventStatusText), lhsEventStatusText, rhsEventStatusText)) {
                return false;
            }
        }
        {
            String lhsRecurringEventIdentifier;
            lhsRecurringEventIdentifier = this.getRecurringEventIdentifier();
            String rhsRecurringEventIdentifier;
            rhsRecurringEventIdentifier = that.getRecurringEventIdentifier();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "recurringEventIdentifier", lhsRecurringEventIdentifier), LocatorUtils.property(thatLocator, "recurringEventIdentifier", rhsRecurringEventIdentifier), lhsRecurringEventIdentifier, rhsRecurringEventIdentifier)) {
                return false;
            }
        }
        {
            List<ResourceDataType> lhsResource;
            lhsResource = (this.isSetResource()?this.getResource():null);
            List<ResourceDataType> rhsResource;
            rhsResource = (that.isSetResource()?that.getResource():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "resource", lhsResource), LocatorUtils.property(thatLocator, "resource", rhsResource), lhsResource, rhsResource)) {
                return false;
            }
        }
        {
            List<EventLocationDataType> lhsEventLocation;
            lhsEventLocation = (this.isSetEventLocation()?this.getEventLocation():null);
            List<EventLocationDataType> rhsEventLocation;
            rhsEventLocation = (that.isSetEventLocation()?that.getEventLocation():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "eventLocation", lhsEventLocation), LocatorUtils.property(thatLocator, "eventLocation", rhsEventLocation), lhsEventLocation, rhsEventLocation)) {
                return false;
            }
        }
        {
            List<EventAffiliateDataType> lhsEventAffiliate;
            lhsEventAffiliate = (this.isSetEventAffiliate()?this.getEventAffiliate():null);
            List<EventAffiliateDataType> rhsEventAffiliate;
            rhsEventAffiliate = (that.isSetEventAffiliate()?that.getEventAffiliate():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "eventAffiliate", lhsEventAffiliate), LocatorUtils.property(thatLocator, "eventAffiliate", rhsEventAffiliate), lhsEventAffiliate, rhsEventAffiliate)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            String theEventName;
            theEventName = this.getEventName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "eventName", theEventName), currentHashCode, theEventName);
        }
        {
            String theEventTypeCode;
            theEventTypeCode = this.getEventTypeCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "eventTypeCode", theEventTypeCode), currentHashCode, theEventTypeCode);
        }
        {
            String theOtherEventTypeText;
            theOtherEventTypeText = this.getOtherEventTypeText();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "otherEventTypeText", theOtherEventTypeText), currentHashCode, theOtherEventTypeText);
        }
        {
            String theEventDescriptionText;
            theEventDescriptionText = this.getEventDescriptionText();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "eventDescriptionText", theEventDescriptionText), currentHashCode, theEventDescriptionText);
        }
        {
            XMLGregorianCalendar theEventStartDate;
            theEventStartDate = this.getEventStartDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "eventStartDate", theEventStartDate), currentHashCode, theEventStartDate);
        }
        {
            XMLGregorianCalendar theEventStartTime;
            theEventStartTime = this.getEventStartTime();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "eventStartTime", theEventStartTime), currentHashCode, theEventStartTime);
        }
        {
            XMLGregorianCalendar theEventEndDate;
            theEventEndDate = this.getEventEndDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "eventEndDate", theEventEndDate), currentHashCode, theEventEndDate);
        }
        {
            XMLGregorianCalendar theEventEndTime;
            theEventEndTime = this.getEventEndTime();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "eventEndTime", theEventEndTime), currentHashCode, theEventEndTime);
        }
        {
            String theEventDateQualifierCode;
            theEventDateQualifierCode = this.getEventDateQualifierCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "eventDateQualifierCode", theEventDateQualifierCode), currentHashCode, theEventDateQualifierCode);
        }
        {
            String theEventStatusText;
            theEventStatusText = this.getEventStatusText();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "eventStatusText", theEventStatusText), currentHashCode, theEventStatusText);
        }
        {
            String theRecurringEventIdentifier;
            theRecurringEventIdentifier = this.getRecurringEventIdentifier();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "recurringEventIdentifier", theRecurringEventIdentifier), currentHashCode, theRecurringEventIdentifier);
        }
        {
            List<ResourceDataType> theResource;
            theResource = (this.isSetResource()?this.getResource():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "resource", theResource), currentHashCode, theResource);
        }
        {
            List<EventLocationDataType> theEventLocation;
            theEventLocation = (this.isSetEventLocation()?this.getEventLocation():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "eventLocation", theEventLocation), currentHashCode, theEventLocation);
        }
        {
            List<EventAffiliateDataType> theEventAffiliate;
            theEventAffiliate = (this.isSetEventAffiliate()?this.getEventAffiliate():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "eventAffiliate", theEventAffiliate), currentHashCode, theEventAffiliate);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
