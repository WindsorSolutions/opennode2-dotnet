//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.08.26 at 02:36:56 PM PDT 
//


package com.windsor.node.plugin.ic.fixeddomain;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlTransient;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;
import com.windsor.node.plugin.common.xml.bind.annotation.adapters.StringAdapter;


/**
 * <p>Java class for EngineeringControlDataType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="EngineeringControlDataType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/IC/1}EngineeringControlName"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/IC/1}EngineeringControlDescriptionText" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/IC/1}EngineeringControlTypeCode" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/IC/1}OtherEngineeringControlTypeText" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/IC/1}EngineeringControlModeCode" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/IC/1}EngineeringControlLocation" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "EngineeringControlDataType", propOrder = {
    "engineeringControlName",
    "engineeringControlDescriptionText",
    "engineeringControlTypeCode",
    "otherEngineeringControlTypeText",
    "engineeringControlModeCode",
    "engineeringControlLocation"
})
@Entity(name = "EngineeringControlDataType")
@Table(name = "IC_ENGR_CTRL")
@Inheritance(strategy = InheritanceType.JOINED)
public class EngineeringControlDataType
    implements Serializable, Equals, HashCode
{

    private final static long serialVersionUID = 1L;
    @XmlElement(name = "EngineeringControlName", required = true)
    protected String engineeringControlName;
    @XmlElement(name = "EngineeringControlDescriptionText")
    protected String engineeringControlDescriptionText;
    @XmlElement(name = "EngineeringControlTypeCode")
    @XmlJavaTypeAdapter(StringAdapter.class)
    protected String engineeringControlTypeCode;
    @XmlElement(name = "OtherEngineeringControlTypeText")
    protected String otherEngineeringControlTypeText;
    @XmlElement(name = "EngineeringControlModeCode")
    @XmlJavaTypeAdapter(StringAdapter.class)
    protected String engineeringControlModeCode;
    @XmlElement(name = "EngineeringControlLocation")
    protected List<EngineeringControlLocationDataType> engineeringControlLocation;
    @XmlTransient
    protected String dbid;

    /**
     * Gets the value of the engineeringControlName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "ENGR_CTRL_NAME", length = 255)
    public String getEngineeringControlName() {
        return engineeringControlName;
    }

    /**
     * Sets the value of the engineeringControlName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEngineeringControlName(String value) {
        this.engineeringControlName = value;
    }

    @Transient
    public boolean isSetEngineeringControlName() {
        return (this.engineeringControlName!= null);
    }

    /**
     * Gets the value of the engineeringControlDescriptionText property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "ENGR_CTRL_DESC_TXT", length = 255)
    public String getEngineeringControlDescriptionText() {
        return engineeringControlDescriptionText;
    }

    /**
     * Sets the value of the engineeringControlDescriptionText property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEngineeringControlDescriptionText(String value) {
        this.engineeringControlDescriptionText = value;
    }

    @Transient
    public boolean isSetEngineeringControlDescriptionText() {
        return (this.engineeringControlDescriptionText!= null);
    }

    /**
     * Gets the value of the engineeringControlTypeCode property.
     * 
     * @return
     *     possible object is
     *     {@link EngineeringControlTypeCodeDataType }
     *     
     */
    @Basic
    @Column(name = "ENGR_CTRL_CODE", columnDefinition = "27", length = 27)
    public String getEngineeringControlTypeCode() {
        return engineeringControlTypeCode;
    }

    /**
     * Sets the value of the engineeringControlTypeCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link EngineeringControlTypeCodeDataType }
     *     
     */
    public void setEngineeringControlTypeCode(String value) {
        this.engineeringControlTypeCode = value;
    }

    @Transient
    public boolean isSetEngineeringControlTypeCode() {
        return (this.engineeringControlTypeCode!= null);
    }

    /**
     * Gets the value of the otherEngineeringControlTypeText property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "OTHR_ENGR_CTRL_TYPE_TXT", length = 255)
    public String getOtherEngineeringControlTypeText() {
        return otherEngineeringControlTypeText;
    }

    /**
     * Sets the value of the otherEngineeringControlTypeText property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setOtherEngineeringControlTypeText(String value) {
        this.otherEngineeringControlTypeText = value;
    }

    @Transient
    public boolean isSetOtherEngineeringControlTypeText() {
        return (this.otherEngineeringControlTypeText!= null);
    }

    /**
     * Gets the value of the engineeringControlModeCode property.
     * 
     * @return
     *     possible object is
     *     {@link EngineeringControlModeCodeDataType }
     *     
     */
    @Basic
    @Column(name = "ENGR_CTRL_MODE_CODE", length = 255)
    public String getEngineeringControlModeCode() {
        return engineeringControlModeCode;
    }

    /**
     * Sets the value of the engineeringControlModeCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link EngineeringControlModeCodeDataType }
     *     
     */
    public void setEngineeringControlModeCode(String value) {
        this.engineeringControlModeCode = value;
    }

    @Transient
    public boolean isSetEngineeringControlModeCode() {
        return (this.engineeringControlModeCode!= null);
    }

    /**
     * Gets the value of the engineeringControlLocation property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the engineeringControlLocation property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getEngineeringControlLocation().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link EngineeringControlLocationDataType }
     * 
     * 
     */
    /*@OneToMany(targetEntity = EngineeringControlLocationDataType.class, cascade = {
        CascadeType.ALL
    })
    @JoinTable(name = "IC_ENGR_CTRL_LOC", joinColumns = {
        @JoinColumn(name = "IC_ENGR_CTRL_ID", referencedColumnName = "IC_ENGR_CTRL_ID")
    }, inverseJoinColumns = {
        @JoinColumn(name = "IC_ENGR_CTRL_ID")
    })*/
    @OneToMany(targetEntity = EngineeringControlLocationDataType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "IC_ENGR_CTRL_ID")
    public List<EngineeringControlLocationDataType> getEngineeringControlLocation() {
        if (engineeringControlLocation == null) {
            engineeringControlLocation = new ArrayList<EngineeringControlLocationDataType>();
        }
        return this.engineeringControlLocation;
    }

    /**
     * 
     * 
     */
    public void setEngineeringControlLocation(List<EngineeringControlLocationDataType> engineeringControlLocation) {
        this.engineeringControlLocation = engineeringControlLocation;
    }

    @Transient
    public boolean isSetEngineeringControlLocation() {
        return ((this.engineeringControlLocation!= null)&&(!this.engineeringControlLocation.isEmpty()));
    }

    public void unsetEngineeringControlLocation() {
        this.engineeringControlLocation = null;
    }

    /**
     * 
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Id
    @Column(name = "IC_ENGR_CTRL_ID")
    public String getDbid() {
        return dbid;
    }

    /**
     * 
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDbid(String value) {
        this.dbid = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof EngineeringControlDataType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final EngineeringControlDataType that = ((EngineeringControlDataType) object);
        {
            String lhsEngineeringControlName;
            lhsEngineeringControlName = this.getEngineeringControlName();
            String rhsEngineeringControlName;
            rhsEngineeringControlName = that.getEngineeringControlName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "engineeringControlName", lhsEngineeringControlName), LocatorUtils.property(thatLocator, "engineeringControlName", rhsEngineeringControlName), lhsEngineeringControlName, rhsEngineeringControlName)) {
                return false;
            }
        }
        {
            String lhsEngineeringControlDescriptionText;
            lhsEngineeringControlDescriptionText = this.getEngineeringControlDescriptionText();
            String rhsEngineeringControlDescriptionText;
            rhsEngineeringControlDescriptionText = that.getEngineeringControlDescriptionText();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "engineeringControlDescriptionText", lhsEngineeringControlDescriptionText), LocatorUtils.property(thatLocator, "engineeringControlDescriptionText", rhsEngineeringControlDescriptionText), lhsEngineeringControlDescriptionText, rhsEngineeringControlDescriptionText)) {
                return false;
            }
        }
        {
            String lhsEngineeringControlTypeCode;
            lhsEngineeringControlTypeCode = this.getEngineeringControlTypeCode();
            String rhsEngineeringControlTypeCode;
            rhsEngineeringControlTypeCode = that.getEngineeringControlTypeCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "engineeringControlTypeCode", lhsEngineeringControlTypeCode), LocatorUtils.property(thatLocator, "engineeringControlTypeCode", rhsEngineeringControlTypeCode), lhsEngineeringControlTypeCode, rhsEngineeringControlTypeCode)) {
                return false;
            }
        }
        {
            String lhsOtherEngineeringControlTypeText;
            lhsOtherEngineeringControlTypeText = this.getOtherEngineeringControlTypeText();
            String rhsOtherEngineeringControlTypeText;
            rhsOtherEngineeringControlTypeText = that.getOtherEngineeringControlTypeText();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "otherEngineeringControlTypeText", lhsOtherEngineeringControlTypeText), LocatorUtils.property(thatLocator, "otherEngineeringControlTypeText", rhsOtherEngineeringControlTypeText), lhsOtherEngineeringControlTypeText, rhsOtherEngineeringControlTypeText)) {
                return false;
            }
        }
        {
            String lhsEngineeringControlModeCode;
            lhsEngineeringControlModeCode = this.getEngineeringControlModeCode();
            String rhsEngineeringControlModeCode;
            rhsEngineeringControlModeCode = that.getEngineeringControlModeCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "engineeringControlModeCode", lhsEngineeringControlModeCode), LocatorUtils.property(thatLocator, "engineeringControlModeCode", rhsEngineeringControlModeCode), lhsEngineeringControlModeCode, rhsEngineeringControlModeCode)) {
                return false;
            }
        }
        {
            List<EngineeringControlLocationDataType> lhsEngineeringControlLocation;
            lhsEngineeringControlLocation = (this.isSetEngineeringControlLocation()?this.getEngineeringControlLocation():null);
            List<EngineeringControlLocationDataType> rhsEngineeringControlLocation;
            rhsEngineeringControlLocation = (that.isSetEngineeringControlLocation()?that.getEngineeringControlLocation():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "engineeringControlLocation", lhsEngineeringControlLocation), LocatorUtils.property(thatLocator, "engineeringControlLocation", rhsEngineeringControlLocation), lhsEngineeringControlLocation, rhsEngineeringControlLocation)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            String theEngineeringControlName;
            theEngineeringControlName = this.getEngineeringControlName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "engineeringControlName", theEngineeringControlName), currentHashCode, theEngineeringControlName);
        }
        {
            String theEngineeringControlDescriptionText;
            theEngineeringControlDescriptionText = this.getEngineeringControlDescriptionText();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "engineeringControlDescriptionText", theEngineeringControlDescriptionText), currentHashCode, theEngineeringControlDescriptionText);
        }
        {
            String theEngineeringControlTypeCode;
            theEngineeringControlTypeCode = this.getEngineeringControlTypeCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "engineeringControlTypeCode", theEngineeringControlTypeCode), currentHashCode, theEngineeringControlTypeCode);
        }
        {
            String theOtherEngineeringControlTypeText;
            theOtherEngineeringControlTypeText = this.getOtherEngineeringControlTypeText();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "otherEngineeringControlTypeText", theOtherEngineeringControlTypeText), currentHashCode, theOtherEngineeringControlTypeText);
        }
        {
            String theEngineeringControlModeCode;
            theEngineeringControlModeCode = this.getEngineeringControlModeCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "engineeringControlModeCode", theEngineeringControlModeCode), currentHashCode, theEngineeringControlModeCode);
        }
        {
            List<EngineeringControlLocationDataType> theEngineeringControlLocation;
            theEngineeringControlLocation = (this.isSetEngineeringControlLocation()?this.getEngineeringControlLocation():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "engineeringControlLocation", theEngineeringControlLocation), currentHashCode, theEngineeringControlLocation);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
