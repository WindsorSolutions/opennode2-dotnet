//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.08.26 at 02:36:56 PM PDT 
//


package com.windsor.node.plugin.ic.fixeddomain;

import java.io.Serializable;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Embeddable;
import javax.persistence.Embedded;
import javax.persistence.Transient;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for ReferenceMethodDataType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="ReferenceMethodDataType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/IC/1}MethodIdentifierCode" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/IC/1}MethodIdentifierCodeListIdentifier" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/IC/1}MethodName" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/IC/1}MethodDescriptionText" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/IC/1}MethodDeviationsText" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ReferenceMethodDataType", propOrder = {
    "methodIdentifierCode",
    "methodIdentifierCodeListIdentifier",
    "methodName",
    "methodDescriptionText",
    "methodDeviationsText"
})
@Embeddable
public class ReferenceMethodDataType
    implements Serializable, Equals, HashCode
{

    private final static long serialVersionUID = 1L;
    @XmlElement(name = "MethodIdentifierCode")
    protected String methodIdentifierCode;
    @XmlElement(name = "MethodIdentifierCodeListIdentifier")
    protected MethodIdentifierCodeListIdentifierDataType methodIdentifierCodeListIdentifier;
    @XmlElement(name = "MethodName")
    protected String methodName;
    @XmlElement(name = "MethodDescriptionText")
    protected String methodDescriptionText;
    @XmlElement(name = "MethodDeviationsText")
    protected String methodDeviationsText;

    /**
     * Gets the value of the methodIdentifierCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "METHOD_IDEN_CODE", length = 255)
    public String getMethodIdentifierCode() {
        return methodIdentifierCode;
    }

    /**
     * Sets the value of the methodIdentifierCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setMethodIdentifierCode(String value) {
        this.methodIdentifierCode = value;
    }

    @Transient
    public boolean isSetMethodIdentifierCode() {
        return (this.methodIdentifierCode!= null);
    }

    /**
     * Gets the value of the methodIdentifierCodeListIdentifier property.
     * 
     * @return
     *     possible object is
     *     {@link MethodIdentifierCodeListIdentifierDataType }
     *     
     */
    @Embedded
    @AttributeOverrides({
        @AttributeOverride(name = "value", column = @Column(name = "VALUE", length = 255)),
        @AttributeOverride(name = "codeListVersionIdentifier", column = @Column(name = "CODE_LST_IDEN", length = 255)),
        @AttributeOverride(name = "codeListVersionAgencyIdentifier", column = @Column(name = "CODE_LST_AGENCY_IDEN", length = 255))
    })
    public MethodIdentifierCodeListIdentifierDataType getMethodIdentifierCodeListIdentifier() {
        return methodIdentifierCodeListIdentifier;
    }

    /**
     * Sets the value of the methodIdentifierCodeListIdentifier property.
     * 
     * @param value
     *     allowed object is
     *     {@link MethodIdentifierCodeListIdentifierDataType }
     *     
     */
    public void setMethodIdentifierCodeListIdentifier(MethodIdentifierCodeListIdentifierDataType value) {
        this.methodIdentifierCodeListIdentifier = value;
    }

    @Transient
    public boolean isSetMethodIdentifierCodeListIdentifier() {
        return (this.methodIdentifierCodeListIdentifier!= null);
    }

    /**
     * Gets the value of the methodName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "METHOD_NAME", length = 255)
    public String getMethodName() {
        return methodName;
    }

    /**
     * Sets the value of the methodName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setMethodName(String value) {
        this.methodName = value;
    }

    @Transient
    public boolean isSetMethodName() {
        return (this.methodName!= null);
    }

    /**
     * Gets the value of the methodDescriptionText property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "METHOD_DESC_TXT", length = 255)
    public String getMethodDescriptionText() {
        return methodDescriptionText;
    }

    /**
     * Sets the value of the methodDescriptionText property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setMethodDescriptionText(String value) {
        this.methodDescriptionText = value;
    }

    @Transient
    public boolean isSetMethodDescriptionText() {
        return (this.methodDescriptionText!= null);
    }

    /**
     * Gets the value of the methodDeviationsText property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "METHOD_DEVIATIONS_TXT", length = 255)
    public String getMethodDeviationsText() {
        return methodDeviationsText;
    }

    /**
     * Sets the value of the methodDeviationsText property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setMethodDeviationsText(String value) {
        this.methodDeviationsText = value;
    }

    @Transient
    public boolean isSetMethodDeviationsText() {
        return (this.methodDeviationsText!= null);
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof ReferenceMethodDataType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final ReferenceMethodDataType that = ((ReferenceMethodDataType) object);
        {
            String lhsMethodIdentifierCode;
            lhsMethodIdentifierCode = this.getMethodIdentifierCode();
            String rhsMethodIdentifierCode;
            rhsMethodIdentifierCode = that.getMethodIdentifierCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "methodIdentifierCode", lhsMethodIdentifierCode), LocatorUtils.property(thatLocator, "methodIdentifierCode", rhsMethodIdentifierCode), lhsMethodIdentifierCode, rhsMethodIdentifierCode)) {
                return false;
            }
        }
        {
            MethodIdentifierCodeListIdentifierDataType lhsMethodIdentifierCodeListIdentifier;
            lhsMethodIdentifierCodeListIdentifier = this.getMethodIdentifierCodeListIdentifier();
            MethodIdentifierCodeListIdentifierDataType rhsMethodIdentifierCodeListIdentifier;
            rhsMethodIdentifierCodeListIdentifier = that.getMethodIdentifierCodeListIdentifier();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "methodIdentifierCodeListIdentifier", lhsMethodIdentifierCodeListIdentifier), LocatorUtils.property(thatLocator, "methodIdentifierCodeListIdentifier", rhsMethodIdentifierCodeListIdentifier), lhsMethodIdentifierCodeListIdentifier, rhsMethodIdentifierCodeListIdentifier)) {
                return false;
            }
        }
        {
            String lhsMethodName;
            lhsMethodName = this.getMethodName();
            String rhsMethodName;
            rhsMethodName = that.getMethodName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "methodName", lhsMethodName), LocatorUtils.property(thatLocator, "methodName", rhsMethodName), lhsMethodName, rhsMethodName)) {
                return false;
            }
        }
        {
            String lhsMethodDescriptionText;
            lhsMethodDescriptionText = this.getMethodDescriptionText();
            String rhsMethodDescriptionText;
            rhsMethodDescriptionText = that.getMethodDescriptionText();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "methodDescriptionText", lhsMethodDescriptionText), LocatorUtils.property(thatLocator, "methodDescriptionText", rhsMethodDescriptionText), lhsMethodDescriptionText, rhsMethodDescriptionText)) {
                return false;
            }
        }
        {
            String lhsMethodDeviationsText;
            lhsMethodDeviationsText = this.getMethodDeviationsText();
            String rhsMethodDeviationsText;
            rhsMethodDeviationsText = that.getMethodDeviationsText();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "methodDeviationsText", lhsMethodDeviationsText), LocatorUtils.property(thatLocator, "methodDeviationsText", rhsMethodDeviationsText), lhsMethodDeviationsText, rhsMethodDeviationsText)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            String theMethodIdentifierCode;
            theMethodIdentifierCode = this.getMethodIdentifierCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "methodIdentifierCode", theMethodIdentifierCode), currentHashCode, theMethodIdentifierCode);
        }
        {
            MethodIdentifierCodeListIdentifierDataType theMethodIdentifierCodeListIdentifier;
            theMethodIdentifierCodeListIdentifier = this.getMethodIdentifierCodeListIdentifier();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "methodIdentifierCodeListIdentifier", theMethodIdentifierCodeListIdentifier), currentHashCode, theMethodIdentifierCodeListIdentifier);
        }
        {
            String theMethodName;
            theMethodName = this.getMethodName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "methodName", theMethodName), currentHashCode, theMethodName);
        }
        {
            String theMethodDescriptionText;
            theMethodDescriptionText = this.getMethodDescriptionText();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "methodDescriptionText", theMethodDescriptionText), currentHashCode, theMethodDescriptionText);
        }
        {
            String theMethodDeviationsText;
            theMethodDeviationsText = this.getMethodDeviationsText();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "methodDeviationsText", theMethodDeviationsText), currentHashCode, theMethodDeviationsText);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
