//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.08.26 at 02:36:56 PM PDT 
//


package com.windsor.node.plugin.ic.fixeddomain;

import java.io.Serializable;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlTransient;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for InstitutionalControlsDocumentDataType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="InstitutionalControlsDocumentDataType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/IC/1}InstrumentList"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/IC/1}ICLocationList"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/IC/1}AffiliateList" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "InstitutionalControlsDocumentDataType", propOrder = {
    "instrumentList",
    "icLocationList",
    "affiliateList"
})
@Entity(name = "InstitutionalControlsDocumentDataType")
@Table(name = "IC_INSTL_CTRLS_DOC")
@Inheritance(strategy = InheritanceType.JOINED)
public class InstitutionalControlsDocumentDataType
    implements Serializable, Equals, HashCode
{

    private final static long serialVersionUID = 1L;
    @XmlElement(name = "InstrumentList", required = true)
    protected InstrumentListDataType instrumentList;
    @XmlElement(name = "ICLocationList", required = true)
    protected ICLocationListDataType icLocationList;
    @XmlElement(name = "AffiliateList")
    protected AffiliateListDataType affiliateList;
    @XmlTransient
    protected String dbid;

    /**
     * Gets the value of the instrumentList property.
     * 
     * @return
     *     possible object is
     *     {@link InstrumentListDataType }
     *     
     */
    @Transient
    public InstrumentListDataType getInstrumentList() {
        return instrumentList;
    }

    /**
     * Sets the value of the instrumentList property.
     * 
     * @param value
     *     allowed object is
     *     {@link InstrumentListDataType }
     *     
     */
    public void setInstrumentList(InstrumentListDataType value) {
        this.instrumentList = value;
    }

    @Transient
    public boolean isSetInstrumentList() {
        return (this.instrumentList!= null);
    }

    /**
     * Gets the value of the icLocationList property.
     * 
     * @return
     *     possible object is
     *     {@link ICLocationListDataType }
     *     
     */
    @Transient
    public ICLocationListDataType getICLocationList() {
        return icLocationList;
    }

    /**
     * Sets the value of the icLocationList property.
     * 
     * @param value
     *     allowed object is
     *     {@link ICLocationListDataType }
     *     
     */
    public void setICLocationList(ICLocationListDataType value) {
        this.icLocationList = value;
    }

    @Transient
    public boolean isSetICLocationList() {
        return (this.icLocationList!= null);
    }

    /**
     * Gets the value of the affiliateList property.
     * 
     * @return
     *     possible object is
     *     {@link AffiliateListDataType }
     *     
     */
    @Transient
    public AffiliateListDataType getAffiliateList() {
        return affiliateList;
    }

    /**
     * Sets the value of the affiliateList property.
     * 
     * @param value
     *     allowed object is
     *     {@link AffiliateListDataType }
     *     
     */
    public void setAffiliateList(AffiliateListDataType value) {
        this.affiliateList = value;
    }

    @Transient
    public boolean isSetAffiliateList() {
        return (this.affiliateList!= null);
    }

    /**
     * 
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Id
    @Column(name = "IC_INSTL_CTRLS_DOC_ID")
    public String getDbid() {
        return dbid;
    }

    /**
     * 
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDbid(String value) {
        this.dbid = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof InstitutionalControlsDocumentDataType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final InstitutionalControlsDocumentDataType that = ((InstitutionalControlsDocumentDataType) object);
        {
            InstrumentListDataType lhsInstrumentList;
            lhsInstrumentList = this.getInstrumentList();
            InstrumentListDataType rhsInstrumentList;
            rhsInstrumentList = that.getInstrumentList();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "instrumentList", lhsInstrumentList), LocatorUtils.property(thatLocator, "instrumentList", rhsInstrumentList), lhsInstrumentList, rhsInstrumentList)) {
                return false;
            }
        }
        {
            ICLocationListDataType lhsICLocationList;
            lhsICLocationList = this.getICLocationList();
            ICLocationListDataType rhsICLocationList;
            rhsICLocationList = that.getICLocationList();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "icLocationList", lhsICLocationList), LocatorUtils.property(thatLocator, "icLocationList", rhsICLocationList), lhsICLocationList, rhsICLocationList)) {
                return false;
            }
        }
        {
            AffiliateListDataType lhsAffiliateList;
            lhsAffiliateList = this.getAffiliateList();
            AffiliateListDataType rhsAffiliateList;
            rhsAffiliateList = that.getAffiliateList();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "affiliateList", lhsAffiliateList), LocatorUtils.property(thatLocator, "affiliateList", rhsAffiliateList), lhsAffiliateList, rhsAffiliateList)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            InstrumentListDataType theInstrumentList;
            theInstrumentList = this.getInstrumentList();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "instrumentList", theInstrumentList), currentHashCode, theInstrumentList);
        }
        {
            ICLocationListDataType theICLocationList;
            theICLocationList = this.getICLocationList();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "icLocationList", theICLocationList), currentHashCode, theICLocationList);
        }
        {
            AffiliateListDataType theAffiliateList;
            theAffiliateList = this.getAffiliateList();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "affiliateList", theAffiliateList), currentHashCode, theAffiliateList);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
