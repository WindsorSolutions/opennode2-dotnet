//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.5-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.04.10 at 10:57:25 AM PDT 
//


package com.windsor.node.plugin.attains.fixeddomain;

import java.io.Serializable;
import java.math.BigDecimal;
import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlTransient;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import com.windsor.node.plugin.common.xml.bind.annotation.adapters.StringAdapter;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for AssessmentWaterDetailsDataType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="AssessmentWaterDetailsDataType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/OWIR/ATT/2}WaterType"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/OWIR/ATT/2}WaterSize"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "AssessmentWaterDetailsDataType", propOrder = {
    "waterType",
    "waterSize"
})
@Entity(name = "AssessmentWaterDetailsDataType")
@Table(name = "OWIR_ASMT_WATER_DTLS")
@Inheritance(strategy = InheritanceType.JOINED)
public class AssessmentWaterDetailsDataType
    implements Serializable, Equals, HashCode
{

    private final static long serialVersionUID = 1L;
    @XmlElement(name = "WaterType", required = true)
    @XmlJavaTypeAdapter(StringAdapter.class)
    protected String waterType;
    @XmlElement(name = "WaterSize", required = true)
    protected BigDecimal waterSize;
    @XmlTransient
    protected String dbid;

    /**
     * Gets the value of the waterType property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "WATER_TYPE", columnDefinition = "19", length = 19)
    public String getWaterType() {
        return waterType;
    }

    /**
     * Sets the value of the waterType property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setWaterType(String value) {
        this.waterType = value;
    }

    @Transient
    public boolean isSetWaterType() {
        return (this.waterType!= null);
    }

    /**
     * Gets the value of the waterSize property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    @Basic
    @Column(name = "WATER_SIZE", precision = 20, scale = 10)
    public BigDecimal getWaterSize() {
        return waterSize;
    }

    /**
     * Sets the value of the waterSize property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setWaterSize(BigDecimal value) {
        this.waterSize = value;
    }

    @Transient
    public boolean isSetWaterSize() {
        return (this.waterSize!= null);
    }

    /**
     * 
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Id
    @Column(name = "ASMT_WATER_DTLS_ID")
    public String getDbid() {
        return dbid;
    }

    /**
     * 
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDbid(String value) {
        this.dbid = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof AssessmentWaterDetailsDataType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final AssessmentWaterDetailsDataType that = ((AssessmentWaterDetailsDataType) object);
        {
            String lhsWaterType;
            lhsWaterType = this.getWaterType();
            String rhsWaterType;
            rhsWaterType = that.getWaterType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "waterType", lhsWaterType), LocatorUtils.property(thatLocator, "waterType", rhsWaterType), lhsWaterType, rhsWaterType)) {
                return false;
            }
        }
        {
            BigDecimal lhsWaterSize;
            lhsWaterSize = this.getWaterSize();
            BigDecimal rhsWaterSize;
            rhsWaterSize = that.getWaterSize();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "waterSize", lhsWaterSize), LocatorUtils.property(thatLocator, "waterSize", rhsWaterSize), lhsWaterSize, rhsWaterSize)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            String theWaterType;
            theWaterType = this.getWaterType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "waterType", theWaterType), currentHashCode, theWaterType);
        }
        {
            BigDecimal theWaterSize;
            theWaterSize = this.getWaterSize();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "waterSize", theWaterSize), currentHashCode, theWaterSize);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
