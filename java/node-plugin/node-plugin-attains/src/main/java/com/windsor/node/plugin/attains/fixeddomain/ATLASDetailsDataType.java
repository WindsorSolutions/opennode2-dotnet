//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.5-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.04.09 at 07:20:00 AM PDT 
//


package com.windsor.node.plugin.attains.fixeddomain;

import java.io.Serializable;
import java.math.BigDecimal;
import java.math.BigInteger;
import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlTransient;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for ATLASDetailsDataType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="ATLASDetailsDataType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/OWIR/ATT/2}TopicID"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/OWIR/ATT/2}TopicOwner"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/OWIR/ATT/2}TopicSize" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/OWIR/ATT/2}TopicScale" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/OWIR/ATT/2}TopicSource" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/OWIR/ATT/2}TopicCount" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/OWIR/ATT/2}TopicName" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/OWIR/ATT/2}TopicGroup" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/OWIR/ATT/2}TopicSizeUnit" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/OWIR/ATT/2}TopicMajorFlag" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ATLASDetailsDataType", propOrder = {
    "topicID",
    "topicOwner",
    "topicSize",
    "topicScale",
    "topicSource",
    "topicCount",
    "topicName",
    "topicGroup",
    "topicSizeUnit",
    "topicMajorFlag"
})
@Entity(name = "ATLASDetailsDataType")
@Table(name = "OWIR_ATLAS_DTLS")
@Inheritance(strategy = InheritanceType.JOINED)
public class ATLASDetailsDataType
    implements Serializable, Equals, HashCode
{

    private final static long serialVersionUID = 1L;
    @XmlElement(name = "TopicID", required = true)
    protected BigInteger topicID;
    @XmlElement(name = "TopicOwner", required = true)
    protected String topicOwner;
    @XmlElement(name = "TopicSize")
    protected BigDecimal topicSize;
    @XmlElement(name = "TopicScale")
    protected BigInteger topicScale;
    @XmlElement(name = "TopicSource")
    protected String topicSource;
    @XmlElement(name = "TopicCount")
    protected BigInteger topicCount;
    @XmlElement(name = "TopicName")
    protected String topicName;
    @XmlElement(name = "TopicGroup")
    protected String topicGroup;
    @XmlElement(name = "TopicSizeUnit")
    protected String topicSizeUnit;
    @XmlElement(name = "TopicMajorFlag")
    protected BigInteger topicMajorFlag;
    @XmlTransient
    protected String dbid;

    /**
     * Gets the value of the topicID property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    @Basic
    @Column(name = "TOPIC_ID", precision = 20, scale = 0)
    public BigInteger getTopicID() {
        return topicID;
    }

    /**
     * Sets the value of the topicID property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setTopicID(BigInteger value) {
        this.topicID = value;
    }

    @Transient
    public boolean isSetTopicID() {
        return (this.topicID!= null);
    }

    /**
     * Gets the value of the topicOwner property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "TOPIC_OWNER")
    public String getTopicOwner() {
        return topicOwner;
    }

    /**
     * Sets the value of the topicOwner property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTopicOwner(String value) {
        this.topicOwner = value;
    }

    @Transient
    public boolean isSetTopicOwner() {
        return (this.topicOwner!= null);
    }

    /**
     * Gets the value of the topicSize property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    @Basic
    @Column(name = "TOPIC_SIZE", precision = 20, scale = 10)
    public BigDecimal getTopicSize() {
        return topicSize;
    }

    /**
     * Sets the value of the topicSize property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setTopicSize(BigDecimal value) {
        this.topicSize = value;
    }

    @Transient
    public boolean isSetTopicSize() {
        return (this.topicSize!= null);
    }

    /**
     * Gets the value of the topicScale property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    @Basic
    @Column(name = "TOPIC_SCALE", precision = 20, scale = 0)
    public BigInteger getTopicScale() {
        return topicScale;
    }

    /**
     * Sets the value of the topicScale property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setTopicScale(BigInteger value) {
        this.topicScale = value;
    }

    @Transient
    public boolean isSetTopicScale() {
        return (this.topicScale!= null);
    }

    /**
     * Gets the value of the topicSource property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "TOPIC_SRC", length = 40)
    public String getTopicSource() {
        return topicSource;
    }

    /**
     * Sets the value of the topicSource property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTopicSource(String value) {
        this.topicSource = value;
    }

    @Transient
    public boolean isSetTopicSource() {
        return (this.topicSource!= null);
    }

    /**
     * Gets the value of the topicCount property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    @Basic
    @Column(name = "TOPIC_COUNT", precision = 20, scale = 0)
    public BigInteger getTopicCount() {
        return topicCount;
    }

    /**
     * Sets the value of the topicCount property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setTopicCount(BigInteger value) {
        this.topicCount = value;
    }

    @Transient
    public boolean isSetTopicCount() {
        return (this.topicCount!= null);
    }

    /**
     * Gets the value of the topicName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "TOPIC_NAME", length = 50)
    public String getTopicName() {
        return topicName;
    }

    /**
     * Sets the value of the topicName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTopicName(String value) {
        this.topicName = value;
    }

    @Transient
    public boolean isSetTopicName() {
        return (this.topicName!= null);
    }

    /**
     * Gets the value of the topicGroup property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "TOPIC_GROUP", length = 50)
    public String getTopicGroup() {
        return topicGroup;
    }

    /**
     * Sets the value of the topicGroup property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTopicGroup(String value) {
        this.topicGroup = value;
    }

    @Transient
    public boolean isSetTopicGroup() {
        return (this.topicGroup!= null);
    }

    /**
     * Gets the value of the topicSizeUnit property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "TOPIC_SIZE_UNIT", length = 15)
    public String getTopicSizeUnit() {
        return topicSizeUnit;
    }

    /**
     * Sets the value of the topicSizeUnit property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTopicSizeUnit(String value) {
        this.topicSizeUnit = value;
    }

    @Transient
    public boolean isSetTopicSizeUnit() {
        return (this.topicSizeUnit!= null);
    }

    /**
     * Gets the value of the topicMajorFlag property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    @Basic
    @Column(name = "TOPIC_MAJOR_FLAG", precision = 20, scale = 0)
    public BigInteger getTopicMajorFlag() {
        return topicMajorFlag;
    }

    /**
     * Sets the value of the topicMajorFlag property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setTopicMajorFlag(BigInteger value) {
        this.topicMajorFlag = value;
    }

    @Transient
    public boolean isSetTopicMajorFlag() {
        return (this.topicMajorFlag!= null);
    }

    /**
     * 
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Id
    @Column(name = "ATLAS_DTLS_ID")
    public String getDbid() {
        return dbid;
    }

    /**
     * 
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDbid(String value) {
        this.dbid = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof ATLASDetailsDataType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final ATLASDetailsDataType that = ((ATLASDetailsDataType) object);
        {
            BigInteger lhsTopicID;
            lhsTopicID = this.getTopicID();
            BigInteger rhsTopicID;
            rhsTopicID = that.getTopicID();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "topicID", lhsTopicID), LocatorUtils.property(thatLocator, "topicID", rhsTopicID), lhsTopicID, rhsTopicID)) {
                return false;
            }
        }
        {
            String lhsTopicOwner;
            lhsTopicOwner = this.getTopicOwner();
            String rhsTopicOwner;
            rhsTopicOwner = that.getTopicOwner();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "topicOwner", lhsTopicOwner), LocatorUtils.property(thatLocator, "topicOwner", rhsTopicOwner), lhsTopicOwner, rhsTopicOwner)) {
                return false;
            }
        }
        {
            BigDecimal lhsTopicSize;
            lhsTopicSize = this.getTopicSize();
            BigDecimal rhsTopicSize;
            rhsTopicSize = that.getTopicSize();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "topicSize", lhsTopicSize), LocatorUtils.property(thatLocator, "topicSize", rhsTopicSize), lhsTopicSize, rhsTopicSize)) {
                return false;
            }
        }
        {
            BigInteger lhsTopicScale;
            lhsTopicScale = this.getTopicScale();
            BigInteger rhsTopicScale;
            rhsTopicScale = that.getTopicScale();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "topicScale", lhsTopicScale), LocatorUtils.property(thatLocator, "topicScale", rhsTopicScale), lhsTopicScale, rhsTopicScale)) {
                return false;
            }
        }
        {
            String lhsTopicSource;
            lhsTopicSource = this.getTopicSource();
            String rhsTopicSource;
            rhsTopicSource = that.getTopicSource();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "topicSource", lhsTopicSource), LocatorUtils.property(thatLocator, "topicSource", rhsTopicSource), lhsTopicSource, rhsTopicSource)) {
                return false;
            }
        }
        {
            BigInteger lhsTopicCount;
            lhsTopicCount = this.getTopicCount();
            BigInteger rhsTopicCount;
            rhsTopicCount = that.getTopicCount();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "topicCount", lhsTopicCount), LocatorUtils.property(thatLocator, "topicCount", rhsTopicCount), lhsTopicCount, rhsTopicCount)) {
                return false;
            }
        }
        {
            String lhsTopicName;
            lhsTopicName = this.getTopicName();
            String rhsTopicName;
            rhsTopicName = that.getTopicName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "topicName", lhsTopicName), LocatorUtils.property(thatLocator, "topicName", rhsTopicName), lhsTopicName, rhsTopicName)) {
                return false;
            }
        }
        {
            String lhsTopicGroup;
            lhsTopicGroup = this.getTopicGroup();
            String rhsTopicGroup;
            rhsTopicGroup = that.getTopicGroup();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "topicGroup", lhsTopicGroup), LocatorUtils.property(thatLocator, "topicGroup", rhsTopicGroup), lhsTopicGroup, rhsTopicGroup)) {
                return false;
            }
        }
        {
            String lhsTopicSizeUnit;
            lhsTopicSizeUnit = this.getTopicSizeUnit();
            String rhsTopicSizeUnit;
            rhsTopicSizeUnit = that.getTopicSizeUnit();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "topicSizeUnit", lhsTopicSizeUnit), LocatorUtils.property(thatLocator, "topicSizeUnit", rhsTopicSizeUnit), lhsTopicSizeUnit, rhsTopicSizeUnit)) {
                return false;
            }
        }
        {
            BigInteger lhsTopicMajorFlag;
            lhsTopicMajorFlag = this.getTopicMajorFlag();
            BigInteger rhsTopicMajorFlag;
            rhsTopicMajorFlag = that.getTopicMajorFlag();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "topicMajorFlag", lhsTopicMajorFlag), LocatorUtils.property(thatLocator, "topicMajorFlag", rhsTopicMajorFlag), lhsTopicMajorFlag, rhsTopicMajorFlag)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            BigInteger theTopicID;
            theTopicID = this.getTopicID();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "topicID", theTopicID), currentHashCode, theTopicID);
        }
        {
            String theTopicOwner;
            theTopicOwner = this.getTopicOwner();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "topicOwner", theTopicOwner), currentHashCode, theTopicOwner);
        }
        {
            BigDecimal theTopicSize;
            theTopicSize = this.getTopicSize();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "topicSize", theTopicSize), currentHashCode, theTopicSize);
        }
        {
            BigInteger theTopicScale;
            theTopicScale = this.getTopicScale();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "topicScale", theTopicScale), currentHashCode, theTopicScale);
        }
        {
            String theTopicSource;
            theTopicSource = this.getTopicSource();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "topicSource", theTopicSource), currentHashCode, theTopicSource);
        }
        {
            BigInteger theTopicCount;
            theTopicCount = this.getTopicCount();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "topicCount", theTopicCount), currentHashCode, theTopicCount);
        }
        {
            String theTopicName;
            theTopicName = this.getTopicName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "topicName", theTopicName), currentHashCode, theTopicName);
        }
        {
            String theTopicGroup;
            theTopicGroup = this.getTopicGroup();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "topicGroup", theTopicGroup), currentHashCode, theTopicGroup);
        }
        {
            String theTopicSizeUnit;
            theTopicSizeUnit = this.getTopicSizeUnit();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "topicSizeUnit", theTopicSizeUnit), currentHashCode, theTopicSizeUnit);
        }
        {
            BigInteger theTopicMajorFlag;
            theTopicMajorFlag = this.getTopicMajorFlag();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "topicMajorFlag", theTopicMajorFlag), currentHashCode, theTopicMajorFlag);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
