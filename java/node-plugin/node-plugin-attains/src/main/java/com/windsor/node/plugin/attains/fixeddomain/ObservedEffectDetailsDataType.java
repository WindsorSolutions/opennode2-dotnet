//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.5-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.04.09 at 07:20:00 AM PDT 
//


package com.windsor.node.plugin.attains.fixeddomain;

import java.io.Serializable;
import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlTransient;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.hyperjaxb3.xml.bind.JAXBContextUtils;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for ObservedEffectDetailsDataType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="ObservedEffectDetailsDataType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/OWIR/ATT/2}CauseName"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/OWIR/ATT/2}ObservedEffectsComment" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ObservedEffectDetailsDataType", propOrder = {
    "causeName"
})
@Entity(name = "ObservedEffectDetailsDataType")
@Table(name = "OWIR_OBSERVED_EFFECT_DTLS")
@Inheritance(strategy = InheritanceType.JOINED)
public class ObservedEffectDetailsDataType
    implements Serializable, Equals, HashCode
{

    private final static long serialVersionUID = 1L;
    @XmlElement(name = "CauseName", required = true)
    protected String causeName;
    @XmlTransient
    protected Object observedEffectsComment;
    @XmlTransient
    protected String dbid;
    public final static String ObservedEffectsCommentObjectContextPath = "com.windsor.node.plugin.attains.fixeddomain";

    /**
     * Gets the value of the causeName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "CAUSE_NAME", length = 240)
    public String getCauseName() {
        return causeName;
    }

    /**
     * Sets the value of the causeName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCauseName(String value) {
        this.causeName = value;
    }

    @Transient
    public boolean isSetCauseName() {
        return (this.causeName!= null);
    }

    /**
     * Gets the value of the observedEffectsComment property.
     * 
     * @return
     *     possible object is
     *     {@link Object }
     *     
     */
    @Transient
    public Object getObservedEffectsComment() {
        return observedEffectsComment;
    }

    /**
     * Sets the value of the observedEffectsComment property.
     * 
     * @param value
     *     allowed object is
     *     {@link Object }
     *     
     */
    public void setObservedEffectsComment(Object value) {
        this.observedEffectsComment = value;
    }

    @Transient
    public boolean isSetObservedEffectsComment() {
        return (this.observedEffectsComment!= null);
    }

    /**
     * 
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Id
    @Column(name = "OBSERVED_EFFECT_DTLS_ID")
    public String getDbid() {
        return dbid;
    }

    /**
     * 
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDbid(String value) {
        this.dbid = value;
    }

    @Transient
    public String getObservedEffectsCommentObject() {
        if (JAXBContextUtils.isMarshallable(ObservedEffectsCommentObjectContextPath, this.getObservedEffectsComment())) {
            return JAXBContextUtils.marshal(ObservedEffectsCommentObjectContextPath, this.getObservedEffectsComment());
        } else {
            return null;
        }
    }

    public void setObservedEffectsCommentObject(String target) {
        if (target!= null) {
            setObservedEffectsComment(JAXBContextUtils.unmarshal(ObservedEffectsCommentObjectContextPath, target));
        }
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof ObservedEffectDetailsDataType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final ObservedEffectDetailsDataType that = ((ObservedEffectDetailsDataType) object);
        {
            String lhsCauseName;
            lhsCauseName = this.getCauseName();
            String rhsCauseName;
            rhsCauseName = that.getCauseName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "causeName", lhsCauseName), LocatorUtils.property(thatLocator, "causeName", rhsCauseName), lhsCauseName, rhsCauseName)) {
                return false;
            }
        }
        {
            Object lhsObservedEffectsComment;
            lhsObservedEffectsComment = this.getObservedEffectsComment();
            Object rhsObservedEffectsComment;
            rhsObservedEffectsComment = that.getObservedEffectsComment();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "observedEffectsComment", lhsObservedEffectsComment), LocatorUtils.property(thatLocator, "observedEffectsComment", rhsObservedEffectsComment), lhsObservedEffectsComment, rhsObservedEffectsComment)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            String theCauseName;
            theCauseName = this.getCauseName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "causeName", theCauseName), currentHashCode, theCauseName);
        }
        {
            Object theObservedEffectsComment;
            theObservedEffectsComment = this.getObservedEffectsComment();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "observedEffectsComment", theObservedEffectsComment), currentHashCode, theObservedEffectsComment);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
