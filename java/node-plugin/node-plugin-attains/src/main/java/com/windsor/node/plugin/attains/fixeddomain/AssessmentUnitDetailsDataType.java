//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.5-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.04.10 at 10:09:56 AM PDT 
//


package com.windsor.node.plugin.attains.fixeddomain;

import java.io.Serializable;
import java.util.List;
import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlTransient;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;
import com.windsor.node.plugin.common.xml.bind.annotation.adapters.GYearToIntegerAdapter;
import com.windsor.node.plugin.common.xml.bind.annotation.adapters.StringAdapter;


/**
 * <p>Java class for AssessmentUnitDetailsDataType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="AssessmentUnitDetailsDataType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/OWIR/ATT/2}ID305b"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/OWIR/ATT/2}WaterName"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/OWIR/ATT/2}Location"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/OWIR/ATT/2}TrophicStatus" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/OWIR/ATT/2}PublicLake" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/OWIR/ATT/2}MonitoringScheduledYear" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/OWIR/ATT/2}ClassName" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/OWIR/ATT/2}ClassDescription" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/OWIR/ATT/2}Assessor" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/OWIR/ATT/2}CategoryID" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/OWIR/ATT/2}EPACategory" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/OWIR/ATT/2}AssessmentUnitComments" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/OWIR/ATT/2}AssessmentUnitOwner" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/OWIR/ATT/2}CycleLastAssessed" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/OWIR/ATT/2}Trend" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/OWIR/ATT/2}AssessmentWaters"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/OWIR/ATT/2}CycleTracks" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/OWIR/ATT/2}AssessmentUnitCauses" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/OWIR/ATT/2}WQSAttainments" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/OWIR/ATT/2}AssessmentUnitDelists" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/OWIR/ATT/2}CategoryReportFlag" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/OWIR/ATT/2}EPAAddedAssessmentUnit" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/OWIR/ATT/2}Assessed" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "AssessmentUnitDetailsDataType", propOrder = {
    "id305B",
    "waterName",
    "location",
    "trophicStatus",
    "publicLake",
    "monitoringScheduledYear",
    "className",
    "classDescription",
    "assessor",
    "categoryID",
    "epaCategory",
    "assessmentUnitComments",
    "assessmentUnitOwner",
    "cycleLastAssessed",
    "trend",
    "assessmentWaters",
    "cycleTracks",
    "assessmentUnitCauses",
    "wqsAttainments",
    "assessmentUnitDelists",
    "categoryReportFlag",
    "epaAddedAssessmentUnit",
    "assessed"
})
@Entity(name = "AssessmentUnitDetailsDataType")
@Table(name = "OWIR_ASMT_UNIT_DTLS")
@Inheritance(strategy = InheritanceType.JOINED)
public class AssessmentUnitDetailsDataType
    implements Serializable, Equals, HashCode
{

    private final static long serialVersionUID = 1L;
    @XmlElement(name = "ID305b", required = true)
    protected String id305B;
    @XmlElement(name = "WaterName", required = true)
    protected String waterName;
    @XmlElement(name = "Location", required = true)
    protected String location;
    @XmlElement(name = "TrophicStatus")
    @XmlJavaTypeAdapter(StringAdapter.class)
    protected String trophicStatus;
    @XmlElement(name = "PublicLake")
    @XmlJavaTypeAdapter(StringAdapter.class)
    protected String publicLake;
    @XmlElement(name = "MonitoringScheduledYear", type = String.class)
    @XmlJavaTypeAdapter(GYearToIntegerAdapter.class)
    @XmlSchemaType(name = "gYear")
    protected Integer monitoringScheduledYear;
    @XmlElement(name = "ClassName")
    protected String className;
    @XmlElement(name = "ClassDescription")
    protected String classDescription;
    @XmlElement(name = "Assessor")
    protected String assessor;
    @XmlElement(name = "CategoryID")
    protected String categoryID;
    @XmlElement(name = "EPACategory")
    protected String epaCategory;
    @XmlElement(name = "AssessmentUnitComments")
    protected String assessmentUnitComments;
    @XmlElement(name = "AssessmentUnitOwner")
    protected String assessmentUnitOwner;
    @XmlElement(name = "CycleLastAssessed", type = String.class)
    @XmlJavaTypeAdapter(GYearToIntegerAdapter.class)
    @XmlSchemaType(name = "gYear")
    protected Integer cycleLastAssessed;
    @XmlElement(name = "Trend")
    @XmlJavaTypeAdapter(StringAdapter.class)
    protected String trend;
    @XmlElement(name = "AssessmentWaters", required = true)
    protected AssessmentWatersDataType assessmentWaters;
    @XmlElement(name = "CycleTracks")
    protected CycleTracksDataType cycleTracks;
    @XmlElement(name = "AssessmentUnitCauses")
    protected AssessmentUnitCausesDataType assessmentUnitCauses;
    @XmlElement(name = "WQSAttainments")
    protected WQSAttainmentsDataType wqsAttainments;
    @XmlElement(name = "AssessmentUnitDelists")
    protected AssessmentUnitDelistsDataType assessmentUnitDelists;
    @XmlElement(name = "CategoryReportFlag")
    @XmlJavaTypeAdapter(StringAdapter.class)
    protected String categoryReportFlag;
    @XmlElement(name = "EPAAddedAssessmentUnit")
    @XmlJavaTypeAdapter(StringAdapter.class)
    protected String epaAddedAssessmentUnit;
    @XmlElement(name = "Assessed")
    @XmlJavaTypeAdapter(StringAdapter.class)
    protected String assessed;
    @XmlTransient
    protected String dbid;

    /**
     * Gets the value of the id305B property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "ID_305B", length = 50)
    public String getID305B() {
        return id305B;
    }

    /**
     * Sets the value of the id305B property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setID305B(String value) {
        this.id305B = value;
    }

    @Transient
    public boolean isSetID305B() {
        return (this.id305B!= null);
    }

    /**
     * Gets the value of the waterName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "WATER_NAME", length = 60)
    public String getWaterName() {
        return waterName;
    }

    /**
     * Sets the value of the waterName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setWaterName(String value) {
        this.waterName = value;
    }

    @Transient
    public boolean isSetWaterName() {
        return (this.waterName!= null);
    }

    /**
     * Gets the value of the location property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "LOC", length = 255)
    public String getLocation() {
        return location;
    }

    /**
     * Sets the value of the location property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLocation(String value) {
        this.location = value;
    }

    @Transient
    public boolean isSetLocation() {
        return (this.location!= null);
    }

    /**
     * Gets the value of the trophicStatus property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "TROPHIC_STAT", columnDefinition = "char(14)", length = 14)
    public String getTrophicStatus() {
        return trophicStatus;
    }

    /**
     * Sets the value of the trophicStatus property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTrophicStatus(String value) {
        this.trophicStatus = value;
    }

    @Transient
    public boolean isSetTrophicStatus() {
        return (this.trophicStatus!= null);
    }

    /**
     * Gets the value of the publicLake property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "PUBLIC_LAKE", columnDefinition = "char(3)", length = 3)
    public String getPublicLake() {
        return publicLake;
    }

    /**
     * Sets the value of the publicLake property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPublicLake(String value) {
        this.publicLake = value;
    }

    @Transient
    public boolean isSetPublicLake() {
        return (this.publicLake!= null);
    }

    /**
     * Gets the value of the monitoringScheduledYear property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "MONTR_SCHD_YEAR")
    public Integer getMonitoringScheduledYear() {
        return monitoringScheduledYear;
    }

    /**
     * Sets the value of the monitoringScheduledYear property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setMonitoringScheduledYear(Integer value) {
        this.monitoringScheduledYear = value;
    }

    @Transient
    public boolean isSetMonitoringScheduledYear() {
        return (this.monitoringScheduledYear!= null);
    }

    /**
     * Gets the value of the className property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "CLASS_NAME", length = 100)
    public String getClassName() {
        return className;
    }

    /**
     * Sets the value of the className property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setClassName(String value) {
        this.className = value;
    }

    @Transient
    public boolean isSetClassName() {
        return (this.className!= null);
    }

    /**
     * Gets the value of the classDescription property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "CLASS_DESC", length = 4000)
    public String getClassDescription() {
        return classDescription;
    }

    /**
     * Sets the value of the classDescription property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setClassDescription(String value) {
        this.classDescription = value;
    }

    @Transient
    public boolean isSetClassDescription() {
        return (this.classDescription!= null);
    }

    /**
     * Gets the value of the assessor property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "ASSESSOR", length = 40)
    public String getAssessor() {
        return assessor;
    }

    /**
     * Sets the value of the assessor property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAssessor(String value) {
        this.assessor = value;
    }

    @Transient
    public boolean isSetAssessor() {
        return (this.assessor!= null);
    }

    /**
     * Gets the value of the categoryID property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "CATG_ID", length = 10)
    public String getCategoryID() {
        return categoryID;
    }

    /**
     * Sets the value of the categoryID property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCategoryID(String value) {
        this.categoryID = value;
    }

    @Transient
    public boolean isSetCategoryID() {
        return (this.categoryID!= null);
    }

    /**
     * Gets the value of the epaCategory property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "EPA_CATG")
    public String getEPACategory() {
        return epaCategory;
    }

    /**
     * Sets the value of the epaCategory property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEPACategory(String value) {
        this.epaCategory = value;
    }

    @Transient
    public boolean isSetEPACategory() {
        return (this.epaCategory!= null);
    }

    /**
     * Gets the value of the assessmentUnitComments property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "ASMT_UNIT_COMMENT", length = 4000)
    public String getAssessmentUnitComments() {
        return assessmentUnitComments;
    }

    /**
     * Sets the value of the assessmentUnitComments property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAssessmentUnitComments(String value) {
        this.assessmentUnitComments = value;
    }

    @Transient
    public boolean isSetAssessmentUnitComments() {
        return (this.assessmentUnitComments!= null);
    }

    /**
     * Gets the value of the assessmentUnitOwner property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "ASMT_UNIT_OWNER", length = 20)
    public String getAssessmentUnitOwner() {
        return assessmentUnitOwner;
    }

    /**
     * Sets the value of the assessmentUnitOwner property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAssessmentUnitOwner(String value) {
        this.assessmentUnitOwner = value;
    }

    @Transient
    public boolean isSetAssessmentUnitOwner() {
        return (this.assessmentUnitOwner!= null);
    }

    /**
     * Gets the value of the cycleLastAssessed property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "CYCLE_LAST_ASSESSED")
    public Integer getCycleLastAssessed() {
        return cycleLastAssessed;
    }

    /**
     * Sets the value of the cycleLastAssessed property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCycleLastAssessed(Integer value) {
        this.cycleLastAssessed = value;
    }

    @Transient
    public boolean isSetCycleLastAssessed() {
        return (this.cycleLastAssessed!= null);
    }

    /**
     * Gets the value of the trend property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "TREND", columnDefinition = "11", length = 11)
    public String getTrend() {
        return trend;
    }

    /**
     * Sets the value of the trend property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTrend(String value) {
        this.trend = value;
    }

    @Transient
    public boolean isSetTrend() {
        return (this.trend!= null);
    }

    @OneToMany(targetEntity = AssessmentWaterDetailsDataType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "ASMT_UNIT_DTLS_ID", insertable = false, updatable = false)
    public List<AssessmentWaterDetailsDataType> getAssessmentWaterDetails() {
        return (assessmentWaters != null ? assessmentWaters.getAssessmentWaterDetails() : null);
    }

    public void setAssessmentWaterDetails(List<AssessmentWaterDetailsDataType> list)
    {
        if(assessmentWaters == null)
        {
            ObjectFactory fact = new ObjectFactory();
            setAssessmentWaters(fact.createAssessmentWatersDataType());
        }
        getAssessmentWaters().setAssessmentWaterDetails(list);
    }

    /**
     * Gets the value of the assessmentWaters property.
     * 
     * @return
     *     possible object is
     *     {@link AssessmentWatersDataType }
     *     
     */
    @Transient
    public AssessmentWatersDataType getAssessmentWaters() {
        return assessmentWaters;
    }

    /**
     * Sets the value of the assessmentWaters property.
     * 
     * @param value
     *     allowed object is
     *     {@link AssessmentWatersDataType }
     *     
     */
    public void setAssessmentWaters(AssessmentWatersDataType value) {
        this.assessmentWaters = value;
    }

    @Transient
    public boolean isSetAssessmentWaters() {
        return (this.assessmentWaters!= null);
    }

    @OneToMany(targetEntity = CycleTrackDetailsDataType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "ASMT_UNIT_DTLS_ID", insertable = false, updatable = false)
    public List<CycleTrackDetailsDataType> getCycleTrackDetails() {
        return (cycleTracks != null ? cycleTracks.getCycleTrackDetails() : null);
    }

    public void setCycleTrackDetails(List<CycleTrackDetailsDataType> list)
    {
        if(cycleTracks == null)
        {
            ObjectFactory fact = new ObjectFactory();
            setCycleTracks(fact.createCycleTracksDataType());
        }
        getCycleTracks().setCycleTrackDetails(list);
    }

    /**
     * Gets the value of the cycleTracks property.
     * 
     * @return
     *     possible object is
     *     {@link CycleTracksDataType }
     *     
     */
    @Transient
    public CycleTracksDataType getCycleTracks() {
        return cycleTracks;
    }

    /**
     * Sets the value of the cycleTracks property.
     * 
     * @param value
     *     allowed object is
     *     {@link CycleTracksDataType }
     *     
     */
    public void setCycleTracks(CycleTracksDataType value) {
        this.cycleTracks = value;
    }

    @Transient
    public boolean isSetCycleTracks() {
        return (this.cycleTracks!= null);
    }

    @OneToMany(targetEntity = AssessmentUnitCauseDetailsDataType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "ASMT_UNIT_DTLS_ID", insertable = false, updatable = false)
    public List<AssessmentUnitCauseDetailsDataType> getAssessmentUnitCauseDetails() {
        return (assessmentUnitCauses != null ? assessmentUnitCauses.getAssessmentUnitCauseDetails() : null);
    }

    public void setAssessmentUnitCauseDetails(List<AssessmentUnitCauseDetailsDataType> list)
    {
        if(assessmentUnitCauses == null)
        {
            ObjectFactory fact = new ObjectFactory();
            setAssessmentUnitCauses(fact.createAssessmentUnitCausesDataType());
        }
        getAssessmentUnitCauses().setAssessmentUnitCauseDetails(list);
    }

    /**
     * Gets the value of the assessmentUnitCauses property.
     * 
     * @return
     *     possible object is
     *     {@link AssessmentUnitCausesDataType }
     *     
     */
    @Transient
    public AssessmentUnitCausesDataType getAssessmentUnitCauses() {
        return assessmentUnitCauses;
    }

    /**
     * Sets the value of the assessmentUnitCauses property.
     * 
     * @param value
     *     allowed object is
     *     {@link AssessmentUnitCausesDataType }
     *     
     */
    public void setAssessmentUnitCauses(AssessmentUnitCausesDataType value) {
        this.assessmentUnitCauses = value;
    }

    @Transient
    public boolean isSetAssessmentUnitCauses() {
        return (this.assessmentUnitCauses!= null);
    }

    @OneToMany(targetEntity = WQSAttainmentDetailsDataType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "ASMT_UNIT_DTLS_ID", insertable = false, updatable = false)
    public List<WQSAttainmentDetailsDataType> getWQSAttainmentDetails() {
        return (wqsAttainments != null ? wqsAttainments.getWQSAttainmentDetails() : null);
    }

    public void setWQSAttainmentDetails(List<WQSAttainmentDetailsDataType> list)
    {
        if(wqsAttainments == null)
        {
            ObjectFactory fact = new ObjectFactory();
            setWQSAttainments(fact.createWQSAttainmentsDataType());
        }
        getWQSAttainments().setWQSAttainmentDetails(list);
    }

    /**
     * Gets the value of the wqsAttainments property.
     * 
     * @return
     *     possible object is
     *     {@link WQSAttainmentsDataType }
     *     
     */
    @Transient
    public WQSAttainmentsDataType getWQSAttainments() {
        return wqsAttainments;
    }

    /**
     * Sets the value of the wqsAttainments property.
     * 
     * @param value
     *     allowed object is
     *     {@link WQSAttainmentsDataType }
     *     
     */
    public void setWQSAttainments(WQSAttainmentsDataType value) {
        this.wqsAttainments = value;
    }

    @Transient
    public boolean isSetWQSAttainments() {
        return (this.wqsAttainments!= null);
    }

    @OneToMany(targetEntity = AssessmentUnitDelistDetailsDataType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "ASMT_UNIT_DTLS_ID", insertable = false, updatable = false)
    public List<AssessmentUnitDelistDetailsDataType> getAssessmentUnitDelistDetails() {
        return (assessmentUnitDelists != null ? assessmentUnitDelists.getAssessmentUnitDelistDetails() : null);
    }

    public void setAssessmentUnitDelistDetails(List<AssessmentUnitDelistDetailsDataType> list)
    {
        if(assessmentUnitDelists == null)
        {
            ObjectFactory fact = new ObjectFactory();
            setAssessmentUnitDelists(fact.createAssessmentUnitDelistsDataType());
        }
        getAssessmentUnitDelists().setAssessmentUnitDelistDetails(list);
    }

    /**
     * Gets the value of the assessmentUnitDelists property.
     * 
     * @return
     *     possible object is
     *     {@link AssessmentUnitDelistsDataType }
     *     
     */
    @Transient
    public AssessmentUnitDelistsDataType getAssessmentUnitDelists() {
        return assessmentUnitDelists;
    }

    /**
     * Sets the value of the assessmentUnitDelists property.
     * 
     * @param value
     *     allowed object is
     *     {@link AssessmentUnitDelistsDataType }
     *     
     */
    public void setAssessmentUnitDelists(AssessmentUnitDelistsDataType value) {
        this.assessmentUnitDelists = value;
    }

    @Transient
    public boolean isSetAssessmentUnitDelists() {
        return (this.assessmentUnitDelists!= null);
    }

    /**
     * Gets the value of the categoryReportFlag property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "CATG_REPORT_FLAG", columnDefinition = "char(14)", length = 14)
    public String getCategoryReportFlag() {
        return categoryReportFlag;
    }

    /**
     * Sets the value of the categoryReportFlag property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCategoryReportFlag(String value) {
        this.categoryReportFlag = value;
    }

    @Transient
    public boolean isSetCategoryReportFlag() {
        return (this.categoryReportFlag!= null);
    }

    /**
     * Gets the value of the epaAddedAssessmentUnit property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "EPA_ADDED_ASMT_UNIT", columnDefinition = "1", length = 1)
    public String getEPAAddedAssessmentUnit() {
        return epaAddedAssessmentUnit;
    }

    /**
     * Sets the value of the epaAddedAssessmentUnit property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEPAAddedAssessmentUnit(String value) {
        this.epaAddedAssessmentUnit = value;
    }

    @Transient
    public boolean isSetEPAAddedAssessmentUnit() {
        return (this.epaAddedAssessmentUnit!= null);
    }

    /**
     * Gets the value of the assessed property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "ASSESSED", columnDefinition = "1", length = 1)
    public String getAssessed() {
        return assessed;
    }

    /**
     * Sets the value of the assessed property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAssessed(String value) {
        this.assessed = value;
    }

    @Transient
    public boolean isSetAssessed() {
        return (this.assessed!= null);
    }

    /**
     * 
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Id
    @Column(name = "ASMT_UNIT_DTLS_ID")
    public String getDbid() {
        return dbid;
    }

    /**
     * 
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDbid(String value) {
        this.dbid = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof AssessmentUnitDetailsDataType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final AssessmentUnitDetailsDataType that = ((AssessmentUnitDetailsDataType) object);
        {
            String lhsID305B;
            lhsID305B = this.getID305B();
            String rhsID305B;
            rhsID305B = that.getID305B();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "id305B", lhsID305B), LocatorUtils.property(thatLocator, "id305B", rhsID305B), lhsID305B, rhsID305B)) {
                return false;
            }
        }
        {
            String lhsWaterName;
            lhsWaterName = this.getWaterName();
            String rhsWaterName;
            rhsWaterName = that.getWaterName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "waterName", lhsWaterName), LocatorUtils.property(thatLocator, "waterName", rhsWaterName), lhsWaterName, rhsWaterName)) {
                return false;
            }
        }
        {
            String lhsLocation;
            lhsLocation = this.getLocation();
            String rhsLocation;
            rhsLocation = that.getLocation();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "location", lhsLocation), LocatorUtils.property(thatLocator, "location", rhsLocation), lhsLocation, rhsLocation)) {
                return false;
            }
        }
        {
            String lhsTrophicStatus;
            lhsTrophicStatus = this.getTrophicStatus();
            String rhsTrophicStatus;
            rhsTrophicStatus = that.getTrophicStatus();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "trophicStatus", lhsTrophicStatus), LocatorUtils.property(thatLocator, "trophicStatus", rhsTrophicStatus), lhsTrophicStatus, rhsTrophicStatus)) {
                return false;
            }
        }
        {
            String lhsPublicLake;
            lhsPublicLake = this.getPublicLake();
            String rhsPublicLake;
            rhsPublicLake = that.getPublicLake();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "publicLake", lhsPublicLake), LocatorUtils.property(thatLocator, "publicLake", rhsPublicLake), lhsPublicLake, rhsPublicLake)) {
                return false;
            }
        }
        {
            Integer lhsMonitoringScheduledYear;
            lhsMonitoringScheduledYear = this.getMonitoringScheduledYear();
            Integer rhsMonitoringScheduledYear;
            rhsMonitoringScheduledYear = that.getMonitoringScheduledYear();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "monitoringScheduledYear", lhsMonitoringScheduledYear), LocatorUtils.property(thatLocator, "monitoringScheduledYear", rhsMonitoringScheduledYear), lhsMonitoringScheduledYear, rhsMonitoringScheduledYear)) {
                return false;
            }
        }
        {
            String lhsClassName;
            lhsClassName = this.getClassName();
            String rhsClassName;
            rhsClassName = that.getClassName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "className", lhsClassName), LocatorUtils.property(thatLocator, "className", rhsClassName), lhsClassName, rhsClassName)) {
                return false;
            }
        }
        {
            String lhsClassDescription;
            lhsClassDescription = this.getClassDescription();
            String rhsClassDescription;
            rhsClassDescription = that.getClassDescription();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "classDescription", lhsClassDescription), LocatorUtils.property(thatLocator, "classDescription", rhsClassDescription), lhsClassDescription, rhsClassDescription)) {
                return false;
            }
        }
        {
            String lhsAssessor;
            lhsAssessor = this.getAssessor();
            String rhsAssessor;
            rhsAssessor = that.getAssessor();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "assessor", lhsAssessor), LocatorUtils.property(thatLocator, "assessor", rhsAssessor), lhsAssessor, rhsAssessor)) {
                return false;
            }
        }
        {
            String lhsCategoryID;
            lhsCategoryID = this.getCategoryID();
            String rhsCategoryID;
            rhsCategoryID = that.getCategoryID();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "categoryID", lhsCategoryID), LocatorUtils.property(thatLocator, "categoryID", rhsCategoryID), lhsCategoryID, rhsCategoryID)) {
                return false;
            }
        }
        {
            String lhsEPACategory;
            lhsEPACategory = this.getEPACategory();
            String rhsEPACategory;
            rhsEPACategory = that.getEPACategory();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "epaCategory", lhsEPACategory), LocatorUtils.property(thatLocator, "epaCategory", rhsEPACategory), lhsEPACategory, rhsEPACategory)) {
                return false;
            }
        }
        {
            String lhsAssessmentUnitComments;
            lhsAssessmentUnitComments = this.getAssessmentUnitComments();
            String rhsAssessmentUnitComments;
            rhsAssessmentUnitComments = that.getAssessmentUnitComments();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "assessmentUnitComments", lhsAssessmentUnitComments), LocatorUtils.property(thatLocator, "assessmentUnitComments", rhsAssessmentUnitComments), lhsAssessmentUnitComments, rhsAssessmentUnitComments)) {
                return false;
            }
        }
        {
            String lhsAssessmentUnitOwner;
            lhsAssessmentUnitOwner = this.getAssessmentUnitOwner();
            String rhsAssessmentUnitOwner;
            rhsAssessmentUnitOwner = that.getAssessmentUnitOwner();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "assessmentUnitOwner", lhsAssessmentUnitOwner), LocatorUtils.property(thatLocator, "assessmentUnitOwner", rhsAssessmentUnitOwner), lhsAssessmentUnitOwner, rhsAssessmentUnitOwner)) {
                return false;
            }
        }
        {
            Integer lhsCycleLastAssessed;
            lhsCycleLastAssessed = this.getCycleLastAssessed();
            Integer rhsCycleLastAssessed;
            rhsCycleLastAssessed = that.getCycleLastAssessed();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "cycleLastAssessed", lhsCycleLastAssessed), LocatorUtils.property(thatLocator, "cycleLastAssessed", rhsCycleLastAssessed), lhsCycleLastAssessed, rhsCycleLastAssessed)) {
                return false;
            }
        }
        {
            String lhsTrend;
            lhsTrend = this.getTrend();
            String rhsTrend;
            rhsTrend = that.getTrend();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "trend", lhsTrend), LocatorUtils.property(thatLocator, "trend", rhsTrend), lhsTrend, rhsTrend)) {
                return false;
            }
        }
        {
            AssessmentWatersDataType lhsAssessmentWaters;
            lhsAssessmentWaters = this.getAssessmentWaters();
            AssessmentWatersDataType rhsAssessmentWaters;
            rhsAssessmentWaters = that.getAssessmentWaters();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "assessmentWaters", lhsAssessmentWaters), LocatorUtils.property(thatLocator, "assessmentWaters", rhsAssessmentWaters), lhsAssessmentWaters, rhsAssessmentWaters)) {
                return false;
            }
        }
        {
            CycleTracksDataType lhsCycleTracks;
            lhsCycleTracks = this.getCycleTracks();
            CycleTracksDataType rhsCycleTracks;
            rhsCycleTracks = that.getCycleTracks();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "cycleTracks", lhsCycleTracks), LocatorUtils.property(thatLocator, "cycleTracks", rhsCycleTracks), lhsCycleTracks, rhsCycleTracks)) {
                return false;
            }
        }
        {
            AssessmentUnitCausesDataType lhsAssessmentUnitCauses;
            lhsAssessmentUnitCauses = this.getAssessmentUnitCauses();
            AssessmentUnitCausesDataType rhsAssessmentUnitCauses;
            rhsAssessmentUnitCauses = that.getAssessmentUnitCauses();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "assessmentUnitCauses", lhsAssessmentUnitCauses), LocatorUtils.property(thatLocator, "assessmentUnitCauses", rhsAssessmentUnitCauses), lhsAssessmentUnitCauses, rhsAssessmentUnitCauses)) {
                return false;
            }
        }
        {
            WQSAttainmentsDataType lhsWQSAttainments;
            lhsWQSAttainments = this.getWQSAttainments();
            WQSAttainmentsDataType rhsWQSAttainments;
            rhsWQSAttainments = that.getWQSAttainments();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "wqsAttainments", lhsWQSAttainments), LocatorUtils.property(thatLocator, "wqsAttainments", rhsWQSAttainments), lhsWQSAttainments, rhsWQSAttainments)) {
                return false;
            }
        }
        {
            AssessmentUnitDelistsDataType lhsAssessmentUnitDelists;
            lhsAssessmentUnitDelists = this.getAssessmentUnitDelists();
            AssessmentUnitDelistsDataType rhsAssessmentUnitDelists;
            rhsAssessmentUnitDelists = that.getAssessmentUnitDelists();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "assessmentUnitDelists", lhsAssessmentUnitDelists), LocatorUtils.property(thatLocator, "assessmentUnitDelists", rhsAssessmentUnitDelists), lhsAssessmentUnitDelists, rhsAssessmentUnitDelists)) {
                return false;
            }
        }
        {
            String lhsCategoryReportFlag;
            lhsCategoryReportFlag = this.getCategoryReportFlag();
            String rhsCategoryReportFlag;
            rhsCategoryReportFlag = that.getCategoryReportFlag();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "categoryReportFlag", lhsCategoryReportFlag), LocatorUtils.property(thatLocator, "categoryReportFlag", rhsCategoryReportFlag), lhsCategoryReportFlag, rhsCategoryReportFlag)) {
                return false;
            }
        }
        {
            String lhsEPAAddedAssessmentUnit;
            lhsEPAAddedAssessmentUnit = this.getEPAAddedAssessmentUnit();
            String rhsEPAAddedAssessmentUnit;
            rhsEPAAddedAssessmentUnit = that.getEPAAddedAssessmentUnit();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "epaAddedAssessmentUnit", lhsEPAAddedAssessmentUnit), LocatorUtils.property(thatLocator, "epaAddedAssessmentUnit", rhsEPAAddedAssessmentUnit), lhsEPAAddedAssessmentUnit, rhsEPAAddedAssessmentUnit)) {
                return false;
            }
        }
        {
            String lhsAssessed;
            lhsAssessed = this.getAssessed();
            String rhsAssessed;
            rhsAssessed = that.getAssessed();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "assessed", lhsAssessed), LocatorUtils.property(thatLocator, "assessed", rhsAssessed), lhsAssessed, rhsAssessed)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            String theID305B;
            theID305B = this.getID305B();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "id305B", theID305B), currentHashCode, theID305B);
        }
        {
            String theWaterName;
            theWaterName = this.getWaterName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "waterName", theWaterName), currentHashCode, theWaterName);
        }
        {
            String theLocation;
            theLocation = this.getLocation();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "location", theLocation), currentHashCode, theLocation);
        }
        {
            String theTrophicStatus;
            theTrophicStatus = this.getTrophicStatus();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "trophicStatus", theTrophicStatus), currentHashCode, theTrophicStatus);
        }
        {
            String thePublicLake;
            thePublicLake = this.getPublicLake();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "publicLake", thePublicLake), currentHashCode, thePublicLake);
        }
        {
            Integer theMonitoringScheduledYear;
            theMonitoringScheduledYear = this.getMonitoringScheduledYear();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "monitoringScheduledYear", theMonitoringScheduledYear), currentHashCode, theMonitoringScheduledYear);
        }
        {
            String theClassName;
            theClassName = this.getClassName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "className", theClassName), currentHashCode, theClassName);
        }
        {
            String theClassDescription;
            theClassDescription = this.getClassDescription();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "classDescription", theClassDescription), currentHashCode, theClassDescription);
        }
        {
            String theAssessor;
            theAssessor = this.getAssessor();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "assessor", theAssessor), currentHashCode, theAssessor);
        }
        {
            String theCategoryID;
            theCategoryID = this.getCategoryID();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "categoryID", theCategoryID), currentHashCode, theCategoryID);
        }
        {
            String theEPACategory;
            theEPACategory = this.getEPACategory();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "epaCategory", theEPACategory), currentHashCode, theEPACategory);
        }
        {
            String theAssessmentUnitComments;
            theAssessmentUnitComments = this.getAssessmentUnitComments();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "assessmentUnitComments", theAssessmentUnitComments), currentHashCode, theAssessmentUnitComments);
        }
        {
            String theAssessmentUnitOwner;
            theAssessmentUnitOwner = this.getAssessmentUnitOwner();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "assessmentUnitOwner", theAssessmentUnitOwner), currentHashCode, theAssessmentUnitOwner);
        }
        {
            Integer theCycleLastAssessed;
            theCycleLastAssessed = this.getCycleLastAssessed();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "cycleLastAssessed", theCycleLastAssessed), currentHashCode, theCycleLastAssessed);
        }
        {
            String theTrend;
            theTrend = this.getTrend();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "trend", theTrend), currentHashCode, theTrend);
        }
        {
            AssessmentWatersDataType theAssessmentWaters;
            theAssessmentWaters = this.getAssessmentWaters();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "assessmentWaters", theAssessmentWaters), currentHashCode, theAssessmentWaters);
        }
        {
            CycleTracksDataType theCycleTracks;
            theCycleTracks = this.getCycleTracks();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "cycleTracks", theCycleTracks), currentHashCode, theCycleTracks);
        }
        {
            AssessmentUnitCausesDataType theAssessmentUnitCauses;
            theAssessmentUnitCauses = this.getAssessmentUnitCauses();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "assessmentUnitCauses", theAssessmentUnitCauses), currentHashCode, theAssessmentUnitCauses);
        }
        {
            WQSAttainmentsDataType theWQSAttainments;
            theWQSAttainments = this.getWQSAttainments();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "wqsAttainments", theWQSAttainments), currentHashCode, theWQSAttainments);
        }
        {
            AssessmentUnitDelistsDataType theAssessmentUnitDelists;
            theAssessmentUnitDelists = this.getAssessmentUnitDelists();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "assessmentUnitDelists", theAssessmentUnitDelists), currentHashCode, theAssessmentUnitDelists);
        }
        {
            String theCategoryReportFlag;
            theCategoryReportFlag = this.getCategoryReportFlag();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "categoryReportFlag", theCategoryReportFlag), currentHashCode, theCategoryReportFlag);
        }
        {
            String theEPAAddedAssessmentUnit;
            theEPAAddedAssessmentUnit = this.getEPAAddedAssessmentUnit();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "epaAddedAssessmentUnit", theEPAAddedAssessmentUnit), currentHashCode, theEPAAddedAssessmentUnit);
        }
        {
            String theAssessed;
            theAssessed = this.getAssessed();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "assessed", theAssessed), currentHashCode, theAssessed);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
