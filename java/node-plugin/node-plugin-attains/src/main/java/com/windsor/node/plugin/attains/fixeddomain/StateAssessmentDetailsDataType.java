//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.5-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.04.09 at 07:20:00 AM PDT 
//


package com.windsor.node.plugin.attains.fixeddomain;

import java.io.Serializable;
import java.util.List;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Embedded;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlTransient;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;
import com.windsor.node.plugin.common.xml.bind.annotation.adapters.GYearToIntegerAdapter;


/**
 * <p>Java class for StateAssessmentDetailsDataType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="StateAssessmentDetailsDataType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/OWIR/ATT/2}StateIdentity"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/OWIR/ATT/2}Cycle"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/OWIR/ATT/2}AssessmentUnits"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/OWIR/ATT/2}UserCategories" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/OWIR/ATT/2}StateMethods" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/OWIR/ATT/2}StateLocations" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/OWIR/ATT/2}ATLASes" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/OWIR/ATT/2}MercuryComment" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/OWIR/ATT/2}MercuryURL" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "StateAssessmentDetailsDataType", propOrder = {
    "stateIdentity",
    "cycle",
    "assessmentUnits",
    "userCategories",
    "stateMethods",
    "stateLocations",
    "atlaSes",
    "mercuryComment",
    "mercuryURL"
})
@Entity(name = "StateAssessmentDetailsDataType")
@Table(name = "OWIR_STATE_ASMT_DTLS")
@Inheritance(strategy = InheritanceType.JOINED)
public class StateAssessmentDetailsDataType
    implements Serializable, Equals, HashCode
{

    private final static long serialVersionUID = 1L;
    @XmlElement(name = "StateIdentity", required = true)
    protected StateIdentityDataType stateIdentity;
    @XmlElement(name = "Cycle", required = true, type = String.class)
    @XmlJavaTypeAdapter(GYearToIntegerAdapter.class)
    @XmlSchemaType(name = "gYear")
    protected Integer cycle;
    @XmlElement(name = "AssessmentUnits", required = true)
    protected AssessmentUnitsDataType assessmentUnits;
    @XmlElement(name = "UserCategories")
    protected UserCategoriesDataType userCategories;
    @XmlElement(name = "StateMethods")
    protected StateMethodsDataType stateMethods;
    @XmlElement(name = "StateLocations")
    protected StateLocationsDataType stateLocations;
    @XmlElement(name = "ATLASes")
    protected ATLASesDataType atlaSes;
    @XmlElement(name = "MercuryComment")
    protected String mercuryComment;
    @XmlElement(name = "MercuryURL")
    protected String mercuryURL;
    @XmlTransient
    protected String dbid;

    /**
     * Gets the value of the stateIdentity property.
     * 
     * @return
     *     possible object is
     *     {@link StateIdentityDataType }
     *     
     */
    @Embedded
    @AttributeOverrides({
        @AttributeOverride(name = "stateCode", column = @Column(name = "STATE_CODE", length = 255)),
        @AttributeOverride(name = "stateName", column = @Column(name = "STATE_NAME", length = 255)),
        @AttributeOverride(name = "stateCodeListIdentifier.value", column = @Column(name = "VAL", length = 255)),
        @AttributeOverride(name = "stateCodeListIdentifier.codeListVersionIdentifier", column = @Column(name = "CODE_LIST_VERS_IDEN", length = 255)),
        @AttributeOverride(name = "stateCodeListIdentifier.codeListVersionAgencyIdentifier", column = @Column(name = "CODE_LIST_VERS_AGN_IDEN", length = 255))
    })
    public StateIdentityDataType getStateIdentity() {
        return stateIdentity;
    }

    /**
     * Sets the value of the stateIdentity property.
     * 
     * @param value
     *     allowed object is
     *     {@link StateIdentityDataType }
     *     
     */
    public void setStateIdentity(StateIdentityDataType value) {
        this.stateIdentity = value;
    }

    @Transient
    public boolean isSetStateIdentity() {
        return (this.stateIdentity!= null);
    }

    /**
     * Gets the value of the cycle property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "CYCLE")
    public Integer getCycle() {
        return cycle;
    }

    /**
     * Sets the value of the cycle property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCycle(Integer value) {
        this.cycle = value;
    }

    @Transient
    public boolean isSetCycle() {
        return (this.cycle!= null);
    }

    @OneToMany(targetEntity = AssessmentUnitDetailsDataType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "STATE_ASMT_DTLS_ID", insertable = false, updatable = false)
    public List<AssessmentUnitDetailsDataType> getAssessmentUnitDetails() {
        return (assessmentUnits != null ? assessmentUnits.getAssessmentUnitDetails() : null);
    }

    public void setAssessmentUnitDetails(List<AssessmentUnitDetailsDataType> list)
    {
        if(assessmentUnits == null)
        {
            ObjectFactory fact = new ObjectFactory();
            setAssessmentUnits(fact.createAssessmentUnitsDataType());
        }
        getAssessmentUnits().setAssessmentUnitDetails(list);
    }

    /**
     * Gets the value of the assessmentUnits property.
     * 
     * @return
     *     possible object is
     *     {@link AssessmentUnitsDataType }
     *     
     */
    @Transient
    public AssessmentUnitsDataType getAssessmentUnits() {
        return assessmentUnits;
    }

    /**
     * Sets the value of the assessmentUnits property.
     * 
     * @param value
     *     allowed object is
     *     {@link AssessmentUnitsDataType }
     *     
     */
    public void setAssessmentUnits(AssessmentUnitsDataType value) {
        this.assessmentUnits = value;
    }

    @Transient
    public boolean isSetAssessmentUnits() {
        return (this.assessmentUnits!= null);
    }

    @OneToMany(targetEntity = UserCategoryDetailsDataType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "STATE_ASMT_DTLS_ID", insertable = false, updatable = false)
    public List<UserCategoryDetailsDataType> getUserCategoryDetails() {
        return (userCategories != null ? userCategories.getUserCategoryDetails() : null);
    }

    public void setUserCategoryDetails(List<UserCategoryDetailsDataType> list)
    {
        if(userCategories == null)
        {
            ObjectFactory fact = new ObjectFactory();
            setUserCategories(fact.createUserCategoriesDataType());
        }
        getUserCategories().setUserCategoryDetails(list);
    }

    /**
     * Gets the value of the userCategories property.
     * 
     * @return
     *     possible object is
     *     {@link UserCategoriesDataType }
     *     
     */
    @Transient
    public UserCategoriesDataType getUserCategories() {
        return userCategories;
    }

    /**
     * Sets the value of the userCategories property.
     * 
     * @param value
     *     allowed object is
     *     {@link UserCategoriesDataType }
     *     
     */
    public void setUserCategories(UserCategoriesDataType value) {
        this.userCategories = value;
    }

    @Transient
    public boolean isSetUserCategories() {
        return (this.userCategories!= null);
    }

    @OneToMany(targetEntity = StateMethodDetailsDataType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "STATE_ASMT_DTLS_ID", insertable = false, updatable = false)
    public List<StateMethodDetailsDataType> getStateMethodDetails() {
        return (stateMethods != null ? stateMethods.getStateMethodDetails() : null);
    }

    public void setStateMethodDetails(List<StateMethodDetailsDataType> list)
    {
        if(stateMethods == null)
        {
            ObjectFactory fact = new ObjectFactory();
            setStateMethods(fact.createStateMethodsDataType());
        }
        getStateMethods().setStateMethodDetails(list);
    }

    /**
     * Gets the value of the stateMethods property.
     * 
     * @return
     *     possible object is
     *     {@link StateMethodsDataType }
     *     
     */
    @Transient
    public StateMethodsDataType getStateMethods() {
        return stateMethods;
    }

    /**
     * Sets the value of the stateMethods property.
     * 
     * @param value
     *     allowed object is
     *     {@link StateMethodsDataType }
     *     
     */
    public void setStateMethods(StateMethodsDataType value) {
        this.stateMethods = value;
    }

    @Transient
    public boolean isSetStateMethods() {
        return (this.stateMethods!= null);
    }

    @OneToMany(targetEntity = StateLocationDetailsDataType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "STATE_ASMT_DTLS_ID", insertable = false, updatable = false)
    public List<StateLocationDetailsDataType> getStateLocationDetails() {
        return (stateLocations != null ? stateLocations.getStateLocationDetails() : null);
    }

    public void setStateLocationDetails(List<StateLocationDetailsDataType> list)
    {
        if(stateLocations == null)
        {
            ObjectFactory fact = new ObjectFactory();
            setStateLocations(fact.createStateLocationsDataType());
        }
        getStateLocations().setStateLocationDetails(list);
    }

    /**
     * Gets the value of the stateLocations property.
     * 
     * @return
     *     possible object is
     *     {@link StateLocationsDataType }
     *     
     */
    @Transient
    public StateLocationsDataType getStateLocations() {
        return stateLocations;
    }

    /**
     * Sets the value of the stateLocations property.
     * 
     * @param value
     *     allowed object is
     *     {@link StateLocationsDataType }
     *     
     */
    public void setStateLocations(StateLocationsDataType value) {
        this.stateLocations = value;
    }

    @Transient
    public boolean isSetStateLocations() {
        return (this.stateLocations!= null);
    }

    @OneToMany(targetEntity = ATLASDetailsDataType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "STATE_ASMT_DTLS_ID", insertable = false, updatable = false)
    public List<ATLASDetailsDataType> getATLASDetails() {
        return (atlaSes != null ? atlaSes.getATLASDetails() : null);
    }

    public void setATLASDetails(List<ATLASDetailsDataType> list)
    {
        if(atlaSes == null)
        {
            ObjectFactory fact = new ObjectFactory();
            setATLASes(fact.createATLASesDataType());
        }
        getATLASes().setATLASDetails(list);
    }

    /**
     * Gets the value of the atlaSes property.
     * 
     * @return
     *     possible object is
     *     {@link ATLASesDataType }
     *     
     */
    @Transient
    public ATLASesDataType getATLASes() {
        return atlaSes;
    }

    /**
     * Sets the value of the atlaSes property.
     * 
     * @param value
     *     allowed object is
     *     {@link ATLASesDataType }
     *     
     */
    public void setATLASes(ATLASesDataType value) {
        this.atlaSes = value;
    }

    @Transient
    public boolean isSetATLASes() {
        return (this.atlaSes!= null);
    }

    /**
     * Gets the value of the mercuryComment property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "MERCURY_COMMENT", length = 4000)
    public String getMercuryComment() {
        return mercuryComment;
    }

    /**
     * Sets the value of the mercuryComment property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setMercuryComment(String value) {
        this.mercuryComment = value;
    }

    @Transient
    public boolean isSetMercuryComment() {
        return (this.mercuryComment!= null);
    }

    /**
     * Gets the value of the mercuryURL property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "MERCURY_URL", length = 250)
    public String getMercuryURL() {
        return mercuryURL;
    }

    /**
     * Sets the value of the mercuryURL property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setMercuryURL(String value) {
        this.mercuryURL = value;
    }

    @Transient
    public boolean isSetMercuryURL() {
        return (this.mercuryURL!= null);
    }

    /**
     * 
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Id
    @Column(name = "STATE_ASMT_DTLS_ID")
    public String getDbid() {
        return dbid;
    }

    /**
     * 
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDbid(String value) {
        this.dbid = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof StateAssessmentDetailsDataType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final StateAssessmentDetailsDataType that = ((StateAssessmentDetailsDataType) object);
        {
            StateIdentityDataType lhsStateIdentity;
            lhsStateIdentity = this.getStateIdentity();
            StateIdentityDataType rhsStateIdentity;
            rhsStateIdentity = that.getStateIdentity();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "stateIdentity", lhsStateIdentity), LocatorUtils.property(thatLocator, "stateIdentity", rhsStateIdentity), lhsStateIdentity, rhsStateIdentity)) {
                return false;
            }
        }
        {
            Integer lhsCycle;
            lhsCycle = this.getCycle();
            Integer rhsCycle;
            rhsCycle = that.getCycle();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "cycle", lhsCycle), LocatorUtils.property(thatLocator, "cycle", rhsCycle), lhsCycle, rhsCycle)) {
                return false;
            }
        }
        {
            AssessmentUnitsDataType lhsAssessmentUnits;
            lhsAssessmentUnits = this.getAssessmentUnits();
            AssessmentUnitsDataType rhsAssessmentUnits;
            rhsAssessmentUnits = that.getAssessmentUnits();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "assessmentUnits", lhsAssessmentUnits), LocatorUtils.property(thatLocator, "assessmentUnits", rhsAssessmentUnits), lhsAssessmentUnits, rhsAssessmentUnits)) {
                return false;
            }
        }
        {
            UserCategoriesDataType lhsUserCategories;
            lhsUserCategories = this.getUserCategories();
            UserCategoriesDataType rhsUserCategories;
            rhsUserCategories = that.getUserCategories();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "userCategories", lhsUserCategories), LocatorUtils.property(thatLocator, "userCategories", rhsUserCategories), lhsUserCategories, rhsUserCategories)) {
                return false;
            }
        }
        {
            StateMethodsDataType lhsStateMethods;
            lhsStateMethods = this.getStateMethods();
            StateMethodsDataType rhsStateMethods;
            rhsStateMethods = that.getStateMethods();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "stateMethods", lhsStateMethods), LocatorUtils.property(thatLocator, "stateMethods", rhsStateMethods), lhsStateMethods, rhsStateMethods)) {
                return false;
            }
        }
        {
            StateLocationsDataType lhsStateLocations;
            lhsStateLocations = this.getStateLocations();
            StateLocationsDataType rhsStateLocations;
            rhsStateLocations = that.getStateLocations();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "stateLocations", lhsStateLocations), LocatorUtils.property(thatLocator, "stateLocations", rhsStateLocations), lhsStateLocations, rhsStateLocations)) {
                return false;
            }
        }
        {
            ATLASesDataType lhsATLASes;
            lhsATLASes = this.getATLASes();
            ATLASesDataType rhsATLASes;
            rhsATLASes = that.getATLASes();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "atlaSes", lhsATLASes), LocatorUtils.property(thatLocator, "atlaSes", rhsATLASes), lhsATLASes, rhsATLASes)) {
                return false;
            }
        }
        {
            String lhsMercuryComment;
            lhsMercuryComment = this.getMercuryComment();
            String rhsMercuryComment;
            rhsMercuryComment = that.getMercuryComment();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "mercuryComment", lhsMercuryComment), LocatorUtils.property(thatLocator, "mercuryComment", rhsMercuryComment), lhsMercuryComment, rhsMercuryComment)) {
                return false;
            }
        }
        {
            String lhsMercuryURL;
            lhsMercuryURL = this.getMercuryURL();
            String rhsMercuryURL;
            rhsMercuryURL = that.getMercuryURL();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "mercuryURL", lhsMercuryURL), LocatorUtils.property(thatLocator, "mercuryURL", rhsMercuryURL), lhsMercuryURL, rhsMercuryURL)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            StateIdentityDataType theStateIdentity;
            theStateIdentity = this.getStateIdentity();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "stateIdentity", theStateIdentity), currentHashCode, theStateIdentity);
        }
        {
            Integer theCycle;
            theCycle = this.getCycle();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "cycle", theCycle), currentHashCode, theCycle);
        }
        {
            AssessmentUnitsDataType theAssessmentUnits;
            theAssessmentUnits = this.getAssessmentUnits();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "assessmentUnits", theAssessmentUnits), currentHashCode, theAssessmentUnits);
        }
        {
            UserCategoriesDataType theUserCategories;
            theUserCategories = this.getUserCategories();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "userCategories", theUserCategories), currentHashCode, theUserCategories);
        }
        {
            StateMethodsDataType theStateMethods;
            theStateMethods = this.getStateMethods();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "stateMethods", theStateMethods), currentHashCode, theStateMethods);
        }
        {
            StateLocationsDataType theStateLocations;
            theStateLocations = this.getStateLocations();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "stateLocations", theStateLocations), currentHashCode, theStateLocations);
        }
        {
            ATLASesDataType theATLASes;
            theATLASes = this.getATLASes();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "atlaSes", theATLASes), currentHashCode, theATLASes);
        }
        {
            String theMercuryComment;
            theMercuryComment = this.getMercuryComment();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "mercuryComment", theMercuryComment), currentHashCode, theMercuryComment);
        }
        {
            String theMercuryURL;
            theMercuryURL = this.getMercuryURL();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "mercuryURL", theMercuryURL), currentHashCode, theMercuryURL);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
