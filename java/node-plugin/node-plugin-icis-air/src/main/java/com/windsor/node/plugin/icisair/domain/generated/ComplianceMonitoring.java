//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.09.02 at 11:05:46 AM PDT 
//


package com.windsor.node.plugin.icisair.domain.generated;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.persistence.AssociationOverride;
import javax.persistence.Basic;
import javax.persistence.CollectionTable;
import javax.persistence.Column;
import javax.persistence.ElementCollection;
import javax.persistence.Embeddable;
import javax.persistence.Embedded;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.JoinColumn;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;

import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;

import com.windsor.node.plugin.common.xml.bind.annotation.adapters.DateNoTimeZoneAdapter;
import com.windsor.node.plugin.common.xml.bind.annotation.adapters.IntegerAdapter;


/**
 * <p>Java class for ComplianceMonitoring complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="ComplianceMonitoring">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.exchangenetwork.net/schema/icis/5}ComplianceMonitoringKeyElements">
 *       &lt;sequence>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}PermitIdentifier" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}ComplianceMonitoringCategoryCode" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}ComplianceMonitoringDate" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}ComplianceMonitoringStartDate" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}ComplianceInspectionTypeCode" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}ComplianceMonitoringActivityName" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}ComplianceMonitoringActionReasonCode" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}ComplianceMonitoringAgencyTypeCode" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}ComplianceMonitoringAgencyCode" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}ProgramCode" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}StateStatuteViolatedName" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}EPAAssistanceIndicator" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}StateFederalJointIndicator" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}JointInspectionReasonCode" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}LeadParty" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}NumberDaysPhysicallyConductingActivity" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}NumberHoursPhysicallyConductingActivity" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}ComplianceMonitoringActionOutcomeCode" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}InspectionRatingCode" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}NationalPrioritiesCode" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}MultimediaIndicator" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}FederalFacilityIndicator" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}FederalFacilityIndicatorComment" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}InspectionUserDefinedField1" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}InspectionUserDefinedField2" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}InspectionUserDefinedField3" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}InspectionUserDefinedField4" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}InspectionUserDefinedField5" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}InspectionUserDefinedField6" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}InspectionCommentText" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}InspectionContact" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ComplianceMonitoring", propOrder = {
    "permitIdentifier",
    "complianceMonitoringCategoryCode",
    "complianceMonitoringDate",
    "complianceMonitoringStartDate",
    "complianceInspectionTypeCode",
    "complianceMonitoringActivityName",
    "complianceMonitoringActionReasonCode",
    "complianceMonitoringAgencyTypeCode",
    "complianceMonitoringAgencyCode",
    "programCode",
    "stateStatuteViolatedName",
    "epaAssistanceIndicator",
    "stateFederalJointIndicator",
    "jointInspectionReasonCode",
    "leadParty",
    "numberDaysPhysicallyConductingActivity",
    "numberHoursPhysicallyConductingActivity",
    "complianceMonitoringActionOutcomeCode",
    "inspectionRatingCode",
    "nationalPrioritiesCode",
    "multimediaIndicator",
    "federalFacilityIndicator",
    "federalFacilityIndicatorComment",
    "inspectionUserDefinedField1",
    "inspectionUserDefinedField2",
    "inspectionUserDefinedField3",
    "inspectionUserDefinedField4",
    "inspectionUserDefinedField5",
    "inspectionUserDefinedField6",
    "inspectionCommentText",
    "inspectionContact"
})
@Embeddable
public class ComplianceMonitoring
    extends ComplianceMonitoringKeyElements
    implements Serializable, Equals, HashCode
{

    private final static long serialVersionUID = 1L;
    @XmlElement(name = "PermitIdentifier")
    protected String permitIdentifier;
    @XmlElement(name = "ComplianceMonitoringCategoryCode")
    protected String complianceMonitoringCategoryCode;
    @XmlElement(name = "ComplianceMonitoringDate", type = String.class)
    @XmlJavaTypeAdapter(DateNoTimeZoneAdapter.class)
    @XmlSchemaType(name = "date")
    protected Date complianceMonitoringDate;
    @XmlElement(name = "ComplianceMonitoringStartDate", type = String.class)
    @XmlJavaTypeAdapter(DateNoTimeZoneAdapter.class)
    protected Date complianceMonitoringStartDate;
    @XmlElement(name = "ComplianceInspectionTypeCode")
    protected List<String> complianceInspectionTypeCode;
    @XmlElement(name = "ComplianceMonitoringActivityName")
    protected String complianceMonitoringActivityName;
    @XmlElement(name = "ComplianceMonitoringActionReasonCode")
    protected List<String> complianceMonitoringActionReasonCode;
    @XmlElement(name = "ComplianceMonitoringAgencyTypeCode")
    protected List<String> complianceMonitoringAgencyTypeCode;
    @XmlElement(name = "ComplianceMonitoringAgencyCode", type = String.class)
    @XmlJavaTypeAdapter(IntegerAdapter.class)
    protected Integer complianceMonitoringAgencyCode;
    @XmlElement(name = "ProgramCode")
    protected List<String> programCode;
    @XmlElement(name = "StateStatuteViolatedName")
    protected String stateStatuteViolatedName;
    @XmlElement(name = "EPAAssistanceIndicator")
    protected String epaAssistanceIndicator;
    @XmlElement(name = "StateFederalJointIndicator")
    protected String stateFederalJointIndicator;
    @XmlElement(name = "JointInspectionReasonCode")
    protected String jointInspectionReasonCode;
    @XmlElement(name = "LeadParty")
    protected String leadParty;
    @XmlElement(name = "NumberDaysPhysicallyConductingActivity", type = String.class)
    @XmlJavaTypeAdapter(IntegerAdapter.class)
    protected Integer numberDaysPhysicallyConductingActivity;
    @XmlElement(name = "NumberHoursPhysicallyConductingActivity", type = String.class)
    @XmlJavaTypeAdapter(IntegerAdapter.class)
    protected Integer numberHoursPhysicallyConductingActivity;
    @XmlElement(name = "ComplianceMonitoringActionOutcomeCode", type = String.class)
    @XmlJavaTypeAdapter(IntegerAdapter.class)
    protected Integer complianceMonitoringActionOutcomeCode;
    @XmlElement(name = "InspectionRatingCode")
    protected String inspectionRatingCode;
    @XmlElement(name = "NationalPrioritiesCode", type = String.class)
    @XmlJavaTypeAdapter(IntegerAdapter.class)
    protected List<Integer> nationalPrioritiesCode;
    @XmlElement(name = "MultimediaIndicator")
    protected YesNoIndicatorTypeBase multimediaIndicator;
    @XmlElement(name = "FederalFacilityIndicator")
    protected String federalFacilityIndicator;
    @XmlElement(name = "FederalFacilityIndicatorComment")
    protected String federalFacilityIndicatorComment;
    @XmlElement(name = "InspectionUserDefinedField1")
    protected YesNoIndicatorTypeBase inspectionUserDefinedField1;
    @XmlElement(name = "InspectionUserDefinedField2")
    protected String inspectionUserDefinedField2;
    @XmlElement(name = "InspectionUserDefinedField3")
    protected String inspectionUserDefinedField3;
    @XmlElement(name = "InspectionUserDefinedField4", type = String.class)
    @XmlJavaTypeAdapter(DateNoTimeZoneAdapter.class)
    protected Date inspectionUserDefinedField4;
    @XmlElement(name = "InspectionUserDefinedField5", type = String.class)
    @XmlJavaTypeAdapter(DateNoTimeZoneAdapter.class)
    protected Date inspectionUserDefinedField5;
    @XmlElement(name = "InspectionUserDefinedField6")
    protected String inspectionUserDefinedField6;
    @XmlElement(name = "InspectionCommentText")
    protected String inspectionCommentText;
    @XmlElement(name = "InspectionContact")
    protected InspectionContact inspectionContact;

    /**
     * Gets the value of the permitIdentifier property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "PRMT_IDENT", columnDefinition = "char(9)", length = 9)
    public String getPermitIdentifier() {
        return permitIdentifier;
    }

    /**
     * Sets the value of the permitIdentifier property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPermitIdentifier(String value) {
        this.permitIdentifier = value;
    }

    @Transient
    public boolean isSetPermitIdentifier() {
        return (this.permitIdentifier!= null);
    }

    /**
     * Gets the value of the complianceMonitoringCategoryCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "CMPL_MON_CATG_CODE", length = 3)
    public String getComplianceMonitoringCategoryCode() {
        return complianceMonitoringCategoryCode;
    }

    /**
     * Sets the value of the complianceMonitoringCategoryCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setComplianceMonitoringCategoryCode(String value) {
        this.complianceMonitoringCategoryCode = value;
    }

    @Transient
    public boolean isSetComplianceMonitoringCategoryCode() {
        return (this.complianceMonitoringCategoryCode!= null);
    }

    /**
     * Gets the value of the complianceMonitoringDate property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "CMPL_MON_DATE")
    @Temporal(TemporalType.DATE)
    public Date getComplianceMonitoringDate() {
        return complianceMonitoringDate;
    }

    /**
     * Sets the value of the complianceMonitoringDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setComplianceMonitoringDate(Date value) {
        this.complianceMonitoringDate = value;
    }

    @Transient
    public boolean isSetComplianceMonitoringDate() {
        return (this.complianceMonitoringDate!= null);
    }

    /**
     * Gets the value of the complianceMonitoringStartDate property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "CMPL_MON_START_DATE")
    @Temporal(TemporalType.TIMESTAMP)
    public Date getComplianceMonitoringStartDate() {
        return complianceMonitoringStartDate;
    }

    /**
     * Sets the value of the complianceMonitoringStartDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setComplianceMonitoringStartDate(Date value) {
        this.complianceMonitoringStartDate = value;
    }

    @Transient
    public boolean isSetComplianceMonitoringStartDate() {
        return (this.complianceMonitoringStartDate!= null);
    }

    /**
     * Gets the value of the complianceInspectionTypeCode property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the complianceInspectionTypeCode property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getComplianceInspectionTypeCode().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * 
     * 
     */
    @ElementCollection
    @Column(name = "CMPL_INSP_TYPE_CODE", length = 3)
    @CollectionTable(name = "ICA_CMPL_INSP_TYPE", joinColumns = {
        @JoinColumn(name = "ICA_CMPL_MON_ID")
    })
    public List<String> getComplianceInspectionTypeCode() {
        if (complianceInspectionTypeCode == null) {
            complianceInspectionTypeCode = new ArrayList<String>();
        }
        return this.complianceInspectionTypeCode;
    }

    /**
     * 
     * 
     */
    public void setComplianceInspectionTypeCode(List<String> complianceInspectionTypeCode) {
        this.complianceInspectionTypeCode = complianceInspectionTypeCode;
    }

    @Transient
    public boolean isSetComplianceInspectionTypeCode() {
        return ((this.complianceInspectionTypeCode!= null)&&(!this.complianceInspectionTypeCode.isEmpty()));
    }

    public void unsetComplianceInspectionTypeCode() {
        this.complianceInspectionTypeCode = null;
    }

    /**
     * Gets the value of the complianceMonitoringActivityName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "CMPL_MON_ACTY_NAME", length = 100)
    public String getComplianceMonitoringActivityName() {
        return complianceMonitoringActivityName;
    }

    /**
     * Sets the value of the complianceMonitoringActivityName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setComplianceMonitoringActivityName(String value) {
        this.complianceMonitoringActivityName = value;
    }

    @Transient
    public boolean isSetComplianceMonitoringActivityName() {
        return (this.complianceMonitoringActivityName!= null);
    }

    /**
     * Gets the value of the complianceMonitoringActionReasonCode property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the complianceMonitoringActionReasonCode property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getComplianceMonitoringActionReasonCode().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * 
     * 
     */
    @ElementCollection
    @Column(name = "CMPL_MON_ACTN_REASON_CODE", length = 3)
    @CollectionTable(name = "ICA_CMPL_MON_ACTN_REASON", joinColumns = {
        @JoinColumn(name = "ICA_CMPL_MON_ID")
    })
    public List<String> getComplianceMonitoringActionReasonCode() {
        if (complianceMonitoringActionReasonCode == null) {
            complianceMonitoringActionReasonCode = new ArrayList<String>();
        }
        return this.complianceMonitoringActionReasonCode;
    }

    /**
     * 
     * 
     */
    public void setComplianceMonitoringActionReasonCode(List<String> complianceMonitoringActionReasonCode) {
        this.complianceMonitoringActionReasonCode = complianceMonitoringActionReasonCode;
    }

    @Transient
    public boolean isSetComplianceMonitoringActionReasonCode() {
        return ((this.complianceMonitoringActionReasonCode!= null)&&(!this.complianceMonitoringActionReasonCode.isEmpty()));
    }

    public void unsetComplianceMonitoringActionReasonCode() {
        this.complianceMonitoringActionReasonCode = null;
    }

    /**
     * Gets the value of the complianceMonitoringAgencyTypeCode property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the complianceMonitoringAgencyTypeCode property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getComplianceMonitoringAgencyTypeCode().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * 
     * 
     */
    @ElementCollection
    @Column(name = "CMPL_MON_AGNCY_TYPE_CODE", length = 3)
    @CollectionTable(name = "ICA_CMPL_MON_AGNCY_TYPE", joinColumns = {
        @JoinColumn(name = "ICA_CMPL_MON_ID")
    })
    public List<String> getComplianceMonitoringAgencyTypeCode() {
        if (complianceMonitoringAgencyTypeCode == null) {
            complianceMonitoringAgencyTypeCode = new ArrayList<String>();
        }
        return this.complianceMonitoringAgencyTypeCode;
    }

    /**
     * 
     * 
     */
    public void setComplianceMonitoringAgencyTypeCode(List<String> complianceMonitoringAgencyTypeCode) {
        this.complianceMonitoringAgencyTypeCode = complianceMonitoringAgencyTypeCode;
    }

    @Transient
    public boolean isSetComplianceMonitoringAgencyTypeCode() {
        return ((this.complianceMonitoringAgencyTypeCode!= null)&&(!this.complianceMonitoringAgencyTypeCode.isEmpty()));
    }

    public void unsetComplianceMonitoringAgencyTypeCode() {
        this.complianceMonitoringAgencyTypeCode = null;
    }

    /**
     * Gets the value of the complianceMonitoringAgencyCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "CMPL_MON_AGNCY_CODE", scale = 0)
    public Integer getComplianceMonitoringAgencyCode() {
        return complianceMonitoringAgencyCode;
    }

    /**
     * Sets the value of the complianceMonitoringAgencyCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setComplianceMonitoringAgencyCode(Integer value) {
        this.complianceMonitoringAgencyCode = value;
    }

    @Transient
    public boolean isSetComplianceMonitoringAgencyCode() {
        return (this.complianceMonitoringAgencyCode!= null);
    }

    /**
     * Gets the value of the programCode property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the programCode property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getProgramCode().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * 
     * 
     */
    @ElementCollection
    @Column(name = "PROG_CODE", length = 9)
    @CollectionTable(name = "ICA_PROG", joinColumns = {
        @JoinColumn(name = "ICA_CMPL_MON_ID")
    })
    public List<String> getProgramCode() {
        if (programCode == null) {
            programCode = new ArrayList<String>();
        }
        return this.programCode;
    }

    /**
     * 
     * 
     */
    public void setProgramCode(List<String> programCode) {
        this.programCode = programCode;
    }

    @Transient
    public boolean isSetProgramCode() {
        return ((this.programCode!= null)&&(!this.programCode.isEmpty()));
    }

    public void unsetProgramCode() {
        this.programCode = null;
    }

    /**
     * Gets the value of the stateStatuteViolatedName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "ST_STATUTE_VIOL_NAME", length = 100)
    public String getStateStatuteViolatedName() {
        return stateStatuteViolatedName;
    }

    /**
     * Sets the value of the stateStatuteViolatedName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setStateStatuteViolatedName(String value) {
        this.stateStatuteViolatedName = value;
    }

    @Transient
    public boolean isSetStateStatuteViolatedName() {
        return (this.stateStatuteViolatedName!= null);
    }

    /**
     * Gets the value of the epaAssistanceIndicator property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "EPA_ASSIST_IND", columnDefinition = "char(1)", length = 1)
    public String getEPAAssistanceIndicator() {
        return epaAssistanceIndicator;
    }

    /**
     * Sets the value of the epaAssistanceIndicator property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEPAAssistanceIndicator(String value) {
        this.epaAssistanceIndicator = value;
    }

    @Transient
    public boolean isSetEPAAssistanceIndicator() {
        return (this.epaAssistanceIndicator!= null);
    }

    /**
     * Gets the value of the stateFederalJointIndicator property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "ST_FEDR_JOINT_IND", columnDefinition = "char(1)", length = 1)
    public String getStateFederalJointIndicator() {
        return stateFederalJointIndicator;
    }

    /**
     * Sets the value of the stateFederalJointIndicator property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setStateFederalJointIndicator(String value) {
        this.stateFederalJointIndicator = value;
    }

    @Transient
    public boolean isSetStateFederalJointIndicator() {
        return (this.stateFederalJointIndicator!= null);
    }

    /**
     * Gets the value of the jointInspectionReasonCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "JOINT_INSP_REASON_CODE", length = 3)
    public String getJointInspectionReasonCode() {
        return jointInspectionReasonCode;
    }

    /**
     * Sets the value of the jointInspectionReasonCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setJointInspectionReasonCode(String value) {
        this.jointInspectionReasonCode = value;
    }

    @Transient
    public boolean isSetJointInspectionReasonCode() {
        return (this.jointInspectionReasonCode!= null);
    }

    /**
     * Gets the value of the leadParty property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "LEAD_PARTY", columnDefinition = "char(1)", length = 1)
    public String getLeadParty() {
        return leadParty;
    }

    /**
     * Sets the value of the leadParty property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLeadParty(String value) {
        this.leadParty = value;
    }

    @Transient
    public boolean isSetLeadParty() {
        return (this.leadParty!= null);
    }

    /**
     * Gets the value of the numberDaysPhysicallyConductingActivity property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "NUM_DAYS_PHYS_COND_ACTY", scale = 0)
    public Integer getNumberDaysPhysicallyConductingActivity() {
        return numberDaysPhysicallyConductingActivity;
    }

    /**
     * Sets the value of the numberDaysPhysicallyConductingActivity property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setNumberDaysPhysicallyConductingActivity(Integer value) {
        this.numberDaysPhysicallyConductingActivity = value;
    }

    @Transient
    public boolean isSetNumberDaysPhysicallyConductingActivity() {
        return (this.numberDaysPhysicallyConductingActivity!= null);
    }

    /**
     * Gets the value of the numberHoursPhysicallyConductingActivity property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "NUM_HOURS_PHYS_COND_ACTY", scale = 0)
    public Integer getNumberHoursPhysicallyConductingActivity() {
        return numberHoursPhysicallyConductingActivity;
    }

    /**
     * Sets the value of the numberHoursPhysicallyConductingActivity property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setNumberHoursPhysicallyConductingActivity(Integer value) {
        this.numberHoursPhysicallyConductingActivity = value;
    }

    @Transient
    public boolean isSetNumberHoursPhysicallyConductingActivity() {
        return (this.numberHoursPhysicallyConductingActivity!= null);
    }

    /**
     * Gets the value of the complianceMonitoringActionOutcomeCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "CMPL_MON_ACTN_OUTCOME_CODE", scale = 0)
    public Integer getComplianceMonitoringActionOutcomeCode() {
        return complianceMonitoringActionOutcomeCode;
    }

    /**
     * Sets the value of the complianceMonitoringActionOutcomeCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setComplianceMonitoringActionOutcomeCode(Integer value) {
        this.complianceMonitoringActionOutcomeCode = value;
    }

    @Transient
    public boolean isSetComplianceMonitoringActionOutcomeCode() {
        return (this.complianceMonitoringActionOutcomeCode!= null);
    }

    /**
     * Gets the value of the inspectionRatingCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "INSP_RATING_CODE", length = 3)
    public String getInspectionRatingCode() {
        return inspectionRatingCode;
    }

    /**
     * Sets the value of the inspectionRatingCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setInspectionRatingCode(String value) {
        this.inspectionRatingCode = value;
    }

    @Transient
    public boolean isSetInspectionRatingCode() {
        return (this.inspectionRatingCode!= null);
    }

    /**
     * Gets the value of the nationalPrioritiesCode property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the nationalPrioritiesCode property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getNationalPrioritiesCode().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * 
     * 
     */
    @ElementCollection
    @Column(name = "NAT_PRIO_CODE")
    @CollectionTable(name = "ICA_NAT_PRIO", joinColumns = {
        @JoinColumn(name = "ICA_CMPL_MON_ID")
    })
    public List<Integer> getNationalPrioritiesCode() {
        if (nationalPrioritiesCode == null) {
            nationalPrioritiesCode = new ArrayList<Integer>();
        }
        return this.nationalPrioritiesCode;
    }

    /**
     * 
     * 
     */
    public void setNationalPrioritiesCode(List<Integer> nationalPrioritiesCode) {
        this.nationalPrioritiesCode = nationalPrioritiesCode;
    }

    @Transient
    public boolean isSetNationalPrioritiesCode() {
        return ((this.nationalPrioritiesCode!= null)&&(!this.nationalPrioritiesCode.isEmpty()));
    }

    public void unsetNationalPrioritiesCode() {
        this.nationalPrioritiesCode = null;
    }

    /**
     * Gets the value of the multimediaIndicator property.
     * 
     * @return
     *     possible object is
     *     {@link YesNoIndicatorTypeBase }
     *     
     */
    @Basic
    @Column(name = "MULTIMEDIA_IND", columnDefinition = "char(1)", length = 1)
    @Enumerated(EnumType.STRING)
    public YesNoIndicatorTypeBase getMultimediaIndicator() {
        return multimediaIndicator;
    }

    /**
     * Sets the value of the multimediaIndicator property.
     * 
     * @param value
     *     allowed object is
     *     {@link YesNoIndicatorTypeBase }
     *     
     */
    public void setMultimediaIndicator(YesNoIndicatorTypeBase value) {
        this.multimediaIndicator = value;
    }

    @Transient
    public boolean isSetMultimediaIndicator() {
        return (this.multimediaIndicator!= null);
    }

    /**
     * Gets the value of the federalFacilityIndicator property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "FEDR_FAC_IND", length = 3)
    public String getFederalFacilityIndicator() {
        return federalFacilityIndicator;
    }

    /**
     * Sets the value of the federalFacilityIndicator property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setFederalFacilityIndicator(String value) {
        this.federalFacilityIndicator = value;
    }

    @Transient
    public boolean isSetFederalFacilityIndicator() {
        return (this.federalFacilityIndicator!= null);
    }

    /**
     * Gets the value of the federalFacilityIndicatorComment property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "FEDR_FAC_IND_CMNT", length = 4000)
    public String getFederalFacilityIndicatorComment() {
        return federalFacilityIndicatorComment;
    }

    /**
     * Sets the value of the federalFacilityIndicatorComment property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setFederalFacilityIndicatorComment(String value) {
        this.federalFacilityIndicatorComment = value;
    }

    @Transient
    public boolean isSetFederalFacilityIndicatorComment() {
        return (this.federalFacilityIndicatorComment!= null);
    }

    /**
     * Gets the value of the inspectionUserDefinedField1 property.
     * 
     * @return
     *     possible object is
     *     {@link YesNoIndicatorTypeBase }
     *     
     */
    @Basic
    @Column(name = "INSP_USR_DFND_FLD_1", columnDefinition = "char(1)", length = 1)
    @Enumerated(EnumType.STRING)
    public YesNoIndicatorTypeBase getInspectionUserDefinedField1() {
        return inspectionUserDefinedField1;
    }

    /**
     * Sets the value of the inspectionUserDefinedField1 property.
     * 
     * @param value
     *     allowed object is
     *     {@link YesNoIndicatorTypeBase }
     *     
     */
    public void setInspectionUserDefinedField1(YesNoIndicatorTypeBase value) {
        this.inspectionUserDefinedField1 = value;
    }

    @Transient
    public boolean isSetInspectionUserDefinedField1() {
        return (this.inspectionUserDefinedField1 != null);
    }

    /**
     * Gets the value of the inspectionUserDefinedField2 property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "INSP_USR_DFND_FLD_2", length = 50)
    public String getInspectionUserDefinedField2() {
        return inspectionUserDefinedField2;
    }

    /**
     * Sets the value of the inspectionUserDefinedField2 property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setInspectionUserDefinedField2(String value) {
        this.inspectionUserDefinedField2 = value;
    }

    @Transient
    public boolean isSetInspectionUserDefinedField2() {
        return (this.inspectionUserDefinedField2 != null);
    }

    /**
     * Gets the value of the inspectionUserDefinedField3 property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "INSP_USR_DFND_FLD_3", length = 50)
    public String getInspectionUserDefinedField3() {
        return inspectionUserDefinedField3;
    }

    /**
     * Sets the value of the inspectionUserDefinedField3 property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setInspectionUserDefinedField3(String value) {
        this.inspectionUserDefinedField3 = value;
    }

    @Transient
    public boolean isSetInspectionUserDefinedField3() {
        return (this.inspectionUserDefinedField3 != null);
    }

    /**
     * Gets the value of the inspectionUserDefinedField4 property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "INSP_USR_DFND_FLD_4")
    @Temporal(TemporalType.TIMESTAMP)
    public Date getInspectionUserDefinedField4() {
        return inspectionUserDefinedField4;
    }

    /**
     * Sets the value of the inspectionUserDefinedField4 property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setInspectionUserDefinedField4(Date value) {
        this.inspectionUserDefinedField4 = value;
    }

    @Transient
    public boolean isSetInspectionUserDefinedField4() {
        return (this.inspectionUserDefinedField4 != null);
    }

    /**
     * Gets the value of the inspectionUserDefinedField5 property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "INSP_USR_DFND_FLD_5")
    @Temporal(TemporalType.TIMESTAMP)
    public Date getInspectionUserDefinedField5() {
        return inspectionUserDefinedField5;
    }

    /**
     * Sets the value of the inspectionUserDefinedField5 property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setInspectionUserDefinedField5(Date value) {
        this.inspectionUserDefinedField5 = value;
    }

    @Transient
    public boolean isSetInspectionUserDefinedField5() {
        return (this.inspectionUserDefinedField5 != null);
    }

    /**
     * Gets the value of the inspectionUserDefinedField6 property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "INSP_USR_DFND_FLD_6", length = 4000)
    public String getInspectionUserDefinedField6() {
        return inspectionUserDefinedField6;
    }

    /**
     * Sets the value of the inspectionUserDefinedField6 property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setInspectionUserDefinedField6(String value) {
        this.inspectionUserDefinedField6 = value;
    }

    @Transient
    public boolean isSetInspectionUserDefinedField6() {
        return (this.inspectionUserDefinedField6 != null);
    }

    /**
     * Gets the value of the inspectionCommentText property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "INSP_CMNT_TXT", length = 4000)
    public String getInspectionCommentText() {
        return inspectionCommentText;
    }

    /**
     * Sets the value of the inspectionCommentText property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setInspectionCommentText(String value) {
        this.inspectionCommentText = value;
    }

    @Transient
    public boolean isSetInspectionCommentText() {
        return (this.inspectionCommentText!= null);
    }

    /**
     * Gets the value of the inspectionContact property.
     * 
     * @return
     *     possible object is
     *     {@link InspectionContact }
     *     
     */
    @Embedded
    @AssociationOverride(name = "contact", joinColumns = {
        @JoinColumn(name = "ICA_CMPL_MON_ID")
    })
    public InspectionContact getInspectionContact() {
        return inspectionContact;
    }

    /**
     * Sets the value of the inspectionContact property.
     * 
     * @param value
     *     allowed object is
     *     {@link InspectionContact }
     *     
     */
    public void setInspectionContact(InspectionContact value) {
        this.inspectionContact = value;
    }

    @Transient
    public boolean isSetInspectionContact() {
        return (this.inspectionContact!= null);
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof ComplianceMonitoring)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final ComplianceMonitoring that = ((ComplianceMonitoring) object);
        {
            String lhsPermitIdentifier;
            lhsPermitIdentifier = this.getPermitIdentifier();
            String rhsPermitIdentifier;
            rhsPermitIdentifier = that.getPermitIdentifier();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "permitIdentifier", lhsPermitIdentifier), LocatorUtils.property(thatLocator, "permitIdentifier", rhsPermitIdentifier), lhsPermitIdentifier, rhsPermitIdentifier)) {
                return false;
            }
        }
        {
            String lhsComplianceMonitoringCategoryCode;
            lhsComplianceMonitoringCategoryCode = this.getComplianceMonitoringCategoryCode();
            String rhsComplianceMonitoringCategoryCode;
            rhsComplianceMonitoringCategoryCode = that.getComplianceMonitoringCategoryCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "complianceMonitoringCategoryCode", lhsComplianceMonitoringCategoryCode), LocatorUtils.property(thatLocator, "complianceMonitoringCategoryCode", rhsComplianceMonitoringCategoryCode), lhsComplianceMonitoringCategoryCode, rhsComplianceMonitoringCategoryCode)) {
                return false;
            }
        }
        {
            Date lhsComplianceMonitoringDate;
            lhsComplianceMonitoringDate = this.getComplianceMonitoringDate();
            Date rhsComplianceMonitoringDate;
            rhsComplianceMonitoringDate = that.getComplianceMonitoringDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "complianceMonitoringDate", lhsComplianceMonitoringDate), LocatorUtils.property(thatLocator, "complianceMonitoringDate", rhsComplianceMonitoringDate), lhsComplianceMonitoringDate, rhsComplianceMonitoringDate)) {
                return false;
            }
        }
        {
            Date lhsComplianceMonitoringStartDate;
            lhsComplianceMonitoringStartDate = this.getComplianceMonitoringStartDate();
            Date rhsComplianceMonitoringStartDate;
            rhsComplianceMonitoringStartDate = that.getComplianceMonitoringStartDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "complianceMonitoringStartDate", lhsComplianceMonitoringStartDate), LocatorUtils.property(thatLocator, "complianceMonitoringStartDate", rhsComplianceMonitoringStartDate), lhsComplianceMonitoringStartDate, rhsComplianceMonitoringStartDate)) {
                return false;
            }
        }
        {
            List<String> lhsComplianceInspectionTypeCode;
            lhsComplianceInspectionTypeCode = (this.isSetComplianceInspectionTypeCode()?this.getComplianceInspectionTypeCode():null);
            List<String> rhsComplianceInspectionTypeCode;
            rhsComplianceInspectionTypeCode = (that.isSetComplianceInspectionTypeCode()?that.getComplianceInspectionTypeCode():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "complianceInspectionTypeCode", lhsComplianceInspectionTypeCode), LocatorUtils.property(thatLocator, "complianceInspectionTypeCode", rhsComplianceInspectionTypeCode), lhsComplianceInspectionTypeCode, rhsComplianceInspectionTypeCode)) {
                return false;
            }
        }
        {
            String lhsComplianceMonitoringActivityName;
            lhsComplianceMonitoringActivityName = this.getComplianceMonitoringActivityName();
            String rhsComplianceMonitoringActivityName;
            rhsComplianceMonitoringActivityName = that.getComplianceMonitoringActivityName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "complianceMonitoringActivityName", lhsComplianceMonitoringActivityName), LocatorUtils.property(thatLocator, "complianceMonitoringActivityName", rhsComplianceMonitoringActivityName), lhsComplianceMonitoringActivityName, rhsComplianceMonitoringActivityName)) {
                return false;
            }
        }
        {
            List<String> lhsComplianceMonitoringActionReasonCode;
            lhsComplianceMonitoringActionReasonCode = (this.isSetComplianceMonitoringActionReasonCode()?this.getComplianceMonitoringActionReasonCode():null);
            List<String> rhsComplianceMonitoringActionReasonCode;
            rhsComplianceMonitoringActionReasonCode = (that.isSetComplianceMonitoringActionReasonCode()?that.getComplianceMonitoringActionReasonCode():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "complianceMonitoringActionReasonCode", lhsComplianceMonitoringActionReasonCode), LocatorUtils.property(thatLocator, "complianceMonitoringActionReasonCode", rhsComplianceMonitoringActionReasonCode), lhsComplianceMonitoringActionReasonCode, rhsComplianceMonitoringActionReasonCode)) {
                return false;
            }
        }
        {
            List<String> lhsComplianceMonitoringAgencyTypeCode;
            lhsComplianceMonitoringAgencyTypeCode = (this.isSetComplianceMonitoringAgencyTypeCode()?this.getComplianceMonitoringAgencyTypeCode():null);
            List<String> rhsComplianceMonitoringAgencyTypeCode;
            rhsComplianceMonitoringAgencyTypeCode = (that.isSetComplianceMonitoringAgencyTypeCode()?that.getComplianceMonitoringAgencyTypeCode():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "complianceMonitoringAgencyTypeCode", lhsComplianceMonitoringAgencyTypeCode), LocatorUtils.property(thatLocator, "complianceMonitoringAgencyTypeCode", rhsComplianceMonitoringAgencyTypeCode), lhsComplianceMonitoringAgencyTypeCode, rhsComplianceMonitoringAgencyTypeCode)) {
                return false;
            }
        }
        {
            Integer lhsComplianceMonitoringAgencyCode;
            lhsComplianceMonitoringAgencyCode = this.getComplianceMonitoringAgencyCode();
            Integer rhsComplianceMonitoringAgencyCode;
            rhsComplianceMonitoringAgencyCode = that.getComplianceMonitoringAgencyCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "complianceMonitoringAgencyCode", lhsComplianceMonitoringAgencyCode), LocatorUtils.property(thatLocator, "complianceMonitoringAgencyCode", rhsComplianceMonitoringAgencyCode), lhsComplianceMonitoringAgencyCode, rhsComplianceMonitoringAgencyCode)) {
                return false;
            }
        }
        {
            List<String> lhsProgramCode;
            lhsProgramCode = (this.isSetProgramCode()?this.getProgramCode():null);
            List<String> rhsProgramCode;
            rhsProgramCode = (that.isSetProgramCode()?that.getProgramCode():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "programCode", lhsProgramCode), LocatorUtils.property(thatLocator, "programCode", rhsProgramCode), lhsProgramCode, rhsProgramCode)) {
                return false;
            }
        }
        {
            String lhsStateStatuteViolatedName;
            lhsStateStatuteViolatedName = this.getStateStatuteViolatedName();
            String rhsStateStatuteViolatedName;
            rhsStateStatuteViolatedName = that.getStateStatuteViolatedName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "stateStatuteViolatedName", lhsStateStatuteViolatedName), LocatorUtils.property(thatLocator, "stateStatuteViolatedName", rhsStateStatuteViolatedName), lhsStateStatuteViolatedName, rhsStateStatuteViolatedName)) {
                return false;
            }
        }
        {
            String lhsEPAAssistanceIndicator;
            lhsEPAAssistanceIndicator = this.getEPAAssistanceIndicator();
            String rhsEPAAssistanceIndicator;
            rhsEPAAssistanceIndicator = that.getEPAAssistanceIndicator();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "epaAssistanceIndicator", lhsEPAAssistanceIndicator), LocatorUtils.property(thatLocator, "epaAssistanceIndicator", rhsEPAAssistanceIndicator), lhsEPAAssistanceIndicator, rhsEPAAssistanceIndicator)) {
                return false;
            }
        }
        {
            String lhsStateFederalJointIndicator;
            lhsStateFederalJointIndicator = this.getStateFederalJointIndicator();
            String rhsStateFederalJointIndicator;
            rhsStateFederalJointIndicator = that.getStateFederalJointIndicator();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "stateFederalJointIndicator", lhsStateFederalJointIndicator), LocatorUtils.property(thatLocator, "stateFederalJointIndicator", rhsStateFederalJointIndicator), lhsStateFederalJointIndicator, rhsStateFederalJointIndicator)) {
                return false;
            }
        }
        {
            String lhsJointInspectionReasonCode;
            lhsJointInspectionReasonCode = this.getJointInspectionReasonCode();
            String rhsJointInspectionReasonCode;
            rhsJointInspectionReasonCode = that.getJointInspectionReasonCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "jointInspectionReasonCode", lhsJointInspectionReasonCode), LocatorUtils.property(thatLocator, "jointInspectionReasonCode", rhsJointInspectionReasonCode), lhsJointInspectionReasonCode, rhsJointInspectionReasonCode)) {
                return false;
            }
        }
        {
            String lhsLeadParty;
            lhsLeadParty = this.getLeadParty();
            String rhsLeadParty;
            rhsLeadParty = that.getLeadParty();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "leadParty", lhsLeadParty), LocatorUtils.property(thatLocator, "leadParty", rhsLeadParty), lhsLeadParty, rhsLeadParty)) {
                return false;
            }
        }
        {
            Integer lhsNumberDaysPhysicallyConductingActivity;
            lhsNumberDaysPhysicallyConductingActivity = this.getNumberDaysPhysicallyConductingActivity();
            Integer rhsNumberDaysPhysicallyConductingActivity;
            rhsNumberDaysPhysicallyConductingActivity = that.getNumberDaysPhysicallyConductingActivity();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "numberDaysPhysicallyConductingActivity", lhsNumberDaysPhysicallyConductingActivity), LocatorUtils.property(thatLocator, "numberDaysPhysicallyConductingActivity", rhsNumberDaysPhysicallyConductingActivity), lhsNumberDaysPhysicallyConductingActivity, rhsNumberDaysPhysicallyConductingActivity)) {
                return false;
            }
        }
        {
            Integer lhsNumberHoursPhysicallyConductingActivity;
            lhsNumberHoursPhysicallyConductingActivity = this.getNumberHoursPhysicallyConductingActivity();
            Integer rhsNumberHoursPhysicallyConductingActivity;
            rhsNumberHoursPhysicallyConductingActivity = that.getNumberHoursPhysicallyConductingActivity();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "numberHoursPhysicallyConductingActivity", lhsNumberHoursPhysicallyConductingActivity), LocatorUtils.property(thatLocator, "numberHoursPhysicallyConductingActivity", rhsNumberHoursPhysicallyConductingActivity), lhsNumberHoursPhysicallyConductingActivity, rhsNumberHoursPhysicallyConductingActivity)) {
                return false;
            }
        }
        {
            Integer lhsComplianceMonitoringActionOutcomeCode;
            lhsComplianceMonitoringActionOutcomeCode = this.getComplianceMonitoringActionOutcomeCode();
            Integer rhsComplianceMonitoringActionOutcomeCode;
            rhsComplianceMonitoringActionOutcomeCode = that.getComplianceMonitoringActionOutcomeCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "complianceMonitoringActionOutcomeCode", lhsComplianceMonitoringActionOutcomeCode), LocatorUtils.property(thatLocator, "complianceMonitoringActionOutcomeCode", rhsComplianceMonitoringActionOutcomeCode), lhsComplianceMonitoringActionOutcomeCode, rhsComplianceMonitoringActionOutcomeCode)) {
                return false;
            }
        }
        {
            String lhsInspectionRatingCode;
            lhsInspectionRatingCode = this.getInspectionRatingCode();
            String rhsInspectionRatingCode;
            rhsInspectionRatingCode = that.getInspectionRatingCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "inspectionRatingCode", lhsInspectionRatingCode), LocatorUtils.property(thatLocator, "inspectionRatingCode", rhsInspectionRatingCode), lhsInspectionRatingCode, rhsInspectionRatingCode)) {
                return false;
            }
        }
        {
            List<Integer> lhsNationalPrioritiesCode;
            lhsNationalPrioritiesCode = (this.isSetNationalPrioritiesCode()?this.getNationalPrioritiesCode():null);
            List<Integer> rhsNationalPrioritiesCode;
            rhsNationalPrioritiesCode = (that.isSetNationalPrioritiesCode()?that.getNationalPrioritiesCode():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "nationalPrioritiesCode", lhsNationalPrioritiesCode), LocatorUtils.property(thatLocator, "nationalPrioritiesCode", rhsNationalPrioritiesCode), lhsNationalPrioritiesCode, rhsNationalPrioritiesCode)) {
                return false;
            }
        }
        {
            YesNoIndicatorTypeBase lhsMultimediaIndicator;
            lhsMultimediaIndicator = this.getMultimediaIndicator();
            YesNoIndicatorTypeBase rhsMultimediaIndicator;
            rhsMultimediaIndicator = that.getMultimediaIndicator();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "multimediaIndicator", lhsMultimediaIndicator), LocatorUtils.property(thatLocator, "multimediaIndicator", rhsMultimediaIndicator), lhsMultimediaIndicator, rhsMultimediaIndicator)) {
                return false;
            }
        }
        {
            String lhsFederalFacilityIndicator;
            lhsFederalFacilityIndicator = this.getFederalFacilityIndicator();
            String rhsFederalFacilityIndicator;
            rhsFederalFacilityIndicator = that.getFederalFacilityIndicator();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "federalFacilityIndicator", lhsFederalFacilityIndicator), LocatorUtils.property(thatLocator, "federalFacilityIndicator", rhsFederalFacilityIndicator), lhsFederalFacilityIndicator, rhsFederalFacilityIndicator)) {
                return false;
            }
        }
        {
            String lhsFederalFacilityIndicatorComment;
            lhsFederalFacilityIndicatorComment = this.getFederalFacilityIndicatorComment();
            String rhsFederalFacilityIndicatorComment;
            rhsFederalFacilityIndicatorComment = that.getFederalFacilityIndicatorComment();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "federalFacilityIndicatorComment", lhsFederalFacilityIndicatorComment), LocatorUtils.property(thatLocator, "federalFacilityIndicatorComment", rhsFederalFacilityIndicatorComment), lhsFederalFacilityIndicatorComment, rhsFederalFacilityIndicatorComment)) {
                return false;
            }
        }
        {
            YesNoIndicatorTypeBase lhsInspectionUserDefinedField1;
            lhsInspectionUserDefinedField1 = this.getInspectionUserDefinedField1();
            YesNoIndicatorTypeBase rhsInspectionUserDefinedField1;
            rhsInspectionUserDefinedField1 = that.getInspectionUserDefinedField1();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "inspectionUserDefinedField1", lhsInspectionUserDefinedField1), LocatorUtils.property(thatLocator, "inspectionUserDefinedField1", rhsInspectionUserDefinedField1), lhsInspectionUserDefinedField1, rhsInspectionUserDefinedField1)) {
                return false;
            }
        }
        {
            String lhsInspectionUserDefinedField2;
            lhsInspectionUserDefinedField2 = this.getInspectionUserDefinedField2();
            String rhsInspectionUserDefinedField2;
            rhsInspectionUserDefinedField2 = that.getInspectionUserDefinedField2();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "inspectionUserDefinedField2", lhsInspectionUserDefinedField2), LocatorUtils.property(thatLocator, "inspectionUserDefinedField2", rhsInspectionUserDefinedField2), lhsInspectionUserDefinedField2, rhsInspectionUserDefinedField2)) {
                return false;
            }
        }
        {
            String lhsInspectionUserDefinedField3;
            lhsInspectionUserDefinedField3 = this.getInspectionUserDefinedField3();
            String rhsInspectionUserDefinedField3;
            rhsInspectionUserDefinedField3 = that.getInspectionUserDefinedField3();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "inspectionUserDefinedField3", lhsInspectionUserDefinedField3), LocatorUtils.property(thatLocator, "inspectionUserDefinedField3", rhsInspectionUserDefinedField3), lhsInspectionUserDefinedField3, rhsInspectionUserDefinedField3)) {
                return false;
            }
        }
        {
            Date lhsInspectionUserDefinedField4;
            lhsInspectionUserDefinedField4 = this.getInspectionUserDefinedField4();
            Date rhsInspectionUserDefinedField4;
            rhsInspectionUserDefinedField4 = that.getInspectionUserDefinedField4();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "inspectionUserDefinedField4", lhsInspectionUserDefinedField4), LocatorUtils.property(thatLocator, "inspectionUserDefinedField4", rhsInspectionUserDefinedField4), lhsInspectionUserDefinedField4, rhsInspectionUserDefinedField4)) {
                return false;
            }
        }
        {
            Date lhsInspectionUserDefinedField5;
            lhsInspectionUserDefinedField5 = this.getInspectionUserDefinedField5();
            Date rhsInspectionUserDefinedField5;
            rhsInspectionUserDefinedField5 = that.getInspectionUserDefinedField5();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "inspectionUserDefinedField5", lhsInspectionUserDefinedField5), LocatorUtils.property(thatLocator, "inspectionUserDefinedField5", rhsInspectionUserDefinedField5), lhsInspectionUserDefinedField5, rhsInspectionUserDefinedField5)) {
                return false;
            }
        }
        {
            String lhsInspectionUserDefinedField6;
            lhsInspectionUserDefinedField6 = this.getInspectionUserDefinedField6();
            String rhsInspectionUserDefinedField6;
            rhsInspectionUserDefinedField6 = that.getInspectionUserDefinedField6();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "inspectionUserDefinedField6", lhsInspectionUserDefinedField6), LocatorUtils.property(thatLocator, "inspectionUserDefinedField6", rhsInspectionUserDefinedField6), lhsInspectionUserDefinedField6, rhsInspectionUserDefinedField6)) {
                return false;
            }
        }
        {
            String lhsInspectionCommentText;
            lhsInspectionCommentText = this.getInspectionCommentText();
            String rhsInspectionCommentText;
            rhsInspectionCommentText = that.getInspectionCommentText();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "inspectionCommentText", lhsInspectionCommentText), LocatorUtils.property(thatLocator, "inspectionCommentText", rhsInspectionCommentText), lhsInspectionCommentText, rhsInspectionCommentText)) {
                return false;
            }
        }
        {
            InspectionContact lhsInspectionContact;
            lhsInspectionContact = this.getInspectionContact();
            InspectionContact rhsInspectionContact;
            rhsInspectionContact = that.getInspectionContact();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "inspectionContact", lhsInspectionContact), LocatorUtils.property(thatLocator, "inspectionContact", rhsInspectionContact), lhsInspectionContact, rhsInspectionContact)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            String thePermitIdentifier;
            thePermitIdentifier = this.getPermitIdentifier();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "permitIdentifier", thePermitIdentifier), currentHashCode, thePermitIdentifier);
        }
        {
            String theComplianceMonitoringCategoryCode;
            theComplianceMonitoringCategoryCode = this.getComplianceMonitoringCategoryCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "complianceMonitoringCategoryCode", theComplianceMonitoringCategoryCode), currentHashCode, theComplianceMonitoringCategoryCode);
        }
        {
            Date theComplianceMonitoringDate;
            theComplianceMonitoringDate = this.getComplianceMonitoringDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "complianceMonitoringDate", theComplianceMonitoringDate), currentHashCode, theComplianceMonitoringDate);
        }
        {
            Date theComplianceMonitoringStartDate;
            theComplianceMonitoringStartDate = this.getComplianceMonitoringStartDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "complianceMonitoringStartDate", theComplianceMonitoringStartDate), currentHashCode, theComplianceMonitoringStartDate);
        }
        {
            List<String> theComplianceInspectionTypeCode;
            theComplianceInspectionTypeCode = (this.isSetComplianceInspectionTypeCode()?this.getComplianceInspectionTypeCode():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "complianceInspectionTypeCode", theComplianceInspectionTypeCode), currentHashCode, theComplianceInspectionTypeCode);
        }
        {
            String theComplianceMonitoringActivityName;
            theComplianceMonitoringActivityName = this.getComplianceMonitoringActivityName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "complianceMonitoringActivityName", theComplianceMonitoringActivityName), currentHashCode, theComplianceMonitoringActivityName);
        }
        {
            List<String> theComplianceMonitoringActionReasonCode;
            theComplianceMonitoringActionReasonCode = (this.isSetComplianceMonitoringActionReasonCode()?this.getComplianceMonitoringActionReasonCode():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "complianceMonitoringActionReasonCode", theComplianceMonitoringActionReasonCode), currentHashCode, theComplianceMonitoringActionReasonCode);
        }
        {
            List<String> theComplianceMonitoringAgencyTypeCode;
            theComplianceMonitoringAgencyTypeCode = (this.isSetComplianceMonitoringAgencyTypeCode()?this.getComplianceMonitoringAgencyTypeCode():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "complianceMonitoringAgencyTypeCode", theComplianceMonitoringAgencyTypeCode), currentHashCode, theComplianceMonitoringAgencyTypeCode);
        }
        {
            Integer theComplianceMonitoringAgencyCode;
            theComplianceMonitoringAgencyCode = this.getComplianceMonitoringAgencyCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "complianceMonitoringAgencyCode", theComplianceMonitoringAgencyCode), currentHashCode, theComplianceMonitoringAgencyCode);
        }
        {
            List<String> theProgramCode;
            theProgramCode = (this.isSetProgramCode()?this.getProgramCode():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "programCode", theProgramCode), currentHashCode, theProgramCode);
        }
        {
            String theStateStatuteViolatedName;
            theStateStatuteViolatedName = this.getStateStatuteViolatedName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "stateStatuteViolatedName", theStateStatuteViolatedName), currentHashCode, theStateStatuteViolatedName);
        }
        {
            String theEPAAssistanceIndicator;
            theEPAAssistanceIndicator = this.getEPAAssistanceIndicator();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "epaAssistanceIndicator", theEPAAssistanceIndicator), currentHashCode, theEPAAssistanceIndicator);
        }
        {
            String theStateFederalJointIndicator;
            theStateFederalJointIndicator = this.getStateFederalJointIndicator();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "stateFederalJointIndicator", theStateFederalJointIndicator), currentHashCode, theStateFederalJointIndicator);
        }
        {
            String theJointInspectionReasonCode;
            theJointInspectionReasonCode = this.getJointInspectionReasonCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "jointInspectionReasonCode", theJointInspectionReasonCode), currentHashCode, theJointInspectionReasonCode);
        }
        {
            String theLeadParty;
            theLeadParty = this.getLeadParty();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "leadParty", theLeadParty), currentHashCode, theLeadParty);
        }
        {
            Integer theNumberDaysPhysicallyConductingActivity;
            theNumberDaysPhysicallyConductingActivity = this.getNumberDaysPhysicallyConductingActivity();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "numberDaysPhysicallyConductingActivity", theNumberDaysPhysicallyConductingActivity), currentHashCode, theNumberDaysPhysicallyConductingActivity);
        }
        {
            Integer theNumberHoursPhysicallyConductingActivity;
            theNumberHoursPhysicallyConductingActivity = this.getNumberHoursPhysicallyConductingActivity();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "numberHoursPhysicallyConductingActivity", theNumberHoursPhysicallyConductingActivity), currentHashCode, theNumberHoursPhysicallyConductingActivity);
        }
        {
            Integer theComplianceMonitoringActionOutcomeCode;
            theComplianceMonitoringActionOutcomeCode = this.getComplianceMonitoringActionOutcomeCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "complianceMonitoringActionOutcomeCode", theComplianceMonitoringActionOutcomeCode), currentHashCode, theComplianceMonitoringActionOutcomeCode);
        }
        {
            String theInspectionRatingCode;
            theInspectionRatingCode = this.getInspectionRatingCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "inspectionRatingCode", theInspectionRatingCode), currentHashCode, theInspectionRatingCode);
        }
        {
            List<Integer> theNationalPrioritiesCode;
            theNationalPrioritiesCode = (this.isSetNationalPrioritiesCode()?this.getNationalPrioritiesCode():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "nationalPrioritiesCode", theNationalPrioritiesCode), currentHashCode, theNationalPrioritiesCode);
        }
        {
            YesNoIndicatorTypeBase theMultimediaIndicator;
            theMultimediaIndicator = this.getMultimediaIndicator();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "multimediaIndicator", theMultimediaIndicator), currentHashCode, theMultimediaIndicator);
        }
        {
            String theFederalFacilityIndicator;
            theFederalFacilityIndicator = this.getFederalFacilityIndicator();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "federalFacilityIndicator", theFederalFacilityIndicator), currentHashCode, theFederalFacilityIndicator);
        }
        {
            String theFederalFacilityIndicatorComment;
            theFederalFacilityIndicatorComment = this.getFederalFacilityIndicatorComment();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "federalFacilityIndicatorComment", theFederalFacilityIndicatorComment), currentHashCode, theFederalFacilityIndicatorComment);
        }
        {
            YesNoIndicatorTypeBase theInspectionUserDefinedField1;
            theInspectionUserDefinedField1 = this.getInspectionUserDefinedField1();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "inspectionUserDefinedField1", theInspectionUserDefinedField1), currentHashCode, theInspectionUserDefinedField1);
        }
        {
            String theInspectionUserDefinedField2;
            theInspectionUserDefinedField2 = this.getInspectionUserDefinedField2();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "inspectionUserDefinedField2", theInspectionUserDefinedField2), currentHashCode, theInspectionUserDefinedField2);
        }
        {
            String theInspectionUserDefinedField3;
            theInspectionUserDefinedField3 = this.getInspectionUserDefinedField3();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "inspectionUserDefinedField3", theInspectionUserDefinedField3), currentHashCode, theInspectionUserDefinedField3);
        }
        {
            Date theInspectionUserDefinedField4;
            theInspectionUserDefinedField4 = this.getInspectionUserDefinedField4();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "inspectionUserDefinedField4", theInspectionUserDefinedField4), currentHashCode, theInspectionUserDefinedField4);
        }
        {
            Date theInspectionUserDefinedField5;
            theInspectionUserDefinedField5 = this.getInspectionUserDefinedField5();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "inspectionUserDefinedField5", theInspectionUserDefinedField5), currentHashCode, theInspectionUserDefinedField5);
        }
        {
            String theInspectionUserDefinedField6;
            theInspectionUserDefinedField6 = this.getInspectionUserDefinedField6();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "inspectionUserDefinedField6", theInspectionUserDefinedField6), currentHashCode, theInspectionUserDefinedField6);
        }
        {
            String theInspectionCommentText;
            theInspectionCommentText = this.getInspectionCommentText();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "inspectionCommentText", theInspectionCommentText), currentHashCode, theInspectionCommentText);
        }
        {
            InspectionContact theInspectionContact;
            theInspectionContact = this.getInspectionContact();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "inspectionContact", theInspectionContact), currentHashCode, theInspectionContact);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
