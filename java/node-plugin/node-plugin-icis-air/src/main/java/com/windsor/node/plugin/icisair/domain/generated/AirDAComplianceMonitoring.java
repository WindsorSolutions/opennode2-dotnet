//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.09.02 at 11:05:46 AM PDT 
//


package com.windsor.node.plugin.icisair.domain.generated;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.persistence.AssociationOverride;
import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.CollectionTable;
import javax.persistence.Column;
import javax.persistence.ElementCollection;
import javax.persistence.Embeddable;
import javax.persistence.Embedded;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlTransient;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;

import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;

import com.windsor.node.plugin.common.xml.bind.annotation.adapters.DateNoTimeZoneAdapter;
import com.windsor.node.plugin.common.xml.bind.annotation.adapters.IntegerAdapter;


/**
 * <p>Java class for AirDAComplianceMonitoring complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="AirDAComplianceMonitoring">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.exchangenetwork.net/schema/icis/5}ComplianceMonitoringKeyElements">
 *       &lt;sequence>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}ComplianceMonitoringActivityTypeCode" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}ComplianceMonitoringDate" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}ComplianceMonitoringStartDate" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}ComplianceInspectionTypeCode" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}ComplianceMonitoringActivityName" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}NationalPrioritiesCode" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}MultimediaIndicator" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}ComplianceMonitoringPlannedStartDate" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}ComplianceMonitoringPlannedEndDate" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}RegionalPriorityCode" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}DeficienciesObservedIndicator" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}AirFacilityIdentifier" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}LeadAgencyCode" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}ProgramCode" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}OtherProgramDescriptionText" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}AirPollutantCode" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}OtherAgencyInitiativeText" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}InspectionUserDefinedField1" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}InspectionUserDefinedField2" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}InspectionUserDefinedField3" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}InspectionUserDefinedField4" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}InspectionUserDefinedField5" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}InspectionUserDefinedField6" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}InspectionContact" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}InspectionGovernmentContact" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}InspectionCommentText" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}SensitiveCommentText" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}AirStackTestData" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "AirDAComplianceMonitoring", propOrder = {
    "complianceMonitoringActivityTypeCode",
    "complianceMonitoringDate",
    "complianceMonitoringStartDate",
    "complianceInspectionTypeCode",
    "complianceMonitoringActivityName",
    "nationalPrioritiesCode",
    "multimediaIndicator",
    "complianceMonitoringPlannedStartDate",
    "complianceMonitoringPlannedEndDate",
    "regionalPriorityCode",
    "deficienciesObservedIndicator",
    "airFacilityIdentifier",
    "leadAgencyCode",
    "programCode",
    "otherProgramDescriptionText",
    "airPollutantCode",
    "otherAgencyInitiativeText",
    "inspectionUserDefinedField1",
    "inspectionUserDefinedField2",
    "inspectionUserDefinedField3",
    "inspectionUserDefinedField4",
    "inspectionUserDefinedField5",
    "inspectionUserDefinedField6",
    "inspectionContact",
    "inspectionGovernmentContact",
    "inspectionCommentText",
    "sensitiveCommentText",
    "airStackTestData"
})
@Embeddable
public class AirDAComplianceMonitoring
    extends ComplianceMonitoringKeyElements
    implements Serializable, Equals, HashCode
{

    private final static long serialVersionUID = 1L;
    @XmlElement(name = "ComplianceMonitoringActivityTypeCode")
    protected ComplianceMonitoringActivityTypeCodeType complianceMonitoringActivityTypeCode;
    @XmlElement(name = "ComplianceMonitoringDate", type = String.class)
    @XmlJavaTypeAdapter(DateNoTimeZoneAdapter.class)
    @XmlSchemaType(name = "date")
    protected Date complianceMonitoringDate;
    @XmlElement(name = "ComplianceMonitoringStartDate", type = String.class)
    @XmlJavaTypeAdapter(DateNoTimeZoneAdapter.class)
    protected Date complianceMonitoringStartDate;
    @XmlElement(name = "ComplianceInspectionTypeCode")
    protected List<String> complianceInspectionTypeCode;
    @XmlElement(name = "ComplianceMonitoringActivityName")
    protected String complianceMonitoringActivityName;
    @XmlElement(name = "NationalPrioritiesCode", type = String.class)
    @XmlJavaTypeAdapter(IntegerAdapter.class)
    protected List<Integer> nationalPrioritiesCode;
    @XmlElement(name = "MultimediaIndicator")
    protected YesNoIndicatorTypeBase multimediaIndicator;
    @XmlElement(name = "ComplianceMonitoringPlannedStartDate", type = String.class)
    @XmlJavaTypeAdapter(DateNoTimeZoneAdapter.class)
    protected Date complianceMonitoringPlannedStartDate;
    @XmlElement(name = "ComplianceMonitoringPlannedEndDate", type = String.class)
    @XmlJavaTypeAdapter(DateNoTimeZoneAdapter.class)
    protected Date complianceMonitoringPlannedEndDate;
    @XmlElement(name = "RegionalPriorityCode", type = String.class)
    @XmlJavaTypeAdapter(IntegerAdapter.class)
    protected List<Integer> regionalPriorityCode;
    @XmlElement(name = "DeficienciesObservedIndicator")
    protected String deficienciesObservedIndicator;
    @XmlElement(name = "AirFacilityIdentifier")
    protected List<String> airFacilityIdentifier;
    @XmlElement(name = "LeadAgencyCode")
    protected String leadAgencyCode;
    @XmlElement(name = "ProgramCode")
    protected List<String> programCode;
    @XmlElement(name = "OtherProgramDescriptionText")
    protected String otherProgramDescriptionText;
    @XmlElement(name = "AirPollutantCode", type = String.class)
    @XmlJavaTypeAdapter(IntegerAdapter.class)
    protected List<Integer> airPollutantCode;
    @XmlElement(name = "OtherAgencyInitiativeText")
    protected String otherAgencyInitiativeText;
    @XmlElement(name = "InspectionUserDefinedField1")
    protected YesNoIndicatorTypeBase inspectionUserDefinedField1;
    @XmlElement(name = "InspectionUserDefinedField2")
    protected String inspectionUserDefinedField2;
    @XmlElement(name = "InspectionUserDefinedField3")
    protected String inspectionUserDefinedField3;
    @XmlElement(name = "InspectionUserDefinedField4", type = String.class)
    @XmlJavaTypeAdapter(DateNoTimeZoneAdapter.class)
    protected Date inspectionUserDefinedField4;
    @XmlElement(name = "InspectionUserDefinedField5", type = String.class)
    @XmlJavaTypeAdapter(DateNoTimeZoneAdapter.class)
    protected Date inspectionUserDefinedField5;
    @XmlElement(name = "InspectionUserDefinedField6")
    protected String inspectionUserDefinedField6;
    @XmlElement(name = "InspectionContact")
    protected InspectionContact inspectionContact;
    @XmlElement(name = "InspectionGovernmentContact")
    protected List<InspectionGovernmentContact> inspectionGovernmentContact;
    @XmlElement(name = "InspectionCommentText")
    protected List<String> inspectionCommentText;
    @XmlElement(name = "SensitiveCommentText")
    protected List<String> sensitiveCommentText;
    @XmlElement(name = "AirStackTestData")
    protected AirStackTestData airStackTestData;
    @XmlTransient
    protected String dbid;

    /**
     * Gets the value of the complianceMonitoringActivityTypeCode property.
     * 
     * @return
     *     possible object is
     *     {@link ComplianceMonitoringActivityTypeCodeType }
     *     
     */
    @Basic
    @Column(name = "CMPL_MON_ACTY_TYPE_CODE", length = 255)
    @Enumerated(EnumType.STRING)
    public ComplianceMonitoringActivityTypeCodeType getComplianceMonitoringActivityTypeCode() {
        return complianceMonitoringActivityTypeCode;
    }

    /**
     * Sets the value of the complianceMonitoringActivityTypeCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link ComplianceMonitoringActivityTypeCodeType }
     *     
     */
    public void setComplianceMonitoringActivityTypeCode(ComplianceMonitoringActivityTypeCodeType value) {
        this.complianceMonitoringActivityTypeCode = value;
    }

    @Transient
    public boolean isSetComplianceMonitoringActivityTypeCode() {
        return (this.complianceMonitoringActivityTypeCode!= null);
    }

    /**
     * Gets the value of the complianceMonitoringDate property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "CMPL_MON_DATE")
    @Temporal(TemporalType.DATE)
    public Date getComplianceMonitoringDate() {
        return complianceMonitoringDate;
    }

    /**
     * Sets the value of the complianceMonitoringDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setComplianceMonitoringDate(Date value) {
        this.complianceMonitoringDate = value;
    }

    @Transient
    public boolean isSetComplianceMonitoringDate() {
        return (this.complianceMonitoringDate!= null);
    }

    /**
     * Gets the value of the complianceMonitoringStartDate property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "CMPL_MON_START_DATE")
    @Temporal(TemporalType.TIMESTAMP)
    public Date getComplianceMonitoringStartDate() {
        return complianceMonitoringStartDate;
    }

    /**
     * Sets the value of the complianceMonitoringStartDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setComplianceMonitoringStartDate(Date value) {
        this.complianceMonitoringStartDate = value;
    }

    @Transient
    public boolean isSetComplianceMonitoringStartDate() {
        return (this.complianceMonitoringStartDate!= null);
    }

    /**
     * Gets the value of the complianceInspectionTypeCode property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the complianceInspectionTypeCode property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getComplianceInspectionTypeCode().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * 
     * 
     */
    @ElementCollection
    @Column(name = "CMPL_INSP_TYPE_CODE", length = 3)
    @CollectionTable(name = "ICA_CMPL_INSP_TYPE", joinColumns = {
        @JoinColumn(name = "ICA_DA_CMPL_MON_ID")
    })
    public List<String> getComplianceInspectionTypeCode() {
        if (complianceInspectionTypeCode == null) {
            complianceInspectionTypeCode = new ArrayList<String>();
        }
        return this.complianceInspectionTypeCode;
    }

    /**
     * 
     * 
     */
    public void setComplianceInspectionTypeCode(List<String> complianceInspectionTypeCode) {
        this.complianceInspectionTypeCode = complianceInspectionTypeCode;
    }

    @Transient
    public boolean isSetComplianceInspectionTypeCode() {
        return ((this.complianceInspectionTypeCode!= null)&&(!this.complianceInspectionTypeCode.isEmpty()));
    }

    public void unsetComplianceInspectionTypeCode() {
        this.complianceInspectionTypeCode = null;
    }

    /**
     * Gets the value of the complianceMonitoringActivityName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "CMPL_MON_ACTY_NAME", length = 100)
    public String getComplianceMonitoringActivityName() {
        return complianceMonitoringActivityName;
    }

    /**
     * Sets the value of the complianceMonitoringActivityName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setComplianceMonitoringActivityName(String value) {
        this.complianceMonitoringActivityName = value;
    }

    @Transient
    public boolean isSetComplianceMonitoringActivityName() {
        return (this.complianceMonitoringActivityName!= null);
    }

    /**
     * Gets the value of the nationalPrioritiesCode property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the nationalPrioritiesCode property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getNationalPrioritiesCode().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * 
     * 
     */
    @ElementCollection
    @Column(name = "NAT_PRIO_CODE")
    @CollectionTable(name = "ICA_NAT_PRIO", joinColumns = {
        @JoinColumn(name = "ICA_DA_CMPL_MON_ID")
    })
    public List<Integer> getNationalPrioritiesCode() {
        if (nationalPrioritiesCode == null) {
            nationalPrioritiesCode = new ArrayList<Integer>();
        }
        return this.nationalPrioritiesCode;
    }

    /**
     * 
     * 
     */
    public void setNationalPrioritiesCode(List<Integer> nationalPrioritiesCode) {
        this.nationalPrioritiesCode = nationalPrioritiesCode;
    }

    @Transient
    public boolean isSetNationalPrioritiesCode() {
        return ((this.nationalPrioritiesCode!= null)&&(!this.nationalPrioritiesCode.isEmpty()));
    }

    public void unsetNationalPrioritiesCode() {
        this.nationalPrioritiesCode = null;
    }

    /**
     * Gets the value of the multimediaIndicator property.
     * 
     * @return
     *     possible object is
     *     {@link YesNoIndicatorTypeBase }
     *     
     */
    @Basic
    @Column(name = "MULTIMEDIA_IND", columnDefinition = "char(1)", length = 1)
    @Enumerated(EnumType.STRING)
    public YesNoIndicatorTypeBase getMultimediaIndicator() {
        return multimediaIndicator;
    }

    /**
     * Sets the value of the multimediaIndicator property.
     * 
     * @param value
     *     allowed object is
     *     {@link YesNoIndicatorTypeBase }
     *     
     */
    public void setMultimediaIndicator(YesNoIndicatorTypeBase value) {
        this.multimediaIndicator = value;
    }

    @Transient
    public boolean isSetMultimediaIndicator() {
        return (this.multimediaIndicator!= null);
    }

    /**
     * Gets the value of the complianceMonitoringPlannedStartDate property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "CMPL_MON_PLANNED_START_DATE")
    @Temporal(TemporalType.TIMESTAMP)
    public Date getComplianceMonitoringPlannedStartDate() {
        return complianceMonitoringPlannedStartDate;
    }

    /**
     * Sets the value of the complianceMonitoringPlannedStartDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setComplianceMonitoringPlannedStartDate(Date value) {
        this.complianceMonitoringPlannedStartDate = value;
    }

    @Transient
    public boolean isSetComplianceMonitoringPlannedStartDate() {
        return (this.complianceMonitoringPlannedStartDate!= null);
    }

    /**
     * Gets the value of the complianceMonitoringPlannedEndDate property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "CMPL_MON_PLANNED_END_DATE")
    @Temporal(TemporalType.TIMESTAMP)
    public Date getComplianceMonitoringPlannedEndDate() {
        return complianceMonitoringPlannedEndDate;
    }

    /**
     * Sets the value of the complianceMonitoringPlannedEndDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setComplianceMonitoringPlannedEndDate(Date value) {
        this.complianceMonitoringPlannedEndDate = value;
    }

    @Transient
    public boolean isSetComplianceMonitoringPlannedEndDate() {
        return (this.complianceMonitoringPlannedEndDate!= null);
    }

    /**
     * Gets the value of the regionalPriorityCode property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the regionalPriorityCode property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getRegionalPriorityCode().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * 
     * 
     */
    @ElementCollection
    @Column(name = "RGNL_PRIO_CODE")
    @CollectionTable(name = "ICA_RGNL_PRIO", joinColumns = {
        @JoinColumn(name = "ICA_DA_CMPL_MON_ID")
    })
    public List<Integer> getRegionalPriorityCode() {
        if (regionalPriorityCode == null) {
            regionalPriorityCode = new ArrayList<Integer>();
        }
        return this.regionalPriorityCode;
    }

    /**
     * 
     * 
     */
    public void setRegionalPriorityCode(List<Integer> regionalPriorityCode) {
        this.regionalPriorityCode = regionalPriorityCode;
    }

    @Transient
    public boolean isSetRegionalPriorityCode() {
        return ((this.regionalPriorityCode!= null)&&(!this.regionalPriorityCode.isEmpty()));
    }

    public void unsetRegionalPriorityCode() {
        this.regionalPriorityCode = null;
    }

    /**
     * Gets the value of the deficienciesObservedIndicator property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "DEFICIENCIES_OBS_IND", columnDefinition = "char(1)", length = 1)
    public String getDeficienciesObservedIndicator() {
        return deficienciesObservedIndicator;
    }

    /**
     * Sets the value of the deficienciesObservedIndicator property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDeficienciesObservedIndicator(String value) {
        this.deficienciesObservedIndicator = value;
    }

    @Transient
    public boolean isSetDeficienciesObservedIndicator() {
        return (this.deficienciesObservedIndicator!= null);
    }

    /**
     * Gets the value of the airFacilityIdentifier property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the airFacilityIdentifier property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAirFacilityIdentifier().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * 
     * 
     */
    @ElementCollection
    @Column(name = "FAC_IDENT", length = 18)
    @CollectionTable(name = "ICA_FAC_IDENT", joinColumns = {
        @JoinColumn(name = "ICA_DA_CMPL_MON_ID")
    })
    public List<String> getAirFacilityIdentifier() {
        if (airFacilityIdentifier == null) {
            airFacilityIdentifier = new ArrayList<String>();
        }
        return this.airFacilityIdentifier;
    }

    /**
     * 
     * 
     */
    public void setAirFacilityIdentifier(List<String> airFacilityIdentifier) {
        this.airFacilityIdentifier = airFacilityIdentifier;
    }

    @Transient
    public boolean isSetAirFacilityIdentifier() {
        return ((this.airFacilityIdentifier!= null)&&(!this.airFacilityIdentifier.isEmpty()));
    }

    public void unsetAirFacilityIdentifier() {
        this.airFacilityIdentifier = null;
    }

    /**
     * Gets the value of the leadAgencyCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "LEAD_AGNCY_CODE", length = 3)
    public String getLeadAgencyCode() {
        return leadAgencyCode;
    }

    /**
     * Sets the value of the leadAgencyCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLeadAgencyCode(String value) {
        this.leadAgencyCode = value;
    }

    @Transient
    public boolean isSetLeadAgencyCode() {
        return (this.leadAgencyCode!= null);
    }

    /**
     * Gets the value of the programCode property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the programCode property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getProgramCode().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * 
     * 
     */
    @ElementCollection
    @Column(name = "PROG_CODE", length = 9)
    @CollectionTable(name = "ICA_PROG", joinColumns = {
        @JoinColumn(name = "ICA_DA_CMPL_MON_ID")
    })
    public List<String> getProgramCode() {
        if (programCode == null) {
            programCode = new ArrayList<String>();
        }
        return this.programCode;
    }

    /**
     * 
     * 
     */
    public void setProgramCode(List<String> programCode) {
        this.programCode = programCode;
    }

    @Transient
    public boolean isSetProgramCode() {
        return ((this.programCode!= null)&&(!this.programCode.isEmpty()));
    }

    public void unsetProgramCode() {
        this.programCode = null;
    }

    /**
     * Gets the value of the otherProgramDescriptionText property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "OTHR_PROG_DESC_TXT", length = 100)
    public String getOtherProgramDescriptionText() {
        return otherProgramDescriptionText;
    }

    /**
     * Sets the value of the otherProgramDescriptionText property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setOtherProgramDescriptionText(String value) {
        this.otherProgramDescriptionText = value;
    }

    @Transient
    public boolean isSetOtherProgramDescriptionText() {
        return (this.otherProgramDescriptionText!= null);
    }

    /**
     * Gets the value of the airPollutantCode property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the airPollutantCode property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAirPollutantCode().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * 
     * 
     */
    @ElementCollection
    @Column(name = "POLUT_CODE")
    @CollectionTable(name = "ICA_POLUT", joinColumns = {
        @JoinColumn(name = "ICA_DA_CMPL_MON_ID")
    })
    public List<Integer> getAirPollutantCode() {
        if (airPollutantCode == null) {
            airPollutantCode = new ArrayList<Integer>();
        }
        return this.airPollutantCode;
    }

    /**
     * 
     * 
     */
    public void setAirPollutantCode(List<Integer> airPollutantCode) {
        this.airPollutantCode = airPollutantCode;
    }

    @Transient
    public boolean isSetAirPollutantCode() {
        return ((this.airPollutantCode!= null)&&(!this.airPollutantCode.isEmpty()));
    }

    public void unsetAirPollutantCode() {
        this.airPollutantCode = null;
    }

    /**
     * Gets the value of the otherAgencyInitiativeText property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "OTHR_AGNCY_INITIATIVE_TXT", length = 200)
    public String getOtherAgencyInitiativeText() {
        return otherAgencyInitiativeText;
    }

    /**
     * Sets the value of the otherAgencyInitiativeText property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setOtherAgencyInitiativeText(String value) {
        this.otherAgencyInitiativeText = value;
    }

    @Transient
    public boolean isSetOtherAgencyInitiativeText() {
        return (this.otherAgencyInitiativeText!= null);
    }

    /**
     * Gets the value of the inspectionUserDefinedField1 property.
     * 
     * @return
     *     possible object is
     *     {@link YesNoIndicatorTypeBase }
     *     
     */
    @Basic
    @Column(name = "INSP_USR_DEF_FLD_1", columnDefinition = "char(1)", length = 1)
    @Enumerated(EnumType.STRING)
    public YesNoIndicatorTypeBase getInspectionUserDefinedField1() {
        return inspectionUserDefinedField1;
    }

    /**
     * Sets the value of the inspectionUserDefinedField1 property.
     * 
     * @param value
     *     allowed object is
     *     {@link YesNoIndicatorTypeBase }
     *     
     */
    public void setInspectionUserDefinedField1(YesNoIndicatorTypeBase value) {
        this.inspectionUserDefinedField1 = value;
    }

    @Transient
    public boolean isSetInspectionUserDefinedField1() {
        return (this.inspectionUserDefinedField1 != null);
    }

    /**
     * Gets the value of the inspectionUserDefinedField2 property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "INSP_USR_DEF_FLD_2", length = 50)
    public String getInspectionUserDefinedField2() {
        return inspectionUserDefinedField2;
    }

    /**
     * Sets the value of the inspectionUserDefinedField2 property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setInspectionUserDefinedField2(String value) {
        this.inspectionUserDefinedField2 = value;
    }

    @Transient
    public boolean isSetInspectionUserDefinedField2() {
        return (this.inspectionUserDefinedField2 != null);
    }

    /**
     * Gets the value of the inspectionUserDefinedField3 property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "INSP_USR_DEF_FLD_3", length = 50)
    public String getInspectionUserDefinedField3() {
        return inspectionUserDefinedField3;
    }

    /**
     * Sets the value of the inspectionUserDefinedField3 property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setInspectionUserDefinedField3(String value) {
        this.inspectionUserDefinedField3 = value;
    }

    @Transient
    public boolean isSetInspectionUserDefinedField3() {
        return (this.inspectionUserDefinedField3 != null);
    }

    /**
     * Gets the value of the inspectionUserDefinedField4 property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "INSP_USR_DEF_FLD_4")
    @Temporal(TemporalType.TIMESTAMP)
    public Date getInspectionUserDefinedField4() {
        return inspectionUserDefinedField4;
    }

    /**
     * Sets the value of the inspectionUserDefinedField4 property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setInspectionUserDefinedField4(Date value) {
        this.inspectionUserDefinedField4 = value;
    }

    @Transient
    public boolean isSetInspectionUserDefinedField4() {
        return (this.inspectionUserDefinedField4 != null);
    }

    /**
     * Gets the value of the inspectionUserDefinedField5 property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "INSP_USR_DEF_FLD_5")
    @Temporal(TemporalType.TIMESTAMP)
    public Date getInspectionUserDefinedField5() {
        return inspectionUserDefinedField5;
    }

    /**
     * Sets the value of the inspectionUserDefinedField5 property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setInspectionUserDefinedField5(Date value) {
        this.inspectionUserDefinedField5 = value;
    }

    @Transient
    public boolean isSetInspectionUserDefinedField5() {
        return (this.inspectionUserDefinedField5 != null);
    }

    /**
     * Gets the value of the inspectionUserDefinedField6 property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "INSP_USR_DEF_FLD_6", length = 4000)
    public String getInspectionUserDefinedField6() {
        return inspectionUserDefinedField6;
    }

    /**
     * Sets the value of the inspectionUserDefinedField6 property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setInspectionUserDefinedField6(String value) {
        this.inspectionUserDefinedField6 = value;
    }

    @Transient
    public boolean isSetInspectionUserDefinedField6() {
        return (this.inspectionUserDefinedField6 != null);
    }

    /**
     * Gets the value of the inspectionContact property.
     * 
     * @return
     *     possible object is
     *     {@link InspectionContact }
     *     
     */
    @Embedded
    @AssociationOverride(name = "contact", joinColumns = {
        @JoinColumn(name = "ICA_DA_CMPL_MON_ID")
    })
    public InspectionContact getInspectionContact() {
        return inspectionContact;
    }

    /**
     * Sets the value of the inspectionContact property.
     * 
     * @param value
     *     allowed object is
     *     {@link InspectionContact }
     *     
     */
    public void setInspectionContact(InspectionContact value) {
        this.inspectionContact = value;
    }

    @Transient
    public boolean isSetInspectionContact() {
        return (this.inspectionContact!= null);
    }

    /**
     * Gets the value of the inspectionGovernmentContact property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the inspectionGovernmentContact property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getInspectionGovernmentContact().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link InspectionGovernmentContact }
     * 
     * 
     */
    @Transient
    public List<InspectionGovernmentContact> getInspectionGovernmentContact() {
        if (inspectionGovernmentContact == null) {
            inspectionGovernmentContact = new ArrayList<InspectionGovernmentContact>();
        }
        return this.inspectionGovernmentContact;
    }

    /**
     * 
     * 
     */
    public void setInspectionGovernmentContact(List<InspectionGovernmentContact> inspectionGovernmentContact) {
        this.inspectionGovernmentContact = inspectionGovernmentContact;
    }

    @Transient
    public boolean isSetInspectionGovernmentContact() {
        return ((this.inspectionGovernmentContact!= null)&&(!this.inspectionGovernmentContact.isEmpty()));
    }

    public void unsetInspectionGovernmentContact() {
        this.inspectionGovernmentContact = null;
    }

    /**
     * Gets the value of the inspectionCommentText property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the inspectionCommentText property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getInspectionCommentText().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * 
     * 
     */
    @ElementCollection
    @Column(name = "INSP_CMNT_TXT", length = 4000)
    @CollectionTable(name = "ICA_INSP_CMNT_TXT", joinColumns = {
        @JoinColumn(name = "ICA_DA_CMPL_MON_ID")
    })
    public List<String> getInspectionCommentText() {
        if (inspectionCommentText == null) {
            inspectionCommentText = new ArrayList<String>();
        }
        return this.inspectionCommentText;
    }

    /**
     * 
     * 
     */
    public void setInspectionCommentText(List<String> inspectionCommentText) {
        this.inspectionCommentText = inspectionCommentText;
    }

    @Transient
    public boolean isSetInspectionCommentText() {
        return ((this.inspectionCommentText!= null)&&(!this.inspectionCommentText.isEmpty()));
    }

    public void unsetInspectionCommentText() {
        this.inspectionCommentText = null;
    }

    /**
     * Gets the value of the sensitiveCommentText property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the sensitiveCommentText property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getSensitiveCommentText().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * 
     * 
     */
    @ElementCollection
    @Column(name = "SENS_CMNT_TXT", length = 4000)
    @CollectionTable(name = "ICA_SENS_CMNT_TXT", joinColumns = {
        @JoinColumn(name = "ICA_DA_CMPL_MON_ID")
    })
    public List<String> getSensitiveCommentText() {
        if (sensitiveCommentText == null) {
            sensitiveCommentText = new ArrayList<String>();
        }
        return this.sensitiveCommentText;
    }

    /**
     * 
     * 
     */
    public void setSensitiveCommentText(List<String> sensitiveCommentText) {
        this.sensitiveCommentText = sensitiveCommentText;
    }

    @Transient
    public boolean isSetSensitiveCommentText() {
        return ((this.sensitiveCommentText!= null)&&(!this.sensitiveCommentText.isEmpty()));
    }

    public void unsetSensitiveCommentText() {
        this.sensitiveCommentText = null;
    }

    /**
     * Gets the value of the airStackTestData property.
     * 
     * @return
     *     possible object is
     *     {@link AirStackTestData }
     *     
     */
    @Transient
    public AirStackTestData getAirStackTestData() {
        return airStackTestData;
    }

    /**
     * Sets the value of the airStackTestData property.
     * 
     * @param value
     *     allowed object is
     *     {@link AirStackTestData }
     *     
     */
    public void setAirStackTestData(AirStackTestData value) {
        this.airStackTestData = value;
    }

    /*@ManyToOne(targetEntity = AirStackTestData.class, cascade = {
        CascadeType.ALL
    })
    //@NotFound(action = NotFoundAction.IGNORE)
    @JoinColumn(name = "ICA_DA_CMPL_MON_ID", insertable = false, updatable = false)*/
    @OneToMany(targetEntity = AirStackTestData.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "ICA_DA_CMPL_MON_ID")
    public List<AirStackTestData> getAirStackTestDataList() {
        List<AirStackTestData> list = new ArrayList<AirStackTestData>();
        list.add(getAirStackTestData());
        return list;
    }

    public void setAirStackTestDataList(List<AirStackTestData> list) {
        if(list != null && list.size() >= 1)
        {
            this.airStackTestData = list.get(0);
        }
    }

    @Transient
    public boolean isSetAirStackTestData() {
        return (this.airStackTestData!= null);
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof AirDAComplianceMonitoring)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final AirDAComplianceMonitoring that = ((AirDAComplianceMonitoring) object);
        {
            ComplianceMonitoringActivityTypeCodeType lhsComplianceMonitoringActivityTypeCode;
            lhsComplianceMonitoringActivityTypeCode = this.getComplianceMonitoringActivityTypeCode();
            ComplianceMonitoringActivityTypeCodeType rhsComplianceMonitoringActivityTypeCode;
            rhsComplianceMonitoringActivityTypeCode = that.getComplianceMonitoringActivityTypeCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "complianceMonitoringActivityTypeCode", lhsComplianceMonitoringActivityTypeCode), LocatorUtils.property(thatLocator, "complianceMonitoringActivityTypeCode", rhsComplianceMonitoringActivityTypeCode), lhsComplianceMonitoringActivityTypeCode, rhsComplianceMonitoringActivityTypeCode)) {
                return false;
            }
        }
        {
            Date lhsComplianceMonitoringDate;
            lhsComplianceMonitoringDate = this.getComplianceMonitoringDate();
            Date rhsComplianceMonitoringDate;
            rhsComplianceMonitoringDate = that.getComplianceMonitoringDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "complianceMonitoringDate", lhsComplianceMonitoringDate), LocatorUtils.property(thatLocator, "complianceMonitoringDate", rhsComplianceMonitoringDate), lhsComplianceMonitoringDate, rhsComplianceMonitoringDate)) {
                return false;
            }
        }
        {
            Date lhsComplianceMonitoringStartDate;
            lhsComplianceMonitoringStartDate = this.getComplianceMonitoringStartDate();
            Date rhsComplianceMonitoringStartDate;
            rhsComplianceMonitoringStartDate = that.getComplianceMonitoringStartDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "complianceMonitoringStartDate", lhsComplianceMonitoringStartDate), LocatorUtils.property(thatLocator, "complianceMonitoringStartDate", rhsComplianceMonitoringStartDate), lhsComplianceMonitoringStartDate, rhsComplianceMonitoringStartDate)) {
                return false;
            }
        }
        {
            List<String> lhsComplianceInspectionTypeCode;
            lhsComplianceInspectionTypeCode = (this.isSetComplianceInspectionTypeCode()?this.getComplianceInspectionTypeCode():null);
            List<String> rhsComplianceInspectionTypeCode;
            rhsComplianceInspectionTypeCode = (that.isSetComplianceInspectionTypeCode()?that.getComplianceInspectionTypeCode():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "complianceInspectionTypeCode", lhsComplianceInspectionTypeCode), LocatorUtils.property(thatLocator, "complianceInspectionTypeCode", rhsComplianceInspectionTypeCode), lhsComplianceInspectionTypeCode, rhsComplianceInspectionTypeCode)) {
                return false;
            }
        }
        {
            String lhsComplianceMonitoringActivityName;
            lhsComplianceMonitoringActivityName = this.getComplianceMonitoringActivityName();
            String rhsComplianceMonitoringActivityName;
            rhsComplianceMonitoringActivityName = that.getComplianceMonitoringActivityName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "complianceMonitoringActivityName", lhsComplianceMonitoringActivityName), LocatorUtils.property(thatLocator, "complianceMonitoringActivityName", rhsComplianceMonitoringActivityName), lhsComplianceMonitoringActivityName, rhsComplianceMonitoringActivityName)) {
                return false;
            }
        }
        {
            List<Integer> lhsNationalPrioritiesCode;
            lhsNationalPrioritiesCode = (this.isSetNationalPrioritiesCode()?this.getNationalPrioritiesCode():null);
            List<Integer> rhsNationalPrioritiesCode;
            rhsNationalPrioritiesCode = (that.isSetNationalPrioritiesCode()?that.getNationalPrioritiesCode():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "nationalPrioritiesCode", lhsNationalPrioritiesCode), LocatorUtils.property(thatLocator, "nationalPrioritiesCode", rhsNationalPrioritiesCode), lhsNationalPrioritiesCode, rhsNationalPrioritiesCode)) {
                return false;
            }
        }
        {
            YesNoIndicatorTypeBase lhsMultimediaIndicator;
            lhsMultimediaIndicator = this.getMultimediaIndicator();
            YesNoIndicatorTypeBase rhsMultimediaIndicator;
            rhsMultimediaIndicator = that.getMultimediaIndicator();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "multimediaIndicator", lhsMultimediaIndicator), LocatorUtils.property(thatLocator, "multimediaIndicator", rhsMultimediaIndicator), lhsMultimediaIndicator, rhsMultimediaIndicator)) {
                return false;
            }
        }
        {
            Date lhsComplianceMonitoringPlannedStartDate;
            lhsComplianceMonitoringPlannedStartDate = this.getComplianceMonitoringPlannedStartDate();
            Date rhsComplianceMonitoringPlannedStartDate;
            rhsComplianceMonitoringPlannedStartDate = that.getComplianceMonitoringPlannedStartDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "complianceMonitoringPlannedStartDate", lhsComplianceMonitoringPlannedStartDate), LocatorUtils.property(thatLocator, "complianceMonitoringPlannedStartDate", rhsComplianceMonitoringPlannedStartDate), lhsComplianceMonitoringPlannedStartDate, rhsComplianceMonitoringPlannedStartDate)) {
                return false;
            }
        }
        {
            Date lhsComplianceMonitoringPlannedEndDate;
            lhsComplianceMonitoringPlannedEndDate = this.getComplianceMonitoringPlannedEndDate();
            Date rhsComplianceMonitoringPlannedEndDate;
            rhsComplianceMonitoringPlannedEndDate = that.getComplianceMonitoringPlannedEndDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "complianceMonitoringPlannedEndDate", lhsComplianceMonitoringPlannedEndDate), LocatorUtils.property(thatLocator, "complianceMonitoringPlannedEndDate", rhsComplianceMonitoringPlannedEndDate), lhsComplianceMonitoringPlannedEndDate, rhsComplianceMonitoringPlannedEndDate)) {
                return false;
            }
        }
        {
            List<Integer> lhsRegionalPriorityCode;
            lhsRegionalPriorityCode = (this.isSetRegionalPriorityCode()?this.getRegionalPriorityCode():null);
            List<Integer> rhsRegionalPriorityCode;
            rhsRegionalPriorityCode = (that.isSetRegionalPriorityCode()?that.getRegionalPriorityCode():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "regionalPriorityCode", lhsRegionalPriorityCode), LocatorUtils.property(thatLocator, "regionalPriorityCode", rhsRegionalPriorityCode), lhsRegionalPriorityCode, rhsRegionalPriorityCode)) {
                return false;
            }
        }
        {
            String lhsDeficienciesObservedIndicator;
            lhsDeficienciesObservedIndicator = this.getDeficienciesObservedIndicator();
            String rhsDeficienciesObservedIndicator;
            rhsDeficienciesObservedIndicator = that.getDeficienciesObservedIndicator();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "deficienciesObservedIndicator", lhsDeficienciesObservedIndicator), LocatorUtils.property(thatLocator, "deficienciesObservedIndicator", rhsDeficienciesObservedIndicator), lhsDeficienciesObservedIndicator, rhsDeficienciesObservedIndicator)) {
                return false;
            }
        }
        {
            List<String> lhsAirFacilityIdentifier;
            lhsAirFacilityIdentifier = (this.isSetAirFacilityIdentifier()?this.getAirFacilityIdentifier():null);
            List<String> rhsAirFacilityIdentifier;
            rhsAirFacilityIdentifier = (that.isSetAirFacilityIdentifier()?that.getAirFacilityIdentifier():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "airFacilityIdentifier", lhsAirFacilityIdentifier), LocatorUtils.property(thatLocator, "airFacilityIdentifier", rhsAirFacilityIdentifier), lhsAirFacilityIdentifier, rhsAirFacilityIdentifier)) {
                return false;
            }
        }
        {
            String lhsLeadAgencyCode;
            lhsLeadAgencyCode = this.getLeadAgencyCode();
            String rhsLeadAgencyCode;
            rhsLeadAgencyCode = that.getLeadAgencyCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "leadAgencyCode", lhsLeadAgencyCode), LocatorUtils.property(thatLocator, "leadAgencyCode", rhsLeadAgencyCode), lhsLeadAgencyCode, rhsLeadAgencyCode)) {
                return false;
            }
        }
        {
            List<String> lhsProgramCode;
            lhsProgramCode = (this.isSetProgramCode()?this.getProgramCode():null);
            List<String> rhsProgramCode;
            rhsProgramCode = (that.isSetProgramCode()?that.getProgramCode():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "programCode", lhsProgramCode), LocatorUtils.property(thatLocator, "programCode", rhsProgramCode), lhsProgramCode, rhsProgramCode)) {
                return false;
            }
        }
        {
            String lhsOtherProgramDescriptionText;
            lhsOtherProgramDescriptionText = this.getOtherProgramDescriptionText();
            String rhsOtherProgramDescriptionText;
            rhsOtherProgramDescriptionText = that.getOtherProgramDescriptionText();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "otherProgramDescriptionText", lhsOtherProgramDescriptionText), LocatorUtils.property(thatLocator, "otherProgramDescriptionText", rhsOtherProgramDescriptionText), lhsOtherProgramDescriptionText, rhsOtherProgramDescriptionText)) {
                return false;
            }
        }
        {
            List<Integer> lhsAirPollutantCode;
            lhsAirPollutantCode = (this.isSetAirPollutantCode()?this.getAirPollutantCode():null);
            List<Integer> rhsAirPollutantCode;
            rhsAirPollutantCode = (that.isSetAirPollutantCode()?that.getAirPollutantCode():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "airPollutantCode", lhsAirPollutantCode), LocatorUtils.property(thatLocator, "airPollutantCode", rhsAirPollutantCode), lhsAirPollutantCode, rhsAirPollutantCode)) {
                return false;
            }
        }
        {
            String lhsOtherAgencyInitiativeText;
            lhsOtherAgencyInitiativeText = this.getOtherAgencyInitiativeText();
            String rhsOtherAgencyInitiativeText;
            rhsOtherAgencyInitiativeText = that.getOtherAgencyInitiativeText();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "otherAgencyInitiativeText", lhsOtherAgencyInitiativeText), LocatorUtils.property(thatLocator, "otherAgencyInitiativeText", rhsOtherAgencyInitiativeText), lhsOtherAgencyInitiativeText, rhsOtherAgencyInitiativeText)) {
                return false;
            }
        }
        {
            YesNoIndicatorTypeBase lhsInspectionUserDefinedField1;
            lhsInspectionUserDefinedField1 = this.getInspectionUserDefinedField1();
            YesNoIndicatorTypeBase rhsInspectionUserDefinedField1;
            rhsInspectionUserDefinedField1 = that.getInspectionUserDefinedField1();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "inspectionUserDefinedField1", lhsInspectionUserDefinedField1), LocatorUtils.property(thatLocator, "inspectionUserDefinedField1", rhsInspectionUserDefinedField1), lhsInspectionUserDefinedField1, rhsInspectionUserDefinedField1)) {
                return false;
            }
        }
        {
            String lhsInspectionUserDefinedField2;
            lhsInspectionUserDefinedField2 = this.getInspectionUserDefinedField2();
            String rhsInspectionUserDefinedField2;
            rhsInspectionUserDefinedField2 = that.getInspectionUserDefinedField2();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "inspectionUserDefinedField2", lhsInspectionUserDefinedField2), LocatorUtils.property(thatLocator, "inspectionUserDefinedField2", rhsInspectionUserDefinedField2), lhsInspectionUserDefinedField2, rhsInspectionUserDefinedField2)) {
                return false;
            }
        }
        {
            String lhsInspectionUserDefinedField3;
            lhsInspectionUserDefinedField3 = this.getInspectionUserDefinedField3();
            String rhsInspectionUserDefinedField3;
            rhsInspectionUserDefinedField3 = that.getInspectionUserDefinedField3();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "inspectionUserDefinedField3", lhsInspectionUserDefinedField3), LocatorUtils.property(thatLocator, "inspectionUserDefinedField3", rhsInspectionUserDefinedField3), lhsInspectionUserDefinedField3, rhsInspectionUserDefinedField3)) {
                return false;
            }
        }
        {
            Date lhsInspectionUserDefinedField4;
            lhsInspectionUserDefinedField4 = this.getInspectionUserDefinedField4();
            Date rhsInspectionUserDefinedField4;
            rhsInspectionUserDefinedField4 = that.getInspectionUserDefinedField4();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "inspectionUserDefinedField4", lhsInspectionUserDefinedField4), LocatorUtils.property(thatLocator, "inspectionUserDefinedField4", rhsInspectionUserDefinedField4), lhsInspectionUserDefinedField4, rhsInspectionUserDefinedField4)) {
                return false;
            }
        }
        {
            Date lhsInspectionUserDefinedField5;
            lhsInspectionUserDefinedField5 = this.getInspectionUserDefinedField5();
            Date rhsInspectionUserDefinedField5;
            rhsInspectionUserDefinedField5 = that.getInspectionUserDefinedField5();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "inspectionUserDefinedField5", lhsInspectionUserDefinedField5), LocatorUtils.property(thatLocator, "inspectionUserDefinedField5", rhsInspectionUserDefinedField5), lhsInspectionUserDefinedField5, rhsInspectionUserDefinedField5)) {
                return false;
            }
        }
        {
            String lhsInspectionUserDefinedField6;
            lhsInspectionUserDefinedField6 = this.getInspectionUserDefinedField6();
            String rhsInspectionUserDefinedField6;
            rhsInspectionUserDefinedField6 = that.getInspectionUserDefinedField6();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "inspectionUserDefinedField6", lhsInspectionUserDefinedField6), LocatorUtils.property(thatLocator, "inspectionUserDefinedField6", rhsInspectionUserDefinedField6), lhsInspectionUserDefinedField6, rhsInspectionUserDefinedField6)) {
                return false;
            }
        }
        {
            InspectionContact lhsInspectionContact;
            lhsInspectionContact = this.getInspectionContact();
            InspectionContact rhsInspectionContact;
            rhsInspectionContact = that.getInspectionContact();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "inspectionContact", lhsInspectionContact), LocatorUtils.property(thatLocator, "inspectionContact", rhsInspectionContact), lhsInspectionContact, rhsInspectionContact)) {
                return false;
            }
        }
        {
            List<InspectionGovernmentContact> lhsInspectionGovernmentContact;
            lhsInspectionGovernmentContact = (this.isSetInspectionGovernmentContact()?this.getInspectionGovernmentContact():null);
            List<InspectionGovernmentContact> rhsInspectionGovernmentContact;
            rhsInspectionGovernmentContact = (that.isSetInspectionGovernmentContact()?that.getInspectionGovernmentContact():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "inspectionGovernmentContact", lhsInspectionGovernmentContact), LocatorUtils.property(thatLocator, "inspectionGovernmentContact", rhsInspectionGovernmentContact), lhsInspectionGovernmentContact, rhsInspectionGovernmentContact)) {
                return false;
            }
        }
        {
            List<String> lhsInspectionCommentText;
            lhsInspectionCommentText = (this.isSetInspectionCommentText()?this.getInspectionCommentText():null);
            List<String> rhsInspectionCommentText;
            rhsInspectionCommentText = (that.isSetInspectionCommentText()?that.getInspectionCommentText():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "inspectionCommentText", lhsInspectionCommentText), LocatorUtils.property(thatLocator, "inspectionCommentText", rhsInspectionCommentText), lhsInspectionCommentText, rhsInspectionCommentText)) {
                return false;
            }
        }
        {
            List<String> lhsSensitiveCommentText;
            lhsSensitiveCommentText = (this.isSetSensitiveCommentText()?this.getSensitiveCommentText():null);
            List<String> rhsSensitiveCommentText;
            rhsSensitiveCommentText = (that.isSetSensitiveCommentText()?that.getSensitiveCommentText():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "sensitiveCommentText", lhsSensitiveCommentText), LocatorUtils.property(thatLocator, "sensitiveCommentText", rhsSensitiveCommentText), lhsSensitiveCommentText, rhsSensitiveCommentText)) {
                return false;
            }
        }
        {
            AirStackTestData lhsAirStackTestData;
            lhsAirStackTestData = this.getAirStackTestData();
            AirStackTestData rhsAirStackTestData;
            rhsAirStackTestData = that.getAirStackTestData();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "airStackTestData", lhsAirStackTestData), LocatorUtils.property(thatLocator, "airStackTestData", rhsAirStackTestData), lhsAirStackTestData, rhsAirStackTestData)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            ComplianceMonitoringActivityTypeCodeType theComplianceMonitoringActivityTypeCode;
            theComplianceMonitoringActivityTypeCode = this.getComplianceMonitoringActivityTypeCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "complianceMonitoringActivityTypeCode", theComplianceMonitoringActivityTypeCode), currentHashCode, theComplianceMonitoringActivityTypeCode);
        }
        {
            Date theComplianceMonitoringDate;
            theComplianceMonitoringDate = this.getComplianceMonitoringDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "complianceMonitoringDate", theComplianceMonitoringDate), currentHashCode, theComplianceMonitoringDate);
        }
        {
            Date theComplianceMonitoringStartDate;
            theComplianceMonitoringStartDate = this.getComplianceMonitoringStartDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "complianceMonitoringStartDate", theComplianceMonitoringStartDate), currentHashCode, theComplianceMonitoringStartDate);
        }
        {
            List<String> theComplianceInspectionTypeCode;
            theComplianceInspectionTypeCode = (this.isSetComplianceInspectionTypeCode()?this.getComplianceInspectionTypeCode():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "complianceInspectionTypeCode", theComplianceInspectionTypeCode), currentHashCode, theComplianceInspectionTypeCode);
        }
        {
            String theComplianceMonitoringActivityName;
            theComplianceMonitoringActivityName = this.getComplianceMonitoringActivityName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "complianceMonitoringActivityName", theComplianceMonitoringActivityName), currentHashCode, theComplianceMonitoringActivityName);
        }
        {
            List<Integer> theNationalPrioritiesCode;
            theNationalPrioritiesCode = (this.isSetNationalPrioritiesCode()?this.getNationalPrioritiesCode():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "nationalPrioritiesCode", theNationalPrioritiesCode), currentHashCode, theNationalPrioritiesCode);
        }
        {
            YesNoIndicatorTypeBase theMultimediaIndicator;
            theMultimediaIndicator = this.getMultimediaIndicator();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "multimediaIndicator", theMultimediaIndicator), currentHashCode, theMultimediaIndicator);
        }
        {
            Date theComplianceMonitoringPlannedStartDate;
            theComplianceMonitoringPlannedStartDate = this.getComplianceMonitoringPlannedStartDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "complianceMonitoringPlannedStartDate", theComplianceMonitoringPlannedStartDate), currentHashCode, theComplianceMonitoringPlannedStartDate);
        }
        {
            Date theComplianceMonitoringPlannedEndDate;
            theComplianceMonitoringPlannedEndDate = this.getComplianceMonitoringPlannedEndDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "complianceMonitoringPlannedEndDate", theComplianceMonitoringPlannedEndDate), currentHashCode, theComplianceMonitoringPlannedEndDate);
        }
        {
            List<Integer> theRegionalPriorityCode;
            theRegionalPriorityCode = (this.isSetRegionalPriorityCode()?this.getRegionalPriorityCode():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "regionalPriorityCode", theRegionalPriorityCode), currentHashCode, theRegionalPriorityCode);
        }
        {
            String theDeficienciesObservedIndicator;
            theDeficienciesObservedIndicator = this.getDeficienciesObservedIndicator();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "deficienciesObservedIndicator", theDeficienciesObservedIndicator), currentHashCode, theDeficienciesObservedIndicator);
        }
        {
            List<String> theAirFacilityIdentifier;
            theAirFacilityIdentifier = (this.isSetAirFacilityIdentifier()?this.getAirFacilityIdentifier():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "airFacilityIdentifier", theAirFacilityIdentifier), currentHashCode, theAirFacilityIdentifier);
        }
        {
            String theLeadAgencyCode;
            theLeadAgencyCode = this.getLeadAgencyCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "leadAgencyCode", theLeadAgencyCode), currentHashCode, theLeadAgencyCode);
        }
        {
            List<String> theProgramCode;
            theProgramCode = (this.isSetProgramCode()?this.getProgramCode():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "programCode", theProgramCode), currentHashCode, theProgramCode);
        }
        {
            String theOtherProgramDescriptionText;
            theOtherProgramDescriptionText = this.getOtherProgramDescriptionText();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "otherProgramDescriptionText", theOtherProgramDescriptionText), currentHashCode, theOtherProgramDescriptionText);
        }
        {
            List<Integer> theAirPollutantCode;
            theAirPollutantCode = (this.isSetAirPollutantCode()?this.getAirPollutantCode():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "airPollutantCode", theAirPollutantCode), currentHashCode, theAirPollutantCode);
        }
        {
            String theOtherAgencyInitiativeText;
            theOtherAgencyInitiativeText = this.getOtherAgencyInitiativeText();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "otherAgencyInitiativeText", theOtherAgencyInitiativeText), currentHashCode, theOtherAgencyInitiativeText);
        }
        {
            YesNoIndicatorTypeBase theInspectionUserDefinedField1;
            theInspectionUserDefinedField1 = this.getInspectionUserDefinedField1();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "inspectionUserDefinedField1", theInspectionUserDefinedField1), currentHashCode, theInspectionUserDefinedField1);
        }
        {
            String theInspectionUserDefinedField2;
            theInspectionUserDefinedField2 = this.getInspectionUserDefinedField2();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "inspectionUserDefinedField2", theInspectionUserDefinedField2), currentHashCode, theInspectionUserDefinedField2);
        }
        {
            String theInspectionUserDefinedField3;
            theInspectionUserDefinedField3 = this.getInspectionUserDefinedField3();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "inspectionUserDefinedField3", theInspectionUserDefinedField3), currentHashCode, theInspectionUserDefinedField3);
        }
        {
            Date theInspectionUserDefinedField4;
            theInspectionUserDefinedField4 = this.getInspectionUserDefinedField4();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "inspectionUserDefinedField4", theInspectionUserDefinedField4), currentHashCode, theInspectionUserDefinedField4);
        }
        {
            Date theInspectionUserDefinedField5;
            theInspectionUserDefinedField5 = this.getInspectionUserDefinedField5();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "inspectionUserDefinedField5", theInspectionUserDefinedField5), currentHashCode, theInspectionUserDefinedField5);
        }
        {
            String theInspectionUserDefinedField6;
            theInspectionUserDefinedField6 = this.getInspectionUserDefinedField6();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "inspectionUserDefinedField6", theInspectionUserDefinedField6), currentHashCode, theInspectionUserDefinedField6);
        }
        {
            InspectionContact theInspectionContact;
            theInspectionContact = this.getInspectionContact();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "inspectionContact", theInspectionContact), currentHashCode, theInspectionContact);
        }
        {
            List<InspectionGovernmentContact> theInspectionGovernmentContact;
            theInspectionGovernmentContact = (this.isSetInspectionGovernmentContact()?this.getInspectionGovernmentContact():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "inspectionGovernmentContact", theInspectionGovernmentContact), currentHashCode, theInspectionGovernmentContact);
        }
        {
            List<String> theInspectionCommentText;
            theInspectionCommentText = (this.isSetInspectionCommentText()?this.getInspectionCommentText():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "inspectionCommentText", theInspectionCommentText), currentHashCode, theInspectionCommentText);
        }
        {
            List<String> theSensitiveCommentText;
            theSensitiveCommentText = (this.isSetSensitiveCommentText()?this.getSensitiveCommentText():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "sensitiveCommentText", theSensitiveCommentText), currentHashCode, theSensitiveCommentText);
        }
        {
            AirStackTestData theAirStackTestData;
            theAirStackTestData = this.getAirStackTestData();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "airStackTestData", theAirStackTestData), currentHashCode, theAirStackTestData);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
