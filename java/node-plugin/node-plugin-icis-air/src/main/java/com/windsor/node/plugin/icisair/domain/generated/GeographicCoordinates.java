//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.09.02 at 11:05:46 AM PDT 
//


package com.windsor.node.plugin.icisair.domain.generated;

import java.io.Serializable;
import java.math.BigDecimal;
import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.MappedSuperclass;
import javax.persistence.Transient;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import com.windsor.node.plugin.common.xml.bind.annotation.adapters.Decimal10FloatingTypeAdapter;
import com.windsor.node.plugin.common.xml.bind.annotation.adapters.Decimal11FloatingTypeAdapter;
import com.windsor.node.plugin.common.xml.bind.annotation.adapters.IntegerAdapter;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for GeographicCoordinates complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="GeographicCoordinates">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;group ref="{http://www.exchangenetwork.net/schema/icis/5}LatitudeLongitudeCoordinates"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}HorizontalAccuracyMeasure" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}GeometricTypeCode" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}HorizontalCollectionMethodCode" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}HorizontalReferenceDatumCode" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}ReferencePointCode" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}SourceMapScaleNumber" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "GeographicCoordinates", propOrder = {
    "latitudeMeasure",
    "longitudeMeasure",
    "horizontalAccuracyMeasure",
    "geometricTypeCode",
    "horizontalCollectionMethodCode",
    "horizontalReferenceDatumCode",
    "referencePointCode",
    "sourceMapScaleNumber"
})
@XmlSeeAlso({
    AirGeographicCoordinateData.class
})
@MappedSuperclass
public class GeographicCoordinates
    implements Serializable, Equals, HashCode
{

    private final static long serialVersionUID = 1L;
    @XmlElement(name = "LatitudeMeasure", type = String.class)
    @XmlJavaTypeAdapter(Decimal10FloatingTypeAdapter.class)
    protected BigDecimal latitudeMeasure;
    @XmlElement(name = "LongitudeMeasure", type = String.class)
    @XmlJavaTypeAdapter(Decimal11FloatingTypeAdapter.class)
    protected BigDecimal longitudeMeasure;
    @XmlElement(name = "HorizontalAccuracyMeasure", type = String.class)
    @XmlJavaTypeAdapter(IntegerAdapter.class)
    protected Integer horizontalAccuracyMeasure;
    @XmlElement(name = "GeometricTypeCode")
    protected String geometricTypeCode;
    @XmlElement(name = "HorizontalCollectionMethodCode")
    protected String horizontalCollectionMethodCode;
    @XmlElement(name = "HorizontalReferenceDatumCode")
    protected String horizontalReferenceDatumCode;
    @XmlElement(name = "ReferencePointCode")
    protected String referencePointCode;
    @XmlElement(name = "SourceMapScaleNumber", type = String.class)
    @XmlJavaTypeAdapter(IntegerAdapter.class)
    protected Integer sourceMapScaleNumber;

    /**
     * Gets the value of the latitudeMeasure property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "LAT_MEAS", length = 10)
    public BigDecimal getLatitudeMeasure() {
        return latitudeMeasure;
    }

    /**
     * Sets the value of the latitudeMeasure property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLatitudeMeasure(BigDecimal value) {
        this.latitudeMeasure = value;
    }

    @Transient
    public boolean isSetLatitudeMeasure() {
        return (this.latitudeMeasure!= null);
    }

    /**
     * Gets the value of the longitudeMeasure property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "LONG_MEAS", length = 11)
    public BigDecimal getLongitudeMeasure() {
        return longitudeMeasure;
    }

    /**
     * Sets the value of the longitudeMeasure property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLongitudeMeasure(BigDecimal value) {
        this.longitudeMeasure = value;
    }

    @Transient
    public boolean isSetLongitudeMeasure() {
        return (this.longitudeMeasure!= null);
    }

    /**
     * Gets the value of the horizontalAccuracyMeasure property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "HORZ_ACCURACY_MEAS", scale = 0)
    public Integer getHorizontalAccuracyMeasure() {
        return horizontalAccuracyMeasure;
    }

    /**
     * Sets the value of the horizontalAccuracyMeasure property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setHorizontalAccuracyMeasure(Integer value) {
        this.horizontalAccuracyMeasure = value;
    }

    @Transient
    public boolean isSetHorizontalAccuracyMeasure() {
        return (this.horizontalAccuracyMeasure!= null);
    }

    /**
     * Gets the value of the geometricTypeCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "GEOM_TYPE_CODE", length = 3)
    public String getGeometricTypeCode() {
        return geometricTypeCode;
    }

    /**
     * Sets the value of the geometricTypeCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setGeometricTypeCode(String value) {
        this.geometricTypeCode = value;
    }

    @Transient
    public boolean isSetGeometricTypeCode() {
        return (this.geometricTypeCode!= null);
    }

    /**
     * Gets the value of the horizontalCollectionMethodCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "HORZ_COLL_METHOD_CODE", length = 3)
    public String getHorizontalCollectionMethodCode() {
        return horizontalCollectionMethodCode;
    }

    /**
     * Sets the value of the horizontalCollectionMethodCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setHorizontalCollectionMethodCode(String value) {
        this.horizontalCollectionMethodCode = value;
    }

    @Transient
    public boolean isSetHorizontalCollectionMethodCode() {
        return (this.horizontalCollectionMethodCode!= null);
    }

    /**
     * Gets the value of the horizontalReferenceDatumCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "HORZ_REF_DATUM_CODE", length = 3)
    public String getHorizontalReferenceDatumCode() {
        return horizontalReferenceDatumCode;
    }

    /**
     * Sets the value of the horizontalReferenceDatumCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setHorizontalReferenceDatumCode(String value) {
        this.horizontalReferenceDatumCode = value;
    }

    @Transient
    public boolean isSetHorizontalReferenceDatumCode() {
        return (this.horizontalReferenceDatumCode!= null);
    }

    /**
     * Gets the value of the referencePointCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "REF_POINT_CODE", length = 3)
    public String getReferencePointCode() {
        return referencePointCode;
    }

    /**
     * Sets the value of the referencePointCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setReferencePointCode(String value) {
        this.referencePointCode = value;
    }

    @Transient
    public boolean isSetReferencePointCode() {
        return (this.referencePointCode!= null);
    }

    /**
     * Gets the value of the sourceMapScaleNumber property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "SRC_MAP_SCALE_NUM", scale = 0)
    public Integer getSourceMapScaleNumber() {
        return sourceMapScaleNumber;
    }

    /**
     * Sets the value of the sourceMapScaleNumber property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSourceMapScaleNumber(Integer value) {
        this.sourceMapScaleNumber = value;
    }

    @Transient
    public boolean isSetSourceMapScaleNumber() {
        return (this.sourceMapScaleNumber!= null);
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof GeographicCoordinates)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final GeographicCoordinates that = ((GeographicCoordinates) object);
        {
            BigDecimal lhsLatitudeMeasure;
            lhsLatitudeMeasure = this.getLatitudeMeasure();
            BigDecimal rhsLatitudeMeasure;
            rhsLatitudeMeasure = that.getLatitudeMeasure();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "latitudeMeasure", lhsLatitudeMeasure), LocatorUtils.property(thatLocator, "latitudeMeasure", rhsLatitudeMeasure), lhsLatitudeMeasure, rhsLatitudeMeasure)) {
                return false;
            }
        }
        {
            BigDecimal lhsLongitudeMeasure;
            lhsLongitudeMeasure = this.getLongitudeMeasure();
            BigDecimal rhsLongitudeMeasure;
            rhsLongitudeMeasure = that.getLongitudeMeasure();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "longitudeMeasure", lhsLongitudeMeasure), LocatorUtils.property(thatLocator, "longitudeMeasure", rhsLongitudeMeasure), lhsLongitudeMeasure, rhsLongitudeMeasure)) {
                return false;
            }
        }
        {
            Integer lhsHorizontalAccuracyMeasure;
            lhsHorizontalAccuracyMeasure = this.getHorizontalAccuracyMeasure();
            Integer rhsHorizontalAccuracyMeasure;
            rhsHorizontalAccuracyMeasure = that.getHorizontalAccuracyMeasure();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "horizontalAccuracyMeasure", lhsHorizontalAccuracyMeasure), LocatorUtils.property(thatLocator, "horizontalAccuracyMeasure", rhsHorizontalAccuracyMeasure), lhsHorizontalAccuracyMeasure, rhsHorizontalAccuracyMeasure)) {
                return false;
            }
        }
        {
            String lhsGeometricTypeCode;
            lhsGeometricTypeCode = this.getGeometricTypeCode();
            String rhsGeometricTypeCode;
            rhsGeometricTypeCode = that.getGeometricTypeCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "geometricTypeCode", lhsGeometricTypeCode), LocatorUtils.property(thatLocator, "geometricTypeCode", rhsGeometricTypeCode), lhsGeometricTypeCode, rhsGeometricTypeCode)) {
                return false;
            }
        }
        {
            String lhsHorizontalCollectionMethodCode;
            lhsHorizontalCollectionMethodCode = this.getHorizontalCollectionMethodCode();
            String rhsHorizontalCollectionMethodCode;
            rhsHorizontalCollectionMethodCode = that.getHorizontalCollectionMethodCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "horizontalCollectionMethodCode", lhsHorizontalCollectionMethodCode), LocatorUtils.property(thatLocator, "horizontalCollectionMethodCode", rhsHorizontalCollectionMethodCode), lhsHorizontalCollectionMethodCode, rhsHorizontalCollectionMethodCode)) {
                return false;
            }
        }
        {
            String lhsHorizontalReferenceDatumCode;
            lhsHorizontalReferenceDatumCode = this.getHorizontalReferenceDatumCode();
            String rhsHorizontalReferenceDatumCode;
            rhsHorizontalReferenceDatumCode = that.getHorizontalReferenceDatumCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "horizontalReferenceDatumCode", lhsHorizontalReferenceDatumCode), LocatorUtils.property(thatLocator, "horizontalReferenceDatumCode", rhsHorizontalReferenceDatumCode), lhsHorizontalReferenceDatumCode, rhsHorizontalReferenceDatumCode)) {
                return false;
            }
        }
        {
            String lhsReferencePointCode;
            lhsReferencePointCode = this.getReferencePointCode();
            String rhsReferencePointCode;
            rhsReferencePointCode = that.getReferencePointCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "referencePointCode", lhsReferencePointCode), LocatorUtils.property(thatLocator, "referencePointCode", rhsReferencePointCode), lhsReferencePointCode, rhsReferencePointCode)) {
                return false;
            }
        }
        {
            Integer lhsSourceMapScaleNumber;
            lhsSourceMapScaleNumber = this.getSourceMapScaleNumber();
            Integer rhsSourceMapScaleNumber;
            rhsSourceMapScaleNumber = that.getSourceMapScaleNumber();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "sourceMapScaleNumber", lhsSourceMapScaleNumber), LocatorUtils.property(thatLocator, "sourceMapScaleNumber", rhsSourceMapScaleNumber), lhsSourceMapScaleNumber, rhsSourceMapScaleNumber)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            BigDecimal theLatitudeMeasure;
            theLatitudeMeasure = this.getLatitudeMeasure();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "latitudeMeasure", theLatitudeMeasure), currentHashCode, theLatitudeMeasure);
        }
        {
            BigDecimal theLongitudeMeasure;
            theLongitudeMeasure = this.getLongitudeMeasure();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "longitudeMeasure", theLongitudeMeasure), currentHashCode, theLongitudeMeasure);
        }
        {
            Integer theHorizontalAccuracyMeasure;
            theHorizontalAccuracyMeasure = this.getHorizontalAccuracyMeasure();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "horizontalAccuracyMeasure", theHorizontalAccuracyMeasure), currentHashCode, theHorizontalAccuracyMeasure);
        }
        {
            String theGeometricTypeCode;
            theGeometricTypeCode = this.getGeometricTypeCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "geometricTypeCode", theGeometricTypeCode), currentHashCode, theGeometricTypeCode);
        }
        {
            String theHorizontalCollectionMethodCode;
            theHorizontalCollectionMethodCode = this.getHorizontalCollectionMethodCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "horizontalCollectionMethodCode", theHorizontalCollectionMethodCode), currentHashCode, theHorizontalCollectionMethodCode);
        }
        {
            String theHorizontalReferenceDatumCode;
            theHorizontalReferenceDatumCode = this.getHorizontalReferenceDatumCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "horizontalReferenceDatumCode", theHorizontalReferenceDatumCode), currentHashCode, theHorizontalReferenceDatumCode);
        }
        {
            String theReferencePointCode;
            theReferencePointCode = this.getReferencePointCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "referencePointCode", theReferencePointCode), currentHashCode, theReferencePointCode);
        }
        {
            Integer theSourceMapScaleNumber;
            theSourceMapScaleNumber = this.getSourceMapScaleNumber();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "sourceMapScaleNumber", theSourceMapScaleNumber), currentHashCode, theSourceMapScaleNumber);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
