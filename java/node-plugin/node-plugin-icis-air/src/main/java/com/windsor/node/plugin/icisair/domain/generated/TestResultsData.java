//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.09.02 at 11:05:46 AM PDT 
//


package com.windsor.node.plugin.icisair.domain.generated;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import javax.persistence.Basic;
import javax.persistence.CollectionTable;
import javax.persistence.Column;
import javax.persistence.ElementCollection;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlTransient;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import com.windsor.node.plugin.common.xml.bind.annotation.adapters.IntegerAdapter;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for TestResultsData complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="TestResultsData">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}AirTestedPollutantCode"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}TestResultCode" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}MethodCode" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}AllowableValue" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}AllowableUnitCode" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}ActualResult" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}FailureReasonCode" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}OtherFailureReasonText" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "TestResultsData", propOrder = {
    "airTestedPollutantCode",
    "testResultCode",
    "methodCode",
    "allowableValue",
    "allowableUnitCode",
    "actualResult",
    "failureReasonCode",
    "otherFailureReasonText"
})
@Entity(name = "TestResultsData")
@Table(name = "ICA_TST_RSLTS")
@Inheritance(strategy = InheritanceType.JOINED)
public class TestResultsData
    implements Serializable, Equals, HashCode
{

    private final static long serialVersionUID = 1L;
    @XmlElement(name = "AirTestedPollutantCode", required = true, type = String.class)
    @XmlJavaTypeAdapter(IntegerAdapter.class)
    protected Integer airTestedPollutantCode;
    @XmlElement(name = "TestResultCode")
    protected String testResultCode;
    @XmlElement(name = "MethodCode")
    protected List<String> methodCode;
    @XmlElement(name = "AllowableValue", type = String.class)
    @XmlJavaTypeAdapter(IntegerAdapter.class)
    protected Integer allowableValue;
    @XmlElement(name = "AllowableUnitCode")
    protected String allowableUnitCode;
    @XmlElement(name = "ActualResult", type = String.class)
    @XmlJavaTypeAdapter(IntegerAdapter.class)
    protected Integer actualResult;
    @XmlElement(name = "FailureReasonCode")
    protected String failureReasonCode;
    @XmlElement(name = "OtherFailureReasonText")
    protected String otherFailureReasonText;
    @XmlTransient
    protected String dbid;

    /**
     * Gets the value of the airTestedPollutantCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "TESTED_POLUT_CODE", scale = 0)
    public Integer getAirTestedPollutantCode() {
        return airTestedPollutantCode;
    }

    /**
     * Sets the value of the airTestedPollutantCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAirTestedPollutantCode(Integer value) {
        this.airTestedPollutantCode = value;
    }

    @Transient
    public boolean isSetAirTestedPollutantCode() {
        return (this.airTestedPollutantCode!= null);
    }

    /**
     * Gets the value of the testResultCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "TST_RESULT_CODE", length = 3)
    public String getTestResultCode() {
        return testResultCode;
    }

    /**
     * Sets the value of the testResultCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTestResultCode(String value) {
        this.testResultCode = value;
    }

    @Transient
    public boolean isSetTestResultCode() {
        return (this.testResultCode!= null);
    }

    /**
     * Gets the value of the methodCode property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the methodCode property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getMethodCode().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * 
     * 
     */
    @ElementCollection
    @Column(name = "METHOD_CODE", length = 3)
    @CollectionTable(name = "ICA_METHOD", joinColumns = {
        @JoinColumn(name = "ICA_TST_RSLTS_ID")
    })
    public List<String> getMethodCode() {
        if (methodCode == null) {
            methodCode = new ArrayList<String>();
        }
        return this.methodCode;
    }

    /**
     * 
     * 
     */
    public void setMethodCode(List<String> methodCode) {
        this.methodCode = methodCode;
    }

    @Transient
    public boolean isSetMethodCode() {
        return ((this.methodCode!= null)&&(!this.methodCode.isEmpty()));
    }

    public void unsetMethodCode() {
        this.methodCode = null;
    }

    /**
     * Gets the value of the allowableValue property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "ALLOWABLE_VALUE", scale = 0)
    public Integer getAllowableValue() {
        return allowableValue;
    }

    /**
     * Sets the value of the allowableValue property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAllowableValue(Integer value) {
        this.allowableValue = value;
    }

    @Transient
    public boolean isSetAllowableValue() {
        return (this.allowableValue!= null);
    }

    /**
     * Gets the value of the allowableUnitCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "ALLOWABLE_UNIT_CODE", length = 7)
    public String getAllowableUnitCode() {
        return allowableUnitCode;
    }

    /**
     * Sets the value of the allowableUnitCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAllowableUnitCode(String value) {
        this.allowableUnitCode = value;
    }

    @Transient
    public boolean isSetAllowableUnitCode() {
        return (this.allowableUnitCode!= null);
    }

    /**
     * Gets the value of the actualResult property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "ACTUAL_RESULT", scale = 0)
    public Integer getActualResult() {
        return actualResult;
    }

    /**
     * Sets the value of the actualResult property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setActualResult(Integer value) {
        this.actualResult = value;
    }

    @Transient
    public boolean isSetActualResult() {
        return (this.actualResult!= null);
    }

    /**
     * Gets the value of the failureReasonCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "FAILURE_RSN_CODE", length = 3)
    public String getFailureReasonCode() {
        return failureReasonCode;
    }

    /**
     * Sets the value of the failureReasonCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setFailureReasonCode(String value) {
        this.failureReasonCode = value;
    }

    @Transient
    public boolean isSetFailureReasonCode() {
        return (this.failureReasonCode!= null);
    }

    /**
     * Gets the value of the otherFailureReasonText property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "OTHR_FAILURE_RSN_TXT", length = 50)
    public String getOtherFailureReasonText() {
        return otherFailureReasonText;
    }

    /**
     * Sets the value of the otherFailureReasonText property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setOtherFailureReasonText(String value) {
        this.otherFailureReasonText = value;
    }

    @Transient
    public boolean isSetOtherFailureReasonText() {
        return (this.otherFailureReasonText!= null);
    }

    /**
     * 
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Id
    @Column(name = "ICA_TST_RSLTS_ID")
    public String getDbid() {
        return dbid;
    }

    /**
     * 
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDbid(String value) {
        this.dbid = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof TestResultsData)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final TestResultsData that = ((TestResultsData) object);
        {
            Integer lhsAirTestedPollutantCode;
            lhsAirTestedPollutantCode = this.getAirTestedPollutantCode();
            Integer rhsAirTestedPollutantCode;
            rhsAirTestedPollutantCode = that.getAirTestedPollutantCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "airTestedPollutantCode", lhsAirTestedPollutantCode), LocatorUtils.property(thatLocator, "airTestedPollutantCode", rhsAirTestedPollutantCode), lhsAirTestedPollutantCode, rhsAirTestedPollutantCode)) {
                return false;
            }
        }
        {
            String lhsTestResultCode;
            lhsTestResultCode = this.getTestResultCode();
            String rhsTestResultCode;
            rhsTestResultCode = that.getTestResultCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "testResultCode", lhsTestResultCode), LocatorUtils.property(thatLocator, "testResultCode", rhsTestResultCode), lhsTestResultCode, rhsTestResultCode)) {
                return false;
            }
        }
        {
            List<String> lhsMethodCode;
            lhsMethodCode = (this.isSetMethodCode()?this.getMethodCode():null);
            List<String> rhsMethodCode;
            rhsMethodCode = (that.isSetMethodCode()?that.getMethodCode():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "methodCode", lhsMethodCode), LocatorUtils.property(thatLocator, "methodCode", rhsMethodCode), lhsMethodCode, rhsMethodCode)) {
                return false;
            }
        }
        {
            Integer lhsAllowableValue;
            lhsAllowableValue = this.getAllowableValue();
            Integer rhsAllowableValue;
            rhsAllowableValue = that.getAllowableValue();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "allowableValue", lhsAllowableValue), LocatorUtils.property(thatLocator, "allowableValue", rhsAllowableValue), lhsAllowableValue, rhsAllowableValue)) {
                return false;
            }
        }
        {
            String lhsAllowableUnitCode;
            lhsAllowableUnitCode = this.getAllowableUnitCode();
            String rhsAllowableUnitCode;
            rhsAllowableUnitCode = that.getAllowableUnitCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "allowableUnitCode", lhsAllowableUnitCode), LocatorUtils.property(thatLocator, "allowableUnitCode", rhsAllowableUnitCode), lhsAllowableUnitCode, rhsAllowableUnitCode)) {
                return false;
            }
        }
        {
            Integer lhsActualResult;
            lhsActualResult = this.getActualResult();
            Integer rhsActualResult;
            rhsActualResult = that.getActualResult();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "actualResult", lhsActualResult), LocatorUtils.property(thatLocator, "actualResult", rhsActualResult), lhsActualResult, rhsActualResult)) {
                return false;
            }
        }
        {
            String lhsFailureReasonCode;
            lhsFailureReasonCode = this.getFailureReasonCode();
            String rhsFailureReasonCode;
            rhsFailureReasonCode = that.getFailureReasonCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "failureReasonCode", lhsFailureReasonCode), LocatorUtils.property(thatLocator, "failureReasonCode", rhsFailureReasonCode), lhsFailureReasonCode, rhsFailureReasonCode)) {
                return false;
            }
        }
        {
            String lhsOtherFailureReasonText;
            lhsOtherFailureReasonText = this.getOtherFailureReasonText();
            String rhsOtherFailureReasonText;
            rhsOtherFailureReasonText = that.getOtherFailureReasonText();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "otherFailureReasonText", lhsOtherFailureReasonText), LocatorUtils.property(thatLocator, "otherFailureReasonText", rhsOtherFailureReasonText), lhsOtherFailureReasonText, rhsOtherFailureReasonText)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            Integer theAirTestedPollutantCode;
            theAirTestedPollutantCode = this.getAirTestedPollutantCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "airTestedPollutantCode", theAirTestedPollutantCode), currentHashCode, theAirTestedPollutantCode);
        }
        {
            String theTestResultCode;
            theTestResultCode = this.getTestResultCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "testResultCode", theTestResultCode), currentHashCode, theTestResultCode);
        }
        {
            List<String> theMethodCode;
            theMethodCode = (this.isSetMethodCode()?this.getMethodCode():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "methodCode", theMethodCode), currentHashCode, theMethodCode);
        }
        {
            Integer theAllowableValue;
            theAllowableValue = this.getAllowableValue();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "allowableValue", theAllowableValue), currentHashCode, theAllowableValue);
        }
        {
            String theAllowableUnitCode;
            theAllowableUnitCode = this.getAllowableUnitCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "allowableUnitCode", theAllowableUnitCode), currentHashCode, theAllowableUnitCode);
        }
        {
            Integer theActualResult;
            theActualResult = this.getActualResult();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "actualResult", theActualResult), currentHashCode, theActualResult);
        }
        {
            String theFailureReasonCode;
            theFailureReasonCode = this.getFailureReasonCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "failureReasonCode", theFailureReasonCode), currentHashCode, theFailureReasonCode);
        }
        {
            String theOtherFailureReasonText;
            theOtherFailureReasonText = this.getOtherFailureReasonText();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "otherFailureReasonText", theOtherFailureReasonText), currentHashCode, theOtherFailureReasonText);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
