//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.09.02 at 11:05:46 AM PDT 
//


package com.windsor.node.plugin.icisair.domain.generated;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for PayloadData complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="PayloadData">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;choice>
 *         &lt;element name="AirComplianceMonitoringStrategyData" type="{http://www.exchangenetwork.net/schema/icis/5}AirComplianceMonitoringStrategyData" maxOccurs="unbounded"/>
 *         &lt;element name="AirDACaseFileData" type="{http://www.exchangenetwork.net/schema/icis/5}AirDACaseFileData" maxOccurs="unbounded"/>
 *         &lt;element name="AirDAComplianceMonitoringData" type="{http://www.exchangenetwork.net/schema/icis/5}AirDAComplianceMonitoringData" maxOccurs="unbounded"/>
 *         &lt;element name="AirDAEnforcementActionLinkageData" type="{http://www.exchangenetwork.net/schema/icis/5}AirDAEnforcementActionLinkageData" maxOccurs="unbounded"/>
 *         &lt;element name="AirDAEnforcementActionMilestoneData" type="{http://www.exchangenetwork.net/schema/icis/5}AirDAEnforcementActionMilestoneData" maxOccurs="unbounded"/>
 *         &lt;element name="AirDAFormalEnforcementActionData" type="{http://www.exchangenetwork.net/schema/icis/5}AirDAFormalEnforcementActionData" maxOccurs="unbounded"/>
 *         &lt;element name="AirDAInformalEnforcementActionData" type="{http://www.exchangenetwork.net/schema/icis/5}AirDAInformalEnforcementActionData" maxOccurs="unbounded"/>
 *         &lt;element name="AirFacilityData" type="{http://www.exchangenetwork.net/schema/icis/5}AirFacilityData" maxOccurs="unbounded"/>
 *         &lt;element name="AirPollutantsData" type="{http://www.exchangenetwork.net/schema/icis/5}AirPollutantsData" maxOccurs="unbounded"/>
 *         &lt;element name="AirProgramsData" type="{http://www.exchangenetwork.net/schema/icis/5}AirProgramsData" maxOccurs="unbounded"/>
 *         &lt;element name="AirTVACCData" type="{http://www.exchangenetwork.net/schema/icis/5}AirTVACCData" maxOccurs="unbounded"/>
 *         &lt;element name="CaseFileLinkageData" type="{http://www.exchangenetwork.net/schema/icis/5}CaseFileLinkageData" maxOccurs="unbounded"/>
 *         &lt;element name="ComplianceMonitoringLinkageData" type="{http://www.exchangenetwork.net/schema/icis/5}ComplianceMonitoringLinkageData" maxOccurs="unbounded"/>
 *       &lt;/choice>
 *       &lt;attribute name="Operation" use="required" type="{http://www.exchangenetwork.net/schema/icis/5}OperationType" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "PayloadData", propOrder = {
    "airComplianceMonitoringStrategyData",
    "airDACaseFileData",
    "airDAComplianceMonitoringData",
    "airDAEnforcementActionLinkageData",
    "airDAEnforcementActionMilestoneData",
    "airDAFormalEnforcementActionData",
    "airDAInformalEnforcementActionData",
    "airFacilityData",
    "airPollutantsData",
    "airProgramsData",
    "airTVACCData",
    "caseFileLinkageData",
    "complianceMonitoringLinkageData"
})
public class PayloadData
    implements Serializable, Equals, HashCode
{

    private final static long serialVersionUID = 1L;
    @XmlElement(name = "AirComplianceMonitoringStrategyData")
    protected List<AirComplianceMonitoringStrategyData> airComplianceMonitoringStrategyData;
    @XmlElement(name = "AirDACaseFileData")
    protected List<AirDACaseFileData> airDACaseFileData;
    @XmlElement(name = "AirDAComplianceMonitoringData")
    protected List<AirDAComplianceMonitoringData> airDAComplianceMonitoringData;
    @XmlElement(name = "AirDAEnforcementActionLinkageData")
    protected List<AirDAEnforcementActionLinkageData> airDAEnforcementActionLinkageData;
    @XmlElement(name = "AirDAEnforcementActionMilestoneData")
    protected List<AirDAEnforcementActionMilestoneData> airDAEnforcementActionMilestoneData;
    @XmlElement(name = "AirDAFormalEnforcementActionData")
    protected List<AirDAFormalEnforcementActionData> airDAFormalEnforcementActionData;
    @XmlElement(name = "AirDAInformalEnforcementActionData")
    protected List<AirDAInformalEnforcementActionData> airDAInformalEnforcementActionData;
    @XmlElement(name = "AirFacilityData")
    protected List<AirFacilityData> airFacilityData;
    @XmlElement(name = "AirPollutantsData")
    protected List<AirPollutantsData> airPollutantsData;
    @XmlElement(name = "AirProgramsData")
    protected List<AirProgramsData> airProgramsData;
    @XmlElement(name = "AirTVACCData")
    protected List<AirTVACCData> airTVACCData;
    @XmlElement(name = "CaseFileLinkageData")
    protected List<CaseFileLinkageData> caseFileLinkageData;
    @XmlElement(name = "ComplianceMonitoringLinkageData")
    protected List<ComplianceMonitoringLinkageData> complianceMonitoringLinkageData;
    @XmlAttribute(name = "Operation", required = true)
    protected OperationType operation;

    /**
     * Gets the value of the airComplianceMonitoringStrategyData property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the airComplianceMonitoringStrategyData property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAirComplianceMonitoringStrategyData().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link AirComplianceMonitoringStrategyData }
     * 
     * 
     */
    public List<AirComplianceMonitoringStrategyData> getAirComplianceMonitoringStrategyData() {
        if (airComplianceMonitoringStrategyData == null) {
            airComplianceMonitoringStrategyData = new ArrayList<AirComplianceMonitoringStrategyData>();
        }
        return this.airComplianceMonitoringStrategyData;
    }

    /**
     * 
     * 
     */
    public void setAirComplianceMonitoringStrategyData(List<AirComplianceMonitoringStrategyData> airComplianceMonitoringStrategyData) {
        this.airComplianceMonitoringStrategyData = airComplianceMonitoringStrategyData;
    }

    public boolean isSetAirComplianceMonitoringStrategyData() {
        return ((this.airComplianceMonitoringStrategyData!= null)&&(!this.airComplianceMonitoringStrategyData.isEmpty()));
    }

    public void unsetAirComplianceMonitoringStrategyData() {
        this.airComplianceMonitoringStrategyData = null;
    }

    /**
     * Gets the value of the airDACaseFileData property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the airDACaseFileData property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAirDACaseFileData().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link AirDACaseFileData }
     * 
     * 
     */
    public List<AirDACaseFileData> getAirDACaseFileData() {
        if (airDACaseFileData == null) {
            airDACaseFileData = new ArrayList<AirDACaseFileData>();
        }
        return this.airDACaseFileData;
    }

    /**
     * 
     * 
     */
    public void setAirDACaseFileData(List<AirDACaseFileData> airDACaseFileData) {
        this.airDACaseFileData = airDACaseFileData;
    }

    public boolean isSetAirDACaseFileData() {
        return ((this.airDACaseFileData!= null)&&(!this.airDACaseFileData.isEmpty()));
    }

    public void unsetAirDACaseFileData() {
        this.airDACaseFileData = null;
    }

    /**
     * Gets the value of the airDAComplianceMonitoringData property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the airDAComplianceMonitoringData property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAirDAComplianceMonitoringData().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link AirDAComplianceMonitoringData }
     * 
     * 
     */
    public List<AirDAComplianceMonitoringData> getAirDAComplianceMonitoringData() {
        if (airDAComplianceMonitoringData == null) {
            airDAComplianceMonitoringData = new ArrayList<AirDAComplianceMonitoringData>();
        }
        return this.airDAComplianceMonitoringData;
    }

    /**
     * 
     * 
     */
    public void setAirDAComplianceMonitoringData(List<AirDAComplianceMonitoringData> airDAComplianceMonitoringData) {
        this.airDAComplianceMonitoringData = airDAComplianceMonitoringData;
    }

    public boolean isSetAirDAComplianceMonitoringData() {
        return ((this.airDAComplianceMonitoringData!= null)&&(!this.airDAComplianceMonitoringData.isEmpty()));
    }

    public void unsetAirDAComplianceMonitoringData() {
        this.airDAComplianceMonitoringData = null;
    }

    /**
     * Gets the value of the airDAEnforcementActionLinkageData property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the airDAEnforcementActionLinkageData property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAirDAEnforcementActionLinkageData().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link AirDAEnforcementActionLinkageData }
     * 
     * 
     */
    public List<AirDAEnforcementActionLinkageData> getAirDAEnforcementActionLinkageData() {
        if (airDAEnforcementActionLinkageData == null) {
            airDAEnforcementActionLinkageData = new ArrayList<AirDAEnforcementActionLinkageData>();
        }
        return this.airDAEnforcementActionLinkageData;
    }

    /**
     * 
     * 
     */
    public void setAirDAEnforcementActionLinkageData(List<AirDAEnforcementActionLinkageData> airDAEnforcementActionLinkageData) {
        this.airDAEnforcementActionLinkageData = airDAEnforcementActionLinkageData;
    }

    public boolean isSetAirDAEnforcementActionLinkageData() {
        return ((this.airDAEnforcementActionLinkageData!= null)&&(!this.airDAEnforcementActionLinkageData.isEmpty()));
    }

    public void unsetAirDAEnforcementActionLinkageData() {
        this.airDAEnforcementActionLinkageData = null;
    }

    /**
     * Gets the value of the airDAEnforcementActionMilestoneData property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the airDAEnforcementActionMilestoneData property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAirDAEnforcementActionMilestoneData().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link AirDAEnforcementActionMilestoneData }
     * 
     * 
     */
    public List<AirDAEnforcementActionMilestoneData> getAirDAEnforcementActionMilestoneData() {
        if (airDAEnforcementActionMilestoneData == null) {
            airDAEnforcementActionMilestoneData = new ArrayList<AirDAEnforcementActionMilestoneData>();
        }
        return this.airDAEnforcementActionMilestoneData;
    }

    /**
     * 
     * 
     */
    public void setAirDAEnforcementActionMilestoneData(List<AirDAEnforcementActionMilestoneData> airDAEnforcementActionMilestoneData) {
        this.airDAEnforcementActionMilestoneData = airDAEnforcementActionMilestoneData;
    }

    public boolean isSetAirDAEnforcementActionMilestoneData() {
        return ((this.airDAEnforcementActionMilestoneData!= null)&&(!this.airDAEnforcementActionMilestoneData.isEmpty()));
    }

    public void unsetAirDAEnforcementActionMilestoneData() {
        this.airDAEnforcementActionMilestoneData = null;
    }

    /**
     * Gets the value of the airDAFormalEnforcementActionData property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the airDAFormalEnforcementActionData property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAirDAFormalEnforcementActionData().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link AirDAFormalEnforcementActionData }
     * 
     * 
     */
    public List<AirDAFormalEnforcementActionData> getAirDAFormalEnforcementActionData() {
        if (airDAFormalEnforcementActionData == null) {
            airDAFormalEnforcementActionData = new ArrayList<AirDAFormalEnforcementActionData>();
        }
        return this.airDAFormalEnforcementActionData;
    }

    /**
     * 
     * 
     */
    public void setAirDAFormalEnforcementActionData(List<AirDAFormalEnforcementActionData> airDAFormalEnforcementActionData) {
        this.airDAFormalEnforcementActionData = airDAFormalEnforcementActionData;
    }

    public boolean isSetAirDAFormalEnforcementActionData() {
        return ((this.airDAFormalEnforcementActionData!= null)&&(!this.airDAFormalEnforcementActionData.isEmpty()));
    }

    public void unsetAirDAFormalEnforcementActionData() {
        this.airDAFormalEnforcementActionData = null;
    }

    /**
     * Gets the value of the airDAInformalEnforcementActionData property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the airDAInformalEnforcementActionData property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAirDAInformalEnforcementActionData().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link AirDAInformalEnforcementActionData }
     * 
     * 
     */
    public List<AirDAInformalEnforcementActionData> getAirDAInformalEnforcementActionData() {
        if (airDAInformalEnforcementActionData == null) {
            airDAInformalEnforcementActionData = new ArrayList<AirDAInformalEnforcementActionData>();
        }
        return this.airDAInformalEnforcementActionData;
    }

    /**
     * 
     * 
     */
    public void setAirDAInformalEnforcementActionData(List<AirDAInformalEnforcementActionData> airDAInformalEnforcementActionData) {
        this.airDAInformalEnforcementActionData = airDAInformalEnforcementActionData;
    }

    public boolean isSetAirDAInformalEnforcementActionData() {
        return ((this.airDAInformalEnforcementActionData!= null)&&(!this.airDAInformalEnforcementActionData.isEmpty()));
    }

    public void unsetAirDAInformalEnforcementActionData() {
        this.airDAInformalEnforcementActionData = null;
    }

    /**
     * Gets the value of the airFacilityData property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the airFacilityData property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAirFacilityData().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link AirFacilityData }
     * 
     * 
     */
    public List<AirFacilityData> getAirFacilityData() {
        if (airFacilityData == null) {
            airFacilityData = new ArrayList<AirFacilityData>();
        }
        return this.airFacilityData;
    }

    /**
     * 
     * 
     */
    public void setAirFacilityData(List<AirFacilityData> airFacilityData) {
        this.airFacilityData = airFacilityData;
    }

    public boolean isSetAirFacilityData() {
        return ((this.airFacilityData!= null)&&(!this.airFacilityData.isEmpty()));
    }

    public void unsetAirFacilityData() {
        this.airFacilityData = null;
    }

    /**
     * Gets the value of the airPollutantsData property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the airPollutantsData property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAirPollutantsData().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link AirPollutantsData }
     * 
     * 
     */
    public List<AirPollutantsData> getAirPollutantsData() {
        if (airPollutantsData == null) {
            airPollutantsData = new ArrayList<AirPollutantsData>();
        }
        return this.airPollutantsData;
    }

    /**
     * 
     * 
     */
    public void setAirPollutantsData(List<AirPollutantsData> airPollutantsData) {
        this.airPollutantsData = airPollutantsData;
    }

    public boolean isSetAirPollutantsData() {
        return ((this.airPollutantsData!= null)&&(!this.airPollutantsData.isEmpty()));
    }

    public void unsetAirPollutantsData() {
        this.airPollutantsData = null;
    }

    /**
     * Gets the value of the airProgramsData property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the airProgramsData property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAirProgramsData().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link AirProgramsData }
     * 
     * 
     */
    public List<AirProgramsData> getAirProgramsData() {
        if (airProgramsData == null) {
            airProgramsData = new ArrayList<AirProgramsData>();
        }
        return this.airProgramsData;
    }

    /**
     * 
     * 
     */
    public void setAirProgramsData(List<AirProgramsData> airProgramsData) {
        this.airProgramsData = airProgramsData;
    }

    public boolean isSetAirProgramsData() {
        return ((this.airProgramsData!= null)&&(!this.airProgramsData.isEmpty()));
    }

    public void unsetAirProgramsData() {
        this.airProgramsData = null;
    }

    /**
     * Gets the value of the airTVACCData property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the airTVACCData property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAirTVACCData().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link AirTVACCData }
     * 
     * 
     */
    public List<AirTVACCData> getAirTVACCData() {
        if (airTVACCData == null) {
            airTVACCData = new ArrayList<AirTVACCData>();
        }
        return this.airTVACCData;
    }

    /**
     * 
     * 
     */
    public void setAirTVACCData(List<AirTVACCData> airTVACCData) {
        this.airTVACCData = airTVACCData;
    }

    public boolean isSetAirTVACCData() {
        return ((this.airTVACCData!= null)&&(!this.airTVACCData.isEmpty()));
    }

    public void unsetAirTVACCData() {
        this.airTVACCData = null;
    }

    /**
     * Gets the value of the caseFileLinkageData property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the caseFileLinkageData property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getCaseFileLinkageData().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link CaseFileLinkageData }
     * 
     * 
     */
    public List<CaseFileLinkageData> getCaseFileLinkageData() {
        if (caseFileLinkageData == null) {
            caseFileLinkageData = new ArrayList<CaseFileLinkageData>();
        }
        return this.caseFileLinkageData;
    }

    /**
     * 
     * 
     */
    public void setCaseFileLinkageData(List<CaseFileLinkageData> caseFileLinkageData) {
        this.caseFileLinkageData = caseFileLinkageData;
    }

    public boolean isSetCaseFileLinkageData() {
        return ((this.caseFileLinkageData!= null)&&(!this.caseFileLinkageData.isEmpty()));
    }

    public void unsetCaseFileLinkageData() {
        this.caseFileLinkageData = null;
    }

    /**
     * Gets the value of the complianceMonitoringLinkageData property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the complianceMonitoringLinkageData property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getComplianceMonitoringLinkageData().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ComplianceMonitoringLinkageData }
     * 
     * 
     */
    public List<ComplianceMonitoringLinkageData> getComplianceMonitoringLinkageData() {
        if (complianceMonitoringLinkageData == null) {
            complianceMonitoringLinkageData = new ArrayList<ComplianceMonitoringLinkageData>();
        }
        return this.complianceMonitoringLinkageData;
    }

    /**
     * 
     * 
     */
    public void setComplianceMonitoringLinkageData(List<ComplianceMonitoringLinkageData> complianceMonitoringLinkageData) {
        this.complianceMonitoringLinkageData = complianceMonitoringLinkageData;
    }

    public boolean isSetComplianceMonitoringLinkageData() {
        return ((this.complianceMonitoringLinkageData!= null)&&(!this.complianceMonitoringLinkageData.isEmpty()));
    }

    public void unsetComplianceMonitoringLinkageData() {
        this.complianceMonitoringLinkageData = null;
    }

    /**
     * Gets the value of the operation property.
     * 
     * @return
     *     possible object is
     *     {@link OperationType }
     *     
     */
    public OperationType getOperation() {
        return operation;
    }

    /**
     * Sets the value of the operation property.
     * 
     * @param value
     *     allowed object is
     *     {@link OperationType }
     *     
     */
    public void setOperation(OperationType value) {
        this.operation = value;
    }

    public boolean isSetOperation() {
        return (this.operation!= null);
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof PayloadData)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final PayloadData that = ((PayloadData) object);
        {
            List<AirComplianceMonitoringStrategyData> lhsAirComplianceMonitoringStrategyData;
            lhsAirComplianceMonitoringStrategyData = (this.isSetAirComplianceMonitoringStrategyData()?this.getAirComplianceMonitoringStrategyData():null);
            List<AirComplianceMonitoringStrategyData> rhsAirComplianceMonitoringStrategyData;
            rhsAirComplianceMonitoringStrategyData = (that.isSetAirComplianceMonitoringStrategyData()?that.getAirComplianceMonitoringStrategyData():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "airComplianceMonitoringStrategyData", lhsAirComplianceMonitoringStrategyData), LocatorUtils.property(thatLocator, "airComplianceMonitoringStrategyData", rhsAirComplianceMonitoringStrategyData), lhsAirComplianceMonitoringStrategyData, rhsAirComplianceMonitoringStrategyData)) {
                return false;
            }
        }
        {
            List<AirDACaseFileData> lhsAirDACaseFileData;
            lhsAirDACaseFileData = (this.isSetAirDACaseFileData()?this.getAirDACaseFileData():null);
            List<AirDACaseFileData> rhsAirDACaseFileData;
            rhsAirDACaseFileData = (that.isSetAirDACaseFileData()?that.getAirDACaseFileData():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "airDACaseFileData", lhsAirDACaseFileData), LocatorUtils.property(thatLocator, "airDACaseFileData", rhsAirDACaseFileData), lhsAirDACaseFileData, rhsAirDACaseFileData)) {
                return false;
            }
        }
        {
            List<AirDAComplianceMonitoringData> lhsAirDAComplianceMonitoringData;
            lhsAirDAComplianceMonitoringData = (this.isSetAirDAComplianceMonitoringData()?this.getAirDAComplianceMonitoringData():null);
            List<AirDAComplianceMonitoringData> rhsAirDAComplianceMonitoringData;
            rhsAirDAComplianceMonitoringData = (that.isSetAirDAComplianceMonitoringData()?that.getAirDAComplianceMonitoringData():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "airDAComplianceMonitoringData", lhsAirDAComplianceMonitoringData), LocatorUtils.property(thatLocator, "airDAComplianceMonitoringData", rhsAirDAComplianceMonitoringData), lhsAirDAComplianceMonitoringData, rhsAirDAComplianceMonitoringData)) {
                return false;
            }
        }
        {
            List<AirDAEnforcementActionLinkageData> lhsAirDAEnforcementActionLinkageData;
            lhsAirDAEnforcementActionLinkageData = (this.isSetAirDAEnforcementActionLinkageData()?this.getAirDAEnforcementActionLinkageData():null);
            List<AirDAEnforcementActionLinkageData> rhsAirDAEnforcementActionLinkageData;
            rhsAirDAEnforcementActionLinkageData = (that.isSetAirDAEnforcementActionLinkageData()?that.getAirDAEnforcementActionLinkageData():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "airDAEnforcementActionLinkageData", lhsAirDAEnforcementActionLinkageData), LocatorUtils.property(thatLocator, "airDAEnforcementActionLinkageData", rhsAirDAEnforcementActionLinkageData), lhsAirDAEnforcementActionLinkageData, rhsAirDAEnforcementActionLinkageData)) {
                return false;
            }
        }
        {
            List<AirDAEnforcementActionMilestoneData> lhsAirDAEnforcementActionMilestoneData;
            lhsAirDAEnforcementActionMilestoneData = (this.isSetAirDAEnforcementActionMilestoneData()?this.getAirDAEnforcementActionMilestoneData():null);
            List<AirDAEnforcementActionMilestoneData> rhsAirDAEnforcementActionMilestoneData;
            rhsAirDAEnforcementActionMilestoneData = (that.isSetAirDAEnforcementActionMilestoneData()?that.getAirDAEnforcementActionMilestoneData():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "airDAEnforcementActionMilestoneData", lhsAirDAEnforcementActionMilestoneData), LocatorUtils.property(thatLocator, "airDAEnforcementActionMilestoneData", rhsAirDAEnforcementActionMilestoneData), lhsAirDAEnforcementActionMilestoneData, rhsAirDAEnforcementActionMilestoneData)) {
                return false;
            }
        }
        {
            List<AirDAFormalEnforcementActionData> lhsAirDAFormalEnforcementActionData;
            lhsAirDAFormalEnforcementActionData = (this.isSetAirDAFormalEnforcementActionData()?this.getAirDAFormalEnforcementActionData():null);
            List<AirDAFormalEnforcementActionData> rhsAirDAFormalEnforcementActionData;
            rhsAirDAFormalEnforcementActionData = (that.isSetAirDAFormalEnforcementActionData()?that.getAirDAFormalEnforcementActionData():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "airDAFormalEnforcementActionData", lhsAirDAFormalEnforcementActionData), LocatorUtils.property(thatLocator, "airDAFormalEnforcementActionData", rhsAirDAFormalEnforcementActionData), lhsAirDAFormalEnforcementActionData, rhsAirDAFormalEnforcementActionData)) {
                return false;
            }
        }
        {
            List<AirDAInformalEnforcementActionData> lhsAirDAInformalEnforcementActionData;
            lhsAirDAInformalEnforcementActionData = (this.isSetAirDAInformalEnforcementActionData()?this.getAirDAInformalEnforcementActionData():null);
            List<AirDAInformalEnforcementActionData> rhsAirDAInformalEnforcementActionData;
            rhsAirDAInformalEnforcementActionData = (that.isSetAirDAInformalEnforcementActionData()?that.getAirDAInformalEnforcementActionData():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "airDAInformalEnforcementActionData", lhsAirDAInformalEnforcementActionData), LocatorUtils.property(thatLocator, "airDAInformalEnforcementActionData", rhsAirDAInformalEnforcementActionData), lhsAirDAInformalEnforcementActionData, rhsAirDAInformalEnforcementActionData)) {
                return false;
            }
        }
        {
            List<AirFacilityData> lhsAirFacilityData;
            lhsAirFacilityData = (this.isSetAirFacilityData()?this.getAirFacilityData():null);
            List<AirFacilityData> rhsAirFacilityData;
            rhsAirFacilityData = (that.isSetAirFacilityData()?that.getAirFacilityData():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "airFacilityData", lhsAirFacilityData), LocatorUtils.property(thatLocator, "airFacilityData", rhsAirFacilityData), lhsAirFacilityData, rhsAirFacilityData)) {
                return false;
            }
        }
        {
            List<AirPollutantsData> lhsAirPollutantsData;
            lhsAirPollutantsData = (this.isSetAirPollutantsData()?this.getAirPollutantsData():null);
            List<AirPollutantsData> rhsAirPollutantsData;
            rhsAirPollutantsData = (that.isSetAirPollutantsData()?that.getAirPollutantsData():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "airPollutantsData", lhsAirPollutantsData), LocatorUtils.property(thatLocator, "airPollutantsData", rhsAirPollutantsData), lhsAirPollutantsData, rhsAirPollutantsData)) {
                return false;
            }
        }
        {
            List<AirProgramsData> lhsAirProgramsData;
            lhsAirProgramsData = (this.isSetAirProgramsData()?this.getAirProgramsData():null);
            List<AirProgramsData> rhsAirProgramsData;
            rhsAirProgramsData = (that.isSetAirProgramsData()?that.getAirProgramsData():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "airProgramsData", lhsAirProgramsData), LocatorUtils.property(thatLocator, "airProgramsData", rhsAirProgramsData), lhsAirProgramsData, rhsAirProgramsData)) {
                return false;
            }
        }
        {
            List<AirTVACCData> lhsAirTVACCData;
            lhsAirTVACCData = (this.isSetAirTVACCData()?this.getAirTVACCData():null);
            List<AirTVACCData> rhsAirTVACCData;
            rhsAirTVACCData = (that.isSetAirTVACCData()?that.getAirTVACCData():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "airTVACCData", lhsAirTVACCData), LocatorUtils.property(thatLocator, "airTVACCData", rhsAirTVACCData), lhsAirTVACCData, rhsAirTVACCData)) {
                return false;
            }
        }
        {
            List<CaseFileLinkageData> lhsCaseFileLinkageData;
            lhsCaseFileLinkageData = (this.isSetCaseFileLinkageData()?this.getCaseFileLinkageData():null);
            List<CaseFileLinkageData> rhsCaseFileLinkageData;
            rhsCaseFileLinkageData = (that.isSetCaseFileLinkageData()?that.getCaseFileLinkageData():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "caseFileLinkageData", lhsCaseFileLinkageData), LocatorUtils.property(thatLocator, "caseFileLinkageData", rhsCaseFileLinkageData), lhsCaseFileLinkageData, rhsCaseFileLinkageData)) {
                return false;
            }
        }
        {
            List<ComplianceMonitoringLinkageData> lhsComplianceMonitoringLinkageData;
            lhsComplianceMonitoringLinkageData = (this.isSetComplianceMonitoringLinkageData()?this.getComplianceMonitoringLinkageData():null);
            List<ComplianceMonitoringLinkageData> rhsComplianceMonitoringLinkageData;
            rhsComplianceMonitoringLinkageData = (that.isSetComplianceMonitoringLinkageData()?that.getComplianceMonitoringLinkageData():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "complianceMonitoringLinkageData", lhsComplianceMonitoringLinkageData), LocatorUtils.property(thatLocator, "complianceMonitoringLinkageData", rhsComplianceMonitoringLinkageData), lhsComplianceMonitoringLinkageData, rhsComplianceMonitoringLinkageData)) {
                return false;
            }
        }
        {
            OperationType lhsOperation;
            lhsOperation = this.getOperation();
            OperationType rhsOperation;
            rhsOperation = that.getOperation();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "operation", lhsOperation), LocatorUtils.property(thatLocator, "operation", rhsOperation), lhsOperation, rhsOperation)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            List<AirComplianceMonitoringStrategyData> theAirComplianceMonitoringStrategyData;
            theAirComplianceMonitoringStrategyData = (this.isSetAirComplianceMonitoringStrategyData()?this.getAirComplianceMonitoringStrategyData():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "airComplianceMonitoringStrategyData", theAirComplianceMonitoringStrategyData), currentHashCode, theAirComplianceMonitoringStrategyData);
        }
        {
            List<AirDACaseFileData> theAirDACaseFileData;
            theAirDACaseFileData = (this.isSetAirDACaseFileData()?this.getAirDACaseFileData():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "airDACaseFileData", theAirDACaseFileData), currentHashCode, theAirDACaseFileData);
        }
        {
            List<AirDAComplianceMonitoringData> theAirDAComplianceMonitoringData;
            theAirDAComplianceMonitoringData = (this.isSetAirDAComplianceMonitoringData()?this.getAirDAComplianceMonitoringData():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "airDAComplianceMonitoringData", theAirDAComplianceMonitoringData), currentHashCode, theAirDAComplianceMonitoringData);
        }
        {
            List<AirDAEnforcementActionLinkageData> theAirDAEnforcementActionLinkageData;
            theAirDAEnforcementActionLinkageData = (this.isSetAirDAEnforcementActionLinkageData()?this.getAirDAEnforcementActionLinkageData():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "airDAEnforcementActionLinkageData", theAirDAEnforcementActionLinkageData), currentHashCode, theAirDAEnforcementActionLinkageData);
        }
        {
            List<AirDAEnforcementActionMilestoneData> theAirDAEnforcementActionMilestoneData;
            theAirDAEnforcementActionMilestoneData = (this.isSetAirDAEnforcementActionMilestoneData()?this.getAirDAEnforcementActionMilestoneData():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "airDAEnforcementActionMilestoneData", theAirDAEnforcementActionMilestoneData), currentHashCode, theAirDAEnforcementActionMilestoneData);
        }
        {
            List<AirDAFormalEnforcementActionData> theAirDAFormalEnforcementActionData;
            theAirDAFormalEnforcementActionData = (this.isSetAirDAFormalEnforcementActionData()?this.getAirDAFormalEnforcementActionData():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "airDAFormalEnforcementActionData", theAirDAFormalEnforcementActionData), currentHashCode, theAirDAFormalEnforcementActionData);
        }
        {
            List<AirDAInformalEnforcementActionData> theAirDAInformalEnforcementActionData;
            theAirDAInformalEnforcementActionData = (this.isSetAirDAInformalEnforcementActionData()?this.getAirDAInformalEnforcementActionData():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "airDAInformalEnforcementActionData", theAirDAInformalEnforcementActionData), currentHashCode, theAirDAInformalEnforcementActionData);
        }
        {
            List<AirFacilityData> theAirFacilityData;
            theAirFacilityData = (this.isSetAirFacilityData()?this.getAirFacilityData():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "airFacilityData", theAirFacilityData), currentHashCode, theAirFacilityData);
        }
        {
            List<AirPollutantsData> theAirPollutantsData;
            theAirPollutantsData = (this.isSetAirPollutantsData()?this.getAirPollutantsData():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "airPollutantsData", theAirPollutantsData), currentHashCode, theAirPollutantsData);
        }
        {
            List<AirProgramsData> theAirProgramsData;
            theAirProgramsData = (this.isSetAirProgramsData()?this.getAirProgramsData():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "airProgramsData", theAirProgramsData), currentHashCode, theAirProgramsData);
        }
        {
            List<AirTVACCData> theAirTVACCData;
            theAirTVACCData = (this.isSetAirTVACCData()?this.getAirTVACCData():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "airTVACCData", theAirTVACCData), currentHashCode, theAirTVACCData);
        }
        {
            List<CaseFileLinkageData> theCaseFileLinkageData;
            theCaseFileLinkageData = (this.isSetCaseFileLinkageData()?this.getCaseFileLinkageData():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "caseFileLinkageData", theCaseFileLinkageData), currentHashCode, theCaseFileLinkageData);
        }
        {
            List<ComplianceMonitoringLinkageData> theComplianceMonitoringLinkageData;
            theComplianceMonitoringLinkageData = (this.isSetComplianceMonitoringLinkageData()?this.getComplianceMonitoringLinkageData():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "complianceMonitoringLinkageData", theComplianceMonitoringLinkageData), currentHashCode, theComplianceMonitoringLinkageData);
        }
        {
            OperationType theOperation;
            theOperation = this.getOperation();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "operation", theOperation), currentHashCode, theOperation);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
