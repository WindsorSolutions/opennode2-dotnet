//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.09.02 at 11:05:46 AM PDT 
//


package com.windsor.node.plugin.icisair.domain.generated;

import java.io.Serializable;

import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Embeddable;
import javax.persistence.Embedded;
import javax.persistence.Transient;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for AirPollutants complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="AirPollutants">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.exchangenetwork.net/schema/icis/5}AirPollutantsKeyElements">
 *       &lt;sequence>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}AirPollutantStatusIndicator" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}AirPollutantEPAClassificationData" minOccurs="0"/>
 *         &lt;element ref="{http://www.exchangenetwork.net/schema/icis/5}AirPollutantDAClassificationData" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "AirPollutants", propOrder = {
    "airPollutantStatusIndicator",
    "airPollutantEPAClassificationData",
    "airPollutantDAClassificationData"
})
@Embeddable
public class AirPollutants
    extends AirPollutantsKeyElements
    implements Serializable, Equals, HashCode
{

    private final static long serialVersionUID = 1L;
    @XmlElement(name = "AirPollutantStatusIndicator")
    protected String airPollutantStatusIndicator;
    @XmlElement(name = "AirPollutantEPAClassificationData")
    protected AirPollutantEPAClassificationData airPollutantEPAClassificationData;
    @XmlElement(name = "AirPollutantDAClassificationData")
    protected AirPollutantDAClassificationData airPollutantDAClassificationData;

    /**
     * Gets the value of the airPollutantStatusIndicator property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "POLUT_STAT_IND", columnDefinition = "char(1)", length = 1)
    public String getAirPollutantStatusIndicator() {
        return airPollutantStatusIndicator;
    }

    /**
     * Sets the value of the airPollutantStatusIndicator property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAirPollutantStatusIndicator(String value) {
        this.airPollutantStatusIndicator = value;
    }

    @Transient
    public boolean isSetAirPollutantStatusIndicator() {
        return (this.airPollutantStatusIndicator!= null);
    }

    /**
     * Gets the value of the airPollutantEPAClassificationData property.
     * 
     * @return
     *     possible object is
     *     {@link AirPollutantEPAClassificationData }
     *     
     */
    /*@OneToOne(targetEntity = AirPollutantEPAClassificationData.class, cascade = {
        CascadeType.ALL
    })*/
    //@JoinColumn(name = "ICA_POLUTS_ID")
    /*@JoinTable(name = "ICA_POLUT_EPA_CLASS", joinColumns = {
                    @JoinColumn(name = "ICA_POLUTS_ID", referencedColumnName = "ICA_POLUTS_ID", insertable = false, updatable = false)}, inverseJoinColumns = {
                                    @JoinColumn(name = "ICA_POLUTS_ID")
                                })*/
    @Embedded
    public AirPollutantEPAClassificationData getAirPollutantEPAClassificationData() {
        return airPollutantEPAClassificationData;
    }

    /**
     * Sets the value of the airPollutantEPAClassificationData property.
     * 
     * @param value
     *     allowed object is
     *     {@link AirPollutantEPAClassificationData }
     *     
     */
    public void setAirPollutantEPAClassificationData(AirPollutantEPAClassificationData value) {
        this.airPollutantEPAClassificationData = value;
    }

    @Transient
    public boolean isSetAirPollutantEPAClassificationData() {
        return (this.airPollutantEPAClassificationData!= null);
    }

    /**
     * Gets the value of the airPollutantDAClassificationData property.
     * 
     * @return
     *     possible object is
     *     {@link AirPollutantDAClassificationData }
     *     
     */
    /*@OneToOne(targetEntity = AirPollutantDAClassificationData.class, cascade = {
        CascadeType.ALL
    })*/
    //@JoinColumn(name = "ICA_POLUTS_ID")
    /*@JoinTable(name = "ICA_POLUT_DA_CLASS", joinColumns = {
                    @JoinColumn(name = "ICA_POLUTS_ID", referencedColumnName = "ICA_POLUTS_ID", insertable = false, updatable = false)}, inverseJoinColumns = {
                                    @JoinColumn(name = "ICA_POLUTS_ID")
                                })*/
    @Embedded
    public AirPollutantDAClassificationData getAirPollutantDAClassificationData() {
        return airPollutantDAClassificationData;
    }

    /**
     * Sets the value of the airPollutantDAClassificationData property.
     * 
     * @param value
     *     allowed object is
     *     {@link AirPollutantDAClassificationData }
     *     
     */
    public void setAirPollutantDAClassificationData(AirPollutantDAClassificationData value) {
        this.airPollutantDAClassificationData = value;
    }

    @Transient
    public boolean isSetAirPollutantDAClassificationData() {
        return (this.airPollutantDAClassificationData!= null);
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof AirPollutants)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final AirPollutants that = ((AirPollutants) object);
        {
            String lhsAirPollutantStatusIndicator;
            lhsAirPollutantStatusIndicator = this.getAirPollutantStatusIndicator();
            String rhsAirPollutantStatusIndicator;
            rhsAirPollutantStatusIndicator = that.getAirPollutantStatusIndicator();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "airPollutantStatusIndicator", lhsAirPollutantStatusIndicator), LocatorUtils.property(thatLocator, "airPollutantStatusIndicator", rhsAirPollutantStatusIndicator), lhsAirPollutantStatusIndicator, rhsAirPollutantStatusIndicator)) {
                return false;
            }
        }
        {
            AirPollutantEPAClassificationData lhsAirPollutantEPAClassificationData;
            lhsAirPollutantEPAClassificationData = this.getAirPollutantEPAClassificationData();
            AirPollutantEPAClassificationData rhsAirPollutantEPAClassificationData;
            rhsAirPollutantEPAClassificationData = that.getAirPollutantEPAClassificationData();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "airPollutantEPAClassificationData", lhsAirPollutantEPAClassificationData), LocatorUtils.property(thatLocator, "airPollutantEPAClassificationData", rhsAirPollutantEPAClassificationData), lhsAirPollutantEPAClassificationData, rhsAirPollutantEPAClassificationData)) {
                return false;
            }
        }
        {
            AirPollutantDAClassificationData lhsAirPollutantDAClassificationData;
            lhsAirPollutantDAClassificationData = this.getAirPollutantDAClassificationData();
            AirPollutantDAClassificationData rhsAirPollutantDAClassificationData;
            rhsAirPollutantDAClassificationData = that.getAirPollutantDAClassificationData();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "airPollutantDAClassificationData", lhsAirPollutantDAClassificationData), LocatorUtils.property(thatLocator, "airPollutantDAClassificationData", rhsAirPollutantDAClassificationData), lhsAirPollutantDAClassificationData, rhsAirPollutantDAClassificationData)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            String theAirPollutantStatusIndicator;
            theAirPollutantStatusIndicator = this.getAirPollutantStatusIndicator();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "airPollutantStatusIndicator", theAirPollutantStatusIndicator), currentHashCode, theAirPollutantStatusIndicator);
        }
        {
            AirPollutantEPAClassificationData theAirPollutantEPAClassificationData;
            theAirPollutantEPAClassificationData = this.getAirPollutantEPAClassificationData();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "airPollutantEPAClassificationData", theAirPollutantEPAClassificationData), currentHashCode, theAirPollutantEPAClassificationData);
        }
        {
            AirPollutantDAClassificationData theAirPollutantDAClassificationData;
            theAirPollutantDAClassificationData = this.getAirPollutantDAClassificationData();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "airPollutantDAClassificationData", theAirPollutantDAClassificationData), currentHashCode, theAirPollutantDAClassificationData);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
