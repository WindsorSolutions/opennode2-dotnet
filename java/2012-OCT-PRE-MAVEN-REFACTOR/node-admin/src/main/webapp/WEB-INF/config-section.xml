<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
                http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd">

    <bean name="/config.htm" class="com.windsor.node.admin.config.ConfigController">
        <property name="configService" ref="configService" />
        <property name="partnerService" ref="partnerService" />
    </bean>

    <bean name="/config-arg.htm" class="com.windsor.node.admin.config.ConfigArgController">
        <property name="configService" ref="configService" />
        <property name="validator">
            <bean class="com.windsor.node.admin.valid.ConfigItemValidator" />
        </property>
        <property name="successView" value="config.htm?bi=0" />
    </bean>

    <bean name="/config-conn.htm" class="com.windsor.node.admin.config.ConfigConnController">
        <property name="configService" ref="configService" />
        <property name="validator">
            <bean class="com.windsor.node.admin.valid.DataSourceValidator" />
        </property>
        <property name="successView" value="config.htm?bi=1" />
    </bean>

    <bean name="/config-partner.htm" class="com.windsor.node.admin.config.ConfigPartnerController">
        <property name="partnerService" ref="partnerService" />
        <property name="validator">
            <bean class="com.windsor.node.admin.valid.PartnerValidator" />
        </property>
        <property name="successView" value="config.htm?bi=2" />
        <property name="nodeClientFactory" ref="nodeClientFactory" />
    </bean>

    <bean id="httpClient" class="org.apache.commons.httpclient.HttpClient" lazy-init="true" />

    <bean id="httpInvoker1" class="org.springframework.remoting.httpinvoker.CommonsHttpInvokerRequestExecutor"
        lazy-init="true">
        <property name="readTimeout" value="0" />
    </bean>

    <bean id="httpInvoker2" class="org.springframework.remoting.httpinvoker.CommonsHttpInvokerRequestExecutor"
        lazy-init="true">
        <property name="readTimeout" value="0" />
    </bean>


    <!-- Node Client v.1.1 -->
    <bean id="nodeClient11" class="org.springframework.remoting.httpinvoker.HttpInvokerProxyFactoryBean" lazy-init="true">
        <property name="serviceUrl" value="${url.node.endpoint1Client}" />
        <property name="serviceInterface" value="com.windsor.node.common.util.NodeClientService" />
        <property name="httpInvokerRequestExecutor" ref="httpInvoker1" />
    </bean>

    <!-- Node Client v.2.0 -->
    <bean id="nodeClient20" class="org.springframework.remoting.httpinvoker.HttpInvokerProxyFactoryBean" lazy-init="true">
        <property name="serviceUrl" value="${url.node.endpoint2Client}" />
        <property name="serviceInterface" value="com.windsor.node.common.util.NodeClientService" />
        <property name="httpInvokerRequestExecutor" ref="httpInvoker2" />
    </bean>

    <!-- NODE CLIENT FACTORY -->
    <bean id="nodeClientFactory" class="com.windsor.node.service.helper.client.NodeClientFactory" lazy-init="true">
        <property name="naasConfig" ref="naasConfig" />
        <property name="nosConfig" ref="nosConfig" />
        <property name="client11" ref="nodeClient11" />
        <property name="client20" ref="nodeClient20" />
    </bean>

    <bean id="naasConfig" class="com.windsor.node.conf.NAASConfig">
        <property name="authEndpoint" value="${url.naas.auth}" />
        <property name="mgrEndpoint" value="${url.naas.mgr}" />
        <property name="runtimeAccount" ref="runtimeAccountInfo" />
        <property name="adminAccount" ref="adminAccountInfo" />
        <property name="nodeId" value="${id.node}" />
    </bean>

    <!-- Admin -->
    <bean id="adminAccountInfo" class="com.windsor.node.common.domain.NAASAccount">
        <property name="username" value="${naas.admin.username}" />
        <property name="password" value="${naas.admin.password}" />
        <property name="authMethod" value="${naas.admin.authMeth}" />
        <property name="domain" value="default" />
    </bean>

    <!-- Runtime -->
    <bean id="runtimeAccountInfo" class="com.windsor.node.common.domain.NAASAccount">
        <property name="username" value="${naas.runtime.username}" />
        <property name="password" value="${naas.runtime.password}" />
        <property name="authMethod" value="${naas.runtime.authMeth}" />
        <property name="domain" value="default" />
    </bean>

    <bean id="nosConfig" class="com.windsor.node.conf.NOSConfig">
        <property name="webServiceEndpoint1" value="${url.node.endpoint1}" />
        <property name="webServiceEndpoint2" value="${url.node.endpoint2}" />
        <property name="adminUrl" value="${url.node.admin}" />
        <property name="nodeAdminEmail" value="${smtp.from.email}" />
        <property name="adminWhiteList">
            <list>
                <value>127.0.0.1</value>
                <value>70.102.94.202</value>
                <value>134.179.227.*</value>
                <value>134.179.33.*</value>
                <value>134.179.115.*</value>
                <value>${ip.whitelist.subnet}</value>
            </list>
        </property>
        <property name="pluginDir" value="${path.plugin.dir}" />
        <property name="tempDir" value="${path.temp.dir}" />
        <property name="skipNaas" value="false" />
    </bean>
</beans>