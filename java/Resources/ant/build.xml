<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." default="build.jars">
    <property name="project.root" value="../.." />
    <property name="admin.root" value="${project.root}/Admin" />
    <property name="common.root" value="${project.root}/Common" />
    <property name="endpoint.root" value="${project.root}/Endpoint" />
    <property name="endpoint2.root" value="${project.root}/Endpoint2" />
    <property name="endpoint2client.root" value="${project.root}/Endpoint2Client" />
    <property name="logic.root" value="${project.root}/Wnos_Logic" />
    <property name="service.root" value="${project.root}/Wnos_Service" />
    <property name="plugin.root" value="${project.root}/Wnos_Plugin" />
    <property name="version.properties.comment" value="CALLED BY project.build.xml - DO NOT EDIT MANUALLY! (unless you know what you're doing :-)" />

    <property file="shared.build.properties" />
    <!--
    <property file="major.version.properties" />
    <property file="minor.version.properties" />
    <property file="build.number.properties" />
    -->
    
    <target name="get.env" description="displays build configuration options">
        <echo message="Build environment: ${env.dir}" />
        <echo message="Target JDK for compilation: ${jdk.version}" />
        <echo message="Target appserver: ${appserver}" />
        <echo message="update.major.version: ${update.major.version}" />
        <echo message="update.minor.version: ${update.minor.version}" />
        <echo message="Use verbose output? ${verbosity}" />
    </target>

    <target name="check.major.version.update">
        <condition property="updateMajorVersion">
            <istrue value="${update.major.version}" />
        </condition>
    </target>

    <target name="check.minor.version.update">
        <condition property="updateMinorVersion">
            <istrue value="${update.minor.version}" />
        </condition>
    </target>

    <target name="update.major.version" depends="check.major.version.update" if="updateMajorVersion">
        <propertyfile file="major.version.properties" comment="${version.properties.comment}">
            <entry key="major.version" type="int" default="${major.version}" operation="+" />
        </propertyfile>
        <echo message="Updated major version." />
    </target>

    <target name="update.minor.version" depends="check.minor.version.update" if="updateMinorVersion">
        <propertyfile file="minor.version.properties" comment="${version.properties.comment}">
            <entry key="minor.version" type="int" default="${minor.version}" operation="+" pattern="00" />
        </propertyfile>
        <echo message="Updated minor version." />
    </target>

    <target name="update.build.number" unless="resetBuildNumber">
        <propertyfile file="build.number.properties" comment="${version.properties.comment}">
            <entry key="build.number" type="int" default="${build.number}" operation="+" />
        </propertyfile>
        <echo message="Updated build number." />
    </target>

    <target name="reset.build.number" if="resetBuildNumber">
        <propertyfile file="build.number.properties" comment="${version.properties.comment}">
            <entry key="build.number" value="1" />
        </propertyfile>
        <echo message="Reset build number." />

        <propertyfile file="${plugin.root}/ant/plugin.build.number.properties" comment="${version.properties.comment}">
            <entry key="plugin.build.number" value="1" />
        </propertyfile>
        <echo message="Reset plugin.build number." />
    </target>

    <target name="flag.build.number.reset">
        <condition property="resetBuildNumber">
            <or>
                <isset property="updateMajorVersion" />
                <isset property="updateMinorVersion" />
            </or>
        </condition>
    </target>

    <target name="update.version.numbers" depends="update.major.version,update.minor.version,flag.build.number.reset">
        <antcall target="update.build.number" inheritAll="true" />
        <antcall target="reset.build.number" inheritAll="true" />
    </target>

    <target name="clean" description="Cleans all projects">
        <property name="run.target" value="clean" />
        <antcall target="run.projects" inheritAll="true" />
    </target>

    <target name="init" description="Inits all projects">
        <property name="run.target" value="init" />
        <antcall target="run.projects" inheritAll="true" />
    </target>

    <target name="build.jars" depends="update.version.numbers" description="Clean build all projects, no source, creates jars/wars, does NOT run tests">
        <property name="run.target" value="build.jar" />
        <property name="copyCommonAndLogicJars" value="true" />
        <antcall target="run.projects" inheritAll="true" />
    </target>

    <target name="build.jars.run.tests" description="Clean build all projects, runs tests, creates deployable jars/wars">
        <property name="run.target" value="build.jar.run.tests" />
        <property name="copyCommonAndLogicJars" value="true" />
        <antcall target="run.projects" inheritAll="true" />
    </target>

    <target name="build.test.jars" description="Clean build all projects, creates jars/wars with debug symbols and source">
        <property name="run.target" value="build.test.jar" />
        <property name="copyCommonAndLogicJars" value="true" />
        <antcall target="run.projects" inheritAll="true" />
    </target>

    <target name="build.deploy" depends="update.version.numbers" description="Calls build.jar and deploys to appserver">
        <property name="run.target" value="build.deploy" />
        <property name="copyCommonAndLogicJars" value="true" />
        <antcall target="run.projects" inheritAll="true" />
    </target>

    <target name="build.test.deploy" description="Calls build.test.jar and deploys to appserver">
        <property name="run.target" value="build.test.deploy" />
        <property name="copyCommonAndLogicJars" value="true" />
        <antcall target="run.projects" inheritAll="true" />
    </target>

    <target name="run.tests" description="Builds and runs all tests">
        <property name="run.target" value="run.tests" />
        <property name="copyCommonAndLogicJars" value="true" />
        <antcall target="run.projects" inheritAll="true" />
    </target>

    <target name="hot.deploy" description="Deploy application jsps and static files only">
        <property name="run.target" value="hot.deploy" />
        <antcall target="run.projects" inheritAll="true" />
    </target>

    <target name="run.projects" if="run.target">
        <echo message="Running ${run.target} in ${common.root}" />
        <ant dir="${common.root}" target="${run.target}" inheritAll="false" inheritRefs="false" />
        <echo message="Running ${run.target} in ${logic.root}" />
        <ant dir="${logic.root}" target="${run.target}" inheritAll="false" inheritRefs="false" />
        <echo message="Running ${run.target} in ${service.root}" />
        <ant dir="${service.root}" target="${run.target}" inheritAll="false" inheritRefs="false" />
        <echo message="Running ${run.target} in ${admin.root}" />
        <ant dir="${admin.root}" target="${run.target}" inheritAll="false" inheritRefs="false" />
        <echo message="Running ${run.target} in ${endpoint.root}" />
        <ant dir="${endpoint.root}" target="${run.target}" inheritAll="false" inheritRefs="false" />
        <echo message="Running ${run.target} in ${endpoint2.root}" />
        <ant dir="${endpoint2.root}" target="${run.target}" inheritAll="false" inheritRefs="false" />
        <antcall target="copyCommonAndLogicJars" inheritAll="true" />
    </target>

    <target name="copyCommonAndLogicJars" if="copyCommonAndLogicJars">
        <property file="major.version.properties" />
        <property file="minor.version.properties" />
        <copy file="../dist/${env.dir}/${major.version}.${minor.version}/nodeCommon.jar" todir="../../Wnos_Plugin/resources/lib-build" verbose="${verbosity}" />
        <copy file="../dist/${env.dir}/${major.version}.${minor.version}/nodeLogic.jar" todir="../../Wnos_Plugin/resources/lib-build" verbose="${verbosity}" />
    </target>

</project>
