/*

 Copyright (c) 2012, The Environmental Council of the States (ECOS)
 All rights reserved.
 
 Redistribution and use in source and binary forms, with or without
 modification, are permitted provided that the following conditions
 are met:
 
  * Redistributions of source code must retain the above copyright
    notice, this list of conditions and the following disclaimer.
  * Redistributions in binary form must reproduce the above copyright
    notice, this list of conditions and the following disclaimer in the
    documentation and/or other materials provided with the distribution.
  * Neither the name of the ECOS nor the names of its contributors may
    be used to endorse or promote products derived from this software
    without specific prior written permission.
 
 THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
 FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
 COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
 BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 POSSIBILITY OF SUCH DAMAGE.

*/

/******************************************************************************************************************************
 ** ObjectName: WQX_2.1_to_3.0-upgrade_SQL-DDL.sql
 **
 ** Author: Windsor Solutions, Inc.
 **
 ** Company Name: Windsor Solutions, Inc
 **
 ** Description: Updates the SQL Server WQX 2.1 staging tables and views needed to support the OpenNode2 WQX 3.0 plugin.
 **
 ** Notes: 
 **
 **
 ** Revision History:      
 ** ----------------------------------------------------------------------------------------------------------------------------
 **  Date         Name        Description
 ** ----------------------------------------------------------------------------------------------------------------------------
 ** 05/12/2021    Windsor    Upgrade v2.1 to v3.0 WQX SQL Server script.
 **
 ******************************************************************************************************************************/
 SET NOCOUNT ON

---$ Drop FK : FK_ACTIVITY_ACTATTBINOBJ
IF OBJECT_ID(N'dbo.FK_ACTIVITY_ACTATTBINOBJ') IS NOT NULL
BEGIN
    ALTER TABLE dbo.WQX_ACTATTACHEDBINARYOBJECT
        DROP CONSTRAINT FK_ACTIVITY_ACTATTBINOBJ
END
GO

---$ Drop FK : FK_ORG_ACTIVITY
IF OBJECT_ID(N'dbo.FK_ORG_ACTIVITY') IS NOT NULL
BEGIN
    ALTER TABLE dbo.WQX_ACTIVITY
        DROP CONSTRAINT FK_ORG_ACTIVITY
END
GO

---$ Drop FK : FK_ACTIVITY_ACTACTGROUP
IF OBJECT_ID(N'dbo.FK_ACTIVITY_ACTACTGROUP') IS NOT NULL
BEGIN
    ALTER TABLE dbo.WQX_ACTIVITYACTIVITYGROUP
        DROP CONSTRAINT FK_ACTIVITY_ACTACTGROUP
END
GO

---$ Drop FK : FK_ACTIVITYGROUP_ACTACTGROUP
IF OBJECT_ID(N'dbo.FK_ACTIVITYGROUP_ACTACTGROUP') IS NOT NULL
BEGIN
    ALTER TABLE dbo.WQX_ACTIVITYACTIVITYGROUP
        DROP CONSTRAINT FK_ACTIVITYGROUP_ACTACTGROUP
END
GO

---$ Drop FK : FK_ACTIVITY_ACTCONDUCTINGORG
IF OBJECT_ID(N'dbo.FK_ACTIVITY_ACTCONDUCTINGORG') IS NOT NULL
BEGIN
    ALTER TABLE dbo.WQX_ACTIVITYCONDUCTINGORG
        DROP CONSTRAINT FK_ACTIVITY_ACTCONDUCTINGORG
END
GO

---$ Drop FK : FK_ORG_ACTIVITYGROUP
IF OBJECT_ID(N'dbo.FK_ORG_ACTIVITYGROUP') IS NOT NULL
BEGIN
    ALTER TABLE dbo.WQX_ACTIVITYGROUP
        DROP CONSTRAINT FK_ORG_ACTIVITYGROUP
END
GO

---$ Drop FK : FK_ACTIVITY_ACTIVITYMETRIC
IF OBJECT_ID(N'dbo.FK_ACTIVITY_ACTIVITYMETRIC') IS NOT NULL
BEGIN
    ALTER TABLE dbo.WQX_ACTIVITYMETRIC
        DROP CONSTRAINT FK_ACTIVITY_ACTIVITYMETRIC
END
GO

---$ Drop FK : FK_MONLOC_ALTMONLOC
IF OBJECT_ID(N'dbo.FK_MONLOC_ALTMONLOC') IS NOT NULL
BEGIN
    ALTER TABLE dbo.WQX_ALTMONLOC
        DROP CONSTRAINT FK_MONLOC_ALTMONLOC
END
GO

---$ Drop FK : FK_ORG_BIOLOGICALHABITATINDEX
IF OBJECT_ID(N'dbo.FK_ORG_BIOLOGICALHABITATINDEX') IS NOT NULL
BEGIN
    ALTER TABLE dbo.WQX_BIOLOGICALHABITATINDEX
        DROP CONSTRAINT FK_ORG_BIOLOGICALHABITATINDEX
END
GO

---$ Drop FK : FK_WQX_DELETES_WQX_ORGANIZATION
IF OBJECT_ID(N'dbo.FK_WQX_DELETES_WQX_ORGANIZATION') IS NOT NULL
BEGIN
    ALTER TABLE dbo.WQX_DELETES
        DROP CONSTRAINT FK_WQX_DELETES_WQX_ORGANIZATION
END
GO

---$ Drop FK : FK_ORG_ELECTRONICADDRESS
IF OBJECT_ID(N'dbo.FK_ORG_ELECTRONICADDRESS') IS NOT NULL
BEGIN
    ALTER TABLE dbo.WQX_ELECTRONICADDRESS
        DROP CONSTRAINT FK_ORG_ELECTRONICADDRESS
END
GO

---$ Drop FK : FK_RESULT_LABSAMPLEPREP
IF OBJECT_ID(N'dbo.FK_RESULT_LABSAMPLEPREP') IS NOT NULL
BEGIN
    ALTER TABLE dbo.WQX_LABSAMPLEPREP
        DROP CONSTRAINT FK_RESULT_LABSAMPLEPREP
END
GO

---$ Drop FK : FK_ORG_MONITORINGLOCATION
IF OBJECT_ID(N'dbo.FK_ORG_MONITORINGLOCATION') IS NOT NULL
BEGIN
    ALTER TABLE dbo.WQX_MONITORINGLOCATION
        DROP CONSTRAINT FK_ORG_MONITORINGLOCATION
END
GO

---$ Drop FK : FK_MONLOC_MONLOCATTBINOBJ
IF OBJECT_ID(N'dbo.FK_MONLOC_MONLOCATTBINOBJ') IS NOT NULL
BEGIN
    ALTER TABLE dbo.WQX_MONLOCATTACHEDBINARYOBJECT
        DROP CONSTRAINT FK_MONLOC_MONLOCATTBINOBJ
END
GO

---$ Drop FK : FK_ORG_ORGADDRESS
IF OBJECT_ID(N'dbo.FK_ORG_ORGADDRESS') IS NOT NULL
BEGIN
    ALTER TABLE dbo.WQX_ORGADDRESS
        DROP CONSTRAINT FK_ORG_ORGADDRESS
END
GO

---$ Drop FK : FK_PROJECT_PROJATTBINOBJ
IF OBJECT_ID(N'dbo.FK_PROJECT_PROJATTBINOBJ') IS NOT NULL
BEGIN
    ALTER TABLE dbo.WQX_PROJATTACHEDBINARYOBJECT
        DROP CONSTRAINT FK_PROJECT_PROJATTBINOBJ
END
GO

---$ Drop FK : FK_ORG_PROJECT
IF OBJECT_ID(N'dbo.FK_ORG_PROJECT') IS NOT NULL
BEGIN
    ALTER TABLE dbo.WQX_PROJECT
        DROP CONSTRAINT FK_ORG_PROJECT
END
GO

---$ Drop FK : FK_ACTIVITY_PROJECTACTIVITY
IF OBJECT_ID(N'dbo.FK_ACTIVITY_PROJECTACTIVITY') IS NOT NULL
BEGIN
    ALTER TABLE dbo.WQX_PROJECTACTIVITY
        DROP CONSTRAINT FK_ACTIVITY_PROJECTACTIVITY
END
GO

---$ Drop FK : FK_PROJECT_PROJECTACTIVITY
IF OBJECT_ID(N'dbo.FK_PROJECT_PROJECTACTIVITY') IS NOT NULL
BEGIN
    ALTER TABLE dbo.WQX_PROJECTACTIVITY
        DROP CONSTRAINT FK_PROJECT_PROJECTACTIVITY
END
GO

---$ Drop FK : FK_PROJECT_PROJECTMONLOC
IF OBJECT_ID(N'dbo.FK_PROJECT_PROJECTMONLOC') IS NOT NULL
BEGIN
    ALTER TABLE dbo.WQX_PROJECTMONLOC
        DROP CONSTRAINT FK_PROJECT_PROJECTMONLOC
END
GO

---$ Drop FK : FK_ACTIVITY_RESULT
IF OBJECT_ID(N'dbo.FK_ACTIVITY_RESULT') IS NOT NULL
BEGIN
    ALTER TABLE dbo.WQX_RESULT
        DROP CONSTRAINT FK_ACTIVITY_RESULT
END
GO

---$ Drop FK : FK_RESULT_RESULTATTBINOBJ
IF OBJECT_ID(N'dbo.FK_RESULT_RESULTATTBINOBJ') IS NOT NULL
BEGIN
    ALTER TABLE dbo.WQX_RESULTATTACHEDBINARYOBJECT
        DROP CONSTRAINT FK_RESULT_RESULTATTBINOBJ
END
GO

---$ Drop FK : FK_RESULT_RESULTDETQUANTLIMIT
IF OBJECT_ID(N'dbo.FK_RESULT_RESULTDETQUANTLIMIT') IS NOT NULL
BEGIN
    ALTER TABLE dbo.WQX_RESULTDETECTQUANTLIMIT
        DROP CONSTRAINT FK_RESULT_RESULTDETQUANTLIMIT
END
GO

---$ Drop FK : FK_ORG_TELEPHONIC
IF OBJECT_ID(N'dbo.FK_ORG_TELEPHONIC') IS NOT NULL
BEGIN
    ALTER TABLE dbo.WQX_TELEPHONIC
        DROP CONSTRAINT FK_ORG_TELEPHONIC
END
GO

---$ Drop Index/PK: IX_WQX_ACTTT_PRNTD, Table : dbo.WQX_ACTATTACHEDBINARYOBJECT
IF EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_ACTATTACHEDBINARYOBJECT') AND NAME = 'IX_WQX_ACTTT_PRNTD')
BEGIN
    DROP INDEX IX_WQX_ACTTT_PRNTD ON dbo.WQX_ACTATTACHEDBINARYOBJECT
END
GO

---$ Drop Index/PK: PK_WQX_ACTATTBINARYOBJECT, Table : dbo.WQX_ACTATTACHEDBINARYOBJECT
IF OBJECT_ID(N'dbo.PK_WQX_ACTATTBINARYOBJECT') IS NOT NULL
BEGIN
    ALTER TABLE dbo.WQX_ACTATTACHEDBINARYOBJECT
        DROP CONSTRAINT PK_WQX_ACTATTBINARYOBJECT
END
GO

---$ Drop Index/PK: IX_WQX_ACTIV_AIDINC, Table : dbo.WQX_ACTIVITY
IF EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_ACTIVITY') AND NAME = 'IX_WQX_ACTIV_AIDINC')
BEGIN
    DROP INDEX IX_WQX_ACTIV_AIDINC ON dbo.WQX_ACTIVITY
END
GO

---$ Drop Index/PK: IX_WQX_ACTVT_ACT02, Table : dbo.WQX_ACTIVITY
IF EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_ACTIVITY') AND NAME = 'IX_WQX_ACTVT_ACT02')
BEGIN
    DROP INDEX IX_WQX_ACTVT_ACT02 ON dbo.WQX_ACTIVITY
END
GO

---$ Drop Index/PK: IX_WQX_ACTVT_ACTVT, Table : dbo.WQX_ACTIVITY
IF EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_ACTIVITY') AND NAME = 'IX_WQX_ACTVT_ACTVT')
BEGIN
    DROP INDEX IX_WQX_ACTVT_ACTVT ON dbo.WQX_ACTIVITY
END
GO

---$ Drop Index/PK: IX_WQX_ACTVT_MNLCD, Table : dbo.WQX_ACTIVITY
IF EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_ACTIVITY') AND NAME = 'IX_WQX_ACTVT_MNLCD')
BEGIN
    DROP INDEX IX_WQX_ACTVT_MNLCD ON dbo.WQX_ACTIVITY
END
GO

---$ Drop Index/PK: IX_WQX_ACTVT_PRNTD, Table : dbo.WQX_ACTIVITY
IF EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_ACTIVITY') AND NAME = 'IX_WQX_ACTVT_PRNTD')
BEGIN
    DROP INDEX IX_WQX_ACTVT_PRNTD ON dbo.WQX_ACTIVITY
END
GO

---$ Drop Index/PK: IX_WQX_ACTVT_WQXPD, Table : dbo.WQX_ACTIVITY
IF EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_ACTIVITY') AND NAME = 'IX_WQX_ACTVT_WQXPD')
BEGIN
    DROP INDEX IX_WQX_ACTVT_WQXPD ON dbo.WQX_ACTIVITY
END
GO

---$ Drop Index/PK: IX_WQX_ACTVT_ACT03, Table : dbo.WQX_ACTIVITYACTIVITYGROUP
IF EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_ACTIVITYACTIVITYGROUP') AND NAME = 'IX_WQX_ACTVT_ACT03')
BEGIN
    DROP INDEX IX_WQX_ACTVT_ACT03 ON dbo.WQX_ACTIVITYACTIVITYGROUP
END
GO

---$ Drop Index/PK: IX_WQX_ACTVT_ACT04, Table : dbo.WQX_ACTIVITYACTIVITYGROUP
IF EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_ACTIVITYACTIVITYGROUP') AND NAME = 'IX_WQX_ACTVT_ACT04')
BEGIN
    DROP INDEX IX_WQX_ACTVT_ACT04 ON dbo.WQX_ACTIVITYACTIVITYGROUP
END
GO

---$ Drop Index/PK: IX_WQX_ACTVT_PRN02, Table : dbo.WQX_ACTIVITYCONDUCTINGORG
IF EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_ACTIVITYCONDUCTINGORG') AND NAME = 'IX_WQX_ACTVT_PRN02')
BEGIN
    DROP INDEX IX_WQX_ACTVT_PRN02 ON dbo.WQX_ACTIVITYCONDUCTINGORG
END
GO

---$ Drop Index/PK: IX_WQX_ACTVT_PRN04, Table : dbo.WQX_ACTIVITYGROUP
IF EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_ACTIVITYGROUP') AND NAME = 'IX_WQX_ACTVT_PRN04')
BEGIN
    DROP INDEX IX_WQX_ACTVT_PRN04 ON dbo.WQX_ACTIVITYGROUP
END
GO

---$ Drop Index/PK: IX_WQX_ACTVT_WQX02, Table : dbo.WQX_ACTIVITYGROUP
IF EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_ACTIVITYGROUP') AND NAME = 'IX_WQX_ACTVT_WQX02')
BEGIN
    DROP INDEX IX_WQX_ACTVT_WQX02 ON dbo.WQX_ACTIVITYGROUP
END
GO

---$ Drop Index/PK: IX_WQX_ACTVT_PRN03, Table : dbo.WQX_ACTIVITYMETRIC
IF EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_ACTIVITYMETRIC') AND NAME = 'IX_WQX_ACTVT_PRN03')
BEGIN
    DROP INDEX IX_WQX_ACTVT_PRN03 ON dbo.WQX_ACTIVITYMETRIC
END
GO

---$ Drop Index/PK: IX_WQX_ALTMN_PRNTD, Table : dbo.WQX_ALTMONLOC
IF EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_ALTMONLOC') AND NAME = 'IX_WQX_ALTMN_PRNTD')
BEGIN
    DROP INDEX IX_WQX_ALTMN_PRNTD ON dbo.WQX_ALTMONLOC
END
GO

---$ Drop Index/PK: IX_WQX_BLGCL_MNLCD, Table : dbo.WQX_BIOLOGICALHABITATINDEX
IF EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_BIOLOGICALHABITATINDEX') AND NAME = 'IX_WQX_BLGCL_MNLCD')
BEGIN
    DROP INDEX IX_WQX_BLGCL_MNLCD ON dbo.WQX_BIOLOGICALHABITATINDEX
END
GO

---$ Drop Index/PK: IX_WQX_BLGCL_PRNTD, Table : dbo.WQX_BIOLOGICALHABITATINDEX
IF EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_BIOLOGICALHABITATINDEX') AND NAME = 'IX_WQX_BLGCL_PRNTD')
BEGIN
    DROP INDEX IX_WQX_BLGCL_PRNTD ON dbo.WQX_BIOLOGICALHABITATINDEX
END
GO

---$ Drop Index/PK: IX_WQX_BLGCL_WQXPD, Table : dbo.WQX_BIOLOGICALHABITATINDEX
IF EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_BIOLOGICALHABITATINDEX') AND NAME = 'IX_WQX_BLGCL_WQXPD')
BEGIN
    DROP INDEX IX_WQX_BLGCL_WQXPD ON dbo.WQX_BIOLOGICALHABITATINDEX
END
GO

---$ Drop Index/PK: IX_WQX_DELTS_PRNTD, Table : dbo.WQX_DELETES
IF EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_DELETES') AND NAME = 'IX_WQX_DELTS_PRNTD')
BEGIN
    DROP INDEX IX_WQX_DELTS_PRNTD ON dbo.WQX_DELETES
END
GO

---$ Drop Index/PK: IX_WQX_DLTS_WQXPDT, Table : dbo.WQX_DELETES
IF EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_DELETES') AND NAME = 'IX_WQX_DLTS_WQXPDT')
BEGIN
    DROP INDEX IX_WQX_DLTS_WQXPDT ON dbo.WQX_DELETES
END
GO

---$ Drop Index/PK: IX_WQX_ELCTR_PRNTD, Table : dbo.WQX_ELECTRONICADDRESS
IF EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_ELECTRONICADDRESS') AND NAME = 'IX_WQX_ELCTR_PRNTD')
BEGIN
    DROP INDEX IX_WQX_ELCTR_PRNTD ON dbo.WQX_ELECTRONICADDRESS
END
GO

---$ Drop Index/PK: IX_WQX_LBSMP_PRNTD, Table : dbo.WQX_LABSAMPLEPREP
IF EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_LABSAMPLEPREP') AND NAME = 'IX_WQX_LBSMP_PRNTD')
BEGIN
    DROP INDEX IX_WQX_LBSMP_PRNTD ON dbo.WQX_LABSAMPLEPREP
END
GO

---$ Drop Index/PK: IX_WQX_MNTRN_MNTRN, Table : dbo.WQX_MONITORINGLOCATION
IF EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_MONITORINGLOCATION') AND NAME = 'IX_WQX_MNTRN_MNTRN')
BEGIN
    DROP INDEX IX_WQX_MNTRN_MNTRN ON dbo.WQX_MONITORINGLOCATION
END
GO

---$ Drop Index/PK: IX_WQX_MNTRN_PRNTD, Table : dbo.WQX_MONITORINGLOCATION
IF EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_MONITORINGLOCATION') AND NAME = 'IX_WQX_MNTRN_PRNTD')
BEGIN
    DROP INDEX IX_WQX_MNTRN_PRNTD ON dbo.WQX_MONITORINGLOCATION
END
GO

---$ Drop Index/PK: IX_WQX_MNTRN_WQXPD, Table : dbo.WQX_MONITORINGLOCATION
IF EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_MONITORINGLOCATION') AND NAME = 'IX_WQX_MNTRN_WQXPD')
BEGIN
    DROP INDEX IX_WQX_MNTRN_WQXPD ON dbo.WQX_MONITORINGLOCATION
END
GO

---$ Drop Index/PK: IX_WQX_MNLCT_PRNTD, Table : dbo.WQX_MONLOCATTACHEDBINARYOBJECT
IF EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_MONLOCATTACHEDBINARYOBJECT') AND NAME = 'IX_WQX_MNLCT_PRNTD')
BEGIN
    DROP INDEX IX_WQX_MNLCT_PRNTD ON dbo.WQX_MONLOCATTACHEDBINARYOBJECT
END
GO

---$ Drop Index/PK: PK_WQX_MONLOCATTBINARYOBJECT, Table : dbo.WQX_MONLOCATTACHEDBINARYOBJECT
IF OBJECT_ID(N'dbo.PK_WQX_MONLOCATTBINARYOBJECT') IS NOT NULL
BEGIN
    ALTER TABLE dbo.WQX_MONLOCATTACHEDBINARYOBJECT
        DROP CONSTRAINT PK_WQX_MONLOCATTBINARYOBJECT
END
GO

---$ Drop Index/PK: IX_WQX_ORGDD_PRNTD, Table : dbo.WQX_ORGADDRESS
IF EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_ORGADDRESS') AND NAME = 'IX_WQX_ORGDD_PRNTD')
BEGIN
    DROP INDEX IX_WQX_ORGDD_PRNTD ON dbo.WQX_ORGADDRESS
END
GO

---$ Drop Index/PK: IX_WQX_ORGNZT_ORGD, Table : dbo.WQX_ORGANIZATION
IF EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_ORGANIZATION') AND NAME = 'IX_WQX_ORGNZT_ORGD')
BEGIN
    DROP INDEX IX_WQX_ORGNZT_ORGD ON dbo.WQX_ORGANIZATION
END
GO

---$ Drop Index/PK: IX_WQX_PRJTT_PRNTD, Table : dbo.WQX_PROJATTACHEDBINARYOBJECT
IF EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_PROJATTACHEDBINARYOBJECT') AND NAME = 'IX_WQX_PRJTT_PRNTD')
BEGIN
    DROP INDEX IX_WQX_PRJTT_PRNTD ON dbo.WQX_PROJATTACHEDBINARYOBJECT
END
GO

---$ Drop Index/PK: PK_WQX_PROJATTBINARYOBJECT, Table : dbo.WQX_PROJATTACHEDBINARYOBJECT
IF OBJECT_ID(N'dbo.PK_WQX_PROJATTBINARYOBJECT') IS NOT NULL
BEGIN
    ALTER TABLE dbo.WQX_PROJATTACHEDBINARYOBJECT
        DROP CONSTRAINT PK_WQX_PROJATTBINARYOBJECT
END
GO

---$ Drop Index/PK: IX_WQX_PRJCT_PRJCT, Table : dbo.WQX_PROJECT
IF EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_PROJECT') AND NAME = 'IX_WQX_PRJCT_PRJCT')
BEGIN
    DROP INDEX IX_WQX_PRJCT_PRJCT ON dbo.WQX_PROJECT
END
GO

---$ Drop Index/PK: IX_WQX_PRJCT_PRNTD, Table : dbo.WQX_PROJECT
IF EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_PROJECT') AND NAME = 'IX_WQX_PRJCT_PRNTD')
BEGIN
    DROP INDEX IX_WQX_PRJCT_PRNTD ON dbo.WQX_PROJECT
END
GO

---$ Drop Index/PK: IX_WQX_PRJCT_WQXPD, Table : dbo.WQX_PROJECT
IF EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_PROJECT') AND NAME = 'IX_WQX_PRJCT_WQXPD')
BEGIN
    DROP INDEX IX_WQX_PRJCT_WQXPD ON dbo.WQX_PROJECT
END
GO

---$ Drop Index/PK: IX_WQX_PRJCT_ACTVT, Table : dbo.WQX_PROJECTACTIVITY
IF EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_PROJECTACTIVITY') AND NAME = 'IX_WQX_PRJCT_ACTVT')
BEGIN
    DROP INDEX IX_WQX_PRJCT_ACTVT ON dbo.WQX_PROJECTACTIVITY
END
GO

---$ Drop Index/PK: IX_WQX_PRJCT_PRJ02, Table : dbo.WQX_PROJECTACTIVITY
IF EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_PROJECTACTIVITY') AND NAME = 'IX_WQX_PRJCT_PRJ02')
BEGIN
    DROP INDEX IX_WQX_PRJCT_PRJ02 ON dbo.WQX_PROJECTACTIVITY
END
GO

---$ Drop Index/PK: IX_WQX_PRJCT_PRN02, Table : dbo.WQX_PROJECTMONLOC
IF EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_PROJECTMONLOC') AND NAME = 'IX_WQX_PRJCT_PRN02')
BEGIN
    DROP INDEX IX_WQX_PRJCT_PRN02 ON dbo.WQX_PROJECTMONLOC
END
GO

---$ Drop Index/PK: IX_WQX_RSLT_PRNTID, Table : dbo.WQX_RESULT
IF EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_RESULT') AND NAME = 'IX_WQX_RSLT_PRNTID')
BEGIN
    DROP INDEX IX_WQX_RSLT_PRNTID ON dbo.WQX_RESULT
END
GO

---$ Drop Index/PK: IX_WQX_RSLTT_PRNTD, Table : dbo.WQX_RESULTATTACHEDBINARYOBJECT
IF EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_RESULTATTACHEDBINARYOBJECT') AND NAME = 'IX_WQX_RSLTT_PRNTD')
BEGIN
    DROP INDEX IX_WQX_RSLTT_PRNTD ON dbo.WQX_RESULTATTACHEDBINARYOBJECT
END
GO

---$ Drop Index/PK: PK_WQX_RESULTATTBINARYOBJECT, Table : dbo.WQX_RESULTATTACHEDBINARYOBJECT
IF OBJECT_ID(N'dbo.PK_WQX_RESULTATTBINARYOBJECT') IS NOT NULL
BEGIN
    ALTER TABLE dbo.WQX_RESULTATTACHEDBINARYOBJECT
        DROP CONSTRAINT PK_WQX_RESULTATTBINARYOBJECT
END
GO

---$ Drop Index/PK: IX_WQX_RSLTD_PRNTD, Table : dbo.WQX_RESULTDETECTQUANTLIMIT
IF EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_RESULTDETECTQUANTLIMIT') AND NAME = 'IX_WQX_RSLTD_PRNTD')
BEGIN
    DROP INDEX IX_WQX_RSLTD_PRNTD ON dbo.WQX_RESULTDETECTQUANTLIMIT
END
GO

---$ Drop Index/PK: IX_WQX_TLPHN_PRNTD, Table : dbo.WQX_TELEPHONIC
IF EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_TELEPHONIC') AND NAME = 'IX_WQX_TLPHN_PRNTD')
BEGIN
    DROP INDEX IX_WQX_TLPHN_PRNTD ON dbo.WQX_TELEPHONIC
END
GO

---$ Alter table dbo.WQX_ACTIVITY
ALTER TABLE dbo.WQX_ACTIVITY
    ALTER COLUMN ACTIVITYID VARCHAR(55) NOT NULL
GO

IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_ACTIVITY') AND NAME = 'ACTIVITYIDUSERSUPPLIED')
BEGIN
    ALTER TABLE dbo.WQX_ACTIVITY
        ADD ACTIVITYIDUSERSUPPLIED VARCHAR(55) NULL
END
GO

ALTER TABLE dbo.WQX_ACTIVITY
    ALTER COLUMN ACTIVITYMEDIASUBDIVISION VARCHAR(60) NULL
GO

ALTER TABLE dbo.WQX_ACTIVITY
    ALTER COLUMN RELATIVEDEPTH VARCHAR(30) NULL
GO

ALTER TABLE dbo.WQX_ACTIVITY
    ALTER COLUMN MONLOCID VARCHAR(55) NULL
GO

IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_ACTIVITY') AND NAME = 'SAMPLINGCOMPONENTNAME')
BEGIN
    ALTER TABLE dbo.WQX_ACTIVITY
        ADD SAMPLINGCOMPONENTNAME VARCHAR(120) NULL
END
GO

ALTER TABLE dbo.WQX_ACTIVITY
    ALTER COLUMN TMPPROJECTID VARCHAR(55) NULL
GO

ALTER TABLE dbo.WQX_ACTIVITY
    ALTER COLUMN DEPTHHEIGHTMEASURE VARCHAR(60) NULL
GO

ALTER TABLE dbo.WQX_ACTIVITY
    ALTER COLUMN TOPDEPTHHEIGHTMEASURE VARCHAR(60) NULL
GO

ALTER TABLE dbo.WQX_ACTIVITY
    ALTER COLUMN BOTTOMDEPTHHEIGHTMEASURE VARCHAR(60) NULL
GO

ALTER TABLE dbo.WQX_ACTIVITY
    ALTER COLUMN SOURCEMAPSCALE VARCHAR(60) NULL
GO

IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_ACTIVITY') AND NAME = 'ACTIVITYLOCATIONDESCRIPTION')
BEGIN
    ALTER TABLE dbo.WQX_ACTIVITY
        ADD ACTIVITYLOCATIONDESCRIPTION VARCHAR(4000) NULL
END
GO

ALTER TABLE dbo.WQX_ACTIVITY
    ALTER COLUMN HORIZACCURACYMEASURE VARCHAR(60) NULL
GO

IF EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_ACTIVITY') AND NAME = 'BIOHABSAMPCOMP')
BEGIN
    ALTER TABLE dbo.WQX_ACTIVITY
        DROP COLUMN BIOHABSAMPCOMP
END
GO

IF EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_ACTIVITY') AND NAME = 'BIOHABSAMPCOMPPLACEINSERIES')
BEGIN
    ALTER TABLE dbo.WQX_ACTIVITY
        DROP COLUMN BIOHABSAMPCOMPPLACEINSERIES
END
GO

ALTER TABLE dbo.WQX_ACTIVITY
    ALTER COLUMN BIOACTIVITYTOXICITYTESTTYPE VARCHAR(30) NULL
GO

IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_ACTIVITY') AND NAME = 'HABITATSELECTIONMETHOD')
BEGIN
    ALTER TABLE dbo.WQX_ACTIVITY
        ADD HABITATSELECTIONMETHOD VARCHAR(35) NULL
END
GO

IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_ACTIVITY') AND NAME = 'COLLECTIONDESCRIPTION')
BEGIN
    ALTER TABLE dbo.WQX_ACTIVITY
        ADD COLLECTIONDESCRIPTION VARCHAR(4000) NULL
END
GO

ALTER TABLE dbo.WQX_ACTIVITY
    ALTER COLUMN BIOHABPASSCOUNT VARCHAR(60) NULL
GO

ALTER TABLE dbo.WQX_ACTIVITY
    ALTER COLUMN BIOHABCOLLDURATIONMEASURE VARCHAR(60) NULL
GO

IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_ACTIVITY') AND NAME = 'COLLECTIONAREAMEASURE')
BEGIN
    ALTER TABLE dbo.WQX_ACTIVITY
        ADD COLLECTIONAREAMEASURE VARCHAR(60) NULL
END
GO

IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_ACTIVITY') AND NAME = 'COLLECTIONAREAMEASUREUNIT')
BEGIN
    ALTER TABLE dbo.WQX_ACTIVITY
        ADD COLLECTIONAREAMEASUREUNIT VARCHAR(12) NULL
END
GO

IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_ACTIVITY') AND NAME = 'COLLECEFFORTMEASUREVALUE')
BEGIN
    ALTER TABLE dbo.WQX_ACTIVITY
        ADD COLLECEFFORTMEASUREVALUE VARCHAR(60) NULL
END
GO

IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_ACTIVITY') AND NAME = 'COLLECEFFORTGEARPROCEDUREUNIT')
BEGIN
    ALTER TABLE dbo.WQX_ACTIVITY
        ADD COLLECEFFORTGEARPROCEDUREUNIT VARCHAR(35) NULL
END
GO

ALTER TABLE dbo.WQX_ACTIVITY
    ALTER COLUMN BIOHABREACHLENGTHMEASURE VARCHAR(60) NULL
GO

ALTER TABLE dbo.WQX_ACTIVITY
    ALTER COLUMN BIOHABREACHWIDTHMEASURE VARCHAR(60) NULL
GO

ALTER TABLE dbo.WQX_ACTIVITY
    ALTER COLUMN BIOHABNETTYPE VARCHAR(60) NULL
GO

ALTER TABLE dbo.WQX_ACTIVITY
    ALTER COLUMN BIOHABNETSURFACEAREAMEASURE VARCHAR(60) NULL
GO

ALTER TABLE dbo.WQX_ACTIVITY
    ALTER COLUMN BIOHABNETMESHSIZEMEASURE VARCHAR(60) NULL
GO

ALTER TABLE dbo.WQX_ACTIVITY
    ALTER COLUMN BIOHABNETBOATSPEEDMEASURE VARCHAR(60) NULL
GO

ALTER TABLE dbo.WQX_ACTIVITY
    ALTER COLUMN BIOHABNETCURRSPEEDMEASURE VARCHAR(60) NULL
GO

ALTER TABLE dbo.WQX_ACTIVITY
    ALTER COLUMN SAMPCOLLEQUIPMENT VARCHAR(60) NULL
GO

IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_ACTIVITY') AND NAME = 'HYDROLOGICCONDITION')
BEGIN
    ALTER TABLE dbo.WQX_ACTIVITY
        ADD HYDROLOGICCONDITION VARCHAR(60) NULL
END
GO

IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_ACTIVITY') AND NAME = 'HYDROLOGICEVENT')
BEGIN
    ALTER TABLE dbo.WQX_ACTIVITY
        ADD HYDROLOGICEVENT VARCHAR(60) NULL
END
GO

ALTER TABLE dbo.WQX_ACTIVITY
    ALTER COLUMN SAMPCOLLMETHODID VARCHAR(35) NULL
GO

ALTER TABLE dbo.WQX_ACTIVITY
    ALTER COLUMN SAMPCOLLMETHOD VARCHAR(250) NULL
GO

ALTER TABLE dbo.WQX_ACTIVITY
    ALTER COLUMN SAMPCOLLMETHODDESC VARCHAR(4000) NULL
GO

IF EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_ACTIVITY') AND NAME = 'RESULTCOUNT')
BEGIN
    ALTER TABLE dbo.WQX_ACTIVITY
        DROP COLUMN RESULTCOUNT
END
GO

IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_ACTIVITY') AND NAME = 'SAMPPREPCONTLABEL')
BEGIN
    ALTER TABLE dbo.WQX_ACTIVITY
        ADD SAMPPREPCONTLABEL VARCHAR(60) NULL
END
GO

ALTER TABLE dbo.WQX_ACTIVITY
    ALTER COLUMN SAMPPREPCONTTYPE VARCHAR(60) NULL
GO

ALTER TABLE dbo.WQX_ACTIVITY
    ALTER COLUMN SAMPPREPCONTCOLOR VARCHAR(60) NULL
GO

ALTER TABLE dbo.WQX_ACTIVITY
    ALTER COLUMN SAMPPREPCONTTHERMALPRESERVUSED VARCHAR(250) NULL
GO

ALTER TABLE dbo.WQX_ACTIVITY
    ALTER COLUMN SAMPPREPID VARCHAR(35) NULL
GO

ALTER TABLE dbo.WQX_ACTIVITY
    ALTER COLUMN SAMPPREP VARCHAR(250) NULL
GO

ALTER TABLE dbo.WQX_ACTIVITY
    ALTER COLUMN SAMPPREPDESC VARCHAR(4000) NULL
GO


---$ Alter table dbo.WQX_ACTIVITYGROUP
ALTER TABLE dbo.WQX_ACTIVITYGROUP
    ALTER COLUMN ACTIVITYGROUPID VARCHAR(55) NOT NULL
GO

ALTER TABLE dbo.WQX_ACTIVITYGROUP
    ALTER COLUMN ACTIVITYGROUPNAME VARCHAR(120) NOT NULL
GO

IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_ACTIVITYGROUP') AND NAME = 'REPLACEACTIVITIES')
BEGIN
    ALTER TABLE dbo.WQX_ACTIVITYGROUP
        ADD REPLACEACTIVITIES CHAR(1) NULL
END
GO


---$ Alter table dbo.WQX_ACTIVITYMETRIC
ALTER TABLE dbo.WQX_ACTIVITYMETRIC
    ALTER COLUMN METRICSCORE VARCHAR(60) NOT NULL
GO

IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_ACTIVITYMETRIC') AND NAME = 'METRICSAMPPOINTPLACEINSERIES')
BEGIN
    ALTER TABLE dbo.WQX_ACTIVITYMETRIC
        ADD METRICSAMPPOINTPLACEINSERIES VARCHAR(60) NULL
END
GO

ALTER TABLE dbo.WQX_ACTIVITYMETRIC
    ALTER COLUMN METRICINDEXID VARCHAR(55) NULL
GO

ALTER TABLE dbo.WQX_ACTIVITYMETRIC
    ALTER COLUMN METRICTYPEID VARCHAR(50) NOT NULL
GO

ALTER TABLE dbo.WQX_ACTIVITYMETRIC
    ALTER COLUMN METRICTYPENAME VARCHAR(100) NULL
GO

ALTER TABLE dbo.WQX_ACTIVITYMETRIC
    ALTER COLUMN METRICTYPEFORMULADESC VARCHAR(4000) NULL
GO

ALTER TABLE dbo.WQX_ACTIVITYMETRIC
    ALTER COLUMN METRICVALUEMEASURE VARCHAR(60) NULL
GO


---$ Alter table dbo.WQX_ALTMONLOC
ALTER TABLE dbo.WQX_ALTMONLOC
    ALTER COLUMN MONLOCID VARCHAR(55) NOT NULL
GO


---$ Alter table dbo.WQX_BIOLOGICALHABITATINDEX
ALTER TABLE dbo.WQX_BIOLOGICALHABITATINDEX
    ALTER COLUMN INDEXID VARCHAR(55) NOT NULL
GO

ALTER TABLE dbo.WQX_BIOLOGICALHABITATINDEX
    ALTER COLUMN INDEXSCORE VARCHAR(60) NOT NULL
GO

ALTER TABLE dbo.WQX_BIOLOGICALHABITATINDEX
    ALTER COLUMN INDEXQUALIFIERCODE VARCHAR(35) NULL
GO

ALTER TABLE dbo.WQX_BIOLOGICALHABITATINDEX
    ALTER COLUMN MONLOCID VARCHAR(55) NOT NULL
GO

ALTER TABLE dbo.WQX_BIOLOGICALHABITATINDEX
    ALTER COLUMN INDEXTYPEID VARCHAR(50) NOT NULL
GO

ALTER TABLE dbo.WQX_BIOLOGICALHABITATINDEX
    ALTER COLUMN INDEXTYPENAME VARCHAR(100) NOT NULL
GO

ALTER TABLE dbo.WQX_BIOLOGICALHABITATINDEX
    ALTER COLUMN RESOURCESUBJECT VARCHAR(4000) NULL
GO


---$ Alter table dbo.WQX_LABSAMPLEPREP
ALTER TABLE dbo.WQX_LABSAMPLEPREP
    ALTER COLUMN SUBSTANCEDILUTIONFACTOR VARCHAR(60) NULL
GO

ALTER TABLE dbo.WQX_LABSAMPLEPREP
    ALTER COLUMN METHODID VARCHAR(35) NOT NULL
GO

ALTER TABLE dbo.WQX_LABSAMPLEPREP
    ALTER COLUMN METHODNAME VARCHAR(250) NOT NULL
GO

ALTER TABLE dbo.WQX_LABSAMPLEPREP
    ALTER COLUMN METHODDESC VARCHAR(4000) NULL
GO


---$ Alter table dbo.WQX_MONITORINGLOCATION
ALTER TABLE dbo.WQX_MONITORINGLOCATION
    ALTER COLUMN MONITORINGLOCATIONID VARCHAR(55) NOT NULL
GO

ALTER TABLE dbo.WQX_MONITORINGLOCATION
    ALTER COLUMN TRIBALLANDNAME VARCHAR(512) NULL
GO

IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_MONITORINGLOCATION') AND NAME = 'DRAINAGEAREAMEASURE')
BEGIN
    ALTER TABLE dbo.WQX_MONITORINGLOCATION
        ADD DRAINAGEAREAMEASURE VARCHAR(60) NULL
END
GO

IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_MONITORINGLOCATION') AND NAME = 'DRAINAGEAREAMEASUREUNIT')
BEGIN
    ALTER TABLE dbo.WQX_MONITORINGLOCATION
        ADD DRAINAGEAREAMEASUREUNIT VARCHAR(12) NULL
END
GO

IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_MONITORINGLOCATION') AND NAME = 'CONTRDRAINAGEAREAMEASURE')
BEGIN
    ALTER TABLE dbo.WQX_MONITORINGLOCATION
        ADD CONTRDRAINAGEAREAMEASURE VARCHAR(60) NULL
END
GO

IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_MONITORINGLOCATION') AND NAME = 'CONTRDRAINAGEAREAMEASUREUNIT')
BEGIN
    ALTER TABLE dbo.WQX_MONITORINGLOCATION
        ADD CONTRDRAINAGEAREAMEASUREUNIT VARCHAR(12) NULL
END
GO

ALTER TABLE dbo.WQX_MONITORINGLOCATION
    ALTER COLUMN SOURCEMAPSCALE VARCHAR(60) NULL
GO

ALTER TABLE dbo.WQX_MONITORINGLOCATION
    ALTER COLUMN HORIZACCURACYMEASURE VARCHAR(60) NULL
GO

IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_MONITORINGLOCATION') AND NAME = 'VERTICALACCURACYMEASURE')
BEGIN
    ALTER TABLE dbo.WQX_MONITORINGLOCATION
        ADD VERTICALACCURACYMEASURE VARCHAR(60) NULL
END
GO

IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_MONITORINGLOCATION') AND NAME = 'VERTICALACCURACYMEASUREUNIT')
BEGIN
    ALTER TABLE dbo.WQX_MONITORINGLOCATION
        ADD VERTICALACCURACYMEASUREUNIT VARCHAR(12) NULL
END
GO

ALTER TABLE dbo.WQX_MONITORINGLOCATION
    ALTER COLUMN VERTICALMEASURE VARCHAR(60) NULL
GO

ALTER TABLE dbo.WQX_MONITORINGLOCATION
    ALTER COLUMN AQUIFERNAME VARCHAR(255) NULL
GO

IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_MONITORINGLOCATION') AND NAME = 'NATIONALAQUIFERCODE')
BEGIN
    ALTER TABLE dbo.WQX_MONITORINGLOCATION
        ADD NATIONALAQUIFERCODE VARCHAR(120) NULL
END
GO

IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_MONITORINGLOCATION') AND NAME = 'CONSTRUCTIONDATE')
BEGIN
    ALTER TABLE dbo.WQX_MONITORINGLOCATION
        ADD CONSTRUCTIONDATE datetime NULL
END
GO

IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_MONITORINGLOCATION') AND NAME = 'LOCALAQUIFERCODE')
BEGIN
    ALTER TABLE dbo.WQX_MONITORINGLOCATION
        ADD LOCALAQUIFERCODE VARCHAR(120) NULL
END
GO

IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_MONITORINGLOCATION') AND NAME = 'LOCALAQUIFERCODECONTEXT')
BEGIN
    ALTER TABLE dbo.WQX_MONITORINGLOCATION
        ADD LOCALAQUIFERCODECONTEXT VARCHAR(35) NULL
END
GO

IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_MONITORINGLOCATION') AND NAME = 'LOCALAQUIFERNAME')
BEGIN
    ALTER TABLE dbo.WQX_MONITORINGLOCATION
        ADD LOCALAQUIFERNAME VARCHAR(255) NULL
END
GO

IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_MONITORINGLOCATION') AND NAME = 'LOCALAQUIFERDESCRIPTION')
BEGIN
    ALTER TABLE dbo.WQX_MONITORINGLOCATION
        ADD LOCALAQUIFERDESCRIPTION VARCHAR(512) NULL
END
GO

ALTER TABLE dbo.WQX_MONITORINGLOCATION
    ALTER COLUMN WELLHOLEDEPTHMEASURE VARCHAR(60) NULL
GO

IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_MONITORINGLOCATION') AND NAME = 'WELLDEPTHMEASURE')
BEGIN
    ALTER TABLE dbo.WQX_MONITORINGLOCATION
        ADD WELLDEPTHMEASURE VARCHAR(60) NULL
END
GO

IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_MONITORINGLOCATION') AND NAME = 'WELLDEPTHMEASUREUNIT')
BEGIN
    ALTER TABLE dbo.WQX_MONITORINGLOCATION
        ADD WELLDEPTHMEASUREUNIT VARCHAR(12) NULL
END
GO


---$ Alter table dbo.WQX_ORGANIZATION
ALTER TABLE dbo.WQX_ORGANIZATION
    ALTER COLUMN ORGID VARCHAR(35) NOT NULL
GO

ALTER TABLE dbo.WQX_ORGANIZATION
    ALTER COLUMN ORGFORMALNAME VARCHAR(255) NOT NULL
GO


---$ Alter table dbo.WQX_PROJECT
ALTER TABLE dbo.WQX_PROJECT
    ALTER COLUMN PROJECTID VARCHAR(55) NOT NULL
GO

ALTER TABLE dbo.WQX_PROJECT
    ALTER COLUMN PROJECTNAME VARCHAR(512) NOT NULL
GO


---$ Alter table dbo.WQX_PROJECTMONLOC
ALTER TABLE dbo.WQX_PROJECTMONLOC
    ALTER COLUMN MONLOCID VARCHAR(55) NOT NULL
GO

ALTER TABLE dbo.WQX_PROJECTMONLOC
    ALTER COLUMN LOCWEIGHTINGFACMEASURE VARCHAR(60) NOT NULL
GO

ALTER TABLE dbo.WQX_PROJECTMONLOC
    ALTER COLUMN RESOURCESUBJECT VARCHAR(4000) NULL
GO


---$ Alter table dbo.WQX_RESULT
ALTER TABLE dbo.WQX_RESULT
    ALTER COLUMN DATALOGGERLINENAME VARCHAR(60) NULL
GO

ALTER TABLE dbo.WQX_RESULT
    ALTER COLUMN CHARACTERISTICNAME VARCHAR(255) NULL
GO

IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_RESULT') AND NAME = 'CHARACTERISTICNAMEUSERSUPPLIED')
BEGIN
    ALTER TABLE dbo.WQX_RESULT
        ADD CHARACTERISTICNAMEUSERSUPPLIED VARCHAR(255) NULL
END
GO

IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_RESULT') AND NAME = 'TARGETCOUNT')
BEGIN
    ALTER TABLE dbo.WQX_RESULT
        ADD TARGETCOUNT VARCHAR(35) NULL
END
GO

IF EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_RESULT') AND NAME = 'RESULTMEASUREQUALIFIERCODE')
BEGIN
    ALTER TABLE dbo.WQX_RESULT
        DROP COLUMN RESULTMEASUREQUALIFIERCODE
END
GO

IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_RESULT') AND NAME = 'PROPORTIONSAMPLEPROCESSED')
BEGIN
    ALTER TABLE dbo.WQX_RESULT
        ADD PROPORTIONSAMPLEPROCESSED VARCHAR(30) NULL
END
GO

IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_RESULT') AND NAME = 'STATISTICALNVALUE')
BEGIN
    ALTER TABLE dbo.WQX_RESULT
        ADD STATISTICALNVALUE INT NULL
END
GO

ALTER TABLE dbo.WQX_RESULT
    ALTER COLUMN WEIGHTBASIS VARCHAR(60) NULL
GO

ALTER TABLE dbo.WQX_RESULT
    ALTER COLUMN RESULTSAMPPOINT VARCHAR(120) NULL
GO

IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_RESULT') AND NAME = 'RESULTSAMPPOINTTYPE')
BEGIN
    ALTER TABLE dbo.WQX_RESULT
        ADD RESULTSAMPPOINTTYPE VARCHAR(60) NULL
END
GO

IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_RESULT') AND NAME = 'RESULTSAMPPOINTPLACEINSERIES')
BEGIN
    ALTER TABLE dbo.WQX_RESULT
        ADD RESULTSAMPPOINTPLACEINSERIES VARCHAR(60) NULL
END
GO

IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_RESULT') AND NAME = 'RESULTSAMPPOINTCOMMENT')
BEGIN
    ALTER TABLE dbo.WQX_RESULT
        ADD RESULTSAMPPOINTCOMMENT VARCHAR(4000) NULL
END
GO

IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_RESULT') AND NAME = 'RECORDIDUSERSUPPLIED')
BEGIN
    ALTER TABLE dbo.WQX_RESULT
        ADD RECORDIDUSERSUPPLIED VARCHAR(60) NULL
END
GO

ALTER TABLE dbo.WQX_RESULT
    ALTER COLUMN TMPACTIVITYID VARCHAR(55) NULL
GO

ALTER TABLE dbo.WQX_RESULT
    ALTER COLUMN CONFIDENCEINTERVALVALUE VARCHAR(60) NULL
GO

ALTER TABLE dbo.WQX_RESULT
    ALTER COLUMN UPPERCONFIDENCELIMITVALUE VARCHAR(60) NULL
GO

ALTER TABLE dbo.WQX_RESULT
    ALTER COLUMN LOWERCONFIDENCELIMITVALUE VARCHAR(60) NULL
GO

ALTER TABLE dbo.WQX_RESULT
    ALTER COLUMN DEPTHHEIGHTMEASURE VARCHAR(60) NULL
GO

ALTER TABLE dbo.WQX_RESULT
    ALTER COLUMN BIORESULTINDIVIDUALID VARCHAR(60) NULL
GO

ALTER TABLE dbo.WQX_RESULT
    ALTER COLUMN BIORESULTSUBJECTTAXONOMIC VARCHAR(255) NULL
GO

IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_RESULT') AND NAME = 'BIORESULTSUBJECTTAXONOMICUS')
BEGIN
    ALTER TABLE dbo.WQX_RESULT
        ADD BIORESULTSUBJECTTAXONOMICUS VARCHAR(255) NULL
END
GO

IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_RESULT') AND NAME = 'BIORESULTSUBJECTTAXONOMICUSRT')
BEGIN
    ALTER TABLE dbo.WQX_RESULT
        ADD BIORESULTSUBJECTTAXONOMICUSRT VARCHAR(255) NULL
END
GO

ALTER TABLE dbo.WQX_RESULT
    ALTER COLUMN BIORESULTUNIDENTIFIEDSPECIESID VARCHAR(255) NULL
GO

ALTER TABLE dbo.WQX_RESULT
    ALTER COLUMN BIORESULTSAMPTISSUEANATOMY VARCHAR(50) NULL
GO

IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_RESULT') AND NAME = 'BIORESULTGROUPSUMMARYCOUNT')
BEGIN
    ALTER TABLE dbo.WQX_RESULT
        ADD BIORESULTGROUPSUMMARYCOUNT VARCHAR(60) NULL
END
GO

ALTER TABLE dbo.WQX_RESULT
    ALTER COLUMN GRPSUMMCOUNTWEIGHTMEASURE VARCHAR(60) NULL
GO

ALTER TABLE dbo.WQX_RESULT
    ALTER COLUMN TAXDETAILSHABITNAME VARCHAR(15) NULL
GO

ALTER TABLE dbo.WQX_RESULT
    ALTER COLUMN TAXDETAILSPOLLTOLERANCE VARCHAR(30) NULL
GO

ALTER TABLE dbo.WQX_RESULT
    ALTER COLUMN TAXDETAILSTROPHICLEVEL VARCHAR(30) NULL
GO

ALTER TABLE dbo.WQX_RESULT
    ALTER COLUMN TAXDETAILSFUNCFEEDINGGROUP VARCHAR(30) NULL
GO

ALTER TABLE dbo.WQX_RESULT
    ALTER COLUMN CITATIONRESOURCESUBJECT VARCHAR(4000) NULL
GO

ALTER TABLE dbo.WQX_RESULT
    ALTER COLUMN FREQCLASSLOWERBOUNDVALUE VARCHAR(60) NULL
GO

ALTER TABLE dbo.WQX_RESULT
    ALTER COLUMN FREQCLASSUPPERBOUNDVALUE VARCHAR(60) NULL
GO

ALTER TABLE dbo.WQX_RESULT
    ALTER COLUMN ANALYTICALMETHODID VARCHAR(35) NULL
GO

IF EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_RESULT') AND NAME = 'RESULTLABCOMMENTCODE')
BEGIN
    ALTER TABLE dbo.WQX_RESULT
        DROP COLUMN RESULTLABCOMMENTCODE
END
GO

ALTER TABLE dbo.WQX_RESULT
    ALTER COLUMN ANALYTICALMETHODNAME VARCHAR(250) NULL
GO

IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_RESULT') AND NAME = 'METHODID')
BEGIN
    ALTER TABLE dbo.WQX_RESULT
        ADD METHODID VARCHAR(35) NULL
END
GO

IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_RESULT') AND NAME = 'METHODIDCONTEXT')
BEGIN
    ALTER TABLE dbo.WQX_RESULT
        ADD METHODIDCONTEXT VARCHAR(120) NULL
END
GO

IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_RESULT') AND NAME = 'METHODMODIFICATION')
BEGIN
    ALTER TABLE dbo.WQX_RESULT
        ADD METHODMODIFICATION VARCHAR(4000) NULL
END
GO

IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_RESULT') AND NAME = 'LABCOMMENT')
BEGIN
    ALTER TABLE dbo.WQX_RESULT
        ADD LABCOMMENT VARCHAR(4000) NULL
END
GO

IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_RESULT') AND NAME = 'LABSAMPLESPLITRATIO')
BEGIN
    ALTER TABLE dbo.WQX_RESULT
        ADD LABSAMPLESPLITRATIO VARCHAR(60) NULL
END
GO


---$ Alter table dbo.WQX_RESULTDETECTQUANTLIMIT
IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_RESULTDETECTQUANTLIMIT') AND NAME = 'DETECTQUANTLIMITCOMMENT')
BEGIN
    ALTER TABLE dbo.WQX_RESULTDETECTQUANTLIMIT
        ADD DETECTQUANTLIMITCOMMENT VARCHAR(4000) NULL
END
GO

ALTER TABLE dbo.WQX_RESULTDETECTQUANTLIMIT
    ALTER COLUMN DETECTQUANTLIMITMEASURE VARCHAR(60) NOT NULL
GO

ALTER TABLE dbo.WQX_RESULTDETECTQUANTLIMIT
    ALTER COLUMN DETECTQUANTLIMITMEASUNITCODE VARCHAR(12) NOT NULL
GO


---$ Create table dbo.WQX_RESULTMEASUREQUALIFIER
IF OBJECT_ID(N'dbo.WQX_RESULTMEASUREQUALIFIER') IS NULL
BEGIN
    CREATE TABLE dbo.WQX_RESULTMEASUREQUALIFIER
    (
        RECORDID VARCHAR(50) NOT NULL,
        PARENTID VARCHAR(50) NOT NULL,
        MEASUREQUALIFIERCODE VARCHAR(35) NOT NULL
    )
    END
GO


---$ Create Index/PK: IX_WQX_ACTATTACHEDBINARY_PAREN, Table : dbo.WQX_ACTATTACHEDBINARYOBJECT
IF NOT EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_ACTATTACHEDBINARYOBJECT') AND NAME = 'IX_WQX_ACTATTACHEDBINARY_PAREN')
    CREATE  NONCLUSTERED  INDEX IX_WQX_ACTATTACHEDBINARY_PAREN
        ON dbo.WQX_ACTATTACHEDBINARYOBJECT(PARENTID)
        WITH(IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, DATA_COMPRESSION = NONE)
GO

---$ Create Index/PK: PK_WQX_ACTATTACHEDBINARYOBJECT, Table : dbo.WQX_ACTATTACHEDBINARYOBJECT
IF OBJECT_ID(N'dbo.PK_WQX_ACTATTACHEDBINARYOBJECT') IS NULL
    ALTER TABLE dbo.WQX_ACTATTACHEDBINARYOBJECT
        ADD CONSTRAINT PK_WQX_ACTATTACHEDBINARYOBJECT PRIMARY KEY CLUSTERED(RECORDID)
GO

---$ Create Index/PK: IX_WQX_ACTIVIT_ACTIVITYSTARTDA, Table : dbo.WQX_ACTIVITY
IF NOT EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_ACTIVITY') AND NAME = 'IX_WQX_ACTIVIT_ACTIVITYSTARTDA')
    CREATE  NONCLUSTERED  INDEX IX_WQX_ACTIVIT_ACTIVITYSTARTDA
        ON dbo.WQX_ACTIVITY(ACTIVITYSTARTDATE)
        WITH(IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, DATA_COMPRESSION = NONE)
GO

---$ Create Index/PK: IX_WQX_ACTIVITY_ACTIVITYID, Table : dbo.WQX_ACTIVITY
IF NOT EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_ACTIVITY') AND NAME = 'IX_WQX_ACTIVITY_ACTIVITYID')
    CREATE  NONCLUSTERED  INDEX IX_WQX_ACTIVITY_ACTIVITYID
        ON dbo.WQX_ACTIVITY(ACTIVITYID)
        WITH(IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, DATA_COMPRESSION = NONE)
GO

---$ Create Index/PK: IX_WQX_ACTIVITY_MONLOCID, Table : dbo.WQX_ACTIVITY
IF NOT EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_ACTIVITY') AND NAME = 'IX_WQX_ACTIVITY_MONLOCID')
    CREATE  NONCLUSTERED  INDEX IX_WQX_ACTIVITY_MONLOCID
        ON dbo.WQX_ACTIVITY(MONLOCID)
        WITH(IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, DATA_COMPRESSION = NONE)
GO

---$ Create Index/PK: IX_WQX_ACTIVITY_PARENTID, Table : dbo.WQX_ACTIVITY
IF NOT EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_ACTIVITY') AND NAME = 'IX_WQX_ACTIVITY_PARENTID')
    CREATE  NONCLUSTERED  INDEX IX_WQX_ACTIVITY_PARENTID
        ON dbo.WQX_ACTIVITY(PARENTID)
        WITH(IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, DATA_COMPRESSION = NONE)
GO

---$ Create Index/PK: IX_WQX_ACTIVITY_WQXUPDATEDATE, Table : dbo.WQX_ACTIVITY
IF NOT EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_ACTIVITY') AND NAME = 'IX_WQX_ACTIVITY_WQXUPDATEDATE')
    CREATE  NONCLUSTERED  INDEX IX_WQX_ACTIVITY_WQXUPDATEDATE
        ON dbo.WQX_ACTIVITY(WQXUPDATEDATE)
        WITH(IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, DATA_COMPRESSION = NONE)
GO

---$ Create Index/PK: IX_WQX_ACTIVITYACT_ACTIVITYGRO, Table : dbo.WQX_ACTIVITYACTIVITYGROUP
IF NOT EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_ACTIVITYACTIVITYGROUP') AND NAME = 'IX_WQX_ACTIVITYACT_ACTIVITYGRO')
    CREATE  NONCLUSTERED  INDEX IX_WQX_ACTIVITYACT_ACTIVITYGRO
        ON dbo.WQX_ACTIVITYACTIVITYGROUP(ACTIVITYGROUPPARENTID)
        WITH(IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, DATA_COMPRESSION = NONE)
GO

---$ Create Index/PK: IX_WQX_ACTIVITYACTIVI_ACTIVITY, Table : dbo.WQX_ACTIVITYACTIVITYGROUP
IF NOT EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_ACTIVITYACTIVITYGROUP') AND NAME = 'IX_WQX_ACTIVITYACTIVI_ACTIVITY')
    CREATE  NONCLUSTERED  INDEX IX_WQX_ACTIVITYACTIVI_ACTIVITY
        ON dbo.WQX_ACTIVITYACTIVITYGROUP(ACTIVITYPARENTID)
        WITH(IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, DATA_COMPRESSION = NONE)
GO

---$ Create Index/PK: IX_WQX_ACTIVITYCONDUCTIN_PAREN, Table : dbo.WQX_ACTIVITYCONDUCTINGORG
IF NOT EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_ACTIVITYCONDUCTINGORG') AND NAME = 'IX_WQX_ACTIVITYCONDUCTIN_PAREN')
    CREATE  NONCLUSTERED  INDEX IX_WQX_ACTIVITYCONDUCTIN_PAREN
        ON dbo.WQX_ACTIVITYCONDUCTINGORG(PARENTID)
        WITH(IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, DATA_COMPRESSION = NONE)
GO

---$ Create Index/PK: IX_WQX_ACTIVITYGRO_WQXUPDATEDA, Table : dbo.WQX_ACTIVITYGROUP
IF NOT EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_ACTIVITYGROUP') AND NAME = 'IX_WQX_ACTIVITYGRO_WQXUPDATEDA')
    CREATE  NONCLUSTERED  INDEX IX_WQX_ACTIVITYGRO_WQXUPDATEDA
        ON dbo.WQX_ACTIVITYGROUP(WQXUPDATEDATE)
        WITH(IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, DATA_COMPRESSION = NONE)
GO

---$ Create Index/PK: IX_WQX_ACTIVITYGROUP_PARENTID, Table : dbo.WQX_ACTIVITYGROUP
IF NOT EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_ACTIVITYGROUP') AND NAME = 'IX_WQX_ACTIVITYGROUP_PARENTID')
    CREATE  NONCLUSTERED  INDEX IX_WQX_ACTIVITYGROUP_PARENTID
        ON dbo.WQX_ACTIVITYGROUP(PARENTID)
        WITH(IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, DATA_COMPRESSION = NONE)
GO

---$ Create Index/PK: IX_WQX_ACTIVITYMETRIC_PARENTID, Table : dbo.WQX_ACTIVITYMETRIC
IF NOT EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_ACTIVITYMETRIC') AND NAME = 'IX_WQX_ACTIVITYMETRIC_PARENTID')
    CREATE  NONCLUSTERED  INDEX IX_WQX_ACTIVITYMETRIC_PARENTID
        ON dbo.WQX_ACTIVITYMETRIC(PARENTID)
        WITH(IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, DATA_COMPRESSION = NONE)
GO

---$ Create Index/PK: IX_WQX_ALTMONLOC_PARENTID, Table : dbo.WQX_ALTMONLOC
IF NOT EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_ALTMONLOC') AND NAME = 'IX_WQX_ALTMONLOC_PARENTID')
    CREATE  NONCLUSTERED  INDEX IX_WQX_ALTMONLOC_PARENTID
        ON dbo.WQX_ALTMONLOC(PARENTID)
        WITH(IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, DATA_COMPRESSION = NONE)
GO

---$ Create Index/PK: IX_WQX_BIOLOGICALHABITA_WQXUPD, Table : dbo.WQX_BIOLOGICALHABITATINDEX
IF NOT EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_BIOLOGICALHABITATINDEX') AND NAME = 'IX_WQX_BIOLOGICALHABITA_WQXUPD')
    CREATE  NONCLUSTERED  INDEX IX_WQX_BIOLOGICALHABITA_WQXUPD
        ON dbo.WQX_BIOLOGICALHABITATINDEX(WQXUPDATEDATE)
        WITH(IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, DATA_COMPRESSION = NONE)
GO

---$ Create Index/PK: IX_WQX_BIOLOGICALHABITAT_MONLO, Table : dbo.WQX_BIOLOGICALHABITATINDEX
IF NOT EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_BIOLOGICALHABITATINDEX') AND NAME = 'IX_WQX_BIOLOGICALHABITAT_MONLO')
    CREATE  NONCLUSTERED  INDEX IX_WQX_BIOLOGICALHABITAT_MONLO
        ON dbo.WQX_BIOLOGICALHABITATINDEX(MONLOCID)
        WITH(IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, DATA_COMPRESSION = NONE)
GO

---$ Create Index/PK: IX_WQX_BIOLOGICALHABITAT_PAREN, Table : dbo.WQX_BIOLOGICALHABITATINDEX
IF NOT EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_BIOLOGICALHABITATINDEX') AND NAME = 'IX_WQX_BIOLOGICALHABITAT_PAREN')
    CREATE  NONCLUSTERED  INDEX IX_WQX_BIOLOGICALHABITAT_PAREN
        ON dbo.WQX_BIOLOGICALHABITATINDEX(PARENTID)
        WITH(IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, DATA_COMPRESSION = NONE)
GO

---$ Create Index/PK: IX_WQX_DELETES_PARENTID, Table : dbo.WQX_DELETES
IF NOT EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_DELETES') AND NAME = 'IX_WQX_DELETES_PARENTID')
    CREATE  NONCLUSTERED  INDEX IX_WQX_DELETES_PARENTID
        ON dbo.WQX_DELETES(PARENTID)
        WITH(IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, DATA_COMPRESSION = NONE)
GO

---$ Create Index/PK: IX_WQX_DELETES_WQXUPDATEDATE, Table : dbo.WQX_DELETES
IF NOT EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_DELETES') AND NAME = 'IX_WQX_DELETES_WQXUPDATEDATE')
    CREATE  NONCLUSTERED  INDEX IX_WQX_DELETES_WQXUPDATEDATE
        ON dbo.WQX_DELETES(WQXUPDATEDATE)
        WITH(IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, DATA_COMPRESSION = NONE)
GO

---$ Create Index/PK: IX_WQX_ELECTRONICADDRES_PARENT, Table : dbo.WQX_ELECTRONICADDRESS
IF NOT EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_ELECTRONICADDRESS') AND NAME = 'IX_WQX_ELECTRONICADDRES_PARENT')
    CREATE  NONCLUSTERED  INDEX IX_WQX_ELECTRONICADDRES_PARENT
        ON dbo.WQX_ELECTRONICADDRESS(PARENTID)
        WITH(IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, DATA_COMPRESSION = NONE)
GO

---$ Create Index/PK: IX_WQX_LABSAMPLEPREP_PARENTID, Table : dbo.WQX_LABSAMPLEPREP
IF NOT EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_LABSAMPLEPREP') AND NAME = 'IX_WQX_LABSAMPLEPREP_PARENTID')
    CREATE  NONCLUSTERED  INDEX IX_WQX_LABSAMPLEPREP_PARENTID
        ON dbo.WQX_LABSAMPLEPREP(PARENTID)
        WITH(IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, DATA_COMPRESSION = NONE)
GO

---$ Create Index/PK: IX_WQX_MONITORING_MONITORINGLO, Table : dbo.WQX_MONITORINGLOCATION
IF NOT EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_MONITORINGLOCATION') AND NAME = 'IX_WQX_MONITORING_MONITORINGLO')
    CREATE  NONCLUSTERED  INDEX IX_WQX_MONITORING_MONITORINGLO
        ON dbo.WQX_MONITORINGLOCATION(MONITORINGLOCATIONID)
        WITH(IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, DATA_COMPRESSION = NONE)
GO

---$ Create Index/PK: IX_WQX_MONITORINGLOCA_WQXUPDAT, Table : dbo.WQX_MONITORINGLOCATION
IF NOT EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_MONITORINGLOCATION') AND NAME = 'IX_WQX_MONITORINGLOCA_WQXUPDAT')
    CREATE  NONCLUSTERED  INDEX IX_WQX_MONITORINGLOCA_WQXUPDAT
        ON dbo.WQX_MONITORINGLOCATION(WQXUPDATEDATE)
        WITH(IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, DATA_COMPRESSION = NONE)
GO

---$ Create Index/PK: IX_WQX_MONITORINGLOCATI_PARENT, Table : dbo.WQX_MONITORINGLOCATION
IF NOT EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_MONITORINGLOCATION') AND NAME = 'IX_WQX_MONITORINGLOCATI_PARENT')
    CREATE  NONCLUSTERED  INDEX IX_WQX_MONITORINGLOCATI_PARENT
        ON dbo.WQX_MONITORINGLOCATION(PARENTID)
        WITH(IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, DATA_COMPRESSION = NONE)
GO

---$ Create Index/PK: IX_WQX_MONLOCATTACHEDBIN_PAREN, Table : dbo.WQX_MONLOCATTACHEDBINARYOBJECT
IF NOT EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_MONLOCATTACHEDBINARYOBJECT') AND NAME = 'IX_WQX_MONLOCATTACHEDBIN_PAREN')
    CREATE  NONCLUSTERED  INDEX IX_WQX_MONLOCATTACHEDBIN_PAREN
        ON dbo.WQX_MONLOCATTACHEDBINARYOBJECT(PARENTID)
        WITH(IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, DATA_COMPRESSION = NONE)
GO

---$ Create Index/PK: PK_WQX_MONLOCATTACHEDBINARYOBJ, Table : dbo.WQX_MONLOCATTACHEDBINARYOBJECT
IF OBJECT_ID(N'dbo.PK_WQX_MONLOCATTACHEDBINARYOBJ') IS NULL
    ALTER TABLE dbo.WQX_MONLOCATTACHEDBINARYOBJECT
        ADD CONSTRAINT PK_WQX_MONLOCATTACHEDBINARYOBJ PRIMARY KEY CLUSTERED(RECORDID)
GO

---$ Create Index/PK: IX_WQX_ORGADDRESS_PARENTID, Table : dbo.WQX_ORGADDRESS
IF NOT EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_ORGADDRESS') AND NAME = 'IX_WQX_ORGADDRESS_PARENTID')
    CREATE  NONCLUSTERED  INDEX IX_WQX_ORGADDRESS_PARENTID
        ON dbo.WQX_ORGADDRESS(PARENTID)
        WITH(IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, DATA_COMPRESSION = NONE)
GO

---$ Create Index/PK: IX_WQX_ORGANIZATION_ORGID, Table : dbo.WQX_ORGANIZATION
IF NOT EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_ORGANIZATION') AND NAME = 'IX_WQX_ORGANIZATION_ORGID')
    CREATE  NONCLUSTERED  INDEX IX_WQX_ORGANIZATION_ORGID
        ON dbo.WQX_ORGANIZATION(ORGID)
        WITH(IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, DATA_COMPRESSION = NONE)
GO

---$ Create Index/PK: IX_WQX_PROJATTACHEDBINAR_PAREN, Table : dbo.WQX_PROJATTACHEDBINARYOBJECT
IF NOT EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_PROJATTACHEDBINARYOBJECT') AND NAME = 'IX_WQX_PROJATTACHEDBINAR_PAREN')
    CREATE  NONCLUSTERED  INDEX IX_WQX_PROJATTACHEDBINAR_PAREN
        ON dbo.WQX_PROJATTACHEDBINARYOBJECT(PARENTID)
        WITH(IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, DATA_COMPRESSION = NONE)
GO

---$ Create Index/PK: PK_WQX_PROJATTACHEDBINARYOBJEC, Table : dbo.WQX_PROJATTACHEDBINARYOBJECT
IF OBJECT_ID(N'dbo.PK_WQX_PROJATTACHEDBINARYOBJEC') IS NULL
    ALTER TABLE dbo.WQX_PROJATTACHEDBINARYOBJECT
        ADD CONSTRAINT PK_WQX_PROJATTACHEDBINARYOBJEC PRIMARY KEY CLUSTERED(RECORDID)
GO

---$ Create Index/PK: IX_WQX_PROJECT_PARENTID, Table : dbo.WQX_PROJECT
IF NOT EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_PROJECT') AND NAME = 'IX_WQX_PROJECT_PARENTID')
    CREATE  NONCLUSTERED  INDEX IX_WQX_PROJECT_PARENTID
        ON dbo.WQX_PROJECT(PARENTID)
        WITH(IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, DATA_COMPRESSION = NONE)
GO

---$ Create Index/PK: IX_WQX_PROJECT_PROJECTID, Table : dbo.WQX_PROJECT
IF NOT EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_PROJECT') AND NAME = 'IX_WQX_PROJECT_PROJECTID')
    CREATE  NONCLUSTERED  INDEX IX_WQX_PROJECT_PROJECTID
        ON dbo.WQX_PROJECT(PROJECTID)
        WITH(IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, DATA_COMPRESSION = NONE)
GO

---$ Create Index/PK: IX_WQX_PROJECT_WQXUPDATEDATE, Table : dbo.WQX_PROJECT
IF NOT EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_PROJECT') AND NAME = 'IX_WQX_PROJECT_WQXUPDATEDATE')
    CREATE  NONCLUSTERED  INDEX IX_WQX_PROJECT_WQXUPDATEDATE
        ON dbo.WQX_PROJECT(WQXUPDATEDATE)
        WITH(IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, DATA_COMPRESSION = NONE)
GO

---$ Create Index/PK: IX_WQX_PROJECTACTI_ACTIVITYPAR, Table : dbo.WQX_PROJECTACTIVITY
IF NOT EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_PROJECTACTIVITY') AND NAME = 'IX_WQX_PROJECTACTI_ACTIVITYPAR')
    CREATE  NONCLUSTERED  INDEX IX_WQX_PROJECTACTI_ACTIVITYPAR
        ON dbo.WQX_PROJECTACTIVITY(ACTIVITYPARENTID)
        WITH(IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, DATA_COMPRESSION = NONE)
GO

---$ Create Index/PK: IX_WQX_PROJECTACTI_PROJECTPARE, Table : dbo.WQX_PROJECTACTIVITY
IF NOT EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_PROJECTACTIVITY') AND NAME = 'IX_WQX_PROJECTACTI_PROJECTPARE')
    CREATE  NONCLUSTERED  INDEX IX_WQX_PROJECTACTI_PROJECTPARE
        ON dbo.WQX_PROJECTACTIVITY(PROJECTPARENTID)
        WITH(IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, DATA_COMPRESSION = NONE)
GO

---$ Create Index/PK: IX_WQX_PROJECTMONLOC_PARENTID, Table : dbo.WQX_PROJECTMONLOC
IF NOT EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_PROJECTMONLOC') AND NAME = 'IX_WQX_PROJECTMONLOC_PARENTID')
    CREATE  NONCLUSTERED  INDEX IX_WQX_PROJECTMONLOC_PARENTID
        ON dbo.WQX_PROJECTMONLOC(PARENTID)
        WITH(IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, DATA_COMPRESSION = NONE)
GO

---$ Create Index/PK: IX_WQX_RESULT_PARENTID, Table : dbo.WQX_RESULT
IF NOT EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_RESULT') AND NAME = 'IX_WQX_RESULT_PARENTID')
    CREATE  NONCLUSTERED  INDEX IX_WQX_RESULT_PARENTID
        ON dbo.WQX_RESULT(PARENTID)
        WITH(IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, DATA_COMPRESSION = NONE)
GO

---$ Create Index/PK: IX_WQX_RESULTATTACHEDBIN_PAREN, Table : dbo.WQX_RESULTATTACHEDBINARYOBJECT
IF NOT EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_RESULTATTACHEDBINARYOBJECT') AND NAME = 'IX_WQX_RESULTATTACHEDBIN_PAREN')
    CREATE  NONCLUSTERED  INDEX IX_WQX_RESULTATTACHEDBIN_PAREN
        ON dbo.WQX_RESULTATTACHEDBINARYOBJECT(PARENTID)
        WITH(IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, DATA_COMPRESSION = NONE)
GO

---$ Create Index/PK: PK_WQX_RESULTATTACHEDBINARYOBJ, Table : dbo.WQX_RESULTATTACHEDBINARYOBJECT
IF OBJECT_ID(N'dbo.PK_WQX_RESULTATTACHEDBINARYOBJ') IS NULL
    ALTER TABLE dbo.WQX_RESULTATTACHEDBINARYOBJECT
        ADD CONSTRAINT PK_WQX_RESULTATTACHEDBINARYOBJ PRIMARY KEY CLUSTERED(RECORDID)
GO

---$ Create Index/PK: IX_WQX_RESULTDETECTQUANT_PAREN, Table : dbo.WQX_RESULTDETECTQUANTLIMIT
IF NOT EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_RESULTDETECTQUANTLIMIT') AND NAME = 'IX_WQX_RESULTDETECTQUANT_PAREN')
    CREATE  NONCLUSTERED  INDEX IX_WQX_RESULTDETECTQUANT_PAREN
        ON dbo.WQX_RESULTDETECTQUANTLIMIT(PARENTID)
        WITH(IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, DATA_COMPRESSION = NONE)
GO

---$ Create Index/PK: IX_WQX_TELEPHONIC_PARENTID, Table : dbo.WQX_TELEPHONIC
IF NOT EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_TELEPHONIC') AND NAME = 'IX_WQX_TELEPHONIC_PARENTID')
    CREATE  NONCLUSTERED  INDEX IX_WQX_TELEPHONIC_PARENTID
        ON dbo.WQX_TELEPHONIC(PARENTID)
        WITH(IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, DATA_COMPRESSION = NONE)
GO

---$ Create Index/PK: IX_WQX_RESULTMEASUREQUAL_PAREN, Table : dbo.WQX_RESULTMEASUREQUALIFIER
IF NOT EXISTS(SELECT * FROM SYS.INDEXES WHERE OBJECT_ID = OBJECT_ID(N'dbo.WQX_RESULTMEASUREQUALIFIER') AND NAME = 'IX_WQX_RESULTMEASUREQUAL_PAREN')
    CREATE  NONCLUSTERED  INDEX IX_WQX_RESULTMEASUREQUAL_PAREN
        ON dbo.WQX_RESULTMEASUREQUALIFIER(PARENTID)
        WITH(IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, DATA_COMPRESSION = NONE)
GO

---$ Create Index/PK: PK_WQX_RESULTMEASUREQUALIFIER, Table : dbo.WQX_RESULTMEASUREQUALIFIER
IF OBJECT_ID(N'dbo.PK_WQX_RESULTMEASUREQUALIFIER') IS NULL
    ALTER TABLE dbo.WQX_RESULTMEASUREQUALIFIER
        ADD CONSTRAINT PK_WQX_RESULTMEASUREQUALIFIER PRIMARY KEY CLUSTERED(RECORDID)
GO

---$ Create FK : FK_WQX_ACTATTACHEDBI_WQX_ACTIV
IF OBJECT_ID(N'dbo.FK_WQX_ACTATTACHEDBI_WQX_ACTIV') IS NULL
BEGIN
    ALTER TABLE dbo.WQX_ACTATTACHEDBINARYOBJECT
        ADD CONSTRAINT FK_WQX_ACTATTACHEDBI_WQX_ACTIV
            FOREIGN KEY(PARENTID)
                REFERENCES dbo.WQX_ACTIVITY(RECORDID)
                    ON DELETE CASCADE
                    ON UPDATE NO ACTION
END
GO

---$ Create FK : FK_WQX_ACTIVIT_WQX_ORGANIZATIO
IF OBJECT_ID(N'dbo.FK_WQX_ACTIVIT_WQX_ORGANIZATIO') IS NULL
BEGIN
    ALTER TABLE dbo.WQX_ACTIVITY
        ADD CONSTRAINT FK_WQX_ACTIVIT_WQX_ORGANIZATIO
            FOREIGN KEY(PARENTID)
                REFERENCES dbo.WQX_ORGANIZATION(RECORDID)
                    ON DELETE CASCADE
                    ON UPDATE NO ACTION
END
GO

---$ Create FK : FK_WQX_ACTIVITYCONDU_WQX_ACTIV
IF OBJECT_ID(N'dbo.FK_WQX_ACTIVITYCONDU_WQX_ACTIV') IS NULL
BEGIN
    ALTER TABLE dbo.WQX_ACTIVITYCONDUCTINGORG
        ADD CONSTRAINT FK_WQX_ACTIVITYCONDU_WQX_ACTIV
            FOREIGN KEY(PARENTID)
                REFERENCES dbo.WQX_ACTIVITY(RECORDID)
                    ON DELETE CASCADE
                    ON UPDATE NO ACTION
END
GO

---$ Create FK : FK_WQX_ACTIVITYMETR_WQX_ACTIVI
IF OBJECT_ID(N'dbo.FK_WQX_ACTIVITYMETR_WQX_ACTIVI') IS NULL
BEGIN
    ALTER TABLE dbo.WQX_ACTIVITYMETRIC
        ADD CONSTRAINT FK_WQX_ACTIVITYMETR_WQX_ACTIVI
            FOREIGN KEY(PARENTID)
                REFERENCES dbo.WQX_ACTIVITY(RECORDID)
                    ON DELETE CASCADE
                    ON UPDATE NO ACTION
END
GO

---$ Create FK : FK_WQX_RESULT_WQX_ACTIVITY
IF OBJECT_ID(N'dbo.FK_WQX_RESULT_WQX_ACTIVITY') IS NULL
BEGIN
    ALTER TABLE dbo.WQX_RESULT
        ADD CONSTRAINT FK_WQX_RESULT_WQX_ACTIVITY
            FOREIGN KEY(PARENTID)
                REFERENCES dbo.WQX_ACTIVITY(RECORDID)
                    ON DELETE CASCADE
                    ON UPDATE NO ACTION
END
GO

---$ Create FK : FK_WQX_PROJECTACTIVI_WQX_ACTIV
IF OBJECT_ID(N'dbo.FK_WQX_PROJECTACTIVI_WQX_ACTIV') IS NULL
BEGIN
    ALTER TABLE dbo.WQX_PROJECTACTIVITY
        ADD CONSTRAINT FK_WQX_PROJECTACTIVI_WQX_ACTIV
            FOREIGN KEY(ACTIVITYPARENTID)
                REFERENCES dbo.WQX_ACTIVITY(RECORDID)
                    ON DELETE CASCADE
                    ON UPDATE NO ACTION
END
GO

---$ Create FK : FK_WQX_ACTIVITYACTIV_WQX_ACTIV
IF OBJECT_ID(N'dbo.FK_WQX_ACTIVITYACTIV_WQX_ACTIV') IS NULL
BEGIN
    ALTER TABLE dbo.WQX_ACTIVITYACTIVITYGROUP
        ADD CONSTRAINT FK_WQX_ACTIVITYACTIV_WQX_ACTIV
            FOREIGN KEY(ACTIVITYGROUPPARENTID)
                REFERENCES dbo.WQX_ACTIVITYGROUP(RECORDID)
                    ON DELETE CASCADE
                    ON UPDATE NO ACTION
END
GO

---$ Create FK : FK_WQX_ACTIVITYGR_WQX_ORGANIZA
IF OBJECT_ID(N'dbo.FK_WQX_ACTIVITYGR_WQX_ORGANIZA') IS NULL
BEGIN
    ALTER TABLE dbo.WQX_ACTIVITYGROUP
        ADD CONSTRAINT FK_WQX_ACTIVITYGR_WQX_ORGANIZA
            FOREIGN KEY(PARENTID)
                REFERENCES dbo.WQX_ORGANIZATION(RECORDID)
                    ON DELETE CASCADE
                    ON UPDATE NO ACTION
END
GO

---$ Create FK : FK_WQX_ALTMO_WQX_MONITORINGLOC
IF OBJECT_ID(N'dbo.FK_WQX_ALTMO_WQX_MONITORINGLOC') IS NULL
BEGIN
    ALTER TABLE dbo.WQX_ALTMONLOC
        ADD CONSTRAINT FK_WQX_ALTMO_WQX_MONITORINGLOC
            FOREIGN KEY(PARENTID)
                REFERENCES dbo.WQX_MONITORINGLOCATION(RECORDID)
                    ON DELETE CASCADE
                    ON UPDATE NO ACTION
END
GO

---$ Create FK : FK_WQX_BIOLOGICALHAB_WQX_ORGAN
IF OBJECT_ID(N'dbo.FK_WQX_BIOLOGICALHAB_WQX_ORGAN') IS NULL
BEGIN
    ALTER TABLE dbo.WQX_BIOLOGICALHABITATINDEX
        ADD CONSTRAINT FK_WQX_BIOLOGICALHAB_WQX_ORGAN
            FOREIGN KEY(PARENTID)
                REFERENCES dbo.WQX_ORGANIZATION(RECORDID)
                    ON DELETE CASCADE
                    ON UPDATE NO ACTION
END
GO

---$ Create FK : FK_WQX_DELETES_WQX_ORGANIZATIO
IF OBJECT_ID(N'dbo.FK_WQX_DELETES_WQX_ORGANIZATIO') IS NULL
BEGIN
    ALTER TABLE dbo.WQX_DELETES
        ADD CONSTRAINT FK_WQX_DELETES_WQX_ORGANIZATIO
            FOREIGN KEY(PARENTID)
                REFERENCES dbo.WQX_ORGANIZATION(RECORDID)
                    ON DELETE CASCADE
                    ON UPDATE NO ACTION
END
GO

---$ Create FK : FK_WQX_ELECTRONICAD_WQX_ORGANI
IF OBJECT_ID(N'dbo.FK_WQX_ELECTRONICAD_WQX_ORGANI') IS NULL
BEGIN
    ALTER TABLE dbo.WQX_ELECTRONICADDRESS
        ADD CONSTRAINT FK_WQX_ELECTRONICAD_WQX_ORGANI
            FOREIGN KEY(PARENTID)
                REFERENCES dbo.WQX_ORGANIZATION(RECORDID)
                    ON DELETE CASCADE
                    ON UPDATE NO ACTION
END
GO

---$ Create FK : FK_WQX_LABSAMPLEPREP_WQX_RESUL
IF OBJECT_ID(N'dbo.FK_WQX_LABSAMPLEPREP_WQX_RESUL') IS NULL
BEGIN
    ALTER TABLE dbo.WQX_LABSAMPLEPREP
        ADD CONSTRAINT FK_WQX_LABSAMPLEPREP_WQX_RESUL
            FOREIGN KEY(PARENTID)
                REFERENCES dbo.WQX_RESULT(RECORDID)
                    ON DELETE CASCADE
                    ON UPDATE NO ACTION
END
GO

---$ Create FK : FK_WQX_MONITORINGLO_WQX_ORGANI
IF OBJECT_ID(N'dbo.FK_WQX_MONITORINGLO_WQX_ORGANI') IS NULL
BEGIN
    ALTER TABLE dbo.WQX_MONITORINGLOCATION
        ADD CONSTRAINT FK_WQX_MONITORINGLO_WQX_ORGANI
            FOREIGN KEY(PARENTID)
                REFERENCES dbo.WQX_ORGANIZATION(RECORDID)
                    ON DELETE CASCADE
                    ON UPDATE NO ACTION
END
GO

---$ Create FK : FK_WQX_MONLOCATTACHE_WQX_MONIT
IF OBJECT_ID(N'dbo.FK_WQX_MONLOCATTACHE_WQX_MONIT') IS NULL
BEGIN
    ALTER TABLE dbo.WQX_MONLOCATTACHEDBINARYOBJECT
        ADD CONSTRAINT FK_WQX_MONLOCATTACHE_WQX_MONIT
            FOREIGN KEY(PARENTID)
                REFERENCES dbo.WQX_MONITORINGLOCATION(RECORDID)
                    ON DELETE CASCADE
                    ON UPDATE NO ACTION
END
GO

---$ Create FK : FK_WQX_ORGADDRE_WQX_ORGANIZATI
IF OBJECT_ID(N'dbo.FK_WQX_ORGADDRE_WQX_ORGANIZATI') IS NULL
BEGIN
    ALTER TABLE dbo.WQX_ORGADDRESS
        ADD CONSTRAINT FK_WQX_ORGADDRE_WQX_ORGANIZATI
            FOREIGN KEY(PARENTID)
                REFERENCES dbo.WQX_ORGANIZATION(RECORDID)
                    ON DELETE CASCADE
                    ON UPDATE NO ACTION
END
GO

---$ Create FK : FK_WQX_TELEPHON_WQX_ORGANIZATI
IF OBJECT_ID(N'dbo.FK_WQX_TELEPHON_WQX_ORGANIZATI') IS NULL
BEGIN
    ALTER TABLE dbo.WQX_TELEPHONIC
        ADD CONSTRAINT FK_WQX_TELEPHON_WQX_ORGANIZATI
            FOREIGN KEY(PARENTID)
                REFERENCES dbo.WQX_ORGANIZATION(RECORDID)
                    ON DELETE CASCADE
                    ON UPDATE NO ACTION
END
GO

---$ Create FK : FK_WQX_PROJECT_WQX_ORGANIZATIO
IF OBJECT_ID(N'dbo.FK_WQX_PROJECT_WQX_ORGANIZATIO') IS NULL
BEGIN
    ALTER TABLE dbo.WQX_PROJECT
        ADD CONSTRAINT FK_WQX_PROJECT_WQX_ORGANIZATIO
            FOREIGN KEY(PARENTID)
                REFERENCES dbo.WQX_ORGANIZATION(RECORDID)
                    ON DELETE CASCADE
                    ON UPDATE NO ACTION
END
GO

---$ Create FK : FK_WQX_PROJATTACHEDB_WQX_PROJE
IF OBJECT_ID(N'dbo.FK_WQX_PROJATTACHEDB_WQX_PROJE') IS NULL
BEGIN
    ALTER TABLE dbo.WQX_PROJATTACHEDBINARYOBJECT
        ADD CONSTRAINT FK_WQX_PROJATTACHEDB_WQX_PROJE
            FOREIGN KEY(PARENTID)
                REFERENCES dbo.WQX_PROJECT(RECORDID)
                    ON DELETE CASCADE
                    ON UPDATE NO ACTION
END
GO

---$ Create FK : FK_WQX_PROJECTMONLO_WQX_PROJEC
IF OBJECT_ID(N'dbo.FK_WQX_PROJECTMONLO_WQX_PROJEC') IS NULL
BEGIN
    ALTER TABLE dbo.WQX_PROJECTMONLOC
        ADD CONSTRAINT FK_WQX_PROJECTMONLO_WQX_PROJEC
            FOREIGN KEY(PARENTID)
                REFERENCES dbo.WQX_PROJECT(RECORDID)
                    ON DELETE CASCADE
                    ON UPDATE NO ACTION
END
GO

---$ Create FK : FK_WQX_RESULTDETECTQ_WQX_RESUL
IF OBJECT_ID(N'dbo.FK_WQX_RESULTDETECTQ_WQX_RESUL') IS NULL
BEGIN
    ALTER TABLE dbo.WQX_RESULTDETECTQUANTLIMIT
        ADD CONSTRAINT FK_WQX_RESULTDETECTQ_WQX_RESUL
            FOREIGN KEY(PARENTID)
                REFERENCES dbo.WQX_RESULT(RECORDID)
                    ON DELETE CASCADE
                    ON UPDATE NO ACTION
END
GO

---$ Create FK : FK_WQX_RESULTATTACHE_WQX_RESUL
IF OBJECT_ID(N'dbo.FK_WQX_RESULTATTACHE_WQX_RESUL') IS NULL
BEGIN
    ALTER TABLE dbo.WQX_RESULTATTACHEDBINARYOBJECT
        ADD CONSTRAINT FK_WQX_RESULTATTACHE_WQX_RESUL
            FOREIGN KEY(PARENTID)
                REFERENCES dbo.WQX_RESULT(RECORDID)
                    ON DELETE CASCADE
                    ON UPDATE NO ACTION
END
GO

---$ Create FK : FK_WQX_RESULTMEASURE_WQX_RESUL
IF OBJECT_ID(N'dbo.FK_WQX_RESULTMEASURE_WQX_RESUL') IS NULL
BEGIN
    ALTER TABLE dbo.WQX_RESULTMEASUREQUALIFIER
        ADD CONSTRAINT FK_WQX_RESULTMEASURE_WQX_RESUL
            FOREIGN KEY(PARENTID)
                REFERENCES dbo.WQX_RESULT(RECORDID)
                    ON DELETE CASCADE
                    ON UPDATE NO ACTION
END
GO

delete from dbo.wqx_about_db;
insert into dbo.WQX_ABOUT_DB(WQX_ABOUT_DB_ID,DATA_KEY,DATA_VALUE) VALUES(NEWID(),'WQX_VERSION','3.0');
insert into dbo.WQX_ABOUT_DB(WQX_ABOUT_DB_ID,DATA_KEY,DATA_VALUE) VALUES(NEWID(),'DEPLOY_DATE',GETDATE());
insert into dbo.WQX_ABOUT_DB(WQX_ABOUT_DB_ID,DATA_KEY,DATA_VALUE) VALUES(NEWID(),'DEPLOY_MTHD','2.1 to 3.0 Upgrade');
insert into dbo.WQX_ABOUT_DB(WQX_ABOUT_DB_ID,DATA_KEY,DATA_VALUE) VALUES(NEWID(),'DEPLOY_ANALYST',system_user);


EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Parent: Reference document, image, photo, GIS data layer, laboratory material or other electronic object attached within a data exchange, as well as information used to describe the object. (RecordId)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTATTACHEDBINARYOBJECT', @level2type=N'COLUMN',@level2name=N'RECORDID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Parent: Reference document, image, photo, GIS data layer, laboratory material or other electronic object attached within a data exchange, as well as information used to describe the object. (ParentId)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTATTACHEDBINARYOBJECT', @level2type=N'COLUMN',@level2name=N'PARENTID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The text describing the descriptive name used to represent the file, including file extension. (BinaryObjectFileName)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTATTACHEDBINARYOBJECT', @level2type=N'COLUMN',@level2name=N'BINARYOBJECTFILE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The text or acronym describing the binary content type of a file. (BinaryObjectFileTypeCode)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTATTACHEDBINARYOBJECT', @level2type=N'COLUMN',@level2name=N'BINARYOBJECTFILETYPECODE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Parent: Reference document, image, photo, GIS data layer, laboratory material or other electronic object attached within a data exchange, as well as information used to describe the object. (BinaryContent)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTATTACHEDBINARYOBJECT', @level2type=N'COLUMN',@level2name=N'BINARYOBJECTCONTENT'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Schema element: ActivityAttachedBinaryObjectDataType' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTATTACHEDBINARYOBJECT'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Parent: Allows for the reporting of monitoring activities conducted at a Monitoring Location. (RecordId)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITY', @level2type=N'COLUMN',@level2name=N'RECORDID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Parent: Allows for the reporting of monitoring activities conducted at a Monitoring Location. (ParentId)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITY', @level2type=N'COLUMN',@level2name=N'PARENTID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Parent: Allows for the reporting of monitoring activities conducted at a Monitoring Location. (WqxUpdateDate)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITY', @level2type=N'COLUMN',@level2name=N'WQXUPDATEDATE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Designator that uniquely identifies an activity within an organization. (ActivityIdentifier)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITY', @level2type=N'COLUMN',@level2name=N'ACTIVITYID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'User Supplied Sample ID that uniquely identifies an activity within an organization. (ActivityIdentifierUserSupplied)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITY', @level2type=N'COLUMN',@level2name=N'ACTIVITYIDUSERSUPPLIED'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The text describing the type of activity. (ActivityTypeCode)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITY', @level2type=N'COLUMN',@level2name=N'ACTIVITYTYPECODE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Name or code indicating the environmental medium where the sample was taken. (ActivityMediaName)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITY', @level2type=N'COLUMN',@level2name=N'ACTIVITYMEDIA'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Name or code indicating the environmental matrix as a subdivision of the sample media. (ActivityMediaSubdivisionName)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITY', @level2type=N'COLUMN',@level2name=N'ACTIVITYMEDIASUBDIVISION'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The calendar date on which the field activity was started. (ActivityStartDate)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITY', @level2type=N'COLUMN',@level2name=N'ACTIVITYSTARTDATE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The calendar date when the field activity was completed. (ActivityEndDate)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITY', @level2type=N'COLUMN',@level2name=N'ACTIVITYENDDATE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The name that indicates the approximate location within the water column at which the activity occurred. (ActivityRelativeDepthName)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITY', @level2type=N'COLUMN',@level2name=N'RELATIVEDEPTH'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The reference used to indicate the datum or reference used to establish the depth/altitude of an activity. (ActivityDepthAltitudeReferencePointText)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITY', @level2type=N'COLUMN',@level2name=N'DEPTHALTITUDEREFPOINT'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A designator used to describe the unique name, number, or code assigned to identify the monitoring location. (MonitoringLocationIdentifier)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITY', @level2type=N'COLUMN',@level2name=N'MONLOCID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Single entity within a sampling frame at which a collection procedure or protocol was performed (e.g. transect, plot point). (SamplingComponentName)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITY', @level2type=N'COLUMN',@level2name=N'SAMPLINGCOMPONENTNAME'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'General comments concerning the activity. (ActivityCommentText)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITY', @level2type=N'COLUMN',@level2name=N'ACTIVITYCOMMENT'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Parent: Basic identification information for an activity conducted within a project. (TmpProjectId)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITY', @level2type=N'COLUMN',@level2name=N'TMPPROJECTID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The time of day that is reported. (Time)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITY', @level2type=N'COLUMN',@level2name=N'STARTTIME'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The time zone for which the time of day is reported. Any of the longitudinal divisions of the earth''s surface in which a standard time is kept. (TimeZoneCode)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITY', @level2type=N'COLUMN',@level2name=N'STARTTIMEZONE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The time of day that is reported. (Time)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITY', @level2type=N'COLUMN',@level2name=N'ENDTIME'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The time zone for which the time of day is reported. Any of the longitudinal divisions of the earth''s surface in which a standard time is kept. (TimeZoneCode)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITY', @level2type=N'COLUMN',@level2name=N'ENDTIMEZONE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The recorded dimension, capacity, quality, or amount of something ascertained by measuring or observing. (MeasureValue)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITY', @level2type=N'COLUMN',@level2name=N'DEPTHHEIGHTMEASURE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The code that represents the unit for measuring the item. (MeasureUnitCode)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITY', @level2type=N'COLUMN',@level2name=N'DEPTHHEIGHTMEASUREUNIT'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The recorded dimension, capacity, quality, or amount of something ascertained by measuring or observing. (MeasureValue)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITY', @level2type=N'COLUMN',@level2name=N'TOPDEPTHHEIGHTMEASURE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The code that represents the unit for measuring the item. (MeasureUnitCode)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITY', @level2type=N'COLUMN',@level2name=N'TOPDEPTHHEIGHTMEASUREUNIT'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The recorded dimension, capacity, quality, or amount of something ascertained by measuring or observing. (MeasureValue)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITY', @level2type=N'COLUMN',@level2name=N'BOTTOMDEPTHHEIGHTMEASURE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The code that represents the unit for measuring the item. (MeasureUnitCode)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITY', @level2type=N'COLUMN',@level2name=N'BOTTOMDEPTHHEIGHTMEASUREUNIT'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The measure of the angular distance on a meridian north or south of the equator. (LatitudeMeasure)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITY', @level2type=N'COLUMN',@level2name=N'LATITUDEMEASURE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The measure of the angular distance on a meridian east or west of the prime meridian. (LongitudeMeasure)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITY', @level2type=N'COLUMN',@level2name=N'LONGITUDEMEASURE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The number that represents the proportional distance on the ground for one unit of measure on the map or photo. (SourceMapScale)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITY', @level2type=N'COLUMN',@level2name=N'SOURCEMAPSCALE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The name that identifies the method used to determine the latitude and longitude coordinates for a point on the earth. (HorizontalCollectionMethodName)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITY', @level2type=N'COLUMN',@level2name=N'HORIZCOLLMETHOD'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The name that describes the reference datum used in determining latitude and longitude coordinates. (HorizontalCoordinateReferenceSystemDatumName)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITY', @level2type=N'COLUMN',@level2name=N'HORIZCOORDREFSYSDATUM'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Text description of the activity location. (ActivityLocationDescriptionText)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITY', @level2type=N'COLUMN',@level2name=N'ACTIVITYLOCATIONDESCRIPTION'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The recorded dimension, capacity, quality, or amount of something ascertained by measuring or observing. (MeasureValue)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITY', @level2type=N'COLUMN',@level2name=N'HORIZACCURACYMEASURE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The code that represents the unit for measuring the item. (MeasureUnitCode)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITY', @level2type=N'COLUMN',@level2name=N'HORIZACCURACYMEASUREUNIT'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An association of interacting populations of organisms in a given waterbody. (AssemblageSampledName)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITY', @level2type=N'COLUMN',@level2name=N'BIOACTIVITYASSEMBLAGESAMPD'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Identifies the type of toxicity as either Acute or Chronic. (ToxicityTestType)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITY', @level2type=N'COLUMN',@level2name=N'BIOACTIVITYTOXICITYTESTTYPE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The monitoring approach by which each habitat was chosen to sample. (e.g. random). (HabitatSelectionMethod)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITY', @level2type=N'COLUMN',@level2name=N'HABITATSELECTIONMETHOD'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Remark / Text description of the reach length. (CollectionDescriptionText)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITY', @level2type=N'COLUMN',@level2name=N'COLLECTIONDESCRIPTION'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The number of passes through the water from which the sample was collected. (PassCount)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITY', @level2type=N'COLUMN',@level2name=N'BIOHABPASSCOUNT'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The recorded dimension, capacity, quality, or amount of something ascertained by measuring or observing. (MeasureValue)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITY', @level2type=N'COLUMN',@level2name=N'BIOHABCOLLDURATIONMEASURE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The code that represents the unit for measuring the item. (MeasureUnitCode)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITY', @level2type=N'COLUMN',@level2name=N'BIOHABCOLLDURATIONMEASUREUNIT'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The recorded dimension, capacity, quality, or amount of something ascertained by measuring or observing. (MeasureValue)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITY', @level2type=N'COLUMN',@level2name=N'COLLECTIONAREAMEASURE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The code that represents the unit for measuring the item. (MeasureUnitCode)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITY', @level2type=N'COLUMN',@level2name=N'COLLECTIONAREAMEASUREUNIT'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The recorded dimension, capacity, quality, or amount of something ascertained by measuring or observing. (MeasureValue)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITY', @level2type=N'COLUMN',@level2name=N'COLLECEFFORTMEASUREVALUE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The procedural code or equipment that represents the unit for measuring the effort. (GearProcedureUnitCode)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITY', @level2type=N'COLUMN',@level2name=N'COLLECEFFORTGEARPROCEDUREUNIT'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The recorded dimension, capacity, quality, or amount of something ascertained by measuring or observing. (MeasureValue)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITY', @level2type=N'COLUMN',@level2name=N'BIOHABREACHLENGTHMEASURE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The code that represents the unit for measuring the item. (MeasureUnitCode)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITY', @level2type=N'COLUMN',@level2name=N'BIOHABREACHLENGTHMEASUREUNIT'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The recorded dimension, capacity, quality, or amount of something ascertained by measuring or observing. (MeasureValue)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITY', @level2type=N'COLUMN',@level2name=N'BIOHABREACHWIDTHMEASURE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The code that represents the unit for measuring the item. (MeasureUnitCode)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITY', @level2type=N'COLUMN',@level2name=N'BIOHABREACHWIDTHMEASUREUNIT'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The text describing the type of net. (NetTypeName)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITY', @level2type=N'COLUMN',@level2name=N'BIOHABNETTYPE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The recorded dimension, capacity, quality, or amount of something ascertained by measuring or observing. (MeasureValue)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITY', @level2type=N'COLUMN',@level2name=N'BIOHABNETSURFACEAREAMEASURE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The code that represents the unit for measuring the item. (MeasureUnitCode)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITY', @level2type=N'COLUMN',@level2name=N'BIOHABNETSURFACEMEASUREUNIT'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The recorded dimension, capacity, quality, or amount of something ascertained by measuring or observing. (MeasureValue)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITY', @level2type=N'COLUMN',@level2name=N'BIOHABNETMESHSIZEMEASURE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The code that represents the unit for measuring the item. (MeasureUnitCode)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITY', @level2type=N'COLUMN',@level2name=N'BIOHABNETMESHMEASUREUNIT'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The recorded dimension, capacity, quality, or amount of something ascertained by measuring or observing. (MeasureValue)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITY', @level2type=N'COLUMN',@level2name=N'BIOHABNETBOATSPEEDMEASURE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The code that represents the unit for measuring the item. (MeasureUnitCode)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITY', @level2type=N'COLUMN',@level2name=N'BIOHABNETBOATSPEEDMEASUREUNIT'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The recorded dimension, capacity, quality, or amount of something ascertained by measuring or observing. (MeasureValue)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITY', @level2type=N'COLUMN',@level2name=N'BIOHABNETCURRSPEEDMEASURE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The code that represents the unit for measuring the item. (MeasureUnitCode)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITY', @level2type=N'COLUMN',@level2name=N'BIOHABNETCURRSPEEDMEASUREUNIT'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The name for the equipment used in collecting the sample. (SampleCollectionEquipmentName)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITY', @level2type=N'COLUMN',@level2name=N'SAMPCOLLEQUIPMENT'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Free text with general comments further describing the sample collection equipment. (SampleCollectionEquipmentCommentText)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITY', @level2type=N'COLUMN',@level2name=N'SAMPCOLLEQUIPMENTCOMMENT'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Hydrologic condition is the hydrologic condition that is represented by the sample collected (i.e. ? normal, falling, rising, peak stage). (HydrologicCondition)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITY', @level2type=N'COLUMN',@level2name=N'HYDROLOGICCONDITION'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A hydrologic event that is represented by the sample collected (i.e. - storm, drought, snowmelt). (HydrologicEvent)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITY', @level2type=N'COLUMN',@level2name=N'HYDROLOGICEVENT'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identification number or code assigned by the method publisher. (MethodIdentifier)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITY', @level2type=N'COLUMN',@level2name=N'SAMPCOLLMETHODID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Identifies the source or data system that created or defined the identifier. (MethodIdentifierContext)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITY', @level2type=N'COLUMN',@level2name=N'SAMPCOLLMETHODIDCONTEXT'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The title that appears on the method from the method publisher. (MethodName)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITY', @level2type=N'COLUMN',@level2name=N'SAMPCOLLMETHOD'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Identifier of type of method that identifies it as reference, equivalent, or other. (MethodQualifierTypeName)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITY', @level2type=N'COLUMN',@level2name=N'SAMPCOLLMETHODQUALIFIER'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A brief summary that provides general information about the method. (MethodDescriptionText)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITY', @level2type=N'COLUMN',@level2name=N'SAMPCOLLMETHODDESC'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identification number or code assigned by the LAB or data collector.. Sample Identification Codes and Labeling. (SampleContainerLabelName)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITY', @level2type=N'COLUMN',@level2name=N'SAMPPREPCONTLABEL'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The text describing the sample container type. (SampleContainerTypeName)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITY', @level2type=N'COLUMN',@level2name=N'SAMPPREPCONTTYPE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The text describing the sample container color. (SampleContainerColorName)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITY', @level2type=N'COLUMN',@level2name=N'SAMPPREPCONTCOLOR'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Information describing the chemical means to preserve the sample. (ChemicalPreservativeUsedName)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITY', @level2type=N'COLUMN',@level2name=N'SAMPPREPCONTCHEMPRESERVUSED'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Information describing the temperature means used to preserve the sample. (ThermalPreservativeUsedName)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITY', @level2type=N'COLUMN',@level2name=N'SAMPPREPCONTTHERMALPRESERVUSED'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The text describing sample handling and transport procedures used. (SampleTransportStorageDescription)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITY', @level2type=N'COLUMN',@level2name=N'SAMPPREPCONTSAMPTRANSSTORDESC'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identification number or code assigned by the method publisher. (MethodIdentifier)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITY', @level2type=N'COLUMN',@level2name=N'SAMPPREPID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Identifies the source or data system that created or defined the identifier. (MethodIdentifierContext)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITY', @level2type=N'COLUMN',@level2name=N'SAMPPREPIDCONTEXT'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The title that appears on the method from the method publisher. (MethodName)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITY', @level2type=N'COLUMN',@level2name=N'SAMPPREP'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Identifier of type of method that identifies it as reference, equivalent, or other. (MethodQualifierTypeName)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITY', @level2type=N'COLUMN',@level2name=N'SAMPPREPQUALIFIERTYPE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A brief summary that provides general information about the method. (MethodDescriptionText)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITY', @level2type=N'COLUMN',@level2name=N'SAMPPREPDESC'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Schema element: ActivityDataType' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITY'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Parent: Allows for the grouping of activities. (RecordId)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITYACTIVITYGROUP', @level2type=N'COLUMN',@level2name=N'RECORDID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Parent: Allows for the grouping of activities. (ActivityGroupParentId)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITYACTIVITYGROUP', @level2type=N'COLUMN',@level2name=N'ACTIVITYGROUPPARENTID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Parent: Allows for the grouping of activities. (ActivityParentId)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITYACTIVITYGROUP', @level2type=N'COLUMN',@level2name=N'ACTIVITYPARENTID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Schema element: ActivityActivityGroupDataType' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITYACTIVITYGROUP'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Parent: Basic identification information for an activity conducted within a project. (RecordId)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITYCONDUCTINGORG', @level2type=N'COLUMN',@level2name=N'RECORDID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Parent: Basic identification information for an activity conducted within a project. (ParentId)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITYCONDUCTINGORG', @level2type=N'COLUMN',@level2name=N'PARENTID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Parent: Basic identification information for an activity conducted within a project. (ActivityId)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITYCONDUCTINGORG', @level2type=N'COLUMN',@level2name=N'ACTIVITYID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Parent: Basic identification information for an activity conducted within a project. (ActivityConductingOrganizationText)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITYCONDUCTINGORG', @level2type=N'COLUMN',@level2name=N'ACTIVITYCONDUCTINGORG'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Schema element: ActivityConductingOrganizationDataType' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITYCONDUCTINGORG'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Parent: Allows for the grouping of activities. (RecordId)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITYGROUP', @level2type=N'COLUMN',@level2name=N'RECORDID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Parent: Allows for the grouping of activities. (ParentId)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITYGROUP', @level2type=N'COLUMN',@level2name=N'PARENTID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Designator that uniquely identifies a grouping of activities within an organization. (ActivityGroupIdentifier)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITYGROUP', @level2type=N'COLUMN',@level2name=N'ACTIVITYGROUPID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A name of an activity group. (ActivityGroupName)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITYGROUP', @level2type=N'COLUMN',@level2name=N'ACTIVITYGROUPNAME'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Identifies the type of grouping of a set of activities. (ActivityGroupTypeCode)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITYGROUP', @level2type=N'COLUMN',@level2name=N'ACTIVITYGROUPTYPECODE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Parent: Allows for the grouping of activities. (ReplaceActivities)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITYGROUP', @level2type=N'COLUMN',@level2name=N'REPLACEACTIVITIES'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Parent: Allows for the grouping of activities. (WqxUpdateDate)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITYGROUP', @level2type=N'COLUMN',@level2name=N'WQXUPDATEDATE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Schema element: ActivityGroupDataType' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITYGROUP'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Parent: This section allows for the reporting of metrics to support habitat or biotic integrity indices. (RecordId)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITYMETRIC', @level2type=N'COLUMN',@level2name=N'RECORDID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Parent: This section allows for the reporting of metrics to support habitat or biotic integrity indices. (ParentId)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITYMETRIC', @level2type=N'COLUMN',@level2name=N'PARENTID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Provides the scaled or calculated score for the activity metric. (MetricScore)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITYMETRIC', @level2type=N'COLUMN',@level2name=N'METRICSCORE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The order in which a single point within a sampling frame was visited in relation to other components. (MetricSamplingPointPlaceInSeries)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITYMETRIC', @level2type=N'COLUMN',@level2name=N'METRICSAMPPOINTPLACEINSERIES'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Free text with general comments concerning the metric. (MetricCommentText)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITYMETRIC', @level2type=N'COLUMN',@level2name=N'METRICCOMMENT'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique designator used to identify a unique index record that the activity metric is associated with. (IndexIdentifier)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITYMETRIC', @level2type=N'COLUMN',@level2name=N'METRICINDEXID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A designator used to describe the unique name, number, or code assigned to identify the metric (Organization specific). (MetricTypeIdentifier)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITYMETRIC', @level2type=N'COLUMN',@level2name=N'METRICTYPEID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Identifies the source or data system that created or defined the metric. (MetricTypeIdentifierContext)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITYMETRIC', @level2type=N'COLUMN',@level2name=N'METRICTYPEIDCONTEXT'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Name of the activity metric. (MetricTypeName)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITYMETRIC', @level2type=N'COLUMN',@level2name=N'METRICTYPENAME'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Provides a description of the scale used for the activity metric. (MetricTypeScaleText)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITYMETRIC', @level2type=N'COLUMN',@level2name=N'METRICTYPESCALE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Provides a description of the formula used to calculate the activity metric score. (FormulaDescriptionText)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITYMETRIC', @level2type=N'COLUMN',@level2name=N'METRICTYPEFORMULADESC'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A name given to the resource. (ResourceTitleName)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITYMETRIC', @level2type=N'COLUMN',@level2name=N'CITATIONRESOURCETITLE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An entity primarily responible for making the content of the resource. (ResourceCreatorName)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITYMETRIC', @level2type=N'COLUMN',@level2name=N'CITATIONRESOURCECREATOR'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A topic of the content of the resource. (ResourceSubjectText)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITYMETRIC', @level2type=N'COLUMN',@level2name=N'CITATIONRESOURCESUBJECT'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An entity responsible for making the resource available. (ResourcePublisherName)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITYMETRIC', @level2type=N'COLUMN',@level2name=N'CITATIONRESOURCEPUBLISHER'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A date of an event in the lifecycle of the resource. (ResourceDate)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITYMETRIC', @level2type=N'COLUMN',@level2name=N'CITATIONRESOURCEDATE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An unambiguous reference to the resource within a given context. (ResourceIdentifier)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITYMETRIC', @level2type=N'COLUMN',@level2name=N'CITATIONRESOURCEID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The recorded dimension, capacity, quality, or amount of something ascertained by measuring or observing. (MeasureValue)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITYMETRIC', @level2type=N'COLUMN',@level2name=N'METRICVALUEMEASURE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The code that represents the unit for measuring the item. (MeasureUnitCode)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITYMETRIC', @level2type=N'COLUMN',@level2name=N'METRICVALUEMEASUREUNIT'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Schema element: ActivityMetricDataType' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ACTIVITYMETRIC'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Parent: Alternate identifications of a monitoring location. (RecordId)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ALTMONLOC', @level2type=N'COLUMN',@level2name=N'RECORDID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Parent: Alternate identifications of a monitoring location. (ParentId)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ALTMONLOC', @level2type=N'COLUMN',@level2name=N'PARENTID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A designator used to describe the unique name, number, or code assigned to identify the monitoring location. (MonitoringLocationIdentifier)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ALTMONLOC', @level2type=N'COLUMN',@level2name=N'MONLOCID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Identifies the source or data system that created or defined the monitoring location identifier. (MonitoringLocationIdentifierContext)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ALTMONLOC', @level2type=N'COLUMN',@level2name=N'MONLOCIDCONTEXT'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Schema element: AlternateMonitoringLocationIdentityDataType' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ALTMONLOC'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Parent: This section allows for the reporting of habitat and biotic integrity indices as a representation of water quality conditions. (RecordId)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_BIOLOGICALHABITATINDEX', @level2type=N'COLUMN',@level2name=N'RECORDID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Parent: This section allows for the reporting of habitat and biotic integrity indices as a representation of water quality conditions. (ParentId)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_BIOLOGICALHABITATINDEX', @level2type=N'COLUMN',@level2name=N'PARENTID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique designator used to identify a unique index record that the activity metric is associated with. (IndexIdentifier)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_BIOLOGICALHABITATINDEX', @level2type=N'COLUMN',@level2name=N'INDEXID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Provides the score for the index. (IndexScore)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_BIOLOGICALHABITATINDEX', @level2type=N'COLUMN',@level2name=N'INDEXSCORE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A code used to identify any qualifying issues that affect the index. (IndexQualifierCode)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_BIOLOGICALHABITATINDEX', @level2type=N'COLUMN',@level2name=N'INDEXQUALIFIERCODE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Free text with general comments concerning the index. (IndexCommentText)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_BIOLOGICALHABITATINDEX', @level2type=N'COLUMN',@level2name=N'INDEXCOMMENT'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date on which the index was calcualted. (IndexCalculatedDate)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_BIOLOGICALHABITATINDEX', @level2type=N'COLUMN',@level2name=N'INDEXCALCULATEDDATE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A designator used to describe the unique name, number, or code assigned to identify the monitoring location. (MonitoringLocationIdentifier)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_BIOLOGICALHABITATINDEX', @level2type=N'COLUMN',@level2name=N'MONLOCID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Parent: This section allows for the reporting of habitat and biotic integrity indices as a representation of water quality conditions. (WqxUpdateDate)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_BIOLOGICALHABITATINDEX', @level2type=N'COLUMN',@level2name=N'WQXUPDATEDATE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A designator used to describe the unique name, number, or code assigned to identify the index (Organization specific). (IndexTypeIdentifier)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_BIOLOGICALHABITATINDEX', @level2type=N'COLUMN',@level2name=N'INDEXTYPEID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Identifies the source or data system that created or defined the index. (IndexTypeIdentifierContext)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_BIOLOGICALHABITATINDEX', @level2type=N'COLUMN',@level2name=N'INDEXTYPEIDCONTEXT'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Name of the habitat or biotic integrity index. (IndexTypeName)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_BIOLOGICALHABITATINDEX', @level2type=N'COLUMN',@level2name=N'INDEXTYPENAME'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Provides a description of the scale used for the index. (IndexTypeScaleText)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_BIOLOGICALHABITATINDEX', @level2type=N'COLUMN',@level2name=N'INDEXTYPESCALE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A name given to the resource. (ResourceTitleName)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_BIOLOGICALHABITATINDEX', @level2type=N'COLUMN',@level2name=N'RESOURCETITLE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An entity primarily responible for making the content of the resource. (ResourceCreatorName)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_BIOLOGICALHABITATINDEX', @level2type=N'COLUMN',@level2name=N'RESOURCECREATOR'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A topic of the content of the resource. (ResourceSubjectText)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_BIOLOGICALHABITATINDEX', @level2type=N'COLUMN',@level2name=N'RESOURCESUBJECT'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An entity responsible for making the resource available. (ResourcePublisherName)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_BIOLOGICALHABITATINDEX', @level2type=N'COLUMN',@level2name=N'RESOURCEPUBLISHER'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A date of an event in the lifecycle of the resource. (ResourceDate)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_BIOLOGICALHABITATINDEX', @level2type=N'COLUMN',@level2name=N'RESOURCEDATE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An unambiguous reference to the resource within a given context. (ResourceIdentifier)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_BIOLOGICALHABITATINDEX', @level2type=N'COLUMN',@level2name=N'RESOURCEID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Schema element: BiologicalHabitatIndexDataType' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_BIOLOGICALHABITATINDEX'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Parent: Schema used to delete organization information. (RecordId)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_DELETES', @level2type=N'COLUMN',@level2name=N'RECORDID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Parent: Schema used to delete organization information. (ParentId)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_DELETES', @level2type=N'COLUMN',@level2name=N'PARENTID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Parent: Schema used to delete organization information. (Component)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_DELETES', @level2type=N'COLUMN',@level2name=N'COMPONENT'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Parent: Schema used to delete organization information. (Identifier)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_DELETES', @level2type=N'COLUMN',@level2name=N'IDENTIFIER'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Parent: Schema used to delete organization information. (WqxUpdateDate)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_DELETES', @level2type=N'COLUMN',@level2name=N'WQXUPDATEDATE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Schema element: DeleteDataType' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_DELETES'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Parent: A location within a system of worldwide electronic communication where a computer user can access information or receive electronic mail. (RecordId)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ELECTRONICADDRESS', @level2type=N'COLUMN',@level2name=N'RECORDID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Parent: A location within a system of worldwide electronic communication where a computer user can access information or receive electronic mail. (ParentId)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ELECTRONICADDRESS', @level2type=N'COLUMN',@level2name=N'PARENTID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A resource address, usually consisting of the access protocol, the domain name, and optionally, the path to a file or location. (ElectronicAddressText)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ELECTRONICADDRESS', @level2type=N'COLUMN',@level2name=N'ELECTRONICADDRESS'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The name that describes the electronic address type. (ElectronicAddressTypeName)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ELECTRONICADDRESS', @level2type=N'COLUMN',@level2name=N'ELECTRONICADDRESSTYPE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Schema element: ElectronicAddressDataType' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ELECTRONICADDRESS'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Parent: Describes Lab Sample Preparation procedures which may alter the original state of the Sample and produce Lab subsamples. These Lab Subsamples are analyized and reported by the Lab as Sample results. (RecordId)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_LABSAMPLEPREP', @level2type=N'COLUMN',@level2name=N'RECORDID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Parent: Describes Lab Sample Preparation procedures which may alter the original state of the Sample and produce Lab subsamples. These Lab Subsamples are analyized and reported by the Lab as Sample results. (ParentId)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_LABSAMPLEPREP', @level2type=N'COLUMN',@level2name=N'PARENTID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The calendar date when the preparation/extraction of the sample for analysis began. (PreparationStartDate)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_LABSAMPLEPREP', @level2type=N'COLUMN',@level2name=N'PREPSTARTDATE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The calendar date when the preparation/extraction of the sample for analysis was finished. (PreparationEndDate)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_LABSAMPLEPREP', @level2type=N'COLUMN',@level2name=N'PREPENDDATE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The overall dilution of the substance subjected to this analysis. (SubstanceDilutionFactor)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_LABSAMPLEPREP', @level2type=N'COLUMN',@level2name=N'SUBSTANCEDILUTIONFACTOR'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identification number or code assigned by the method publisher. (MethodIdentifier)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_LABSAMPLEPREP', @level2type=N'COLUMN',@level2name=N'METHODID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Identifies the source or data system that created or defined the identifier. (MethodIdentifierContext)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_LABSAMPLEPREP', @level2type=N'COLUMN',@level2name=N'METHODIDCONTEXT'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The title that appears on the method from the method publisher. (MethodName)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_LABSAMPLEPREP', @level2type=N'COLUMN',@level2name=N'METHODNAME'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Identifier of type of method that identifies it as reference, equivalent, or other. (MethodQualifierTypeName)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_LABSAMPLEPREP', @level2type=N'COLUMN',@level2name=N'METHODQUALIFIERTYPE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A brief summary that provides general information about the method. (MethodDescriptionText)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_LABSAMPLEPREP', @level2type=N'COLUMN',@level2name=N'METHODDESC'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The time of day that is reported. (Time)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_LABSAMPLEPREP', @level2type=N'COLUMN',@level2name=N'PREPSTARTTIME'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The time zone for which the time of day is reported. Any of the longitudinal divisions of the earth''s surface in which a standard time is kept. (TimeZoneCode)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_LABSAMPLEPREP', @level2type=N'COLUMN',@level2name=N'PREPSTARTTIMEZONECODE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The time of day that is reported. (Time)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_LABSAMPLEPREP', @level2type=N'COLUMN',@level2name=N'PREPENDTIME'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The time zone for which the time of day is reported. Any of the longitudinal divisions of the earth''s surface in which a standard time is kept. (TimeZoneCode)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_LABSAMPLEPREP', @level2type=N'COLUMN',@level2name=N'PREPENDTIMEZONECODE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Schema element: LabSamplePreparationDataType' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_LABSAMPLEPREP'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Parent: An identifiable location where an environmental sample, onsite measurement, and/or observation is determined. (RecordId)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_MONITORINGLOCATION', @level2type=N'COLUMN',@level2name=N'RECORDID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Parent: An identifiable location where an environmental sample, onsite measurement, and/or observation is determined. (ParentId)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_MONITORINGLOCATION', @level2type=N'COLUMN',@level2name=N'PARENTID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Parent: An identifiable location where an environmental sample, onsite measurement, and/or observation is determined. (WqxUpdateDate)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_MONITORINGLOCATION', @level2type=N'COLUMN',@level2name=N'WQXUPDATEDATE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A designator used to describe the unique name, number, or code assigned to identify the monitoring location. (MonitoringLocationIdentifier)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_MONITORINGLOCATION', @level2type=N'COLUMN',@level2name=N'MONITORINGLOCATIONID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The designator specified by the sampling organization for the site at which sampling or other activities are conducted. (MonitoringLocationName)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_MONITORINGLOCATION', @level2type=N'COLUMN',@level2name=N'MONLOCNAME'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The descriptive name for a type of monitoring location. (MonitoringLocationTypeName)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_MONITORINGLOCATION', @level2type=N'COLUMN',@level2name=N'MONLOCTYPE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Text description of the monitoring location. (MonitoringLocationDescriptionText)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_MONITORINGLOCATION', @level2type=N'COLUMN',@level2name=N'MONLOCDESC'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The 8 digit federal code used to identify the hydrologic unit of the monitoring location to the cataloging unit level of precision. (HUCEightDigitCode)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_MONITORINGLOCATION', @level2type=N'COLUMN',@level2name=N'HUCEIGHTDIGITCODE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The 12 digit federal code used to identify the hydrologic unit of the monitoring location to the subwatershed level of precision. (HUCTwelveDigitCode)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_MONITORINGLOCATION', @level2type=N'COLUMN',@level2name=N'HUCTWELVEDIGITCODE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indicator denoting whether the location is on a tribal land. (TribalLandIndicator)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_MONITORINGLOCATION', @level2type=N'COLUMN',@level2name=N'TRIBALLANDIND'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The name of an American Indian or Alaskan native area where the location exists. (TribalLandName)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_MONITORINGLOCATION', @level2type=N'COLUMN',@level2name=N'TRIBALLANDNAME'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The recorded dimension, capacity, quality, or amount of something ascertained by measuring or observing. (MeasureValue)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_MONITORINGLOCATION', @level2type=N'COLUMN',@level2name=N'DRAINAGEAREAMEASURE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The code that represents the unit for measuring the item. (MeasureUnitCode)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_MONITORINGLOCATION', @level2type=N'COLUMN',@level2name=N'DRAINAGEAREAMEASUREUNIT'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The recorded dimension, capacity, quality, or amount of something ascertained by measuring or observing. (MeasureValue)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_MONITORINGLOCATION', @level2type=N'COLUMN',@level2name=N'CONTRDRAINAGEAREAMEASURE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The code that represents the unit for measuring the item. (MeasureUnitCode)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_MONITORINGLOCATION', @level2type=N'COLUMN',@level2name=N'CONTRDRAINAGEAREAMEASUREUNIT'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The measure of the angular distance on a meridian north or south of the equator. (LatitudeMeasure)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_MONITORINGLOCATION', @level2type=N'COLUMN',@level2name=N'LATITUDEMEASURE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The measure of the angular distance on a meridian east or west of the prime meridian. (LongitudeMeasure)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_MONITORINGLOCATION', @level2type=N'COLUMN',@level2name=N'LONGITUDEMEASURE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The number that represents the proportional distance on the ground for one unit of measure on the map or photo. (SourceMapScale)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_MONITORINGLOCATION', @level2type=N'COLUMN',@level2name=N'SOURCEMAPSCALE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The name that identifies the method used to determine the latitude and longitude coordinates for a point on the earth. (HorizontalCollectionMethodName)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_MONITORINGLOCATION', @level2type=N'COLUMN',@level2name=N'HORIZCOLLMETHOD'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The name that describes the reference datum used in determining latitude and longitude coordinates. (HorizontalCoordinateReferenceSystemDatumName)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_MONITORINGLOCATION', @level2type=N'COLUMN',@level2name=N'HORIZCOORDREFSYSDATUM'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The name that identifies the method used to collect the vertical measure (i.e. the altitude) of a reference point. (VerticalCollectionMethodName)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_MONITORINGLOCATION', @level2type=N'COLUMN',@level2name=N'VERTICALCOLLMETHOD'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The name of the reference datum used to determine the vertical measure (i.e., the altitude). (VerticalCoordinateReferenceSystemDatumName)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_MONITORINGLOCATION', @level2type=N'COLUMN',@level2name=N'VERTICALCOORDREFSYSDATUM'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A code designator used to identify a primary geopolitical unit of the world. (CountryCode)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_MONITORINGLOCATION', @level2type=N'COLUMN',@level2name=N'COUNTRYCODE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A code designator used to identify a principal administrative subdivision of the United States, Canada, or Mexico. (StateCode)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_MONITORINGLOCATION', @level2type=N'COLUMN',@level2name=N'STATECODE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A code designator used to identify a U.S. county or county equivalent. (CountyCode)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_MONITORINGLOCATION', @level2type=N'COLUMN',@level2name=N'COUNTYCODE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The recorded dimension, capacity, quality, or amount of something ascertained by measuring or observing. (MeasureValue)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_MONITORINGLOCATION', @level2type=N'COLUMN',@level2name=N'HORIZACCURACYMEASURE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The code that represents the unit for measuring the item. (MeasureUnitCode)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_MONITORINGLOCATION', @level2type=N'COLUMN',@level2name=N'HORIZACCURACYMEASUREUNIT'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The recorded dimension, capacity, quality, or amount of something ascertained by measuring or observing. (MeasureValue)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_MONITORINGLOCATION', @level2type=N'COLUMN',@level2name=N'VERTICALACCURACYMEASURE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The code that represents the unit for measuring the item. (MeasureUnitCode)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_MONITORINGLOCATION', @level2type=N'COLUMN',@level2name=N'VERTICALACCURACYMEASUREUNIT'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The recorded dimension, capacity, quality, or amount of something ascertained by measuring or observing. (MeasureValue)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_MONITORINGLOCATION', @level2type=N'COLUMN',@level2name=N'VERTICALMEASURE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The code that represents the unit for measuring the item. (MeasureUnitCode)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_MONITORINGLOCATION', @level2type=N'COLUMN',@level2name=N'VERTICALMEASUREUNIT'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Identifies the primary well type. (WellTypeText)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_MONITORINGLOCATION', @level2type=N'COLUMN',@level2name=N'WELLTYPE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The type of aquifer, such as confined or unconfined. (AquiferTypeName)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_MONITORINGLOCATION', @level2type=N'COLUMN',@level2name=N'AQUIFERNAME'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Code of the aquifer in which the well is completed. (NationalAquiferCode)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_MONITORINGLOCATION', @level2type=N'COLUMN',@level2name=N'NATIONALAQUIFERCODE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Name of the primary formation or soils unit, in which the well is completed. (FormationTypeText)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_MONITORINGLOCATION', @level2type=N'COLUMN',@level2name=N'FORMATIONTYPE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date of construction when well was completed. (ConstructionDate)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_MONITORINGLOCATION', @level2type=N'COLUMN',@level2name=N'CONSTRUCTIONDATE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identification number or code assigned by the aquifer publisher. (LocalAquiferCode)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_MONITORINGLOCATION', @level2type=N'COLUMN',@level2name=N'LOCALAQUIFERCODE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The code that Identifies the source or data system that created or defined the identifier. (LocalAquiferCodeContext)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_MONITORINGLOCATION', @level2type=N'COLUMN',@level2name=N'LOCALAQUIFERCODECONTEXT'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The name associated with the aquifer from the aquifer publisher. (LocalAquiferName)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_MONITORINGLOCATION', @level2type=N'COLUMN',@level2name=N'LOCALAQUIFERNAME'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Information that further describes an aquifer. (LocalAquiferDescriptionText)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_MONITORINGLOCATION', @level2type=N'COLUMN',@level2name=N'LOCALAQUIFERDESCRIPTION'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The recorded dimension, capacity, quality, or amount of something ascertained by measuring or observing. (MeasureValue)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_MONITORINGLOCATION', @level2type=N'COLUMN',@level2name=N'WELLHOLEDEPTHMEASURE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The code that represents the unit for measuring the item. (MeasureUnitCode)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_MONITORINGLOCATION', @level2type=N'COLUMN',@level2name=N'WELLHOLEDEPTHMEASUREUNIT'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The recorded dimension, capacity, quality, or amount of something ascertained by measuring or observing. (MeasureValue)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_MONITORINGLOCATION', @level2type=N'COLUMN',@level2name=N'WELLDEPTHMEASURE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The code that represents the unit for measuring the item. (MeasureUnitCode)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_MONITORINGLOCATION', @level2type=N'COLUMN',@level2name=N'WELLDEPTHMEASUREUNIT'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Schema element: MonitoringLocationDataType' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_MONITORINGLOCATION'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Parent: Reference document, image, photo, GIS data layer, laboratory material or other electronic object attached within a data exchange, as well as information used to describe the object. (RecordId)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_MONLOCATTACHEDBINARYOBJECT', @level2type=N'COLUMN',@level2name=N'RECORDID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Parent: Reference document, image, photo, GIS data layer, laboratory material or other electronic object attached within a data exchange, as well as information used to describe the object. (ParentId)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_MONLOCATTACHEDBINARYOBJECT', @level2type=N'COLUMN',@level2name=N'PARENTID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The text describing the descriptive name used to represent the file, including file extension. (BinaryObjectFileName)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_MONLOCATTACHEDBINARYOBJECT', @level2type=N'COLUMN',@level2name=N'BINARYOBJECTFILE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The text or acronym describing the binary content type of a file. (BinaryObjectFileTypeCode)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_MONLOCATTACHEDBINARYOBJECT', @level2type=N'COLUMN',@level2name=N'BINARYOBJECTFILETYPECODE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Parent: Reference document, image, photo, GIS data layer, laboratory material or other electronic object attached within a data exchange, as well as information used to describe the object. (BinaryContent)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_MONLOCATTACHEDBINARYOBJECT', @level2type=N'COLUMN',@level2name=N'BINARYOBJECTCONTENT'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Schema element: MonitoringLocationAttachedBinaryObjectDataType' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_MONLOCATTACHEDBINARYOBJECT'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Parent: The physical address of an organization. (RecordId)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ORGADDRESS', @level2type=N'COLUMN',@level2name=N'RECORDID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Parent: The physical address of an organization. (ParentId)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ORGADDRESS', @level2type=N'COLUMN',@level2name=N'PARENTID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Categorizes an address as either location, shipping, or mailing address. (AddressTypeName)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ORGADDRESS', @level2type=N'COLUMN',@level2name=N'ADDRESSTYPE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The address that describes the physical (geographic), shipping, or mailing location of an organization. (AddressText)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ORGADDRESS', @level2type=N'COLUMN',@level2name=N'ADDRESS'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The text that provides additional information about an address, including a building name with its secondary unit and number, an industrial park name, an installation name or descriptive text where no formal address is available. (SupplementalAddressText)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ORGADDRESS', @level2type=N'COLUMN',@level2name=N'SUPPLEMENTALADDRESS'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The name of a city, town, village or other locality. (LocalityName)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ORGADDRESS', @level2type=N'COLUMN',@level2name=N'LOCALITY'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A code designator used to identify a principal administrative subdivision of the United States, Canada, or Mexico. (StateCode)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ORGADDRESS', @level2type=N'COLUMN',@level2name=N'STATECODE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The combination of the 5-digit Zone Improvement Plan (ZIP) code and the four-digit extension code (if available) that represents the geographic segment that is a subunit of the ZIP Code, assigned by the U.S. Postal Service to a geographic location to facilitate mail delivery; or the postal zone specific to the country, other than the U.S., where the mail is delivered. (PostalCode)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ORGADDRESS', @level2type=N'COLUMN',@level2name=N'POSTALCODE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A code designator used to identify a primary geopolitical unit of the world. (CountryCode)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ORGADDRESS', @level2type=N'COLUMN',@level2name=N'COUNTRYCODE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A code designator used to identify a U.S. county or county equivalent. (CountyCode)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ORGADDRESS', @level2type=N'COLUMN',@level2name=N'COUNTYCODE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Schema element: OrganizationAddressDataType' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ORGADDRESS'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A designator used to uniquely identify a unique business establishment within a context. (OrganizationIdentifier)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ORGANIZATION', @level2type=N'COLUMN',@level2name=N'ORGID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The legal designator (i.e. formal name) of an organization. (OrganizationFormalName)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ORGANIZATION', @level2type=N'COLUMN',@level2name=N'ORGFORMALNAME'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Information that further describes an organization. (OrganizationDescriptionText)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ORGANIZATION', @level2type=N'COLUMN',@level2name=N'ORGDESC'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The code that represents the American Indian tribe or Alaskan Native entity. (TribalCode)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ORGANIZATION', @level2type=N'COLUMN',@level2name=N'TRIBALCODE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Schema element: WQXDataType' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_ORGANIZATION'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Parent: Reference document, image, photo, GIS data layer, laboratory material or other electronic object attached within a data exchange, as well as information used to describe the object. (RecordId)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_PROJATTACHEDBINARYOBJECT', @level2type=N'COLUMN',@level2name=N'RECORDID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Parent: Reference document, image, photo, GIS data layer, laboratory material or other electronic object attached within a data exchange, as well as information used to describe the object. (ParentId)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_PROJATTACHEDBINARYOBJECT', @level2type=N'COLUMN',@level2name=N'PARENTID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The text describing the descriptive name used to represent the file, including file extension. (BinaryObjectFileName)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_PROJATTACHEDBINARYOBJECT', @level2type=N'COLUMN',@level2name=N'BINARYOBJECTFILE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The text or acronym describing the binary content type of a file. (BinaryObjectFileTypeCode)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_PROJATTACHEDBINARYOBJECT', @level2type=N'COLUMN',@level2name=N'BINARYOBJECTFILETYPECODE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Parent: Reference document, image, photo, GIS data layer, laboratory material or other electronic object attached within a data exchange, as well as information used to describe the object. (BinaryContent)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_PROJATTACHEDBINARYOBJECT', @level2type=N'COLUMN',@level2name=N'BINARYOBJECTCONTENT'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Schema element: ProjectAttachedBinaryObjectDataType' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_PROJATTACHEDBINARYOBJECT'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Parent: An environmental data collection effort that has a stated purpose and puts a series of samples and results into a meaningful context. (RecordId)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_PROJECT', @level2type=N'COLUMN',@level2name=N'RECORDID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Parent: An environmental data collection effort that has a stated purpose and puts a series of samples and results into a meaningful context. (ParentId)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_PROJECT', @level2type=N'COLUMN',@level2name=N'PARENTID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A designator used to uniquely identify a data collection project within a context of an organization. (ProjectIdentifier)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_PROJECT', @level2type=N'COLUMN',@level2name=N'PROJECTID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The name assigned by the Organization (project leader or principal investigator) to the project. (ProjectName)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_PROJECT', @level2type=N'COLUMN',@level2name=N'PROJECTNAME'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Project description, which may include a description of the project purpose, summary of the objectives, or brief summary of the results of the project. (ProjectDescriptionText)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_PROJECT', @level2type=N'COLUMN',@level2name=N'PROJECTDESC'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A code used to identify the type of sampling design employed for this project to ensure that sampling activities can support project objectives. (SamplingDesignTypeCode)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_PROJECT', @level2type=N'COLUMN',@level2name=N'SAMPLINGDESIGNTYPECODE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Indicates whether a Quality Assurance Project Plan (QAPP) has been approved for the submitted project. (QAPPApprovedIndicator)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_PROJECT', @level2type=N'COLUMN',@level2name=N'QAPPAPPROVEDIND'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An outside approval authority identifier for the QAPP (e.g. EPA or State Organization). (QAPPApprovalAgencyName)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_PROJECT', @level2type=N'COLUMN',@level2name=N'QAPPAPPROVALAGENCYNAME'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Parent: An environmental data collection effort that has a stated purpose and puts a series of samples and results into a meaningful context. (WqxUpdateDate)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_PROJECT', @level2type=N'COLUMN',@level2name=N'WQXUPDATEDATE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Schema element: ProjectDataType' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_PROJECT'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Parent: Allows for the reporting of monitoring activities conducted at a Monitoring Location. (RecordId)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_PROJECTACTIVITY', @level2type=N'COLUMN',@level2name=N'RECORDID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Parent: Allows for the reporting of monitoring activities conducted at a Monitoring Location. (ActivityParentId)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_PROJECTACTIVITY', @level2type=N'COLUMN',@level2name=N'ACTIVITYPARENTID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Parent: Allows for the reporting of monitoring activities conducted at a Monitoring Location. (ProjectParentId)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_PROJECTACTIVITY', @level2type=N'COLUMN',@level2name=N'PROJECTPARENTID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Schema element: ProjectActivityDataType' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_PROJECTACTIVITY'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Parent: Describes the probability weighting information for a given Project / Monitoring Location Assignment. (RecordId)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_PROJECTMONLOC', @level2type=N'COLUMN',@level2name=N'RECORDID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Parent: Describes the probability weighting information for a given Project / Monitoring Location Assignment. (ParentId)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_PROJECTMONLOC', @level2type=N'COLUMN',@level2name=N'PARENTID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A designator used to describe the unique name, number, or code assigned to identify the monitoring location. (MonitoringLocationIdentifier)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_PROJECTMONLOC', @level2type=N'COLUMN',@level2name=N'MONLOCID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Identifies the statistical stratum applied to this site. (StatisticalStratumText)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_PROJECTMONLOC', @level2type=N'COLUMN',@level2name=N'STATISTICALSTRATUM'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Free text describing a category of naturally similar site types, such as high-gradient. (LocationCategoryName)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_PROJECTMONLOC', @level2type=N'COLUMN',@level2name=N'LOCATIONCATERY'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Indicates whether this site is active and available for sampling. (LocationStatusName)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_PROJECTMONLOC', @level2type=N'COLUMN',@level2name=N'LOCATIONSTATUS'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Identifies whether this site is a reference or control site by specifying the reference location type. (ReferenceLocationTypeCode)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_PROJECTMONLOC', @level2type=N'COLUMN',@level2name=N'REFLOCATIONTYPECODE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The calendar date on which the monitoring location started being used as a reference site. (ReferenceLocationStartDate)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_PROJECTMONLOC', @level2type=N'COLUMN',@level2name=N'REFLOCATIONSTARTDATE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The calendar date on which the monitoring location stopped being used as a reference site. (ReferenceLocationEndDate)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_PROJECTMONLOC', @level2type=N'COLUMN',@level2name=N'REFLOCATIONENDDATE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Free text with general comments. (CommentText)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_PROJECTMONLOC', @level2type=N'COLUMN',@level2name=N'PROJMONLOCCOMMENT'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The recorded dimension, capacity, quality, or amount of something ascertained by measuring or observing. (MeasureValue)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_PROJECTMONLOC', @level2type=N'COLUMN',@level2name=N'LOCWEIGHTINGFACMEASURE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The code that represents the unit for measuring the item. (MeasureUnitCode)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_PROJECTMONLOC', @level2type=N'COLUMN',@level2name=N'LOCWEIGHTINGFACMEASUREUNIT'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A name given to the resource. (ResourceTitleName)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_PROJECTMONLOC', @level2type=N'COLUMN',@level2name=N'RESOURCETITLE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An entity primarily responible for making the content of the resource. (ResourceCreatorName)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_PROJECTMONLOC', @level2type=N'COLUMN',@level2name=N'RESOURCECREATOR'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A topic of the content of the resource. (ResourceSubjectText)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_PROJECTMONLOC', @level2type=N'COLUMN',@level2name=N'RESOURCESUBJECT'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An entity responsible for making the resource available. (ResourcePublisherName)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_PROJECTMONLOC', @level2type=N'COLUMN',@level2name=N'RESOURCEPUBLISHER'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A date of an event in the lifecycle of the resource. (ResourceDate)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_PROJECTMONLOC', @level2type=N'COLUMN',@level2name=N'RESOURCEDATE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An unambiguous reference to the resource within a given context. (ResourceIdentifier)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_PROJECTMONLOC', @level2type=N'COLUMN',@level2name=N'RESOURCEID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Schema element: ProjectMonitoringLocationWeightingDataType' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_PROJECTMONLOC'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Parent: Describes the results of a field measurement, observation, or laboratory analysis. (RecordId)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'RECORDID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Parent: Describes the results of a field measurement, observation, or laboratory analysis. (ParentId)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'PARENTID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The unique line identifier from a data logger result text file, normally a date/time format but could be any user defined name, e.g. "surface", "midwinter", and or "bottom".) (DataLoggerLineName)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'DATALOGGERLINENAME'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The textual descriptor of a result. (ResultDetectionConditionText)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'RESULTDETECTIONCONDITION'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The object, property, or substance which is evaluated or enumerated by either a direct field measurement, a direct field observation, or by laboratory analysis of material collected in the field. (CharacteristicName)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'CHARACTERISTICNAME'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The object, property, or substance which is evaluated or enumerated by either a direct field measurement, a direct field observation, or by laboratory analysis of material collected in the field. (CharacteristicNameUserSupplied)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'CHARACTERISTICNAMEUSERSUPPLIED'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Identifies the chemical speciation in which the measured result is expressed. (MethodSpeciationName)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'METHODSPECIATIONNAME'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The text name of the portion of the sample associated with results obtained from a physically-partitioned sample. (ResultSampleFractionText)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'RESULTSAMPFRACTION'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A code used to identify the intended count that the sorter was aiming for. (TargetCount)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'TARGETCOUNT'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'This field captures the proportion of the sample processed. Proportion is stored as a number between 0 and 1. Large/rare count would be documented as 1 (100%). (ProportionSampleProcessedNumeric)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'PROPORTIONSAMPLEPROCESSED'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Indicates the acceptability of the result with respect to QA/QC criteria. (ResultStatusIdentifier)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'STATUSID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The code for the method used to calculate derived results. (StatisticalBaseCode)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'STATISTICALBASECODE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The number of repeated measurements taken to calculate the result value as an average. (StatisticalNValueNumeric)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'STATISTICALNVALUE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A name that qualifies the process which was used in the determination of the result value (e.g., actual, estimated, calculated). (ResultValueTypeName)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'VALUETYPE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The name that represents the form of the sample or portion of the sample which is associated with the result value (e.g., wet weight, dry weight, ash-free dry weight). (ResultWeightBasisText)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'WEIGHTBASIS'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The period of time (in days) over which a measurement was made. For example, BOD can be measured as 5 day or 20 day BOD. (ResultTimeBasisText)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'TIMEBASIS'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The name that represents the controlled temperature at which the sample was maintained during analysis, e.g. 25 deg BOD analysis. (ResultTemperatureBasisText)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'TEMPERATUREBASIS'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'User defined free text describing the particle size class for which the associated result is defined. (ResultParticleSizeBasisText)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'PARTICLESIZEBASIS'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Free text with general comments concerning the result. (ResultCommentText)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'RESULTCOMMENT'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The reference used to indicate the datum or reference used to establish the depth/altitude of a result. (ResultDepthAltitudeReferencePointText)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'DEPTHALTITUDEREFPOINT'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Single point name within a sampling frame or protocol that is associated with the reported result. (ResultSamplingPointName)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'RESULTSAMPPOINT'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Location of a Single point within a sampling frame or position that is associated with the reported result. (ResultSamplingPointType)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'RESULTSAMPPOINTTYPE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The order in which a single point within a sampling frame was visited in relation to other components. (ResultSamplingPointPlaceInSeries)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'RESULTSAMPPOINTPLACEINSERIES'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Text description of a single point within a sampling frame for the result. (ResultSamplingPointCommentText)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'RESULTSAMPPOINTCOMMENT'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The user supplied record identifier associated with data entered. (RecordIdentifierUserSupplied)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'RECORDIDUSERSUPPLIED'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Parent: Describes the results of a field measurement, observation, or laboratory analysis. (TmpActivityId)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'TMPACTIVITYID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The reportable measure of the result for the chemical, microbiological or other characteristic being analyzed. (ResultMeasureValue)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'RESULTMEASURE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The code that represents the unit for measuring the item. (MeasureUnitCode)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'RESULTMEASUREUNIT'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A measure of mutual agreement among individual measurements of the same property usually under prescribed similar conditions. (PrecisionValue)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'PRECISIONVALUE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The systematic or persistent distortion of a measurement process which causes error in one direction. (BiasValue)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'BIASVALUE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A range of values constructed so that this range has a specified probability of including the true population mean. (ConfidenceIntervalValue)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'CONFIDENCEINTERVALVALUE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Value of the upper end of the confidence interval. (UpperConfidenceLimitValue)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'UPPERCONFIDENCELIMITVALUE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Value of the lower end of the confidence interval. (LowerConfidenceLimitValue)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'LOWERCONFIDENCELIMITVALUE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The recorded dimension, capacity, quality, or amount of something ascertained by measuring or observing. (MeasureValue)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'DEPTHHEIGHTMEASURE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The code that represents the unit for measuring the item. (MeasureUnitCode)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'DEPTHHEIGHTMEASUREUNIT'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The primary reason the biological monitoring has occurred. (BiologicalIntentName)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'BIORESULTINTENT'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A number uniquely identifying the individual in accordance with the total number of individuals reported by the user. (BiologicalIndividualIdentifier)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'BIORESULTINDIVIDUALID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The name of the organism sampled as part of a biological sample. (SubjectTaxonomicName)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'BIORESULTSUBJECTTAXONOMIC'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The user supplied name of the organism sampled as part of a biological sample. (SubjectTaxonomicNameUserSupplied)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'BIORESULTSUBJECTTAXONOMICUS'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Identifies the source or data system that created or defined the identifier. (SubjectTaxonomicNameUserSuppliedReferenceText)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'BIORESULTSUBJECTTAXONOMICUSRT'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A number or name assigned as a part of a taxonomic identification. Used with a valid genus name to indicate a unique species has been observed but not taxonomically identified. (UnidentifiedSpeciesIdentifier)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'BIORESULTUNIDENTIFIEDSPECIESID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The name of the anatomy from which a tissue sample was taken. (SampleTissueAnatomyName)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'BIORESULTSAMPTISSUEANATOMY'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Captures the total count for a Group Summary. (GroupSummaryCount)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'BIORESULTGROUPSUMMARYCOUNT'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The recorded dimension, capacity, quality, or amount of something ascertained by measuring or observing. (MeasureValue)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'GRPSUMMCOUNTWEIGHTMEASURE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The code that represents the unit for measuring the item. (MeasureUnitCode)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'GRPSUMMCOUNTWEIGHTMEASUREUNIT'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The name of the cell form for phytoplankton organisms expressed as a result. A single phytoplankton species may have a result value for any or all of these cell forms. (CellFormName)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'TAXDETAILSCELLFORM'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The cell shape of the phytoplankton organism. (CellShapeName)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'TAXDETAILSCELLSHAPE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Parent: This section allows for the further definition of user-defined details for taxa. (HabitNameDBValue)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'TAXDETAILSHABITNAME'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The number of broods or generations of the characteristic in a year. (VoltinismName)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'TAXDETAILSVOLTINISM'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'For entries representing taxa, a code representing the ability of the reported taxon to tolerate pollution. (TaxonomicPollutionTolerance)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'TAXDETAILSPOLLTOLERANCE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Provides a description of the scale used for the taxonomic pollution tolerance value. (TaxonomicPollutionToleranceScaleText)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'TAXDETAILSPOLLTOLERANCESCALE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'For entries representing taxa, a code representing the trophic level with which the reported taxon is typically assigned. (TrophicLevelName)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'TAXDETAILSTROPHICLEVEL'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Parent: This section allows for the further definition of user-defined details for taxa. (FunctionalFeedingGroupNameDBValue)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'TAXDETAILSFUNCFEEDINGGROUP'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A name given to the resource. (ResourceTitleName)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'CITATIONRESOURCETITLE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An entity primarily responible for making the content of the resource. (ResourceCreatorName)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'CITATIONRESOURCECREATOR'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A topic of the content of the resource. (ResourceSubjectText)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'CITATIONRESOURCESUBJECT'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An entity responsible for making the resource available. (ResourcePublisherName)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'CITATIONRESOURCEPUBLISHER'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A date of an event in the lifecycle of the resource. (ResourceDate)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'CITATIONRESOURCEDATE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An unambiguous reference to the resource within a given context. (ResourceIdentifier)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'CITATIONRESOURCEID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A code that describes the frequency class, either as a life stage, abnormality, gender, or measurable characteristic (i.e. length, weight) used to categorize a biological population count. (FrequencyClassDescriptorCode)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'FREQCLASSDESCCODE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The code that represents the unit for measuring the item. (FrequencyClassDescriptorUnitCode)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'FREQCLASSDESCUNITCODE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'This described the lower bound for a frequency class descriptor. (LowerClassBoundValue)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'FREQCLASSLOWERBOUNDVALUE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'This described the upper bound for a frequency class descriptor. (UpperClassBoundValue)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'FREQCLASSUPPERBOUNDVALUE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identification number or code assigned by the method publisher. (MethodIdentifier)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'ANALYTICALMETHODID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Identifies the source or data system that created or defined the identifier. (MethodIdentifierContext)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'ANALYTICALMETHODIDCONTEXT'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The title that appears on the method from the method publisher. (MethodName)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'ANALYTICALMETHODNAME'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Identifier of type of method that identifies it as reference, equivalent, or other. (MethodQualifierTypeName)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'ANALYTICALMETHODQUALIFIERTYPE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A brief summary that provides general information about the method. (MethodDescriptionText)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'ANALYTICALMETHODDESC'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identification number or code assigned by the method publisher. (MethodIdentifier)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'METHODID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Identifies the source or data system that created or defined the identifier. (MethodIdentifierContext)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'METHODIDCONTEXT'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A brief summary that provides general information about the modification of the method. (MethodModificationText)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'METHODMODIFICATION'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The name of Lab responsible for the result. (LaboratoryName)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'LABNAME'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The calendar date on which the analysis began. (AnalysisStartDate)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'LABANALYSISSTARTDATE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The calendar date on which the analysis was finished. (AnalysisEndDate)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'LABANALYSISENDDATE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Remarks which further describe the laboratory procedures which produced the result. (LaboratoryCommentText)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'LABCOMMENT'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The proportion of all of the material collected that was sent to lab for analysis. (LaboratorySampleSplitRatio)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'LABSAMPLESPLITRATIO'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Indicates whether the laboratory is accredited. (LaboratoryAccreditationIndicator)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'LABACCIND'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An outside accreditation authority identifier. (LaboratoryAccreditationAuthorityName)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'LABACCAUTHORITYNAME'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Indicates whether the taxonomist is accredited. (TaxonomistAccreditationIndicator)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'LABTAXACCIND'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An outside accreditation authority identifier for the taxonomist. (TaxonomistAccreditationAuthorityName)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'LABTAXACCAUTHORITYNAME'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The time of day that is reported. (Time)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'LABANALYSISSTARTTIME'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The time zone for which the time of day is reported. Any of the longitudinal divisions of the earth''s surface in which a standard time is kept. (TimeZoneCode)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'LABANALYSISSTARTTIMEZONECODE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The time of day that is reported. (Time)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'LABANALYSISENDTIME'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The time zone for which the time of day is reported. Any of the longitudinal divisions of the earth''s surface in which a standard time is kept. (TimeZoneCode)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT', @level2type=N'COLUMN',@level2name=N'LABANALYSISENDTIMEZONECODE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Schema element: ResultDataType' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULT'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Parent: Reference document, image, photo, GIS data layer, laboratory material or other electronic object attached within a data exchange, as well as information used to describe the object. (RecordId)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULTATTACHEDBINARYOBJECT', @level2type=N'COLUMN',@level2name=N'RECORDID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Parent: Reference document, image, photo, GIS data layer, laboratory material or other electronic object attached within a data exchange, as well as information used to describe the object. (ParentId)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULTATTACHEDBINARYOBJECT', @level2type=N'COLUMN',@level2name=N'PARENTID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The text describing the descriptive name used to represent the file, including file extension. (BinaryObjectFileName)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULTATTACHEDBINARYOBJECT', @level2type=N'COLUMN',@level2name=N'BINARYOBJECTFILE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The text or acronym describing the binary content type of a file. (BinaryObjectFileTypeCode)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULTATTACHEDBINARYOBJECT', @level2type=N'COLUMN',@level2name=N'BINARYOBJECTFILETYPECODE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Parent: Reference document, image, photo, GIS data layer, laboratory material or other electronic object attached within a data exchange, as well as information used to describe the object. (BinaryContent)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULTATTACHEDBINARYOBJECT', @level2type=N'COLUMN',@level2name=N'BINARYOBJECTCONTENT'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Schema element: ResultAttachedBinaryObjectDataType' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULTATTACHEDBINARYOBJECT'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Parent: Information that describes one of a variety of detection or quantitation limits determined in a laboratory. (RecordId)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULTDETECTQUANTLIMIT', @level2type=N'COLUMN',@level2name=N'RECORDID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Parent: Information that describes one of a variety of detection or quantitation limits determined in a laboratory. (ParentId)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULTDETECTQUANTLIMIT', @level2type=N'COLUMN',@level2name=N'PARENTID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Text describing the type of detection or quantitation level used in the analysis of a characteristic. (DetectionQuantitationLimitTypeName)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULTDETECTQUANTLIMIT', @level2type=N'COLUMN',@level2name=N'DETECTQUANTLIMITTYPE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Text providing further description and comment on the detection and/or quantitation limits. (DetectionQuantitationLimitCommentText)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULTDETECTQUANTLIMIT', @level2type=N'COLUMN',@level2name=N'DETECTQUANTLIMITCOMMENT'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The recorded dimension, capacity, quality, or amount of something ascertained by measuring or observing. (MeasureValue)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULTDETECTQUANTLIMIT', @level2type=N'COLUMN',@level2name=N'DETECTQUANTLIMITMEASURE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The code that represents the unit for measuring the item. (MeasureUnitCode)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULTDETECTQUANTLIMIT', @level2type=N'COLUMN',@level2name=N'DETECTQUANTLIMITMEASUNITCODE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Schema element: DetectionQuantitationLimitDataType' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULTDETECTQUANTLIMIT'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Parent: Describes the results of a field measurement, observation, or laboratory analysis. (RecordId)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULTMEASUREQUALIFIER', @level2type=N'COLUMN',@level2name=N'RECORDID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Parent: Describes the results of a field measurement, observation, or laboratory analysis. (ParentId)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULTMEASUREQUALIFIER', @level2type=N'COLUMN',@level2name=N'PARENTID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Parent: Describes the results of a field measurement, observation, or laboratory analysis. (MeasureQualifierCode)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULTMEASUREQUALIFIER', @level2type=N'COLUMN',@level2name=N'MEASUREQUALIFIERCODE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Schema element: ResultMeasureQualifierDataType' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_RESULTMEASUREQUALIFIER'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Parent: An identification of a telephone connection. (RecordId)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_TELEPHONIC', @level2type=N'COLUMN',@level2name=N'RECORDID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Parent: An identification of a telephone connection. (ParentId)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_TELEPHONIC', @level2type=N'COLUMN',@level2name=N'PARENTID'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The number that identifies a particular telephone connection. (TelephoneNumberText)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_TELEPHONIC', @level2type=N'COLUMN',@level2name=N'TELEPHONENUMBER'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The name that describes a telephone number type. (TelephoneNumberTypeName)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_TELEPHONIC', @level2type=N'COLUMN',@level2name=N'TELEPHONENUMBERTYPE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The number assigned within an organization to an individual telephone that extends the external telephone number. (TelephoneExtensionNumberText)' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_TELEPHONIC', @level2type=N'COLUMN',@level2name=N'TELEPHONEEXT'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Schema element: TelephonicDataType' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'WQX_TELEPHONIC'
GO